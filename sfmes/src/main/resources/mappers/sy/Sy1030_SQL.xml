<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sfmes.sqlmap.sy">

   <select id="sy1030validCheck_01" parameterType="LinkedHashMap" resultType="String">
        <![CDATA[
        SELECT
               CASE WHEN 1 <= (SELECT COUNT(1) 
                                 FROM TB_SY_M_USR 
                                WHERE 1=1 
                                  AND CORP_C             = #{CORP_C}
                                  AND USR_ID             = #{USR_ID}) THEN '동일한 사용자ID가 존재합니다.확인 후 다시 처리하세요'
                    ELSE 'OK' END AS RESULT_MSG
          FROM DUAL
        ]]>
    </select>

    <select id="select1030List" parameterType="LinkedHashMap" resultType="LinkedHashMap">
        SELECT /*+ select1030List */
               A.CORP_C                                            /* 회사코드             */
             , A.USR_ID                                            /* 사용자아이디         */
             , A.USR_NM                                            /* 사용자명             */
             , A.PW                                                /* 암호화된비밀번호     */
             , A.EMP_NO                                            /* 사원번호             */
             , A.BZPL_C                                            /* 사업장코드           */
             , (
                SELECT X.BZPL_NM
                  FROM TB_CO_M_BZPL X
                 WHERE 1=1
                   AND X.CORP_C = A.CORP_C
                   AND X.BZPL_C = A.BZPL_C
               ) AS BZPL_NM                                        /* 사업장명             */
             , A.DEPT_C                                            /* 부서코드             */
             , (
                SELECT Y.DEPT_NM
                  FROM TB_CO_M_DEPT Y
                 WHERE 1=1
                   AND Y.CORP_C = A.CORP_C
                   AND Y.BZPL_C = A.BZPL_C
                   AND Y.DEPT_C = A.DEPT_C
               ) AS DEPT_NM                                        /* 부서명               */
             , A.USE_DSC                                           /* 사용자구분           */
             , CONVERT(CHAR(23), A.LS_CONN_DTM, 20) AS LS_CONN_DTM /* 최종접속일시         */
             , A.LS_CONN_IP                                        /* 최종IP               */
             , A.CONN_YN                                           /* 접속여부             */
             , CONVERT(CHAR(23), A.PW_CHG_DTM, 20) AS PW_CHG_DTM   /* 비밀번호변경일시     */
             , A.LGIN_PROV_NT                                      /* 로그인시도횟수       */
             , A.LOCK_YN                                           /* 잠김여부             */
             , A.ACC_ST_DT                                         /* 계정시작일자         */
             , A.ACC_ED_DT                                         /* 계정종료일자         */
             , LEFT(A.EMAIL_ADR, CHARINDEX('@', A.EMAIL_ADR + '@' )-1) AS EMAIL_ADR1            /* 이메일주소           */
             , RIGHT(A.EMAIL_ADR, LEN(A.EMAIL_ADR)-CHARINDEX('@', A.EMAIL_ADR)+1) AS EMAIL_ADR2 /* 이메일주소2          */
             , A.ANC_RMS_METH                                      /* 알림수신방법         */
             , A.SIGN_IMG                                          /* 사인이미지           */
             , A.USE_YN                                            /* 사용여부             */
             , A.ETC_DSC1                                          /* 기타구분1            */
             , A.ETC_DSC2                                          /* 기타구분2            */
             , A.ETC_DSC3                                          /* 기타구분3            */
             , CONVERT(CHAR(23), A.FSRG_DTM, 20)  AS   FSRG_DTM    /* 최초등록일시         */
             , A.FSRG_ID                                           /* 최초등록자ID         */
             , A.FSRG_ID         AS FSRG_NM                        /* 최초등록자이름       */
             , CONVERT(CHAR(23), A.LSCHG_DTM, 20) AS   LSCHG_DTM   /* 최종변경일시         */
             , A.LSCHG_ID                                          /* 최종변경자ID         */
			 , A.LSCHG_ID        AS LSCHG_NM                       /* 최종변경자이름       */
          FROM TB_SY_M_USR A
         WHERE 1=1 
           AND A.CORP_C            = #{CORP_C}
           AND A.USR_ID            = #{USR_ID}
    </select>

	<select id="sy1030validCheck_02" parameterType="LinkedHashMap" resultType="LinkedHashMap">
		SELECT /*+ sy1030validCheck_02 */
		       USE_YN  
		  FROM TB_SY_M_USR 
         WHERE 1=1 
           AND CORP_C             = #{CORP_C}
           AND USR_ID             = #{USR_ID}
	</select>
	
	<select id="sy1030validCheck_03" parameterType="LinkedHashMap" resultType="LinkedHashMap">
		SELECT /*+ sy1030validCheck_03 */
		       PW 
		  FROM TB_SY_M_USR 
         WHERE 1=1 
           AND CORP_C             = #{CORP_C}
           AND USR_ID             = #{USR_ID}
	</select>

    <update id="updateSy1030_01" parameterType="LinkedHashMap">
        UPDATE /*+ updateSy1030_01 */ TB_SY_M_USR
           SET 
               PW                  = #{USR_ID}           /* 비밀번호초기화     */
         WHERE 1=1 
           AND CORP_C              = #{CORP_C}
           AND USR_ID              = #{USR_ID}
    </update>
    
    <update id="updateSy1030_02" parameterType="LinkedHashMap">
        UPDATE /*+ updateSy1030_02 */ TB_SY_M_USR
           SET 
               PW                  = #{NEW_PW}            /* 비밀번호변경       */
             , PW_CHG_DTM          = GETDATE()            /* 비밀번호변경일시   */
             , LSCHG_DTM           = GETDATE()            /* 최종변경일시       */
             , LSCHG_ID            = #{GUSRID}            /* 최종변경자ID       */
         WHERE 1=1 
           AND CORP_C              = #{CORP_C}
           AND USR_ID              = #{USR_ID}
    </update>
    
</mapper>