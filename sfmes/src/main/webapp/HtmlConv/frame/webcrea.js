/*--------------------------------------------------------------------------
 *
 *  Webcrea : ActiveSoft Web Version 7, 0, 2021, 0203, 002
 *
 *  (c) Copyright 2015. ActiveSoft. Co., Ltd.
 *  For details, see the activesoft web site: http://www.activesoft.co.kr
 *
 *--------------------------------------------------------------------------*/
var FormObject = Class.create({
	initialize : function(divPage, divPos, objType, divPosOrg){
		this.nPage = Number(Extract(divPage, '[0-9]'));
		this.divPage = divPage;
		this.divPos = divPos;
		if(!divPosOrg) divPosOrg = divPos;
		this.divPosOrg = divPosOrg;
		this.objType = objType;
		this.dataSeqField = '_my_data_seq_';
		this.bCopyObject = false;
		this.orgObject = null;
		if(divPos != divPosOrg)
		{
			this.bCopyObject = true;
			this.orgObject = Webcrea.GetObjectById(divPosOrg);
		}

		this.objDivPage = document.getElementById(this.divPage);
		this.objGDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'Group');
		this.objHDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'H');
		this.objFDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'F');
		this.objTDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'T');
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);
		if(this.objHDivPos) this.objHTable = Webcrea.FindNode(this.objHDivPos, 'name', 'TABLE');
		if(this.objFDivPos) this.objFTable = Webcrea.FindNode(this.objFDivPos, 'name', 'TABLE');
		if(this.objDivPos && !this.IsGroupBox()) this.objTable = Webcrea.FindNode(this.objDivPos, 'name', 'TABLE');

		if(this.objGDivPos) this.objGDivPosOrg = this.objGDivPos.cloneNode(true);
		if(this.objDivPos) this.objDivPosOrg = this.objDivPos.cloneNode(true);


		this.SetLayout();

		var layoutXml = Webcrea.layoutXml;
		this.orgPage = layoutXml.getElementById(this.divPage);
		if(!this.orgPage) this.orgPage = Webcrea.FindNode(layoutXml, 'id', this.divPage);
		this.arrObjAddInfo = [];
		var arrTableRow = [];
		if(this.bCopyObject) Webcrea.FindNodeAll(this.objDivPosOrg, 'id', this.divPos + '.Data', arrTableRow);
		else Webcrea.FindNodeAll(this.orgPage, 'id', this.divPos + '.Data', arrTableRow);
		this.SetAddRowInfo(arrTableRow);

		this.arrMobileLayout = [];
		this.arrMobileCellLayout = [];

		this.arrChild = [];

		this.bInit = false;
		this.autoClickSec = 0;
		this.BuildThread = false;
		this.bDisplayStart = false;
		this.bSearched = false;
		this.bEnable = true;
		this.bReadOnly = false;
		this.bEditAll = false;
		this.bReadAll = true;
		this.bCanSelectAll = true;
		this.bEditDown = false;
		this.colorText = '#000000';
		this.colorDisable;
		this.colorDisableText;
		this.colorReadOnly;
		this.colorReadOnlyText;
		this.colorFocus;
		this.colorInsert;
		this.colorModify;
		this.colorDelete;
		this.colorEdit;
		this.colorSelect;
		this.colorSum;
		this.colorCursor;
		this.joinTitle;
		this.page;
		this.row;
		this.max;
		this.bCalendar = false;
		this.tabPos = 0;
		this.palette = '';
		this.stretch;

		this.bQuery = false;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(nFileVersion>=7020180531005)
		{
			if(this.objType == 1 || this.objType == 18) this.bMyGrid = true;
			else this.bMyGrid = false;
		}
		else
		{
			if(this.objType == 1 && !Webcrea.IsMobile()) this.bMyGrid = true;
			else this.bMyGrid = false;
		}
		this.bVScroll = true;
		this.bHScroll = false;
		this.nScrlWidth = 18;
		this.nScrlThumbWidth = 14;
		this.nBaseScrlSize = 17;
		this.nScrlThumbMargin = 1;
		this.nScrlLeftAdjust = 0;
		if(nFileVersion>=7020210202001) this.nAutoScroll = WebcreaInfo.AutoScroll;
		else this.nAutoScroll = 0;
		this.bBaseFormRecord = false;
		this.nLock = 0;
		this.vLock = 0;
		this.bRunForm = false;
		this.bFiltering = false;
		this.bDrag = false;
		this.bThreadDisplay = WebcreaInfo.bThreadDisplay;

		this.bInitDisplay = true;
		if(this.objDivPos && this.objDivPos.getAttribute('initDisplay') == 'none') this.bInitDisplay = false;

		this.bMore = false;
		this.pos = -1;
		this.pos_B = -1;
		this.moreImage = {
			image : image = '',
			width : width = 0,
			height : height = 0
		};

		this.bEditing = false;
		this.runMode = 0;
		this.statusMode = 0;
		this.bApplyRecordSet = true;

		this.bSort = false;
		this.sortField = '';
		this.bSortArraw = true;
		this.nSortHistory = -1;

		this.arrFilterObj = [];

		this.arrStackEvent = [];
		this.objEvent = {};
		this.objEvent.bChange = true;
		this.objEvent.bModify = false;
		this.objEvent.bOnData = true;

		this.crossTabObj;
		this.statOptInfo = {};
		this.arrStatRowInfo = [];
		this.arrStatColInfo = [];
		this.arrStatFldInfo = [];
		this.arrStatDataInfo = [];
		this.arrStatJoinScript = [];

		this.chartType = '';
		this.chartKind = '';

		this.arrObject = [];

		this.arrCellId = new Array();
		this.arrLayoutCellInfo = [];
		this.arrCellInfo = [];
		this.cellInfo = function(id){
			this.cellType = 1;
			this.id = id;
			this.bullet = '';
			this.bulletColor = '';
			this.lBullet = false;
			this.rBullet = false;
			this.classId = '';
			this.value = '';
			this.tagName = '';
			this.activeCond = '';
			this.bRunTime = false;
			this.nInitMode = -1;
			this.bListSearch = false;
			this.bSpaceText = false;
			this.bCode = false;
			this.bCodeBtn = false;
			this.bSpin = false;
			this.bReadOnly = false;
			this.bEnable = true;
			this.bEditable = true;
			this.nGroup = 0;
			this.nDisplayPos = 0;
			this.bDisplay = true;
			this.bMenuButton = false;
			this.bSumKey = false;
			this.bSumKeyDisplay = false;
			this.bBWZ = false;
			this.bTagDisplay = false;
			this.role = '';
			this.realType = '';
			this.type = '';
			this.mask = '';
			this.colorCell = this.colorCell;
			this.colorText = this.colorText;
			this.colorEdit = this.colorEdit;
			this.field = '';/*field*/
			this.fieldType = 0;/*field type*/
			this.orgId = '';
			this.relId = '';
			this.forId = '';
			this.min = '';
			this.max = '';
			this.colno = -1;
			this.defaultValue = '';
			this.arrFiles = [];
		};

		this.syncObj = null;

		this.relObj = null;

		this.sDBID = '';
		this.sParam = '';
		this.sSql = '';
		this.dataObj = null;
		this.bDummy = false;
		this.nInsertPos = 2;
		this.bAddStatus = false;

		this.bAddData = false;
		this.msvData = null;
		this.arrRows = null;
		this.arrField = new Array();
		this.arrFieldType = new Array();
		this.arrData = new Array();
		this.arrStatus = new Array();
		this.arrMaxLen = new Array();
		this.arrRows_Org = null;
		this.arrField_Org = new Array();
		this.arrFieldType_Org = new Array();
		this.arrData_Org = new Array();

		this.scrollWidth = 0;
		if(this.objTable)
		{
			this.nRowsPage = 0;
			this.nRowsPageReal = 0;
			this.bLastRowAdjust = false;
			this.arrTableData = [];
			var arr = [];
			Webcrea.FindNodeAll(this.objTable, 'id', this.divPos + '.Data', arr);
			for(var i=0; i<arr.length; i++)
			{
				var objInfo = {};
				objInfo.node = arr[i];
				this.arrTableData[this.arrTableData.length] = objInfo;
			}
			this.nDataRow = this.arrTableData.length;
			this.nDataRowReal = this.nDataRow;
			if(this.objType == 18) this.nDataRowReal = 1;

			this.arrTableHeader = [];
			this.arrTableHeaderSum = [];
			if(this.objHTable)
			{
				Webcrea.FindNodeAll(this.objHTable, 'id', this.divPos + '.Header', this.arrTableHeader);
				Webcrea.FindNodeAll(this.objHTable, 'id', this.divPos + '.Sum', this.arrTableHeaderSum);
			}
			this.nHeader = this.arrTableHeader.length + this.arrTableHeaderSum.length;

			this.arrTableSum = [];
			if(this.objFTable) Webcrea.FindNodeAll(this.objFTable, 'id', this.divPos + '.Sum', this.arrTableSum);
			this.nFooter = this.arrTableSum.length;
			this.nSumRow = this.arrTableSum.length;
			this.scrollWidth = Webcrea.GetWidth(this.objTable);
		}
		this.objSelRow_B = null;
		this.objSelRow = null;
		this.currRowIndex = 0;
		this.currColIndex = 0;
		this.objSelCol_B = null;
		this.objSelCol = null;
		this.currRowIndex_B = -1;
		this.objSelInfo = {};
		this.objGDivInfo = {};
		this.objGDivInfo.rLineWidth = 0;
		this.objGDivInfo.bLineWidth = 0;
		this.objTableInfo = {};
		this.objTableInfo.rLineWidth = 0;
		this.objTableInfo.bLineWidth = 0;
		this.arrSumInfo = [];

		var parentObj = _my_File.GetPageObjById(this.divPage);
		parentObj.AddObject(this);
		this.pageObj = parentObj;

		if(this.objDivPos) this.SetInitSize();
		if(this.objTable)
		{
			if (Win.IsWebView()) this.objDivPos.addEventListener('keypress', function(){Webcrea.OnKEYDOWN();Webcrea.OnKEYUP();}, false);
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onkeydown', function(){Webcrea.OnKEYDOWN();});
			else this.objDivPos.addEventListener('keydown', function(){Webcrea.OnKEYDOWN();}, false);
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onkeyup', function(){Webcrea.OnKEYUP();});
			else this.objDivPos.addEventListener('keyup', function(){Webcrea.OnKEYUP();}, false);
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onpaste', function(){Webcrea.OnPASTE();});
			else this.objDivPos.addEventListener('paste', function(){Webcrea.OnPASTE();}, false);

			if(this.IsGrid())
			{
				if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onscroll', function(){Webcrea.OnSCROLL(window.event);});
				else this.objDivPos.addEventListener('scroll', function(){Webcrea.OnSCROLL(window.event);}, false);
				if(this.bMyGrid) this.SetMyGrid();
				var cssName = this.objGDivPos.getAttribute('class');
				var divCss = Webcrea.GetCSS('.' + cssName);
				if(divCss)
				{
					var lineWidth = divCss.style.borderRightWidth;
					if(lineWidth)
					{
						nLineWidth = Extract(lineWidth, '[0-9]');
						this.objGDivInfo.rLineWidth = Number(nLineWidth);
					}
					lineWidth = divCss.style.borderBottomWidth;
					if(lineWidth)
					{
						nLineWidth = Extract(lineWidth, '[0-9]');
						this.objGDivInfo.bLineWidth = Number(nLineWidth);
					}
				}
			}
			else 
			{
				var cssName = this.objTable.getAttribute('class');
				var divCss = Webcrea.GetCSS('.' + cssName);
				if(divCss)
				{
					var lineWidth = divCss.style.borderRightWidth;
					if(lineWidth)
					{
						nLineWidth = Extract(lineWidth, '[0-9]');
						this.objTableInfo.rLineWidth = Number(nLineWidth);
					}
					lineWidth = divCss.style.borderBottomWidth;
					if(lineWidth)
					{
						nLineWidth = Extract(lineWidth, '[0-9]');
						this.objTableInfo.bLineWidth = Number(nLineWidth);
					}
				}
			}
			this.SetCellInfo(this.objTable);
			if(this.objHTable) this.SetCellInfo(this.objHTable);
			if(this.objFTable) this.SetCellInfo(this.objFTable);
			this.ClearInit();
		}
		if(this.IsTab()) this.SetTabArrawDisplay();
	},
	AutoWidth : function()
	{
		this.bAutoWidth = this.bHScroll & this.IsHScroll();
		if(!this.bAutoWidth) return;
		var sOpt = arguments[0];
		this.autoWidthOpt = {};
		this.autoWidthOpt.addWidth = 0;
		this.autoWidthOpt.bExcludeSum = false;
		this.autoWidthOpt.arrCol = [];
		if(Webcrea.IsEmpty(sOpt)) return;
		var arrCols = sOpt.split(',');
		var arrOpt = arrCols[0].split(' ');
		for(var i=0; i<arrOpt.length; i++)
		{
			arrOpt[i] = arrOpt[i].trim();
			if(Webcrea.IsEmpty(arrOpt[i]))
			{
				arrOpt.splice(i, 1);
				i--;
			}
		}
		if(arrCols.length==1) arrCols.splice(0, 1);
		if(arrCols.length>1)
		{
			arrCols[0] = arrOpt[arrOpt.length-1];
			arrOpt.splice(arrOpt.length-1, 1);
		}
		else if(arrOpt.length>1)
		{
			arrCols[0] = arrOpt[arrOpt.length-1];
			arrOpt.splice(arrOpt.length-1, 1);
		}
		for(var i=0; i<arrOpt.length; i++)
		{
			var s = arrOpt[i];
			if(i==0 && IsDigit(s)) this.autoWidthOpt.addWidth = Number(s);
			else if(s.iEquals('excludeSum')) this.autoWidthOpt.bExcludeSum = true;
		}
		for(var i=0; i<arrCols.length; i++) this.autoWidthOpt.arrCol[this.autoWidthOpt.arrCol.length] = arrCols[i].trim();
	},
	CommandEvent : function()
	{
		let param = arguments[0];
		if(!this.IsViewControl()) return;
		var ifrm = Webcrea.FindNode(this.objDivPos, 'name', 'iframe');
		var viewObj = ifrm.contentWindow;
		if(!viewObj || !viewObj._my_File) return;
		param = param.trim();
		let sCommand = '';
		let sCommandT = '';
		for(let i=0; i<param.length; i++)
		{
			if(param[i] == ' ')
			{
				sCommand = sCommandT;
				break;
			}
			if(param[i] == "'" || param[i] == '"')	break;
			if(param[i] == ',' || param[i] == '.')	break;
			sCommandT += param[i];
		}
		let n = param.indexOf(sCommand);
		if(n>=0) param = param.substr(n+sCommand.length);
		param = param.trim();
		let bPermit = false;
		if(Webcrea.IsEmpty(sCommand)) bPermit = true;
		else if(sCommand == 'Call') bPermit = true;
		if(!bPermit) return;
		let bFunc = false;
		if(param[param.length-1] == ')') bFunc = true;
		if(bFunc)
		{
			let nFunc = param.lastIndexOf('(');
			let sFuncParam = param.substr(nFunc+1);
			sFuncParam = sFuncParam.substr(0, sFuncParam.length-1);
			if(!Webcrea.IsEmpty(sFuncParam)) sFuncParam = Webcrea.RemoveQuote(sFuncParam);
			param = param.substr(0, nFunc);
			let arrObj = param.split('.');
			if(arrObj.length<2) return;
			let currObj = viewObj.Webcrea.GetObjectById(arrObj[0]);
			if(!currObj) return;
			try{viewObj.window[currObj.divPage][currObj.divPos][arrObj[1]](sFuncParam);}catch(e){}
		}
	},
	CopyInfo : function()
	{
		let orgObj = arguments[0];
		this.colorDisable = orgObj.colorDisable;
		this.colorDisableText = orgObj.colorDisableText;
		this.colorReadOnly = orgObj.colorReadOnly;
		this.colorReadOnlyText = orgObj.colorReadOnlyText;
		this.colorFocus = orgObj.colorFocus;
		this.colorInsert = orgObj.colorInsert;
		this.colorModify = orgObj.colorModify;
		this.colorDelete = orgObj.colorDelete;
		this.colorSum = orgObj.colorSum;
		this.colorEdit = orgObj.colorEdit;
		this.colorBackground = orgObj.colorBackground;
	},
	CreateFilterBox : function()
	{
		var findid = arguments[0];
		for(var i=0; i<this.arrFilterObj.length; i++)
		{
			var obj = this.arrFilterObj[i];
			var relId = obj.id;
			if(!Webcrea.IsEmpty(findid) && !findid.iEquals(relId)) continue;
			var myFilterBoxId = this.divPos + '.' + relId;
			var nHeight = obj.arrData.length * 23;
			if(nHeight>138) nHeight = 138;
			var dlNode = Webcrea.FindNode(this.objDivPage, 'id', '_my_filterbox_groupDL_' + myFilterBoxId);
			var ddNode = null;
			var ulNode;
			if(!dlNode)
			{
				dlNode = document.createElement('DL');
				dlNode.setAttribute('pid', this.divPos);
				dlNode.setAttribute('relid', obj.id);
				dlNode.setAttribute('id', '_my_filterbox_groupDL_' + myFilterBoxId);
				dlNode.setAttribute('class', '_my_filterbox');
				dlNode.setAttribute('style', 'margin:0px;');
				this.objDivPage.appendChild(dlNode);
			}
			else
			{
				ddNode = Webcrea.FindNode(dlNode, 'name', 'DD');
				if(ddNode)
				{
					dlNode.removeChild(ddNode);
					ddNode = null;
				}
			}
			if(!ddNode)
			{
				ddNode = document.createElement('DD');
				ddNode.setAttribute('id', '_my_filterbox_items_' + myFilterBoxId);
				ddNode.setAttribute('style', 'position:absolute;display:none;height:'+ nHeight +'px;background-color:#fff;color:#000;z-index:10001;');
				var divNode = document.createElement('DIV');
				ulNode = document.createElement('UL');
				ulNode.setAttribute('style', 'border:solid;border-top:dotted;border-bottom:dotted;border-width:1px;height:100%;background-color:#fff;');
				divNode.appendChild(ulNode);
				ddNode.appendChild(divNode);

				var divHeaderNode = document.createElement('DIV');
				divHeaderNode.setAttribute('id', '_my_filterbox_h_' + myFilterBoxId);
				divHeaderNode.setAttribute('style', 'position:absolute;display:none;border:solid;border-width:1px 1px 0px 1px;padding:6px 1px 6px 7px;z-index:10001;background-color:#fdfcfc;');
				divHeaderNode.setAttribute('role', 'selectboxheader');

				var inputCheckNode = document.createElement('INPUT');
				inputCheckNode.setAttribute('role', 'filterboxheader');
				inputCheckNode.setAttribute('type', 'checkbox');
				inputCheckNode.setAttribute('onclick', "Webcrea.SetFilterBoxItem('','',1)");
				divHeaderNode.appendChild(inputCheckNode);

				var labelCheckNode = document.createElement('LABEL');
				labelCheckNode.setAttribute('role', 'filterboxheader');
				labelCheckNode.setAttribute('style', 'display:inline-block');
				labelCheckNode.innerText = Webcrea.LoadString('idsRangeAll');
				divHeaderNode.appendChild(labelCheckNode);

				var aCloseNode = document.createElement('A');
				aCloseNode.setAttribute('style', 'text-align:left;vertical-align:middle;display:block;');
				var imgCloseNode = document.createElement('IMG');
				imgCloseNode.setAttribute('role', 'filterboxclose');
				imgCloseNode.setAttribute('style', 'position:absolute;height:14px;top:9px;right:6px;');
				imgCloseNode.setAttribute('src', Webcrea.GetImageLinkPath() + '/frame/code/filter_close.gif');
				imgCloseNode.setAttribute('onclick', 'Webcrea.HideFilterBox()');
				aCloseNode.appendChild(imgCloseNode);
				divHeaderNode.appendChild(aCloseNode);
				dlNode.appendChild(divHeaderNode);

				var divFooterNode = document.createElement('DIV');
				divFooterNode.setAttribute('id', '_my_filterbox_f_' + myFilterBoxId);
				divFooterNode.setAttribute('style', 'position:absolute;display:none;border:solid;border-width:0px 1px 1px 1px;padding:6px 1px 6px 7px;z-index:10001;background-color:#fdfcfc;');
				divFooterNode.setAttribute('role', 'selectboxfooter');

				var buttonNode = document.createElement('INPUT');
				buttonNode.setAttribute('id', '_my_filterbox_f_ok' + myFilterBoxId);
				buttonNode.setAttribute('role', 'filterboxfooter');
				buttonNode.setAttribute('type', 'button');
				buttonNode.setAttribute('style', 'width:60px;margin-right:10px;');
				buttonNode.setAttribute('onclick', 'Webcrea.HideFilterBox(true)');
				buttonNode.value = Webcrea.LoadString('idsOK');
				divFooterNode.appendChild(buttonNode);

				var buttonNode = document.createElement('INPUT');
				buttonNode.setAttribute('id', '_my_filterbox_f_cancel' + myFilterBoxId);
				buttonNode.setAttribute('role', 'filterboxfooter');
				buttonNode.setAttribute('type', 'button');
				buttonNode.setAttribute('style', 'width:60px;');
				buttonNode.setAttribute('onclick', 'Webcrea.HideFilterBox()');
				buttonNode.value = Webcrea.LoadString('idsCancel');
				divFooterNode.appendChild(buttonNode);
				dlNode.appendChild(divFooterNode);

				dlNode.appendChild(ddNode);
			}
			for(var j=0; j<obj.arrData.length; j++)
			{
				var sData = obj.arrData[j];

				var liNode = document.createElement('LI');
				liNode.setAttribute('role', 'selectboxitem');

				var inputNode = document.createElement('INPUT');
				inputNode.setAttribute('id', j);
				inputNode.setAttribute('role', 'filterboxitem');
				inputNode.setAttribute('type', 'checkbox');
				inputNode.setAttribute('onclick', 'Webcrea.SetFilterBoxItem("","",2);');
				inputNode.setAttribute('value', sData);
				liNode.appendChild(inputNode);

				var labelNode = document.createElement('LABEL');
				labelNode.innerText = sData;
				liNode.appendChild(labelNode);

				ulNode.appendChild(liNode);
			}
		}
	},
	Init : function()
	{
		if(this.IsProc())
		{
			this.bInit = true;
			return;
		}
		if(Webcrea.IE() && this.objDivPos && this.IsCrossTab()) this.SetInitSize(true);
		if(!this.bEnable)
		{
			this.Enable('', this.bEnable);
			if(this.IsCrossTab()) this.Enable('', this.bEnable, this.objHTable, true);
		}
		if(this.bReadOnly) this.ReadOnly('', this.bReadOnly);
		this.bSearched = true;
		if(this.IsForm() || this.bMyGrid || (this.IsList() && this.bEnableList)) this.DisplayCodeButton();
		this.DisplayScroll();
		if(this.IsGrid()) this.DisplayRuler();
		else if(this.IsSignPad()) this.LoadJsLib('signpad');
		if(this.IsPageScroll())
		{
			var relObj = Webcrea.GetObjectById(this.pageScrollOpt.sRelObj);
			this.pageScrollOpt.relObj = relObj;
			if(relObj) relObj.relObj = this;
		}
		this.InitDisplay();
		this.OnAdjustGrid();
		if(!this.bInitDisplay) this.Hide();
		if(this.IsGrid() && !this.initObjGroup) this.initObjGroup = this.objGDivPos.cloneNode(true);
		this.bInit = true;
	},
	InitDisplay : function()
	{
		if(this.IsGrid())
		{
			this.DisplaySumRow();
			if(this.bMyGrid && this.bVScroll)
			{
				var nVSHeight = Webcrea.GetHeight(this.objDivPos, true);
				var nVSHeight1 = this.objDivPos.scrollWidth;
				var nVSHeight2 = this.objDivPos.clientWidth;
				if(nVSHeight1>nVSHeight2) nVSHeight -= this.nHScrlHeight;
				if(this.objVSGDivPos)
				{
					this.objVSGDivPos.style.height = nVSHeight + 'px';
					if(this.bInitHScroll && this.bMyHScroll && this.objHSGDivPos) nVSHeight -= this.nBaseScrlSize;
					this.objVSDWDivPos.style.top = nVSHeight - (this.nBaseScrlSize) + 'px';
				}
			}
			if(Webcrea.IsMobile())
			{
				if(!this.bVScroll) this.objDivPos.style.overflowY = 'auto';
			}
		}
		if(this.IsForm() || this.IsGrid())
		{
			for(var i=0; i<this.arrLayoutCellInfo.length; i++)
			{
				var layoutCellInfo = this.arrLayoutCellInfo[i];
				if(!layoutCellInfo.lBullet && !layoutCellInfo.rBullet) continue;
				if(this.IsGrid() && layoutCellInfo.bDataRow) continue;
				if(!Webcrea.IsEmpty(Webcrea.GetBulletImage())) this._Set_Bullet(Webcrea.GetBulletImage(), layoutCellInfo);
				else this._Set_BulletColor(layoutCellInfo.bulletColor, layoutCellInfo);
			}
			for(var i=0; i<this.arrCellId.length; i++)
			{
				var id = this.arrCellId[i];
				var cellInfo = this.GetCellInfo(id);
				if(cellInfo)
				{
					if(!cellInfo.lBullet && !cellInfo.rBullet) continue;
					if(this.IsGrid() && cellInfo.bDataRow) continue;
					if(!Webcrea.IsEmpty(Webcrea.GetBulletImage())) this._Set_Bullet(Webcrea.GetBulletImage(), cellInfo);
					else this._Set_BulletColor(cellInfo.bulletColor, cellInfo);
				}
			}
		}
		else if(this.IsHtml())
		{
			var obj = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
			var sOverflowX = obj.getAttribute('overflow-x');
			var sOverflowY = obj.getAttribute('overflow-y');
			if(!Webcrea.IsEmpty(sOverflowX) || !Webcrea.IsEmpty(sOverflowY))
			{
				var func = this.objName + '.SetIframeScroll()';
				setTimeout(func, 500);
			}
		}
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(this.IsText() && this.objDivPos)
		{
			if(nFileVersion<7020170529005 && Webcrea.IE())
			{
				this.objDivPos.style.lineHeight = '';
				this.objDivPos.style.letterSpacing = '0.6px';
			}
			else
			{
				var bIE = Webcrea.IE();
				if(bIE) this.objDivPos.style.lineHeight = '';
				var arrSpan = [];
				Webcrea.FindNodeAll(this.objDivPos, 'name', 'SPAN', arrSpan);
				for(var i=0; i<arrSpan.length; i++)
				{
					var bBold = false;
					var node = arrSpan[i];
					if(node.children.length>0 && node.children[0].tagName == 'B') bBold = true;
					var nFontSize = Number(Extract(node.style.fontSize, '[0-9]'));
					var fontFamily = node.style.fontFamily;
					if(nFileVersion>=7020200615001)
					{
						if(!Webcrea.IsEmpty(fontFamily)) fontFamily = Webcrea.RemoveQuote(fontFamily);
						var arrLetterSpacing = [];
						var arrWordSpacing = [];
						var nLetterSpacing = 0;
						var nWordSpacing = 0;
						if(bIE) fontFamily += 'IE';
						var nStyle = WebcreaInfo.arrFontStyle.searchId(fontFamily);
						if(nStyle>=0)
						{
							var fontStyleInfo = WebcreaInfo.arrFontStyle[nStyle];
							arrLetterSpacing = fontStyleInfo.arrLetterSpacing;
							arrWordSpacing = fontStyleInfo.arrWordSpacing;
						}
						for(var j=arrLetterSpacing.length-1; j>=0; j--)
						{
							nLetterSpacing = arrLetterSpacing[j][1];
							if(nFontSize >= arrLetterSpacing[j][0]) break;
						}
						for(var j=arrWordSpacing.length-1; j>=0; j--)
						{
							nWordSpacing = arrWordSpacing[j][1];
							if(nFontSize >= arrWordSpacing[j][0]) break;
						}
						if(nLetterSpacing) node.style.letterSpacing = nLetterSpacing + 'px';
						if(nWordSpacing) node.style.wordSpacing = nWordSpacing + 'px';
					}
					else
					{
						if(!Webcrea.IE())
						{
							if(nFontSize >= 72) node.style.wordSpacing = '-16.1px';
							else if(nFontSize >= 36) node.style.wordSpacing = '-8.1px';
							else if(nFontSize >= 28) node.style.wordSpacing = '-7.1px';
							else if(nFontSize >= 26) node.style.wordSpacing = '-6.1px';
							else if(nFontSize >= 20) node.style.wordSpacing = '-5.1px';
							else if(nFontSize >= 18) node.style.wordSpacing = '-4.1px';
							else if(nFontSize >= 16) node.style.wordSpacing = '-3.1px';
							else if(nFontSize >= 14) node.style.wordSpacing = '-4.1px';
							else if(nFontSize >= 12) node.style.wordSpacing = '-3.1px';
							else if(nFontSize >= 10) node.style.wordSpacing = '-2.1px';
							else if(nFontSize <= 9) node.style.wordSpacing = '-2px';
						}
						else
						{
							if(nFontSize >= 36) node.style.letterSpacing = '-0.1px';
							else if(nFontSize >= 28) node.style.letterSpacing = '-0.4px';
							else if(nFontSize >= 26) node.style.letterSpacing = '0.4px';
							else if(nFontSize >= 24) node.style.letterSpacing = '0.1px';
							else if(nFontSize >= 22) node.style.letterSpacing = '-0.1px';
							else if(nFontSize >= 20) node.style.letterSpacing = '0.2px';
							else if(nFontSize >= 18) node.style.letterSpacing = '-0.1px';
							else if(nFontSize >= 16) node.style.letterSpacing = '-0.4px';
							else if(nFontSize >= 14) node.style.letterSpacing = '0.4px';
							else if(nFontSize >= 12) node.style.letterSpacing = '-0.1px';
							else if(nFontSize == 11) node.style.letterSpacing = '0.4px';
							else if(nFontSize == 10) node.style.letterSpacing = '-0.1px';
							else if(nFontSize <= 9) node.style.letterSpacing = '';
						}
					}
					var nLineHeight = Number(Extract(node.style.lineHeight, '[0-9]'));
					if(nLineHeight>0 && Webcrea.IE())
					{
						if(bBold)
						{
							nLineHeight -= 0;
							node.style.verticalAlign = 'middle';
						}
						else nLineHeight -= 2;
						node.style.lineHeight = nLineHeight + '%';
					}
				}
			}
		}
	},
	InitLayout : function(bResizeCheck)
	{
		if(!this.IsGrid()) return;
		var nextNode = this.objGDivPos.nextElementSibling;
		if(nextNode && nextNode.nodeName == '#text') nextNode = nextNode.nextElementSibling;
		var orgWidth = Webcrea.GetWidth(this.objGDivPos);
		var orgHeight = Webcrea.GetHeight(this.objGDivPos);
		var parent = this.objGDivPos.parentNode;
		parent.removeChild(this.objGDivPos);
		var initObjGroup = this.initObjGroup.cloneNode(true);
		if(nextNode) parent.insertBefore(initObjGroup, nextNode);
		else parent.appendChild(initObjGroup);
		var layoutXmlDoc = Webcrea.layoutXml.documentElement;
		var layoutXml = layoutXmlDoc.cloneNode(true);
		this.orgPage = Webcrea.FindNode(layoutXml, 'id', this.divPage);

		this.objDivPage = document.getElementById(this.divPage);
		this.objGDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'Group');
		this.objHDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'H');
		this.objFDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'F');
		this.objTDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'T');
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);
		if(this.objHDivPos) this.objHTable = Webcrea.FindNode(this.objHDivPos, 'name', 'TABLE');
		if(this.objFDivPos) this.objFTable = Webcrea.FindNode(this.objFDivPos, 'name', 'TABLE');
		this.objTable = Webcrea.FindNode(this.objDivPos, 'name', 'TABLE');
		if(this.objTable)
		{
			if (Win.IsWebView()) this.objDivPos.addEventListener('keypress', function(){Webcrea.OnKEYDOWN();Webcrea.OnKEYUP();}, false);
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onkeydown', function(){Webcrea.OnKEYDOWN();});
			else this.objDivPos.addEventListener('keydown', function(){Webcrea.OnKEYDOWN();}, false);
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onkeyup', function(){Webcrea.OnKEYUP();});
			else this.objDivPos.addEventListener('keyup', function(){Webcrea.OnKEYUP();}, false);
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onpaste', function(){Webcrea.OnPASTE();});
			else this.objDivPos.addEventListener('paste', function(){Webcrea.OnPASTE();}, false);

			if(this.IsGrid())
			{
				this.DisplaySumRow();
				if (Webcrea.IsIE69()) this.objDivPos.attachEvent('onscroll', function(){Webcrea.OnSCROLL(window.event);});
				else this.objDivPos.addEventListener('scroll', function(){Webcrea.OnSCROLL(window.event);}, false);
				if(this.bMyGrid) this.SetMyGrid();
			}
		}
		this.DisplayScroll();
		if(bResizeCheck)
		{
			this.nResizeWidth = 0;
			this.nResizeHeight = 0;
			var currWidth = Webcrea.GetWidth(this.objGDivPos);
			var currHeight = Webcrea.GetHeight(this.objGDivPos);
			var nExpand = orgWidth - currWidth;
			if(this.layoutOpt && this.layoutOpt.bHorz && nExpand>0) this.nResizeWidth = nExpand;
			nExpand = orgHeight - currHeight;
			if(this.layoutOpt && this.layoutOpt.bVert && nExpand>0) this.nResizeHeight = nExpand;
		}
	},
	SetIframeScroll : function()
	{
		var ifrm = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
		try{
			if(ifrm.contentWindow.document.readyState != 'complete')
			{
				var func = this.objName + '.SetIframeScroll()';
				setTimeout(func, 500);
				return;
			}
			else
			{
				var sOverflowX = ifrm.getAttribute('overflow-x');
				var sOverflowY = ifrm.getAttribute('overflow-y');
				if(!Webcrea.IsEmpty(sOverflowX)) ifrm.contentWindow.document.body.style.overflowX = sOverflowX;
				if(!Webcrea.IsEmpty(sOverflowY)) ifrm.contentWindow.document.body.style.overflowY = sOverflowY;
			}
		}catch(e){
			Webcrea.Trace(e.stack);
		}
	},
	SetInitSize : function(bInit)
	{
		if(this.IsProc()) return;
		this.initAllColWidth = 0;
		this.arrColHGroup = [];
		this.arrColGroup = [];
		if(this.objHDivPos)
		{
			this.colHGroup = Webcrea.FindNode(this.objHDivPos, 'name', 'COLGROUP');
			if(this.colHGroup) Webcrea.FindNodeAll(this.colHGroup, 'name', 'COL', this.arrColHGroup);
		}
		if(this.objDivPos)
		{
			this.colGroup = Webcrea.FindNode(this.objDivPos, 'name', 'COLGROUP');
			if(this.colGroup) Webcrea.FindNodeAll(this.colGroup, 'name', 'COL', this.arrColGroup);
		}
		for(var i=0; i<this.arrColGroup.length; i++)
		{
			var node = this.arrColGroup[i];
			this.initAllColWidth += Number(node.getAttribute('orgWidth'));
		}
		if(this.IsGrid())
		{
			if(this.bMyGrid)
			{
				var widthOrg_b = Webcrea.GetWidth(this.objDivPos, true);
				if(this.bMyHScroll) this.objDivPos.style.overflow = 'hidden';
				else this.objDivPos.style.overflowY = 'hidden';

				var widthOrg = Webcrea.GetWidth(this.objDivPos, true);
				var diff = widthOrg - widthOrg_b;
				this.objDivPos.style.width = Webcrea.GetWidth(this.objDivPos, true) - diff + 'px';
				if(this.objHDivPos) this.objHDivPos.style.width = Webcrea.GetWidth(this.objHDivPos, true) - diff + 'px';
				if(this.objFDivPos) this.objFDivPos.style.width = Webcrea.GetWidth(this.objFDivPos, true) - diff + 'px';
			}
			else
			{
				if(this.bMyHScroll) this.objDivPos.style.overflow = 'scroll';
				else this.objDivPos.style.overflowY = 'scroll';
			}
		}
		this.divScrollWidth = Webcrea.GetScrollWidth(this.objDivPos);
		if(this.IsGrid() && !this.bMyGrid && (!Webcrea.IsIE() || (Webcrea.IsIE() && !bInit)))
		{
			if(this.bVScroll)
			{
				if(this.objHDivPos) this.objHDivPos.style.width = Webcrea.GetWidth(this.objHDivPos, true) - this.divScrollWidth + 'px';
				if(this.objFDivPos) this.objFDivPos.style.width = Webcrea.GetWidth(this.objFDivPos, true) - this.divScrollWidth + 'px';
			}
		}
		this.initGDivTop = 0, this.initGDivLeft = 0;
		if(this.objGDivPos)
		{
			this.initGDivTop = Webcrea.GetTop(this.objGDivPos);
			this.initGDivLeft = Webcrea.GetLeft(this.objGDivPos);
			this.initGDivWidth = Webcrea.GetWidth(this.objGDivPos, true);
		}
		if(this.objHDivPos) this.initHDivWidth = Webcrea.GetWidth(this.objHDivPos, true) + Webcrea.GetScrollWidth(this.objHDivPos);
		this.initDivWidth = Webcrea.GetWidth(this.objDivPos, true) + this.divScrollWidth;
		this.initDivHeight = Webcrea.GetHeight(this.objDivPos, true);
		if(this.objHTable) this.initHWidth = Webcrea.GetWidth(this.objHTable);
		if(this.objTable) this.initWidth = Webcrea.GetWidth(this.objTable);
		this.initHeight = this.initDivHeight;
		this.initLeft = Webcrea.GetLeft(this.objDivPos, true) + this.initGDivLeft;
		this.initTop = Webcrea.GetTop(this.objDivPos, true) + this.initGDivTop;
		var bGetCSSPos = false;
		if(!this.IsVisible() && this.IsPageScroll()) bGetCSSPos = true;
		else if(!this.bInitDisplay && this.IsForm()) bGetCSSPos = true;
		if(bGetCSSPos)
		{
			var divCSS = Webcrea.GetCSS('#' + this.divPage + ' #' + this.divPos);
			if(divCSS)
			{
				var sLeft = divCSS.style.left;
				var sTop = divCSS.style.top;
				this.initLeft = Number(Extract(sLeft, '[DIGIT]'));
				this.initTop = Number(Extract(sTop, '[DIGIT]'));
			}
		}
		if(this.objTDivPos)
		{
			this.initTDivLeft = Webcrea.GetLeft(this.objTDivPos);
			this.initTDivTop = Webcrea.GetTop(this.objTDivPos);
		}
		this.nHeaderHeight = 0;
		this.nDataHeight = 0;
		this.nSumHeight = 0;
		if(this.objHDivPos) this.nHeaderHeight = Webcrea.GetHeight(this.objHDivPos);
		if(this.nDataRow>0)
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion<7020170419003)
			{
				for(var i=0; i<this.arrTableData.length; i++)
				{
					var objInfo = this.arrTableData[i];
					var node = objInfo.node;
					var rowSpan=1;
					var childNodes = node.childNodes;
					for(var j=0; j<childNodes.length; j++)
					{
						var td = childNodes[j];
						if (td.nodeName == 'TD'){
							if(!td.rowSpan) continue;
							rowSpan = td.rowSpan;
							if(td.rowSpan>1) break;
						}
					}
					var n = Webcrea.GetHeight(objInfo.node);
					if(!objInfo.height) objInfo.height = n;
					this.nDataHeight += objInfo.height;
					i=i+rowSpan-1;
				}
			}
			else
			{
				for(var i=0; i<this.arrTableData.length; i++)
				{
					var objInfo = this.arrTableData[i];
					var node = objInfo.node;
					var n = Webcrea.GetHeight(objInfo.node, true);
					if(!objInfo.height) objInfo.height = n;
					this.nDataHeight += objInfo.height;
				}
			}
		}
		if(this.arrTableSum)
		{
			for(var i=0; i<this.arrTableSum.length; i++) this.nSumHeight += Webcrea.GetHeight(this.arrTableSum[i]);
			if(this.nSumHeight>this.nDataHeight)
			{
				var nAdd=Math.floor(this.nSumHeight/this.nDataHeight);
				if(this.nSumHeight%this.nDataHeight==0) nAdd--;
				this.nSumRow+=nAdd;
			}
		}

		var clientHeight = Webcrea.GetHeight(this.objDivPos, true);
		this.nHScrlHeight = this.initHeight-clientHeight;
		if(this.nHScrlHeight<0) this.nHScrlHeight=0;
		if(this.IsGrid() && this.nHScrlHeight>0 && !bInit)
		{
			this.initHDivWidth -= this.nBaseScrlSize;
			if(this.objHDivPos) this.objHDivPos.style.width = this.initHDivWidth+'px';
			if(this.objFDivPos) this.objFDivPos.style.width = this.initHDivWidth+'px';
			if(this.bMyGrid)
			{
				this.initDivWidth -= this.nBaseScrlSize;
				this.objDivPos.style.width = this.initDivWidth +'px';
			}
		}
	},
	SetInitMobileSize : function(colGroup) {
		if(!colGroup) return;
		var colNodes = [], colWidthNodes = [];
		var children = colGroup.children;
		for(var i=0; i<children.length; i++)
		{
			var col = children[i];
			var width = col.style.width;
			width = Number(width.replace('px', ''));
			if(width>0)
			{
				colNodes[colNodes.length] = col;
				colWidthNodes[colWidthNodes.length] = width;
			}
		}
		var nAdjust = parseInt(17/colNodes.length);
		var nAdjust1 = 17 - (nAdjust * colNodes.length);
		for(var i=0; i<colNodes.length; i++)
		{
			var col = colNodes[i];
			var width = colWidthNodes[i];
			if(i+1==colNodes.length) nAdjust+=nAdjust1;
			col.style.width = width + nAdjust + 'px';
		}
	},
	InitValueCell : function(cell, rowId) {
		if((cell.nodeName == 'TD' && Webcrea.IsEditTd(cell)) || cell.nodeName == 'INPUT' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT' || Webcrea.IsMultilineMainDiv(cell))
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(Webcrea.IsMultilineMainDiv(cell)) cell=cell.childNodes[0].childNodes[0];
			var sCellId = this.GetCellId(cell);
			if(this.arrStackEvent.isearch('initvalue')>=0 && this.IsColumn(sCellId)) return;
			var value = cell.defaultValue;
			var cellInfo = this.GetCellInfo(sCellId);
			var type = cell.getAttribute('type');
			if((cell.nodeName == 'TD' || cell.nodeName == 'SELECT') && Webcrea.IsEmpty(value) && cellInfo)	value = cellInfo.defaultValue;
			else if(type == 'radio' || type == 'checkbox') value = '';
			var bDisabled = false;
			var bReadOnly = false;
			if(cellInfo)
			{
				if(cellInfo.nInitMode==1)
				{
					value = cellInfo.defaultValue;
					if(Webcrea.IsNull(value)) value='';
					if(!Webcrea.IsEmpty(value))
					{
						value = Webcrea.Calculation(value);
						this.SetValue(sCellId, value, rowId);
					}
				}
				else if(cellInfo.nInitMode==0 && cellInfo.bRunTime) value = cellInfo.defaultValue;
				else if(cellInfo.nInitMode==0 && (type == 'radio' || type == 'checkbox')) value = cellInfo.defaultValue;
				else if(cellInfo.nInitMode==0 && cell.getAttribute('role') == 'multiline') value = cell.getAttribute('value');
				bDisabled = !cellInfo.bEnable;
				bReadOnly = cellInfo.bReadOnly;
			}
			if(nFileVersion>=7020180904001 && WebcreaInfo.ZeroDate == 1)
			{
				if(Webcrea.IsEmpty(value) && cellInfo && !Webcrea.IsEmpty(cellInfo.mask) && (cellInfo.realType == 'date' || cellInfo.realType == 'datetime' || cellInfo.realType == 'month' || cellInfo.realType == 'time'))
				{
					var str = Webcrea.FormatValue(cell, true, Webcrea.AddZero('0', cellInfo.mask.length));
					var str1 = Extract(str, '[0-9]');
					if(!Webcrea.IsEmpty(str1)) this.SetValue(sCellId, str1, rowId);
				}
			}
			if(!Webcrea.IsEmpty(cell.defaultValue) || (cellInfo && cellInfo.nInitMode==0)) this.SetValue(sCellId, value, rowId);
			else if(nFileVersion<7020201203001 && this.IsForm() && cellInfo && cellInfo.realType == 'number' && Webcrea.IsEmpty(cell.defaultValue) && !this.IsBWZ(sCellId)) cell.value = 0;
			else if(!WebcreaInfo.Nullable && this.IsForm() && cellInfo && cellInfo.realType == 'number' && Webcrea.IsEmpty(cell.defaultValue) && !this.IsBWZ(sCellId))
			{
				if(cell.nodeName == 'TD')
				{
					cell.setAttribute('value', 0);
					cell.textContent = 0;
				}
				else cell.value = 0;
			}
			if(cell.nodeName == 'INPUT' && type.toLowerCase() == 'label') cell.value = cell.defaultValue;
			if(Webcrea.IsNull(rowId) && !this.IsCalendar())
			{
				if(bDisabled || cell.disabled)
				{
					cell.style.backgroundColor = this.colorDisable;
					cell.style.color = this.colorDisableText;
				}
				else if(bReadOnly || cell.readOnly)
				{
					cell.style.backgroundColor = this.colorReadOnly;
					cell.style.color = this.colorReadOnlyText;
				}
			}
		}
		else if(cell.nodeName == 'DIV')
		{
			if(cell.getAttribute('role') == 'qrcode')
			{
				var sCellId = this.GetCellId(cell);
				var cellInfo = this.GetCellInfo(sCellId);
				if(cellInfo)
				{
					var value = '';
					if(cellInfo.nInitMode==0) value = cellInfo.defaultValue;
					else if(cellInfo.nInitMode==1)
					{
						value = cellInfo.defaultValue;
						try{value = eval(value);} catch(e){value = '';}
					}
					if(!Webcrea.IsEmpty(value)) this.SetQRCode(cell, value);
				}
				return;
			}
			else if(cell.getAttribute('role') == 'barcode')
			{
				var sCellId = this.GetCellId(cell);
				var cellInfo = this.GetCellInfo(sCellId);
				if(cellInfo)
				{
					var value = '';
					if(cellInfo.nInitMode==0) value = cellInfo.defaultValue;
					else if(cellInfo.nInitMode==1)
					{
						value = cellInfo.defaultValue;
						try{value = eval(value);} catch(e){value = '';}
					}
					if(!Webcrea.IsEmpty(value)) this.SetBarCode(cell, value);
				}
				return;
			}
			var childs = cell.childNodes;
			for(var i=0; i<childs.length; i++)
			{
				var child = childs[i];
				if((child.nodeName == 'DIV' && !this.IsBulletDiv(child)) || child.nodeName == 'INPUT') return this.InitValueCell(child, rowId);
				else if(child.nodeName == 'IMG')
				{
					var sCellId = this.GetCellId(child);
					var cellInfo = this.GetCellInfo(sCellId);
					if(cellInfo)
					{
						var value = '';
						if(cellInfo.nInitMode==0) value = cellInfo.defaultValue;
						else if(cellInfo.nInitMode==1)
						{
							value = cellInfo.defaultValue;
							try{value = eval(value);} catch(e){value = '';}
						}
						if(!Webcrea.IsEmpty(value)) this.SetImage(sCellId, value);
					}
				}
				else if(child.nodeName == 'LABEL')
				{
					var cellSubChild = child.firstChild;
					while(cellSubChild)
					{
						if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
						{
						}
						cellSubChild = cellSubChild.nextElementSibling;
					}
				}
			}
		}
	},
	InitImage : function()
	{
		var imgNode = Webcrea.FindNodePublic(this.objDivPos, 'name', 'IMG');
		if(imgNode)
		{
			var defaultValue = imgNode.getAttribute('value');
			if(!Webcrea.IsEmpty(defaultValue))
			{
				var imgPath = Webcrea.GetImageLinkPath() + '/' + defaultValue;
				imgNode.src =  imgPath;
			}
		}
	},
	InitValue : function() {
		this.objEvent.bChange = true;
		this.objEvent.bModify = false;
		if(!this.objTable) return;
		this.SetTitle();
		if(!this.bEnable) return;
		this.arrStackEvent[this.arrStackEvent.length] = 'initvalue';
		for(var i=0; i<this.objTable.rows.length; i++)
		{
			var tr = this.objTable.rows[i];
			var trChildNodes = tr.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					if(Webcrea.IsEditTd(td)) this.InitValueCell(td);
					else
					{
						var colChildNodes = td.childNodes;
						for(var k=0; k<colChildNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							this.InitValueCell(cell);
						}
					}
				}
			}
		}
		this.arrStackEvent.removeByValue('initvalue');
		this.objEvent.bChange = true;
		this.objEvent.bModify = true;
	},
	CallFunc : function()
	{
		if(!this.IsHtml()) return;
		var ___param = {};
		___param.func = arguments[0];
		___param.param = arguments[1];
		if(Webcrea.IsEmpty(___param.func)) return;
		var ifrm = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
		var obj = ifrm.contentWindow;
		if(!obj) return;
		return obj[___param.func](___param.param);
	},
	SetColSize : function(colno, nAddWidth)
	{
		var currObj = this;
		var SetGridSize = function(nAddWidth)
		{
			var nGDivWidth = Webcrea.GetWidth(currObj.objGDivPos, true);
			var nHDivWidth = Webcrea.GetWidth(currObj.objHDivPos);
			var nHWidth = Webcrea.GetWidth(currObj.objHTable);
			var nDivWidth = Webcrea.GetWidth(currObj.objDivPos);
			var nWidth = Webcrea.GetWidth(currObj.objTable);
			if(currObj.objGDivPos) currObj.objGDivPos.style.width = nGDivWidth + nAddWidth + 'px';
			if(currObj.objHTable)
			{
				currObj.objHDivPos.style.width = nHDivWidth + nAddWidth + 'px';
				currObj.objHTable.style.width = nHWidth + nAddWidth + 'px';
			}
			if(currObj.objFTable)
			{
				currObj.objFDivPos.style.width = nHDivWidth + nAddWidth + 'px';
				currObj.objFTable.style.width = nHWidth + nAddWidth + 'px';
			}
			currObj.objDivPos.style.width = nDivWidth + nAddWidth + 'px';
			if(currObj.objTable) currObj.objTable.style.width = nWidth + nAddWidth + 'px';
			if(currObj.bMyGrid)
			{
				if(currObj.objVSGDivPos) currObj.objVSGDivPos.style.left = nWidth + nAddWidth + currObj.nScrlLeftAdjust + 'px';
			}
		};
		var SetScrollHeight = function()
		{
			if(currObj.bMyGrid)
			{
				var nVSHeight = currObj.initHeight;
				var nVSHeight1 = currObj.objDivPos.scrollWidth;
				var nVSHeight2 = currObj.objDivPos.clientWidth;
				if(nVSHeight1>nVSHeight2) nVSHeight -= currObj.nHScrlHeight;
				if(currObj.objVSGDivPos)
				{
					currObj.objVSGDivPos.style.height = nVSHeight + 'px';
					currObj.objVSDWDivPos.style.top = nVSHeight - currObj.nBaseScrlSize + 'px';
				}
			}
		};
		for(var z=0; z<3; z++)
		{
			var targetDiv = this.objDivPos;
			if(z==1) targetDiv = this.objHDivPos;
			else if(z==2) targetDiv = this.objFDivPos;
			if(!targetDiv) continue;
			var colGroup = Webcrea.FindNode(targetDiv, 'name', 'COLGROUP');
			var arrColGroup = [];
			if(colGroup) Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
			var bLast = false;
			if(colno == arrColGroup.length-1) bLast = true;
			for(var i=0; i<arrColGroup.length; i++)
			{
				var colNode = arrColGroup[i];
				var no = colNode.getAttribute('colno');
				if(no == colno)
				{
					var nAdjustWidth = 10;
					var currWidth = colNode.getAttribute('resizewidth');
					if(!currWidth) currWidth = colNode.getAttribute('orgwidth');
					currWidth = Number(currWidth);
					var nextColNode, nextWidth;
					var nNext = i+1;
					while(nNext<arrColGroup.length)
					{
						nextColNode = arrColGroup[nNext];
						if(nextColNode.style.visibility != 'hidden' && nextColNode.getAttribute('orgwidth')!='0')
						{
							nextWidth = nextColNode.getAttribute('resizewidth');
							if(!nextWidth) nextWidth = nextColNode.getAttribute('orgwidth');
							nextWidth = Number(nextWidth);
							break;
						}
						nNext++;
					}
					if(nAddWidth>0 && nextColNode && nAddWidth >= (nextWidth-nAdjustWidth)) nAddWidth = nextWidth-nAdjustWidth;
					else if(nAddWidth < 0 && nAddWidth*-1 > (currWidth-nAdjustWidth)) nAddWidth = nAdjustWidth-currWidth;
					var width = currWidth + nAddWidth;
					if(bLast && z==0 && !this.bHScroll && !this.layoutOpt.bHorz && !this.bInitHScroll) SetGridSize(nAddWidth);
					colNode.style.width = width + 'px';
					colNode.setAttribute('orgwidth', width);
					colNode.setAttribute('resizewidth', width);
					if(!this.bInitHScroll && nextColNode)
					{
						var width = nextWidth - nAddWidth;
						nextColNode.style.width = width + 'px';
						if(!this.layoutOpt.bHorz) nextColNode.setAttribute('orgwidth', width);
						nextColNode.setAttribute('resizewidth', width);
					}
					break;
				}
			}
		}
		if((this.nAutoScroll == 1 || this.nAutoScroll == 2) && this.bInitHScroll)
		{
			this.DisplayScrollAdjust();
		}
		if(this.bInitHScroll && this.layoutOpt.bHorz != undefined && this.layoutOpt.bHorz && this.bMyGrid && this.objFDivPos)
		{
			this.DisplayScroll('', 2);
			this.DisplaySumRow();
		}
		if(this.IsHScroll()) this.initAllColWidth = Webcrea.GetWidth(this.objTable);
		this.DisplayRuler();
	},
	SetBaseFormRecord : function()
	{
		this.bBaseFormRecord = false;
		if(this.IsForm() && !Webcrea.IsEmpty(this.sSql) && this.arrRows.length==0)
		{
			if(this.arrField.length==0) Webcrea.CreateRecordSetBySql(this, this.sSql);
			this.ModifyRecordSet('Insert count = 1');
			this.bBaseFormRecord = true;
		}
	},
	SetStatCrossTab : function()
	{
		var crossTabObj = Webcrea.GetObjectById(arguments[0]);
		if(!crossTabObj) return;
		this.crossTabObj = crossTabObj;
		crossTabObj.bCrossTab = true;
		var nHeaderHeight = Math.ceil(crossTabObj.nHeaderHeight/crossTabObj.nHeader);
		var arrStatCalOpt = [];
		var sDataScript = '';
		for(var i=0; i<this.arrStatDataInfo.length; i++)
		{
			var objInfo = this.arrStatDataInfo[i];
			arrStatCalOpt[arrStatCalOpt.length] = objInfo.calOpt;
			if(!Webcrea.IsEmpty(sDataScript)) sDataScript += ' ';
			sDataScript += objInfo.field;
		}
		crossTabObj.statOptInfo.arrCalOpt = arrStatCalOpt;
		crossTabObj.arrStatJoinScript = [];
		var arrStatSortOpt = [];
		var sRowScript = '';
		for(var i=0; i<this.arrStatRowInfo.length; i++)
		{
			var objInfo = this.arrStatRowInfo[i];
			var nSort = objInfo.sort;
			if(nSort == 2) nSort = 1;
			else nSort = 0;
			arrStatSortOpt[arrStatSortOpt.length] = nSort;
			if(!Webcrea.IsEmpty(sRowScript)) sRowScript += ',';
			var sSum = " '>" + Webcrea.LoadString('idsSum') + "'";
			if(i>0)
			{
				var sJoinScript = '';
				var objInfo_b = this.arrStatRowInfo[i-1];
				var objInfo_l = this.arrStatRowInfo[this.arrStatRowInfo.length-1];
				sJoinScript = objInfo_b.field + ' ' + objInfo_b.field + ' ' + objInfo_l.field;
				crossTabObj.arrStatJoinScript[crossTabObj.arrStatJoinScript.length] = sJoinScript;

				sSum = " '>" + Webcrea.LoadString('idsSubTotal') + "'";
			}
			sRowScript = sRowScript + ' row=' + objInfo.field + sSum + ' moreThanOne';
		}
		var sColScript = '';
		for(var i=0; i<this.arrStatColInfo.length; i++)
		{
			var objInfo = this.arrStatColInfo[i];
			var nSort = objInfo.sort;
			if(nSort == 2) nSort = 1;
			else nSort = 0;
			arrStatSortOpt[arrStatSortOpt.length] = nSort;
			if(!Webcrea.IsEmpty(sColScript)) sRowScript += ',';
			else if(!Webcrea.IsEmpty(sRowScript)) sRowScript += ',';
			var sSum = " '" + Webcrea.LoadString('idsSum') + "'";
			if(i>0) sSum = " '" + Webcrea.LoadString('idsSubTotal') + "'";
			sRowScript = sRowScript + ' column=' + objInfo.field + sSum + ' moreThanOne';
		}
		if(Webcrea.IsEmpty(sRowScript) && Webcrea.IsEmpty(sColScript))
		{
			if(crossTabObj.arrStatGroupId)
			{
				for(var i=0; i<crossTabObj.arrStatGroupId.length; i++)
				{
					var cellInfo = crossTabObj.GetCellInfo(crossTabObj.arrStatGroupId[i]);
					if(cellInfo) cellInfo.nGroup = 0;
				}
			}
			crossTabObj.arrStatGroupId = [];
			crossTabObj.bCrossTab = false;
			crossTabObj.statOptInfo.statParam = '';
			crossTabObj.statOptInfo.arrSortOpt = [];
			crossTabObj.nHeader = 1;
			crossTabObj.nHeaderHeight = nHeaderHeight*crossTabObj.nHeader;
			if(!crossTabObj.arrObjAddInfoOrg) return;
			for(var i=0; i<crossTabObj.arrObjAddInfoOrg.length; i++)
			{
				var objAddInfoOrg = crossTabObj.arrObjAddInfoOrg[i];
				var objAddInfo = crossTabObj.arrObjAddInfo[i];
				objAddInfo.orgTableRow = objAddInfoOrg.orgTableRow.cloneNode(true);
				objAddInfo.strAddRow = objAddInfoOrg.strAddRow;
				if(objAddInfoOrg.arrAddCol) objAddInfo.arrAddCol = objAddInfoOrg.arrAddCol.slice();
				if(objAddInfoOrg.arrAddColAttr) objAddInfoOrg.arrAddColAttr = objAddInfoOrg.arrAddColAttr.slice();
			}
			return;
		}
		if(!crossTabObj.arrStatGroupId) crossTabObj.arrStatGroupId = [];
		if(!crossTabObj.arrObjAddInfoOrg)
		{
			crossTabObj.arrObjAddInfoOrg = [];
			for(var i=0; i<crossTabObj.arrObjAddInfo.length; i++)
			{
				var objAddInfoOrg = {};
				var objAddInfo = crossTabObj.arrObjAddInfo[i];
				objAddInfoOrg.orgTableRow = objAddInfo.orgTableRow.cloneNode(true);
				objAddInfoOrg.strAddRow = objAddInfo.strAddRow;
				if(objAddInfo.arrAddCol) objAddInfoOrg.arrAddCol = objAddInfo.arrAddCol.slice();
				else objAddInfoOrg.arrAddCol = [];
				if(objAddInfo.arrAddColAttr) objAddInfoOrg.arrAddColAttr = objAddInfo.arrAddColAttr.slice();
				else objAddInfoOrg.arrAddColAttr = [];
				crossTabObj.arrObjAddInfoOrg[crossTabObj.arrObjAddInfoOrg.length] = objAddInfoOrg;
			}
		}
		var param = 'CrossTab ' + sDataScript + ',' + sRowScript + sColScript;
		crossTabObj.statOptInfo.statParam = param;
		crossTabObj.statOptInfo.arrSortOpt = arrStatSortOpt;

		var GetCreateNode = function(baseNode, classId)
		{
			var height = 0;
			var width = 0;
			var createNode = document.createElement('TD');
			if(Webcrea.IsEmpty(classId))
			{
				var fontSize = '9pt';
				var fontFamily = '';
				var border = 'solid 1px #91C4E2';
				var backgroundColor = 'white';
				if(baseNode)
				{
					var classSample = baseNode.getAttribute('class');
					if(classSample)
					{
						var css = Webcrea.GetCSS('.'+classSample);
						if(css)
						{
							fontFamily = css.style.fontFamily;
							fontSize = css.style.fontSize;
							border = css.style.border;
						}
					}
					height = Webcrea.GetHeight(baseNode, true);
					width = Webcrea.GetWidth(baseNode, true);
				}
				createNode.style.fontFamily = fontFamily;
				createNode.style.fontSize = fontSize;
				createNode.style.border = border;
				createNode.style.backgroundColor = backgroundColor;
			}
			else createNode.setAttribute('class', classId);
			if(height==0) height = 18;
			if(width==0) width = 70;
			createNode.style.height = height + 'px';
			createNode.style.width = width + 'px';
			return createNode;
		};
		var nInitTableWidth = 0;
		var arrCreateHeader = [];
		var arrCreateData = [];
		for(var i=0; i<this.arrStatRowInfo.length; i++)
		{
			var objInfo = this.arrStatRowInfo[i];
			var findId = crossTabObj.divPos + Webcrea.divId + objInfo.field;
			var headerNode = Webcrea.FindNode(crossTabObj.objTable, 'relid', objInfo.field);
			var nWidth=0;
			if(!headerNode)
			{
				var baseNode;
				if(arrCreateHeader.length>0) baseNode = arrCreateHeader[0].headerNode;
				headerNode = GetCreateNode(baseNode);
				if(baseNode) nWidth = Webcrea.GetWidth(baseNode, true);
			}
			else nWidth = Webcrea.GetWidth(headerNode, true);
			if(headerNode.tagName.toUpperCase() != 'TD') headerNode = Webcrea.FindParentNode(headerNode, 'name', 'TD');
			if(nWidth==0) nWidth = 70;
			nInitTableWidth += nWidth;
			var headerNodeClone = headerNode.cloneNode(true);
			headerNodeClone.innerText = objInfo.title;
			var objHeader = {};
			objHeader.seq = 0;
			objHeader.headerNode = headerNodeClone;
			objHeader.field = objInfo.field;
			objHeader.title = objInfo.title;
			objHeader.width = nWidth;
			objHeader.type = 'row';
			arrCreateHeader[arrCreateHeader.length] = objHeader;

			var dataNode = Webcrea.FindNode(crossTabObj.orgPage, 'id', findId);
			if(!dataNode)
			{
				var classId = '';
				var cellInfo = crossTabObj.GetCellInfo(findId);
				if(!cellInfo)
				{
					crossTabObj.arrCellId[crossTabObj.arrCellId.length] = findId;
					var cellInfoId = findId.toLowerCase();
					cellInfo = new crossTabObj.cellInfo(cellInfoId);
					cellInfo.type = 'text';
					cellInfo.realType = cellInfo.type;
					crossTabObj.arrCellInfo[cellInfoId] = cellInfo;
				}
				else classId = cellInfo.classId;
				var baseNode;
				if(arrCreateData.length>0) baseNode = arrCreateData[0].dataNode;
				dataNode = GetCreateNode(baseNode, classId);
				dataNode.setAttribute('role', 'edittd');
				dataNode.setAttribute('id', findId);
				dataNode.setAttribute('orgid', objInfo.field);
			}
			if(dataNode.tagName.toUpperCase() != 'TD') dataNode = Webcrea.FindParentNode(dataNode, 'name', 'TD');
			var dataNodeClone = dataNode.cloneNode(true);
			dataNodeClone.setAttribute('group', 'group');
			var cellInfo = crossTabObj.GetCellInfo(findId);
			if(cellInfo)
			{
				if(crossTabObj.arrStatGroupId.isearch(findId)<0) crossTabObj.arrStatGroupId[crossTabObj.arrStatGroupId.length] = findId;
				cellInfo.nGroup = 1;
			}
			var objData = {};
			objData.dataNode = dataNodeClone;
			objData.field = objInfo.field;
			arrCreateData[arrCreateData.length] = objData;
		}
		for(var i=0; i<this.arrStatColInfo.length; i++)
		{
			var nWidth=0;
			var objInfo = this.arrStatColInfo[i];
			var findId = crossTabObj.divPos + Webcrea.divId + objInfo.field;
			var headerNode = Webcrea.FindNode(crossTabObj.objTable, 'relid', objInfo.field);
			if(!headerNode)
			{
				headerNode = Webcrea.FindNode(crossTabObj.objTable, 'id', findId);
				if(!headerNode)
				{
					var headerNodeSample;
					var objHeader = arrCreateHeader[0];
					if(objHeader)
					{
						headerNodeSample = objHeader.headerNode;
						nWidth = objHeader.width;
					}
					headerNode = GetCreateNode(headerNodeSample);
				}
				else nWidth = Webcrea.GetWidth(headerNode, true);
			}
			else nWidth = Webcrea.GetWidth(headerNode, true);
			if(headerNode.tagName.toUpperCase() != 'TD') headerNode = Webcrea.FindParentNode(headerNode, 'name', 'TD');
			headerNode.setAttribute('role', 'edittd');
			if(nWidth==0) nWidth = 70;
			if(i==0) nInitTableWidth += nWidth;
			var headerNodeClone = headerNode.cloneNode();
			headerNodeClone.setAttribute('id', findId);
			headerNodeClone.setAttribute('orgid', objInfo.field);
			var objHeader = {};
			objHeader.seq = i;
			objHeader.headerNode = headerNodeClone;
			objHeader.field = objInfo.field;
			objHeader.title = objInfo.title;
			objHeader.width = nWidth;
			objHeader.type = 'col';
			arrCreateHeader[arrCreateHeader.length] = objHeader;
		}
		var bHideAll = true;
		for(var i=0; i<this.arrStatDataInfo.length; i++)
		{
			var objInfo = this.arrStatDataInfo[i];
			if(this.arrStatDataInfo.length<2 || !objInfo.hidden)
			{
				bHideAll = false;
				break;
			}
		}
		for(var i=0; i<this.arrStatDataInfo.length; i++)
		{
			var objInfo = this.arrStatDataInfo[i];
			var bHide = false;
			if(this.arrStatDataInfo.length>1 && objInfo.hidden) bHide = true;
			if(bHide && i==0 && bHideAll) bHide = false;
			if(bHide)
			{
				this.arrStatDataInfo.splice(i, 1);
				i--;
				continue;
			}
			var findId = crossTabObj.divPos + Webcrea.divId + objInfo.field;
			var dataNode = Webcrea.FindNode(crossTabObj.orgPage, 'id', findId);
			if(!dataNode)
			{
				var classId = '';
				var cellInfo = crossTabObj.GetCellInfo(findId);
				if(!cellInfo)
				{
					crossTabObj.arrCellId[crossTabObj.arrCellId.length] = findId;
					var cellInfoId = findId.toLowerCase();
					cellInfo = new crossTabObj.cellInfo(cellInfoId);
					cellInfo.type = 'text';
					cellInfo.realType = cellInfo.type;
					crossTabObj.arrCellInfo[cellInfoId] = cellInfo;
				}
				else classId = cellInfo.classId;
				var baseNode;
				if(arrCreateData.length>0) baseNode = arrCreateData[0].dataNode;
				dataNode = GetCreateNode(baseNode, classId);
				dataNode.setAttribute('role', 'edittd');
				dataNode.setAttribute('id', findId);
				dataNode.setAttribute('orgid', objInfo.field);
			}
			if(dataNode.tagName.toUpperCase() != 'TD') dataNode = Webcrea.FindParentNode(dataNode, 'name', 'TD');
			var dataNodeClone = dataNode.cloneNode(true);
			var objData = {};
			objData.dataNode = dataNodeClone;
			objData.field = objInfo.field;
			arrCreateData[arrCreateData.length] = objData;
		}
		crossTabObj.objDivPos.style.overflowX = 'auto';
		var trHHeaderClone = crossTabObj.objHTable.rows[0].cloneNode();
		var trHeaderClone = crossTabObj.objTable.rows[0].cloneNode();
		Webcrea.RemoveChildNode(crossTabObj.objHTable);
		Webcrea.RemoveChildNode(crossTabObj.objTable);

		var colHGroup = document.createElement('COLGROUP');
		crossTabObj.objHTable.appendChild(colHGroup);
		var colGroup = document.createElement('COLGROUP');
		crossTabObj.objTable.appendChild(colGroup);

		var tHHeader = document.createElement('THEAD');
		crossTabObj.objHTable.appendChild(tHHeader);
		var tHeader = document.createElement('THEAD');
		crossTabObj.objTable.appendChild(tHeader);
		tHHeader.appendChild(trHHeaderClone);
		tHeader.appendChild(trHeaderClone);
		crossTabObj.objHTable.style.width = nInitTableWidth + 'px';
		crossTabObj.objTable.style.width = nInitTableWidth + 'px';
		var CreateCol = function(currObj, objInfo, nColNo)
		{
			var col = document.createElement('COL');
			col.style.width = objInfo.width + 'px';
			col.setAttribute('colno', nColNo);
			col.setAttribute('orgwidth', objInfo.width);
			col.setAttribute('designwidth', objInfo.width);
			col.setAttribute('display', 1);
			colGroup.appendChild(col);
			var colH = col.cloneNode(true);
			colHGroup.appendChild(colH);

			var colSpan = 0;
			var rowSpan = 0;
			if(objInfo.type == 'row' && currObj.arrStatColInfo.length>0)
			{
				if(currObj.arrStatDataInfo.length>1) rowSpan=2;
				else rowSpan = 1;
				if(currObj.arrStatColInfo.length>1)
				{
					rowSpan += currObj.arrStatColInfo.length;
					rowSpan--;
				}
			}
			else if(objInfo.type == 'col' && currObj.arrStatColInfo.length>0 && currObj.arrStatDataInfo.length>1)
			{
				colSpan = currObj.arrStatDataInfo.length;
			}
			if(currObj.arrStatDataInfo.length>1) crossTabObj.nHeader=2;
			else crossTabObj.nHeader = 1;
			if(currObj.arrStatColInfo.length>1)
			{
				crossTabObj.nHeader += currObj.arrStatColInfo.length;
				crossTabObj.nHeader--;
			}
			var trHeaderNode = objInfo.headerNode.cloneNode(true);
			trHeaderNode.setAttribute('colno', nColNo);
			if(rowSpan>1) trHeaderNode.setAttribute('rowspan', rowSpan);
			if(colSpan>1) trHeaderNode.setAttribute('colspan', colSpan);
			trHHeaderClone.appendChild(trHeaderNode);
			trHeaderNode = objInfo.headerNode.cloneNode(true);
			trHeaderNode.setAttribute('colno', nColNo);
			if(rowSpan>1) trHeaderNode.setAttribute('rowspan', rowSpan);
			if(colSpan>1) trHeaderNode.setAttribute('colspan', colSpan);
			trHeaderClone.appendChild(trHeaderNode);
		};
		for(var i=0; i<arrCreateHeader.length; i++)
		{
			var objInfo = arrCreateHeader[i];
			var bTrAdd = false;
			if(objInfo.type == 'col' && objInfo.seq>0) bTrAdd = true;
			if(bTrAdd)
			{
				var trAddHHeaderClone = trHHeaderClone.cloneNode();
				tHHeader.appendChild(trAddHHeaderClone);
				var trAddHeaderClone = trHeaderClone.cloneNode();
				tHeader.appendChild(trAddHeaderClone);

				var nColNo = i-1;
				if(nColNo<0) nColNo = 0;
				var colSpan = this.arrStatDataInfo.length;
				var trHeaderNode = objInfo.headerNode.cloneNode(true);
				trHeaderNode.setAttribute('colno', nColNo);
				if(colSpan>1) trHeaderNode.setAttribute('colspan', colSpan);
				trAddHHeaderClone.appendChild(trHeaderNode);
				trHeaderNode = objInfo.headerNode.cloneNode(true);
				trHeaderNode.setAttribute('colno', nColNo);
				if(colSpan>1) trHeaderNode.setAttribute('colspan', colSpan);
				trAddHeaderClone.appendChild(trHeaderNode);
			}
			else CreateCol(this, objInfo, i);
		}
		if(this.arrStatDataInfo.length>1 && this.arrStatColInfo.length>0)
		{
			var trAddHHeaderClone = trHHeaderClone.cloneNode();
			tHHeader.appendChild(trAddHHeaderClone);
			var trAddHeaderClone = trHeaderClone.cloneNode();
			tHeader.appendChild(trAddHeaderClone);

			var objInfo = arrCreateHeader[0];
			objInfo.type = 'datacol';
			for(var i=0; i<this.arrStatDataInfo.length; i++)
			{
				var dataInfo = this.arrStatDataInfo[i];
				objInfo.title = dataInfo.title;
				objInfo.headerNode = objInfo.headerNode.cloneNode(true);
				objInfo.headerNode.textContent = objInfo.title;
				var sId = crossTabObj.divPos + Webcrea.divId + dataInfo.field;
				objInfo.headerNode.setAttribute('id', sId);
				objInfo.headerNode.setAttribute('orgid', dataInfo.field);
				objInfo.headerNode.setAttribute('relid', dataInfo.field);
				var nColNo = i+this.arrStatRowInfo.length;
				if(i>0)
				{
					var col = document.createElement('COL');
					col.style.width = objInfo.width + 'px';
					col.setAttribute('colno', nColNo);
					col.setAttribute('orgwidth', objInfo.width);
					col.setAttribute('designwidth', objInfo.width);
					col.setAttribute('display', 1);
					colGroup.appendChild(col);
					var colH = col.cloneNode(true);
					colHGroup.appendChild(colH);
				}
				var trHeaderNode = objInfo.headerNode.cloneNode(true);
				trHeaderNode.setAttribute('colno', nColNo);
				trAddHHeaderClone.appendChild(trHeaderNode);
				trHeaderNode = objInfo.headerNode.cloneNode(true);
				trHeaderNode.setAttribute('colno', nColNo);
				trAddHeaderClone.appendChild(trHeaderNode);
			}
		}
		if(this.arrStatColInfo.length==0 && arrCreateHeader.length>0)
		{
			var objInfo = arrCreateHeader[0];
			objInfo.type = 'col';
			for(var i=0; i<this.arrStatDataInfo.length; i++)
			{
				var dataInfo = this.arrStatDataInfo[i];
				objInfo.title = dataInfo.title;
				objInfo.headerNode.textContent = objInfo.title;
				CreateCol(this, objInfo, arrCreateHeader.length+i);
			}
		}
		crossTabObj.nHeaderHeight = nHeaderHeight*crossTabObj.nHeader;
		for(var i=0; i<crossTabObj.arrObjAddInfo.length; i++)
		{
			var objAddInfo = crossTabObj.arrObjAddInfo[i];
			var orgTableRow = objAddInfo.orgTableRow;
			Webcrea.RemoveChildNode(orgTableRow);
			for(var j=0; j<arrCreateData.length; j++)
			{
				var objInfo = arrCreateData[j];
				var dataNode = objInfo.dataNode.cloneNode(true);
				dataNode.setAttribute('colno', j);
				if(!Webcrea.IsEditTd(dataNode))
				{
					var findId = crossTabObj.divPos + Webcrea.divId + objInfo.field;
					var realNode = Webcrea.FindNode(dataNode, 'id', findId);
					if(realNode) realNode.setAttribute('colno', j);
				}
				orgTableRow.appendChild(dataNode);
			}
			objAddInfo.strAddRow = Webcrea.MakeInnerHtml(orgTableRow);
		}
	},
	SetIndent : function()
	{
		var nIndent = arguments[0];
		var sItems = arguments[1];
		var arrItems = sItems.split(',');
		for(var i=0; i<arrItems.length; i++)
		{
			var sItem = arrItems[i].trim();
			this._Set_Indent(nIndent, sItem);
		}
	},
	SetInitRecord : function()
	{
		var bClear = arguments[0];
		Webcrea.SetInitRecord(this, bClear);
	},
	SetPageScroll : function(nMaxPage, bScript, sRelObj)
	{
		this.pageScrollOpt = {};
		this.pageScrollOpt.sRelObj = sRelObj;
		this.pageScrollOpt.nMaxPage = nMaxPage;
		this.pageScrollOpt.bScript = bScript;
	},
	SetLayout : function(bHorzExpand, bVertExpand, bRight, bBottom)
	{
		if(bHorzExpand == undefined) bHorzExpand = false;
		if(bVertExpand == undefined) bVertExpand = false;
		if(bRight == undefined) bRight = false;
		if(bBottom == undefined) bBottom = false;
		this.layoutOpt = {
			bHorz : bHorzExpand,
			bVert : bVertExpand,
			bRight : bRight,
			bBottom : bBottom
		};
	},
	SetPaletteSysInfo : function(bEdit, bDisable, bDisText, bReadOnly, bReadText, bFocus, bInsert, bModify, bDelete, bSum)
	{
		if(!WebcreaInfo.color) return;
		if(bEdit)
		{
			var color = WebcreaInfo.color.FOCUS;
			if(!Webcrea.IsEmpty(color)) this.colorEdit = color;
		}
		if(bDisable)
		{
			var color = WebcreaInfo.color.DISABLE;
			if(!Webcrea.IsEmpty(color)) this.colorDisable = color;
		}
		if(bDisText)
		{
			var color = WebcreaInfo.color.DISABLETEXT;
			if(!Webcrea.IsEmpty(color)) this.colorDisableText = color;
		}
		if(bReadOnly)
		{
			var color = WebcreaInfo.color.READONLY;
			if(!Webcrea.IsEmpty(color)) this.colorReadOnly = color;
		}
		if(bReadText)
		{
			var color = WebcreaInfo.color.READONLYETEXT;
			if(!Webcrea.IsEmpty(color)) this.colorReadOnlyText = color;
		}
		if(bFocus)
		{
			var color = WebcreaInfo.color.SELECT;
			if(Webcrea.IsEmpty(color)) color = Webcrea.GetPaletteColor(this, 5);
			if(!Webcrea.IsEmpty(color)) this.colorFocus = color;
		}
		if(bInsert)
		{
			var color = WebcreaInfo.color.INSERT;
			if(!Webcrea.IsEmpty(color)) this.colorInsert = color;
		}
		if(bModify)
		{
			var color = WebcreaInfo.color.MODIFY;
			if(!Webcrea.IsEmpty(color)) this.colorModify = color;
		}
		if(bDelete)
		{
			var color = WebcreaInfo.color.DELETE;
			if(!Webcrea.IsEmpty(color)) this.colorDelete = color;
		}
		if(bSum)
		{
			var color = WebcreaInfo.color.SUM;
			if(!Webcrea.IsEmpty(color)) this.colorSum = color;
		}
	},
	SetPalette : function(bForm, bLayout, sID, crFillIndex, crHatchIndex, bTrans, bEven, grade, crLLineIndex, crRLineIndex, crTLineIndex, crBLineIndex, crFontIndex)
	{
		if(bTrans) return;
		var currObj = this;
		var SetColor = function(css)
		{
			if(crFillIndex>=0)
			{
				if(grade>0)
				{
					var sBackground = css.style.background;
					var arrToken = Webcrea.MakeToken(sBackground, '', true);
					var arrBackground = [];
					var sAdd = '';
					for(var i=0; i<arrToken.length; i++)
					{
						var s = arrToken[i];
						var sNext = '';
						if(i+1<arrToken.length) sNext = arrToken[i+1];
						if(s.iEquals('rgb') && sNext == '(')
						{
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
							for(var j=i; j<arrToken.length; j++)
							{
								var s1 = arrToken[j];
								sAdd += s1;
								if(s1 == ')') break;
							}
							i=j;
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
						}
						else sAdd += s;
					}
					var bgFill = Webcrea.GetPaletteColor(currObj, crFillIndex);
					arrBackground[1] = bgFill;
					if(crHatchIndex>=0) 
					{
						var bgHatch = Webcrea.GetPaletteColor(currObj, crFillIndex);
						arrBackground[2] = bgHatch;
					}
					if(grade>3) arrBackground[3] = bgFill;
					var bgColor = '';
					for(var i=0; i<arrBackground.length; i++) bgColor += arrBackground[i];
					css.style.background = bgColor;
				}
				else
				{
					var bgColor = Webcrea.GetPaletteColor(currObj, crFillIndex);
					css.style.background = bgColor;
				}
			}
			if(crLLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crLLineIndex);
				css.style.borderLeftColor = lineColor;
			}
			if(crRLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crRLineIndex);
				css.style.borderRightColor = lineColor;
			}
			if(crTLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crTLineIndex);
				css.style.borderTopColor = lineColor;
			}
			if(crBLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crBLineIndex);
				css.style.borderBottomColor = lineColor;
			}
			if(crFontIndex>=0)
			{
				var fontColor = Webcrea.GetPaletteColor(currObj, crFontIndex);
				css.style.color = fontColor;
			}
		};
		if(bForm)
		{
			var objTarget;
			if(this.IsTab()) objTarget = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'B');
			else objTarget = this.objDivPos;
			var classIds = objTarget.getAttribute('class');
			if(!classIds && this.objTable) classIds = this.objTable.getAttribute('class');
			if(!classIds) return;
			var arrClassId = classIds.split(' ');
			for(var i=0; i<arrClassId.length; i++)
			{
				var classId = arrClassId[i];
				if(classId.indexOf('_my_')>=0) continue;
				var css = Webcrea.GetCSS('.'+classId);
				if(css) SetColor(css);
			}
			return;
		}
		var cellInfo;
		if(bLayout)
		{
			var index = this.arrLayoutCellInfo.searchId(sID);
			cellInfo = this.arrLayoutCellInfo[index];
		}
		else cellInfo = this.GetCellInfo(sID);
		if(!cellInfo) return;
		var classIds = cellInfo.classId;
		if(!Webcrea.IsEmpty(classIds))
		{
			var arrClassId = classIds.split(' ');
			for(var i=0; i<arrClassId.length; i++)
			{
				var classId = arrClassId[i];
				if(classId.indexOf('_my_')>=0) continue;
				var css = Webcrea.GetCSS('.'+classId);
				if(css) SetColor(css);
			}
		}
	},
	SetColorInfo : function(crEdit, crDisable, crDisableText, crReadOnly, crReadOnlyText, crFocus, crInsert, crModify, crDelete, crSum, crBackground)
	{
		this.colorDisable = crDisable;
		this.colorDisableText = crDisableText;
		this.colorReadOnly = crReadOnly;
		this.colorReadOnlyText = crReadOnlyText;
		this.colorFocus = crFocus;
		this.colorInsert = crInsert;
		this.colorModify = crModify;
		this.colorDelete = crDelete;
		this.colorSum = crSum;
		this.colorEdit = crEdit;
		this.colorBackground = crBackground;
	},
	SetStatInfo : function(nMode, sField, sTitle, nSort, sGroup, sFilter, nSeq)
	{
		var rootDiv;
		if(nMode==0) rootDiv = Webcrea.FindNode(this.objDivPos, 'role', 'statrowarea');
		else if(nMode==1) rootDiv = Webcrea.FindNode(this.objDivPos, 'role', 'statcolarea');
		else if(nMode==2) rootDiv = Webcrea.FindNode(this.objDivPos, 'role', 'statfldarea');
		var currNode = Webcrea.FindNode(rootDiv, 'crfield', sField);

		var objInfo = {};
		objInfo.field = sField;
		objInfo.title = sTitle;
		objInfo.sort = nSort;
		objInfo.group = sGroup;
		objInfo.filter = sFilter;
		objInfo.rootDiv = rootDiv;
		objInfo.node = currNode;
		if(nMode==0)
		{
			if(Webcrea.IsNull(nSeq)) this.arrStatRowInfo[this.arrStatRowInfo.length] = objInfo;
			else this.arrStatRowInfo.splice(nSeq, 0, objInfo);
		}
		else if(nMode==1)
		{
			if(Webcrea.IsNull(nSeq)) this.arrStatColInfo[this.arrStatColInfo.length] = objInfo;
			else this.arrStatColInfo.splice(nSeq, 0, objInfo);
		}
		else if(nMode==2)
		{
			if(Webcrea.IsNull(nSeq)) this.arrStatFldInfo[this.arrStatFldInfo.length] = objInfo;
			else this.arrStatFldInfo.splice(nSeq, 0, objInfo);
		}
	},
	SetStatDataInfo : function(sField, sTitle, nCalOpt, nHidden, sFilter)
	{
		var objInfo = {};
		objInfo.field = sField;
		objInfo.title = sTitle;
		objInfo.calOpt = nCalOpt;
		objInfo.hidden = nHidden;
		objInfo.filter = sFilter;
		this.arrStatDataInfo[this.arrStatDataInfo.length] = objInfo;
	},
	SetMyGrid : function()
	{
		this.SetMyHScroll();
		this.SetMyVScroll();
	},
	SetMyHScroll : function()
	{
		if(this.bMyHScroll)
		{
			var scDivId =this.divPos + 'HSG';
			var objHSGDivPos = Webcrea.FindNode(this.objGDivPos, 'id', scDivId);
			if(objHSGDivPos) this.objGDivPos.removeChild(objHSGDivPos);
			this.initHScrlWidth = this.initDivWidth;
			let nUPSize = this.nBaseScrlSize;
			this.initHScrlTHLeft = nUPSize + this.nScrlThumbMargin;
			var nMargin = 1;
			let sRole = 'scrollH';
			var nDivHeight = Webcrea.GetHeight(this.objDivPos, true) + this.divScrollWidth;
			var nTop = nDivHeight - this.nScrlWidth;

			var divCSS = Webcrea.GetCSS('#' + this.divPage + ' #' + this.divPos);
			if(!divCSS) return;
			var zIndex = divCSS.style.zIndex;
			var scDiv = document.createElement('div');
			scDiv.id = scDivId;
			scDiv.setAttribute('role', sRole);
			scDiv.setAttribute('class', '_my_vscrollbar');
			scDiv.setAttribute('style', 'position:absolute;width:' + this.initHScrlWidth + 'px;height:' + this.nScrlWidth + 'px;top:' + nTop + 'px;z-index:' + zIndex + ';');

			var sctrDiv = document.createElement('div');
			sctrDiv.id = this.divPos + 'HSTR';
			sctrDiv.setAttribute('role', sRole);
			sctrDiv.setAttribute('class', '_my_scroll_track');
			sctrDiv.setAttribute('pid', this.divPos);
			sctrDiv.setAttribute('style', 'position:absolute;left:0px;top:0px;width:100%;height:100%;');
			scDiv.appendChild(sctrDiv);

			var scthDiv = document.createElement('div');
			scthDiv.id = this.divPos + 'HSTH';
			scthDiv.setAttribute('role', sRole);
			scthDiv.setAttribute('class', '_my_scroll_thumb');
			scthDiv.setAttribute('pid', this.divPos);
			scthDiv.setAttribute('style', 'position:absolute;display:none;top:' + nMargin + 'px;left:' + this.initHScrlTHLeft + 'px;height:' + this.nScrlThumbWidth + 'px;width:30px;');
			scDiv.appendChild(scthDiv);

			var scupDiv = document.createElement('div');
			scupDiv.id = this.divPos + 'HSLF';
			scupDiv.setAttribute('role', sRole);
			scupDiv.setAttribute('class', '_my_scroll_left');
			scupDiv.setAttribute('pid', this.divPos);
			scupDiv.setAttribute('style', 'position:absolute;left:0px;top:0px;width:' + nUPSize + 'px;height:' + nUPSize + 'px;');
			var scupaDiv = document.createElement('div');
			scupaDiv.id = this.divPos + 'HSLFA';
			scupaDiv.setAttribute('role', sRole);
			scupaDiv.setAttribute('class', '_my_scroll_left_arrow');
			scupaDiv.setAttribute('pid', this.divPos);
			scupaDiv.setAttribute('style', 'position:absolute;left:2px;top:4px;');
			scupDiv.appendChild(scupaDiv);
			scDiv.appendChild(scupDiv);

			var scdwDiv = document.createElement('div');
			scdwDiv.id = this.divPos + 'HSRG';
			scdwDiv.setAttribute('role', sRole);
			scdwDiv.setAttribute('class', '_my_scroll_right');
			scdwDiv.setAttribute('pid', this.divPos);
			scdwDiv.setAttribute('style', 'position:absolute;top:0px;left:' + (this.initHScrlWidth-nUPSize) + 'px;width:' + nUPSize + 'px;height:' + nUPSize + 'px;');
			var scdwaDiv = document.createElement('div');
			scdwaDiv.id = this.divPos + 'HSRGA';
			scdwaDiv.setAttribute('role', sRole);
			scdwaDiv.setAttribute('class', '_my_scroll_right_arrow');
			scdwaDiv.setAttribute('pid', this.divPos);
			scdwaDiv.setAttribute('style', 'position:absolute;left:6px;top:4px;');
			scdwDiv.appendChild(scdwaDiv);
			scDiv.appendChild(scdwDiv);
			this.objGDivPos.appendChild(scDiv);

			this.objHSGDivPos = scDiv;
			this.objHSLFDivPos = scupDiv;
			this.objHSLFADivPos = scupaDiv;
			this.objHSRGDivPos = scdwDiv;
			this.objHSRGADivPos = scdwaDiv;
			this.objHSTRDivPos = sctrDiv;
			this.objHSTHDivPos = scthDiv;
			this.objHSTHDivPos.style.display = 'block';

			var divHCSS = Webcrea.GetCSS('#' + this.divPage + ' #' + this.divPos + 'H');
			if(divHCSS)
			{
				var zIndex = divHCSS.style.zIndex;
				if(zIndex>0) this.objHSGDivPos.style.zIndex = zIndex;
			}
			if(Webcrea.IsMobileScreen() && this.bMyGrid)
			{
				if (Webcrea.IsIE69()) this.objHSTHDivPos.attachEvent('ontouchstart', function(){Webcrea.OnDRAG(window.event);});
				else this.objHSTHDivPos.addEventListener('touchstart', function(){Webcrea.OnDRAG(window.event);}, false);

				if (Webcrea.IsIE69()) this.objHSTRDivPos.attachEvent('ontouchstart', function(){Webcrea.OnSCROLL(window.event, 7);});
				else this.objHSTRDivPos.addEventListener('touchstart', function(){Webcrea.OnSCROLL(window.event, 7);}, false);

				if (Webcrea.IsIE69()) this.objHSLFDivPos.attachEvent('ontouchstart', function(){Webcrea.OnSCROLL(window.event, 6);});
				else this.objHSLFDivPos.addEventListener('touchstart', function(){Webcrea.OnSCROLL(window.event, 6);}, false);
				if (Webcrea.IsIE69()) this.objHSRGDivPos.attachEvent('ontouchstart', function(){Webcrea.OnSCROLL(window.event, 5);});
				else this.objHSRGDivPos.addEventListener('touchstart', function(){Webcrea.OnSCROLL(window.event, 5);}, false);
			}
			if(!Webcrea.IsMobile() && this.bMyGrid)
			{
				if (Webcrea.IsIE69()) this.objHSTHDivPos.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event);});
				else this.objHSTHDivPos.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event);}, false);

				if (Webcrea.IsIE69()) this.objHSTRDivPos.attachEvent('onmousedown', function(){Webcrea.OnSCROLL(window.event, 7);});
				else this.objHSTRDivPos.addEventListener('mousedown', function(){Webcrea.OnSCROLL(window.event, 7);}, false);

				if (Webcrea.IsIE69()) this.objHSLFDivPos.attachEvent('onmousedown', function(){Webcrea.OnSCROLL(window.event, 6);});
				else this.objHSLFDivPos.addEventListener('mousedown', function(){Webcrea.OnSCROLL(window.event, 6);}, false);
				if (Webcrea.IsIE69()) this.objHSRGDivPos.attachEvent('onmousedown', function(){Webcrea.OnSCROLL(window.event, 5);});
				else this.objHSRGDivPos.addEventListener('mousedown', function(){Webcrea.OnSCROLL(window.event, 5);}, false);
			}
		}
		else if(this.objHSTHDivPos) this.objHSTHDivPos.style.display = 'hidden';
	},
	SetMyVScroll : function()
	{
		var scDivId =this.divPos + 'VSG';
		var objVSGDivPos = Webcrea.FindNode(this.objGDivPos, 'id', scDivId);
		if(objVSGDivPos) this.objGDivPos.removeChild(objVSGDivPos);
		this.initVScrlHeight = this.initHeight-this.nHScrlHeight;
		let nUPSize = this.nBaseScrlSize;
		this.initVScrlTHTop = nUPSize + this.nScrlThumbMargin;
		var nMargin = 1;
		let sRole = 'scrollV';
		var nDivWidth = Webcrea.GetWidth(this.objDivPos, true) + this.divScrollWidth;
		var nLeft = nDivWidth;
		var divCSS = Webcrea.GetCSS('#' + this.divPage + ' #' + this.divPos);
		if(!divCSS) return;
		var zIndex = divCSS.style.zIndex;
		var scDiv = document.createElement('div');
		scDiv.id = scDivId;
		scDiv.setAttribute('role', sRole);
		scDiv.setAttribute('class', '_my_vscrollbar');
		scDiv.setAttribute('style', 'position:absolute;width:' + this.nScrlWidth + 'px;height:' + this.initVScrlHeight + 'px;left:' + nLeft + 'px;z-index:' + zIndex + ';');

		var sctrDiv = document.createElement('div');
		sctrDiv.id = this.divPos + 'VSTR';
		sctrDiv.setAttribute('role', sRole);
		sctrDiv.setAttribute('class', '_my_scroll_track');
		sctrDiv.setAttribute('pid', this.divPos);
		sctrDiv.setAttribute('style', 'position:absolute;left:0px;top:0px;width:' + this.nScrlWidth + 'px;height:100%;');
		scDiv.appendChild(sctrDiv);

		var scthDiv = document.createElement('div');
		scthDiv.id = this.divPos + 'VSTH';
		scthDiv.setAttribute('role', sRole);
		scthDiv.setAttribute('class', '_my_scroll_thumb');
		scthDiv.setAttribute('pid', this.divPos);
		scthDiv.setAttribute('style', 'position:absolute;display:none;left:' + nMargin + 'px;top:' + this.initVScrlTHTop + 'px;width:' + this.nScrlThumbWidth + 'px;height:30px;');
		scDiv.appendChild(scthDiv);

		var scupDiv = document.createElement('div');
		scupDiv.id = this.divPos + 'VSUP';
		scupDiv.setAttribute('role', sRole);
		scupDiv.setAttribute('class', '_my_scroll_up');
		scupDiv.setAttribute('pid', this.divPos);
		scupDiv.setAttribute('style', 'position:absolute;left:0px;top:0px;width:' + nUPSize + 'px;height:' + nUPSize + 'px;');
		var scupaDiv = document.createElement('div');
		scupaDiv.id = this.divPos + 'VSUPA';
		scupaDiv.setAttribute('role', sRole);
		scupaDiv.setAttribute('class', '_my_scroll_up_arrow');
		scupaDiv.setAttribute('pid', this.divPos);
		scupaDiv.setAttribute('style', 'position:absolute;top:2px;left:4px;');
		scupDiv.appendChild(scupaDiv);
		scDiv.appendChild(scupDiv);

		var scdwDiv = document.createElement('div');
		scdwDiv.id = this.divPos + 'VSDW';
		scdwDiv.setAttribute('role', sRole);
		scdwDiv.setAttribute('class', '_my_scroll_down');
		scdwDiv.setAttribute('pid', this.divPos);
		scdwDiv.setAttribute('style', 'position:absolute;left:0px;top:' + (this.initVScrlHeight-nUPSize) + 'px;width:' + nUPSize + 'px;height:' + nUPSize + 'px;');
		var scdwaDiv = document.createElement('div');
		scdwaDiv.id = this.divPos + 'VSDWA';
		scdwaDiv.setAttribute('role', sRole);
		scdwaDiv.setAttribute('class', '_my_scroll_down_arrow');
		scdwaDiv.setAttribute('pid', this.divPos);
		scdwaDiv.setAttribute('style', 'position:absolute;top:6px;left:4px;');
		scdwDiv.appendChild(scdwaDiv);
		scDiv.appendChild(scdwDiv);
		this.objGDivPos.appendChild(scDiv);

		this.objVSGDivPos = scDiv;
		this.objVSUPDivPos = scupDiv;
		this.objVSUPADivPos = scupaDiv;
		this.objVSDWDivPos = scdwDiv;
		this.objVSDWADivPos = scdwaDiv;
		this.objVSTRDivPos = sctrDiv;
		this.objVSTHDivPos = scthDiv;

		var divHCSS = Webcrea.GetCSS('#' + this.divPage + ' #' + this.divPos + 'H');
		if(divHCSS)
		{
			var zIndex = divHCSS.style.zIndex;
			if(zIndex>0) this.objVSGDivPos.style.zIndex = zIndex;
		}

		this.objDivPos.addEventListener('DOMMouseScroll', function(){Webcrea.OnWHEEL(window.event);}, false);
		this.objDivPos.onmousewheel = Webcrea.OnWHEEL;
		if(Webcrea.IsMobileScreen() && this.bMyGrid)
		{
			if (Webcrea.IsIE69()) this.objVSTHDivPos.attachEvent('ontouchstart', function(){Webcrea.OnDRAG(window.event);});
			else this.objVSTHDivPos.addEventListener('touchstart', function(){Webcrea.OnDRAG(window.event);}, false);

			if (Webcrea.IsIE69()) this.objVSTRDivPos.attachEvent('ontouchstart', function(){Webcrea.OnSCROLL(window.event, 3);});
			else this.objVSTRDivPos.addEventListener('touchstart', function(){Webcrea.OnSCROLL(window.event, 3);}, false);

			if (Webcrea.IsIE69()) this.objVSUPDivPos.attachEvent('ontouchstart', function(){Webcrea.OnSCROLL(window.event, 2);});
			else this.objVSUPDivPos.addEventListener('touchstart', function(){Webcrea.OnSCROLL(window.event, 2);}, false);
			if (Webcrea.IsIE69()) this.objVSDWDivPos.attachEvent('ontouchstart', function(){Webcrea.OnSCROLL(window.event, 1);});
			else this.objVSDWDivPos.addEventListener('touchstart', function(){Webcrea.OnSCROLL(window.event, 1);}, false);

			var arrTd = [];
			Webcrea.FindNodeAll(this.objHDivPos, 'name', 'TD', arrTd);
			for(var i=0; i<arrTd.length; i++)
			{
				var tdNode = arrTd[i];
				if (Webcrea.IsIE69()) tdNode.attachEvent('ontouchstart', function(){Webcrea.OnDRAG(window.event);});
				else tdNode.addEventListener('touchstart', function(){Webcrea.OnDRAG(window.event);}, false);
			}
			if (Webcrea.IsIE69()) this.objDivPos.attachEvent('ontouchstart', function(){Webcrea.OnDRAG(window.event, 'swipe');});
			else this.objDivPos.addEventListener('touchstart', function(){Webcrea.OnDRAG(window.event, 'swipe');}, false);
		}
		if(!Webcrea.IsMobile() && this.bMyGrid)
		{
			if (Webcrea.IsIE69()) this.objVSTHDivPos.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event);});
			else this.objVSTHDivPos.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event);}, false);

			if (Webcrea.IsIE69()) this.objVSTRDivPos.attachEvent('onmousedown', function(){Webcrea.OnSCROLL(window.event, 3);});
			else this.objVSTRDivPos.addEventListener('mousedown', function(){Webcrea.OnSCROLL(window.event, 3);}, false);

			if (Webcrea.IsIE69()) this.objVSUPDivPos.attachEvent('onmousedown', function(){Webcrea.OnSCROLL(window.event, 2);});
			else this.objVSUPDivPos.addEventListener('mousedown', function(){Webcrea.OnSCROLL(window.event, 2);}, false);
			if (Webcrea.IsIE69()) this.objVSDWDivPos.attachEvent('onmousedown', function(){Webcrea.OnSCROLL(window.event, 1);});
			else this.objVSDWDivPos.addEventListener('mousedown', function(){Webcrea.OnSCROLL(window.event, 1);}, false);
		}
	},
	SetAddRowInfo : function(arrTableRow) {
		this.arrObjAddInfo = [];
		for(var i=0; i<arrTableRow.length; i++)
		{
			var objAddInfo = {};
			var orgTableRow = arrTableRow[i];
			objAddInfo.orgTableRow = orgTableRow;
			objAddInfo.strAddRow = Webcrea.MakeInnerHtml(orgTableRow);
			if(Webcrea.Browser.ie9)
			{
				var arrAddCol = [];
				var arrAddColAttr = [];
				if(orgTableRow)
				{
					var childNodes = orgTableRow.childNodes;
					for(var i=0; i < childNodes.length; i++)
					{
						arrAddColAttr[i] = [];
						var childNode = childNodes[i];
						if(childNode.nodeName == 'TD')
						{
							for(var j=0; j<childNode.attributes.length; j++)
							{
								var attr = childNode.attributes[j];
								var arr = [];
								arr[0] = attr.nodeName;
								arr[1] = attr.value;
								arrAddColAttr[i][arrAddColAttr[i].length] = arr;
							}
							var str = Webcrea.MakeInnerHtml(childNode);
							arrAddCol[arrAddCol.length] = str;
						}
					}
				}
				objAddInfo.arrAddCol = arrAddCol;
				objAddInfo.arrAddColAttr = arrAddColAttr;
			}
			else if(this.bMyGridCol)
			{
				var arrAddCol = [];
				var arrAddColAttr = [];
				if(orgTableRow)
				{
					var childNodes = null;
					var bIE = Webcrea.IsIE();
					if(bIE) childNodes = orgTableRow.childNodes;
					else childNodes = orgTableRow.children;
					for(let i=0; i < childNodes.length; i++)
					{
						if(bIE && childNodes[i].nodeName != 'TD') continue;
						arrAddCol[arrAddCol.length] = childNodes[i];
					}
				}
				objAddInfo.arrAddCol = arrAddCol;
			}
			this.arrObjAddInfo[this.arrObjAddInfo.length] = objAddInfo;
		}
	},
	SetCellInfo : function(node, trId, trSeq) {
		var colChildNodes = node.childNodes;
		for(var i=0; i<colChildNodes.length; i++)
		{
			var colChild = colChildNodes[i];
			if (colChild.nodeName != '#text')
			{
				var layoutid = colChild.getAttribute('layoutid');
				var id = colChild.getAttribute('id');
				if (colChild.nodeName == 'TR')
				{
					trId = this.GetCellId(id);
					trSeq = colChild.getAttribute('seq');
					if(!trSeq) trSeq = 0;
				}
				var bID = false;
				if(id)
				{
					bID = true;
					var role = colChild.getAttribute('role');
					if(role && role == 'selectboxarrow') bID = false;
				}
				if(bID)
				{
					this.arrCellId[this.arrCellId.length] = id;
					id = id.toLowerCase();
					this.arrCellInfo[id] = new this.cellInfo(id);
					if(trId && trId.toLowerCase() == 'sum') this.arrCellInfo[id].bSumRow = true;
					else if(trId && trId.toLowerCase() == 'data') this.arrCellInfo[id].bDataRow = true;
					this.arrCellInfo[id].trSeq = trSeq;
					var classId = colChild.getAttribute('class');
					if(Webcrea.IsEmpty(classId))
					{
						var parentNode = colChild.parentNode;
						while(parentNode)
						{
							classId = parentNode.getAttribute('class');
							if(!Webcrea.IsEmpty(classId)) break;
							if(parentNode.tagName.iEquals('td')) break;
							parentNode = parentNode.parentNode;
						}
					}
					if(!Webcrea.IsEmpty(classId))
					{
						var arrClassId = classId.split(' ');
						for(var j=arrClassId.length-1; j>=0; j--)
						{
							var s = arrClassId[j];
							var css = Webcrea.GetCSS('.'+s);
							if(css)
							{
								var fontsize = css.style.fontSize;
								var fontFamily = css.style.fontFamily;
								if(!Webcrea.IsEmpty(fontsize) && !this.arrCellInfo[id].fontsize)
								{
									this.arrCellInfo[id].fontsize = fontsize;
									this.arrCellInfo[id].fontFamily = fontFamily;
								}
							}
						}
					}
					this.arrCellInfo[id].classId = classId;
					var role = colChild.getAttribute('role');
					var orgId = colChild.getAttribute('orgId');
					var relId = colChild.getAttribute('relId');
					var forId = colChild.getAttribute('for');
					var tagName = colChild.nodeName;
					this.arrCellInfo[id].colorText = colChild.style.color;
					var sReadOnly = colChild.getAttribute('readonly');
					if(!Webcrea.IsEmpty(sReadOnly)) bReadOnly = true;
					else bReadOnly = false;
					this.arrCellInfo[id].bReadOnly = bReadOnly;
					this.arrCellInfo[id].role = role;
					if(Webcrea.IsEditTd(colChild))
					{
						if(colChild.getAttribute('disabled') == 'disabled') this.arrCellInfo[id].bEnable = false;
						else this.arrCellInfo[id].bEnable = true;
					}
					else
					{
						let bComboBox = this.IsMySelectBox(colChild);
						if(bComboBox)
						{
							let maxComboList = colChild.getAttribute('maxcombolist');
							if(!Webcrea.IsEmpty(maxComboList)) this.arrCellInfo[id].maxComboList = maxComboList;
						}
						this.arrCellInfo[id].bEnable = !colChild.disabled;
						if(bReadOnly && this.IsMySelectBoxPublic(colChild))
						{
							bReadOnly = false;
							this.arrCellInfo[id].bReadOnly = bReadOnly;
						}
					}
					var bEditable = true;
					if(colChild.getAttribute('editable') == 'noedit') bEditable=false;
					this.arrCellInfo[id].bEditable = bEditable;
					if(colChild.getAttribute('menu') == 'menu') bMenuButton=true;
					var sGroup = colChild.getAttribute('group');
					if(sGroup) this.arrCellInfo[id].nGroup = 1;
					var sBWZ = colChild.getAttribute('bwz');
					if(!Webcrea.IsEmpty(sBWZ)) this.arrCellInfo[id].bBWZ = true;
					if(role == 'multiline')
					{
						var multilineDiv = colChild.parentElement.parentElement;
						this.arrCellInfo[id].bDisplay = Webcrea.GetWidth(multilineDiv, true)>0?true:false;
						var sTagDisplay = colChild.getAttribute('tagDisplay');
						if(!Webcrea.IsEmpty(sTagDisplay)) this.arrCellInfo[id].bTagDisplay = true;
						if(colChild.getAttribute('autoexpand') == 'height') this.bMultiLineAutoExpand=true;
					}
					else if(!Win.IsLayerFile()) this.arrCellInfo[id].bDisplay = Webcrea.GetWidth(colChild, true)>0?true:false;
					if(role == 'filter' && this.arrFilterObj.searchId(relId)<0)
					{
						var filterHeader = {};
						filterHeader.id = relId;
						this.arrFilterObj[this.arrFilterObj.length] = filterHeader;
					}
					var defaultValue = colChild.getAttribute('value');
					if(Webcrea.IsEditTd(colChild)) colChild.defaultValue = defaultValue;
					this.arrCellInfo[id].defaultValue = defaultValue;
					var runtime = colChild.getAttribute('runtime');
					if(runtime && runtime.toLowerCase() == 'runtime')
					{
						this.arrCellInfo[id].bRunTime = true;
						colChild.defaultValue = '';
						colChild.value = '';
					}
					var nInitMode = colChild.getAttribute('initmode');
					if(!Webcrea.IsEmpty(nInitMode))
					{
						this.arrCellInfo[id].nInitMode = Number(nInitMode);
					}
					if(colChild.getAttribute('listsearch')) this.arrCellInfo[id].bListSearch = true;
					if(colChild.getAttribute('spacetext')) this.arrCellInfo[id].bSpaceText = true;
					var code = colChild.getAttribute('codeobj');
					var nFileVersion = Webcrea.GetCurrFileVersion();
					if(nFileVersion<7020170912001) code = colChild.getAttribute('code');
					if(code)
					{
						if(code.toLowerCase() == 'code') this.arrCellInfo[id].bCode = true;
						else if(code.toLowerCase() == 'codebtn') this.arrCellInfo[id].bCodeBtn = true;
						else if(code.toLowerCase() == 'spin') this.arrCellInfo[id].bSpin = true;
					}
					if(orgId == '_CAPTION_' && (Win.IsRunDlg() || Win.IsMsgBox()))
					{
						if (Webcrea.IsIE69()) colChild.attachEvent('onmousedown', function(){Webcrea.OnMOVE(window.event, orgId);});
						else colChild.addEventListener('mousedown', function(){Webcrea.OnMOVE(window.event, orgId);}, false);
						if (Webcrea.IsIE69()) colChild.attachEvent('onmousemove', function(){Webcrea.OnMOVE(window.event, orgId);});
						else colChild.addEventListener('mousemove', function(){Webcrea.OnMOVE(window.event, orgId);}, false);
					}
					var type = colChild.getAttribute('type');
					var realType = colChild.getAttribute('realType');
					if(!realType) realType = type;
					if(type == 'radio')
					{
						var nameRadio = colChild.getAttribute('name');
						if(!Webcrea.IsEmpty(nameRadio))
						{
							var groupId = '';
							var ___arr = nameRadio.split('.');
							if(___arr.length>1)
							{
								groupId = ___arr[1];
								this.arrCellInfo[id].groupId = groupId;
							}
						}
					}
					if((realType == 'date' || realType == 'datetime' || realType == 'month') && Webcrea.IsMobile() && this.arrCellInfo[id].bCode)
					{
						var chgType = realType;
						if(realType == 'datetime') chgType = 'datetime-local';
						colChild.setAttribute('type', chgType);
						var sChgClass = colChild.getAttribute('class');
						if(Webcrea.IsEmpty(sChgClass)) sChgClass = '_my_calendar_code_m';
						else sChgClass = sChgClass + ' _my_calendar_code_m';
						colChild.setAttribute('class', sChgClass);
						if(this.IsGrid())
						{
							for(var j=0; j<this.arrObjAddInfo.length; j++)
							{
								var objAddInfo = this.arrObjAddInfo[j];
								var orgTableRow = objAddInfo.orgTableRow;
								var org = Webcrea.FindNode(orgTableRow, 'id', id);
								if(org)
								{
									var orgRealType = org.getAttribute('realType');
									if(orgRealType == 'date' || orgRealType == 'datetime' || orgRealType == 'month')
									{
										org.setAttribute('type', chgType);
										org.setAttribute('class', sChgClass);
									}
								}
							}
						}
					}
					var sBullet = colChild.getAttribute('bullet');
					if(!Webcrea.IsEmpty(sBullet))
					{
						if(sBullet.iEquals('both'))
						{
							this.arrCellInfo[id].lBullet = true;
							this.arrCellInfo[id].rBullet = true;
						}
						else if(sBullet.iEquals('left')) this.arrCellInfo[id].lBullet = true;
						else if(sBullet.iEquals('right')) this.arrCellInfo[id].rBullet = true;
					}
					var mask = colChild.getAttribute('mask');
					this.arrCellInfo[id].tagName = tagName;
					this.arrCellInfo[id].realType = realType;
					this.arrCellInfo[id].type = type;
					this.arrCellInfo[id].mask = mask;
					this.arrCellInfo[id].orgId = orgId;
					this.arrCellInfo[id].relId = relId;
					this.arrCellInfo[id].forId = forId;
					var min = colChild.getAttribute('min');
					var max = colChild.getAttribute('max');
					this.arrCellInfo[id].min = min;
					this.arrCellInfo[id].max = max;
					this.arrCellInfo[id].colno = colChild.getAttribute('colno');
					var initWidth = Webcrea.GetWidth(colChild, true);
					var colspan;
					if(tagName != 'TR')
					{
						var tdNode;
						if(tagName != 'TD') tdNode = Webcrea.FindParentNode(colChild, 'name', 'TD');
						if(tdNode)
						{
							colspan = tdNode.getAttribute('colspan');
							initWidth = Webcrea.GetWidth(tdNode, true);
						}
					}
					this.arrCellInfo[id].colspan = colspan;
					this.arrCellInfo[id].initWidth = initWidth;
					if(this.IsForm() && colChild.disabled)
					{
						if(tagName == 'INPUT' || tagName == 'TEXTAREA' || tagName == 'SELECT')
						{
							if(type != 'checkbox' && type != 'radio' && type != 'button')
							{
								colChild.disabled = false;
								colChild.readOnly = true;
							}
						}
					}
				}
				if(layoutid)
				{
					if(this.arrLayoutCellInfo.searchId(layoutid)>=0) continue;
					var layoutInfo = new this.cellInfo(layoutid);
					var sBullet = colChild.getAttribute('bullet');
					if(!Webcrea.IsEmpty(sBullet))
					{
						if(sBullet.iEquals('both'))
						{
							layoutInfo.lBullet = true;
							layoutInfo.rBullet = true;
						}
						else if(sBullet.iEquals('left')) layoutInfo.lBullet = true;
						else if(sBullet.iEquals('right')) layoutInfo.rBullet = true;
					}
					layoutInfo.cellType = 0;
					layoutInfo.tagName = colChild.nodeName;
					if(trId)
					{
						if(trId.toLowerCase() == 'data') layoutInfo.bDataRow = true;
						else if(trId.toLowerCase() == 'header')
						{
							if(this.IsList() && Webcrea.IsMobileScreen())
							{
								colChild.style.opacity = 0;
								colChild.style.borderColor = 'rgba(255, 255, 255, 0)';
							}
						}
					}
					var classId = colChild.getAttribute('class');
					layoutInfo.classId = classId;
					var colSubChild = colChild.firstChild;
					if(colSubChild && colSubChild.tagName == 'DIV')
					{
						var classSubId = colSubChild.getAttribute('class');
						if(classSubId) layoutInfo.classId = classSubId;
					}
					this.arrLayoutCellInfo[this.arrLayoutCellInfo.length] = layoutInfo;
				}
				this.SetCellInfo(colChild, trId, trSeq);
			}
		}
	},
	GetNextCellByTab : function(currNode, bPrev, bTabMove)
	{
		var firstNode;
		var lastNode;
		var findNode;
		var bDivFind = false;
		if(currNode == this.objDivPos) bDivFind = true;
		if(bDivFind && this.IsTab())
		{
			return findNode;
		}
		if(!this.objTable) return;
		var currTabIndex = currNode.tabIndex;
		if(currNode.tagName != 'TD') currNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
		for(var i=0; i<this.objTable.rows.length; i++)
		{
			if(this.IsGrid())
			{
				if(i<this.nHeader) continue;
				var nRow = i-this.nHeader;
				if(nRow > this.nRowsScrl) break;
			}
			var tr = this.objTable.rows[i];
			var trChildren = tr.children;
			for(var j=0; j<trChildren.length; j++)
			{
				var td = trChildren[j];
				if(td == currNode) continue;
				if(Webcrea.IsEditTd(td))
				{
					var tabIndex = td.tabIndex;
					if(Webcrea.IsIE() && tabIndex == 0) tabIndex = -1;
					if(tabIndex<0) continue;
					var orgId = td.getAttribute('orgid');
					var bHide = false;
					if(!Webcrea.IsEmpty(orgId)) bHide = this.IsHideColumn(orgId);
					var bReadOnly = Webcrea.IsReadOnly(td);
					if(bReadOnly && td.type == 'button') bReadOnly = false;
					var bEnable = Webcrea.IsEnable(td);
					if(bTabMove)
					{
						bReadOnly = false;
						bEnable = true;
					}
					if(!bReadOnly && bEnable && !bHide)
					{
						if(bPrev)
						{
							if(tabIndex>=0 && tabIndex<=currTabIndex)
							{
								if(!findNode || (findNode && findNode.tabIndex<tabIndex)) findNode = td;
							}
							if(!firstNode || (firstNode && firstNode.tabIndex<tabIndex)) firstNode = td;
						}
						else
						{
							if(tabIndex>=0 && tabIndex>=currTabIndex)
							{
								if(!findNode || (findNode && findNode.tabIndex>tabIndex)) findNode = td;
							}
							if(!firstNode || (firstNode && firstNode.tabIndex>tabIndex)) firstNode = td;
						}
						lastNode = td;
					}
				}
				else
				{
					var children = td.children;
					for(var k=0; k<children.length; k++)
					{
						var cell = children[k];
						if(!cell) continue;
						if(Webcrea.IsMultilineMainDiv(cell)) cell=cell.childElements()[0].childElements()[0];
						var tabIndex = cell.tabIndex;
						if(Webcrea.IsIE() && tabIndex == 0) tabIndex = -1;
						if(tabIndex<0) continue;
						var orgId = cell.getAttribute('orgid');
						var bHide = false;
						if(!Webcrea.IsEmpty(orgId)) bHide = this.IsHideColumn(orgId);
						var bReadOnly = Webcrea.IsReadOnly(cell);
						if(bReadOnly && cell.type == 'button') bReadOnly = false;
						var bEnable = Webcrea.IsEnable(cell);
						if(bTabMove)
						{
							bReadOnly = false;
							bEnable = true;
						}
						if(!bReadOnly && bEnable && !bHide)
						{
							if(bPrev)
							{
								if(tabIndex>=0 && tabIndex<=currTabIndex)
								{
									if(!findNode || (findNode && findNode.tabIndex<tabIndex)) findNode = cell;
								}
								if(!firstNode || (firstNode && firstNode.tabIndex<tabIndex)) firstNode = cell;
							}
							else
							{
								if(tabIndex>=0 && tabIndex>=currTabIndex)
								{
									if(!findNode || (findNode && findNode.tabIndex>tabIndex)) findNode = cell;
								}
								if(!firstNode || (firstNode && firstNode.tabIndex>tabIndex)) firstNode = cell;
							}
							lastNode = cell;
						}
					}
				}
			}
		}
		if(!findNode && (!bTabMove || bDivFind) && this.IsGrid())
		{
			if(bPrev) findNode = lastNode;
			else findNode = firstNode;
		}
		return findNode;
	},
	GetCellInfo : function() {
		var ___id = arguments[0];
		if(Webcrea.IsEmpty(___id)) return;
		var ___arr = ___id.split('.');
		if(___arr.length < 2 || ___arr[0] != this.divPos) ___id = this.divPos + '.' + ___id;
		if(!___id) return;
		___id=___id.toLowerCase();
		return this.arrCellInfo[___id];
	},
	SetChild : function()
	{
		var sChild = arguments[0];
		if(Webcrea.IsEmpty(sChild)) return;
		var arr = sChild.split(',');
		for(var i=0; i<arr.length; i++) this.arrChild[this.arrChild.length] = arr[i].trim();
	},
	GetChild : function()
	{
		var bString = arguments[0];
		if(bString) return this.arrChild.join();
		return this.arrChild;
	},
	SetTabArrawDisplay : function()
	{
		var divGroup = document.createElement('DIV');
		divGroup.setAttribute('class', '_my_arraw_group');
		divGroup.id = this.divPos + 'ArrawGroup';
		divGroup.setAttribute('style', 'display:none;');

		var divLeftR = document.createElement('DIV');
		divLeftR.setAttribute('class', '_my_arraw_leftR');
		divLeftR.id = this.divPos + 'ArrawLeftR';
		var divLeft = document.createElement('DIV');
		divLeft.setAttribute('class', '_my_arraw_left');
		divLeft.id = this.divPos + 'ArrawLeft';
		divLeft.setAttribute('role', 'tableft');
		divLeft.setAttribute('reldiv', this.divPos);
		divLeftR.appendChild(divLeft);
		divGroup.appendChild(divLeftR);

		var divRightR = document.createElement('DIV');
		divRightR.setAttribute('class', '_my_arraw_rightR');
		divRightR.id = this.divPos + 'ArrawRightR';
		var divRight = document.createElement('DIV');
		divRight.setAttribute('class', '_my_arraw_right');
		divRight.id = this.divPos + 'ArrawRight';
		divRight.setAttribute('role', 'tabright');
		divRight.setAttribute('reldiv', this.divPos);
		divRightR.appendChild(divRight);
		divGroup.appendChild(divRightR);

		if (Webcrea.IsIE69())
		{
			divLeft.attachEvent('onclick', function(){ Webcrea.OnCLICK(divLeft); });
			divRight.attachEvent('onclick', function(){ Webcrea.OnCLICK(divRight); });
		}
		else
		{
			divLeft.addEventListener('click', function(){ Webcrea.OnCLICK(divLeft); }, false);
			divRight.addEventListener('click', function(){ Webcrea.OnCLICK(divRight); }, false);
		}
		this.objGDivPos.appendChild(divGroup);
	},
	TabArrawClick : function()
	{
		var bRight = arguments[0];
		var firstObj=null;
		var lastObj=null;
		var nArrawLeftAdjust = 2;
		var nItemRootLeft = 0;
		var nTabArrawLeft = Webcrea.GetLeft(this.objTabArrawGroup);
		var objArrawLeft = Webcrea.FindNode(this.objGDivPos, 'id', this.divPos + 'ArrawLeft');
		var objArrawRight = Webcrea.FindNode(this.objGDivPos, 'id', this.divPos + 'ArrawRight');
		if(bRight && objArrawRight.getAttribute('disabled') == '1') return;
		else if(!bRight && objArrawLeft.getAttribute('disabled') == '1') return;
		for(var i=0; i<this.arrObject.length; i++)
		{
			var itemObj = this.arrObject[i];
			if(i==this.arrObject.length-1) lastObj = itemObj;
			var nWidth = Webcrea.GetWidth(itemObj.objItemLabel);
			if(itemObj.nCurrLeft>=0)
			{
				if(bRight)
				{
					if(i==this.arrObject.length-1)
					{
						var nLastLeft = itemObj.nCurrLeft + nWidth;
						if(nLastLeft + nArrawLeftAdjust < nTabArrawLeft) return;
					}
					if(!firstObj) firstObj = itemObj;
				}
				else
				{
					if(i==0 && itemObj.nCurrLeft == 0) return;
					if(!firstObj) firstObj = this.arrObject[i-1];
				}
			}
			else nItemRootLeft += nWidth;
		}
		if(!firstObj) return;
		var nMoveLeft = nItemRootLeft;
		var nPerLeft = Webcrea.GetWidth(firstObj.objItemLabel);
		if(bRight)
		{
			nMoveLeft += nPerLeft;
			nMoveLeft *= -1;
			nPerLeft *= -1;
		}
		else
		{
			nMoveLeft -= nPerLeft;
			nMoveLeft *= -1;
		}
		for(var i=0; i<this.arrObject.length; i++)
		{
			var itemObj = this.arrObject[i];
			itemObj.nCurrLeft = itemObj.nCurrLeft + nPerLeft;
		}
		var crArrawLeft = 'black';
		var crArrawRight = 'black';
		if(nMoveLeft == 0) crArrawLeft = 'gray';
		else
		{
			var nWidth = Webcrea.GetWidth(lastObj.objItemLabel);
			if(lastObj.nCurrLeft + nWidth < nTabArrawLeft) crArrawRight = 'gray';
		}
		objArrawLeft.style.borderColor = 'transparent ' + crArrawLeft + ' transparent transparent';
		if(crArrawLeft == 'gray') objArrawLeft.setAttribute('disabled', '1');
		else objArrawLeft.removeAttribute('disabled');
		objArrawRight.style.borderColor = 'transparent transparent transparent ' + crArrawRight;
		if(crArrawRight == 'gray') objArrawRight.setAttribute('disabled', '1');
		else objArrawRight.removeAttribute('disabled');
		this.objTabItemRoot.style.transform = 'translate(' + nMoveLeft + 'px, 0px) scale(1) translateZ(0px)';
	},
	TabChecked : function(page) {
		if(this.objType != 4) return false;
		var findObj = null;
		for(var i=0; i<this.arrObject.length; i++)
		{
			if(this.arrObject[i].page == page)
			{
				findObj = this.arrObject[i];
				break;
			}
		}
		if(!findObj) return;
		var tabObj = null;
		for(var i=0; i<this.arrTabObj.length; i++)
		{
			var obj = this.arrTabObj[i];
			if(findObj.divPos == obj.divPos && findObj.cellId == obj.cellId)
			{
				tabObj = obj;
				break;
			}
		}
		if(!tabObj) return;
		tabObj.TabChecked();
		return true;
	},
	TabNotChecked : function() {
		for(var i=0; i<this.arrTabObj.length; i++)
		{
			var tabObj = this.arrTabObj[i];
			tabObj.objItem.checked = false;
			_my_File.arrPage[tabObj.page].SetDisplay(false);
		}
	},
	Text : function()
	{
		if(!this.IsHtml()) return;
		var ___param = arguments[0];
		var id = this.divPos + 'Html';
		var objPos = Webcrea.FindNode(this.objDivPos, 'id', id);
		if(!objPos) objPos = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
		if(objPos)
		{
			var parent = objPos.parentNode;
			if(parent)
			{
				var div = document.createElement('div');
				div.style = objPos.getAttribute('style');
				div.id = id;
				div.align = 'left';
				div.innerHTML = ___param;
				parent.removeChild(objPos);
				parent.appendChild(div);
			}
		}
	},
	SetFormat : function()
	{
		var cellId = arguments[0];
		var format = arguments[1];
		var cellNode = this.GetCellNode(cellId);
		if(!cellNode) return;
		var nMaxLen=0;
		for(var i=0; i<format.length; i++)
		{
			if(format[i] == '#' || format[i] == '0') nMaxLen++;
		}
		var sValue = this.GetValue(cellId);
		if(!Webcrea.IsEmpty(sValue)) sValue = Webcrea.FormatValue(cellNode, false);
		cellNode.setAttribute('mask', format);
		var cellInfo = this.GetCellInfo(cellId);
		cellInfo.mask = format;
		if(nMaxLen>0)
		{
			cellNode.setAttribute('maxlength', nMaxLen);
		}
		else if(Webcrea.IsEmpty(format))
		{
			var nMaxLenOrg = cellNode.getAttribute('maxlengthOrg');
			if(nMaxLenOrg>0) cellNode.setAttribute('maxlength', nMaxLenOrg);
			else cellNode.removeAttribute('maxlength');
		}
		if(!Webcrea.IsEmpty(sValue))
		{
			if(nMaxLen>0 && sValue.length > nMaxLen) sValue = sValue.substr(0, nMaxLen);
			sValue = Webcrea.Mask(sValue, format, true, cellNode);
			cellNode.value = sValue;
			if(cellNode.nodeName == 'TD') cellNode.textContent = sValue;
		}
	},
	SetMobileLayout : function()
	{
		var params = '';
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(Webcrea.IsString(param)) param = "'" + param + "'";
			if(!Webcrea.IsEmpty(params)) params += ',';
			params += param;
		}
		var func = 'Webcrea.SetMobileLayout(' + params + ', this);';
		eval(func);
	},
	SetPanelOpt : function(opacity, type, bAnimation, bLeft, bCenter, bRight, bTop, bMiddle, bBottom, handler, imagePath, imageSize, imagePos, imageFixPos, sliderSpeed)
	{
		this.panelInit = false;
		if(bAnimation)
		{
			if(sliderSpeed == undefined) this.sliderSpeed = 20;
			else this.sliderSpeed = sliderSpeed;
		}
		else this.sliderSpeed = 0;
		this.panelOpt = {
			opacity : opacity,
			type : type,
			bAnimation : bAnimation,
			bLeft : bLeft,
			bRight : bRight,
			bCenter : bCenter,
			bTop : bTop,
			bBottom : bBottom,
			bMiddle : bMiddle,
			handler  : handler,
			imagePath : imagePath,
			imageSize : imageSize,
			imagePos : imagePos,
			imageFixPos : imageFixPos
		};
	},
	SetPanelInit : function() {
		var objPos = Webcrea.FindNode(this.objDivPos, 'id', this.divPos);
		var ifrm = objPos.contentWindow;
		var ifrmBody = ifrm.document.body;
		var width = ifrm._my_File.initWidth;
		var height = ifrm._my_File.initHeight;
		if(width>0) width += 2;
		if(height>0) height += 2;
		var left = Webcrea.GetLeft(objPos), top = Webcrea.GetTop(objPos);
		var panelOpt = this.GetPanelOpt();
		this.initDivWidth = this.initWidth = width;
		this.initDivHeight = this.initHeight = height;
		if(panelOpt.type == 1)
		{
			var divMain = Webcrea.FindNode(document.body, 'id', 'MainDiv');
			if(panelOpt.bLeft && panelOpt.bRight) width = Webcrea.GetWidth(divMain);
			if(panelOpt.bTop && panelOpt.bBottom) height = Webcrea.GetHeight(divMain);

			if(panelOpt.bLeft) left = 0;
			else if(panelOpt.bRight) left = divMain.clientWidth - width;
			else if(panelOpt.bCenter) left = (divMain.clientWidth - width)/2;
			if(panelOpt.bTop) top = 0;
			else if(panelOpt.bBottom) top = divMain.clientHeight - height;
			else if(panelOpt.bMiddle) top = (divMain.clientHeight - height)/2;

			if(left < 0) left = 0;
			if(top < 0) top = 0;
		}

		var nOpacity = panelOpt.opacity/100;
		if(nOpacity > 0) ifrmBody.style.background = 'rgba(255, 255, 255, ' + nOpacity + ')';
		objPos.style.top = '0px';
		objPos.style.left = '0px';
		objPos.style.width = width + 'px';
		objPos.style.height = height + 'px';

		var divWidth = width, divHeight = height;
		if(!this._Get_Visible())
		{
			if(panelOpt.handler == 0 || panelOpt.handler == 3 || panelOpt.handler == 4)
			{
				divHeight = 0;
			}
			else divWidth = 0;
			if(panelOpt.handler == 1) left += width;
			else if(panelOpt.handler == 3) top += height;
		}

		if(!this.panelInit)
		{
			this.objDivPos.style.top = top + 'px';
			this.objDivPos.style.left = left + 'px';
		}
		this.objDivPos.style.width = divWidth + 'px';
		this.objDivPos.style.height = divHeight + 'px';
		if(panelOpt.handler > 0)
		{
			/*Hadler Create*/
			this.divHandlerPos = this.divPos + 'Handler';
			var divHandler = document.createElement('div');
			divHandler.setAttribute('id', this.divHandlerPos);
			divHandler.setAttribute('type', '_my_handler');
			var attr = document.createAttribute('reldiv');
			attr.value = this.divPos;
			divHandler.setAttributeNode(attr);
			if(panelOpt.imagePath == '')
			{
				divHandler.setAttribute('class', '_my_handler');
				var label = document.createElement('label');
				divHandler.appendChild(label);
			}
			else
			{
				var imageSize = panelOpt.imageSize;
				if(imageSize != '') imageSize += ';';
				divHandler.style.cssText = 'position:absolute;' + imageSize + 'display:none;z-index:9001;overflow:hidden;';
				var img = document.createElement('img');
				var attr = document.createAttribute('src');
				var attrAlt = document.createAttribute('alt');
				var attrTitle = document.createAttribute('title');
				attr.value = panelOpt.imagePath;
				attrAlt.value = 'handler';
				attrTitle.value = 'handler title';
				img.setAttributeNode(attr);
				img.setAttributeNode(attrAlt);
				img.setAttributeNode(attrTitle);
				divHandler.appendChild(img);
			}
			this.objDivPage.appendChild(divHandler);
			if (Webcrea.IsIE69()) divHandler.attachEvent('onclick', function(){ Webcrea.OnCLICK(divHandler); });
			else divHandler.addEventListener('click', function(){ Webcrea.OnCLICK(divHandler); }, false);
			divHandler.style.display = 'block';

			if(panelOpt.handler == 1 || panelOpt.handler == 2)
			{
				this.sliding = false;
				this.sliderWidth = 0;
				if(panelOpt.handler == 1) this.objDivPos.style.width = '0px';
				this.objDivPos.style.display = 'none';
			}
			else if(panelOpt.handler == 3 || panelOpt.handler == 4)
			{
				this.sliding = false;
				this.sliderHeight = 0;
				if(panelOpt.handler == 3) this.objDivPos.style.height = '0px';
				this.objDivPos.style.display = 'none';
			}

			/*Hadler Move*/
			var divLeft = left, divTop = top;
			var divHandlerWidth = Webcrea.GetWidth(divHandler);
			var divHandlerHeight = Webcrea.GetHeight(divHandler);
			if(panelOpt.handler == 1 || panelOpt.handler == 2)
			{
				if(panelOpt.handler == 1)
				{
					divLeft -= divHandlerWidth;
					divLeft += this.initDivWidth;
				}
				else
				{
					divLeft += divWidth;
					divLeft -= this.initDivWidth;
				}
				if(panelOpt.imagePos == 0) divTop += (divHeight * panelOpt.imageFixPos / 100);/*고정*/
				else if(panelOpt.imagePos == 2) divTop += (divHeight - divHandlerHeight);/*오른/아래쪽*/
				else if(panelOpt.imagePos == 3) divTop += (divHeight - divHandlerHeight)/2;/*가운데*/
			}
			else if(panelOpt.handler == 3 || panelOpt.handler == 4)
			{
				if(panelOpt.handler == 3)
				{
					divTop -= divHandlerHeight;
					divTop += this.initDivHeight;
				}
				else
				{
					divTop += divHeight;
					divTop -= this.initDivHeight;
				}
				if(panelOpt.imagePos == 0) divLeft += (divWidth * panelOpt.imageFixPos / 100);/*고정*/
				else if(panelOpt.imagePos == 2) divLeft += (divWidth - divHandlerWidth);/*오른/아래쪽*/
				else if(panelOpt.imagePos == 3) divLeft += (divWidth - divHandlerWidth)/2;/*가운데*/
			}
			divHandler.style.left = divLeft + 'px';
			divHandler.style.top = divTop + 'px';
			this.objDivHandler = divHandler;
		}
		this.panelInit = true;
	},
	GetPanelOpt : function()
	{
		return this.panelOpt;
	},
	DataHandlerTimer : function(bRefresh, sParam, ReturnFunc)
	{
		try
		{
			if(!this.dataObj && !Webcrea.IsEmpty(this.sSql) && Webcrea.bFileDB) Webcrea.CreateRecordSet(this);
			if(!this.bDummy && !this.dataObj)
			{
				DataHandler(sParam, ReturnFunc, false, '', this);
				if(Webcrea.IsEmpty(ReturnFunc)) Webcrea.SetQueryResult(this);
			}
			else if(!Webcrea.IsEmpty(ReturnFunc)) eval(ReturnFunc)();
			else if(Webcrea.bFileDB && Webcrea.IsEmpty(ReturnFunc) && this.dataObj && !Webcrea.IsEmpty(this.sSql))
			{
				var dataObj;
				if(this.bQuery) dataObj = this.dataObj;
				else
				{
					var tableInfo = Webcrea.QueryInfo(this.sSql);
					if(tableInfo)
					{
						var sTable = tableInfo.sTable;
						if(Webcrea.IsEmpty(sTable)) return;
						dataObj = Webcrea.GetObjectById(sTable);
						if(!dataObj) Webcrea.WarningTrace(Webcrea.LoadString('msgErrObject') + '(' + sTable + ')');
					}
				}
				if(dataObj) Webcrea.SetQueryDataResult(this.sSql, dataObj);
			}
			if(bRefresh) this.Refresh();
		}
		finally
		{
			this.DisplayLoading(true);
		}
	},
	DataHandler : function(bRefresh, sParam, ReturnFunc, bAsync, sUrl, ThreadId, ThreadResult)
	{
		this.bDummy = false;
		if(bAsync == undefined || !bAsync) bAsync=this.BuildThread;
		if(ToUpper(this.sDBID).indexOf('TEXT') > 0 || ToUpper(this.sDBID).indexOf('MEMORY') > 0 || ToUpper(this.sDBID).indexOf('OBJECT') > 0) Webcrea.bFileDB=true;
		else Webcrea.bFileDB=false;
		if(!bAsync && !Webcrea.IsEmpty(this.loadingMsg))
		{
			bAsync=true;
			this.DisplayLoading();
			if(!Webcrea.IsEmpty(this.sSql) && Webcrea.bFileDB)
			{
				var func = this.objName + '.DataHandlerTimer(' + bRefresh + ', "' + sParam + '", ' + ReturnFunc + ')';
				setTimeout(func, 10);
				return;
			}
		}
		if(!this.dataObj && !Webcrea.IsEmpty(this.sSql) && Webcrea.bFileDB) Webcrea.CreateRecordSet(this);
		if(!this.bDummy && (!this.dataObj || (this.dataObj && !this.bQuery && !Webcrea.bFileDB)))
		{
			Webcrea.DataHandlerCmd(sParam);
			if(Webcrea.IsSqlExecute() && Webcrea.bBeginTrans)
			{
				var arr = this.sDBID.split('=');
				if(arr.length>1)
				{
					dbid = arr[1];
					if(dbid == Webcrea.nBeginDBID)
					{
						Webcrea.SetTransInfo(this, sParam, bAsync, ThreadId, ThreadResult);
						return;
					}
				}
			}
			DataHandler(sParam, ReturnFunc, bAsync, sUrl, this, ThreadId, ThreadResult);
			if(Webcrea.IsEmpty(ReturnFunc)) Webcrea.SetQueryResult(this);
		}
		else if(!Webcrea.IsEmpty(ReturnFunc))
		{
			eval(ReturnFunc)();
			WebcreaPack.QueryCloseEvent(this.divPos);
		}
		else if(Webcrea.bFileDB && Webcrea.IsEmpty(ReturnFunc) && this.dataObj && !Webcrea.IsEmpty(this.sSql))
		{
			var dataObj;
			if(this.bQuery) dataObj = this.dataObj;
			else
			{
				var tableInfo = Webcrea.QueryInfo(this.sSql);
				if(tableInfo)
				{
					var sTable = tableInfo.sTable;
					if(Webcrea.IsEmpty(sTable)) return;
					dataObj = Webcrea.GetObjectById(sTable);
					if(!dataObj) Webcrea.WarningTrace(Webcrea.LoadString('msgErrObject') + '(' + sTable + ')');
				}
			}
			if(dataObj) Webcrea.SetQueryDataResult(this.sSql, dataObj);
			WebcreaPack.QueryCloseEvent(this.divPos);
		}
		if(bRefresh) this.Refresh();
	},
	ExcelImport : function()
	{
		Webcrea.DataHandlerCmd('cmd=excelimport');
		var bTimer = arguments[0];
		if(!Webcrea.IsEmpty(this.loadingMsg) && !bTimer)
		{
			this.DisplayLoading();
			var func = this.objName + '.ExcelImport(true)';
			setTimeout(func, 100);
			return;
		}
		if(!Webcrea.bImportLib)
		{
			var func = this.objName + '.LoadImportFile();';
			var sRoot = Webcrea.framePath;
			if(Webcrea.IsNull(sRoot)) sRoot = '.';
			var sLibPath = sRoot + '/frame' + Webcrea.version + '/import/jszip.js';
			var charset = 'utf-8';
			var arrUrl = [];
			arrUrl[arrUrl.length] = sLibPath;
			sLibPath = sRoot + '/frame' + Webcrea.version + '/import/xlsx.js';
			arrUrl[arrUrl.length] = sLibPath;
			if(Webcrea.IsIE())
			{
				sLibPath = sRoot + '/frame' + Webcrea.version + '/import/shim.js';
				arrUrl[arrUrl.length] = sLibPath;
			}
			Webcrea.LoadJsMulti(arrUrl, false, function(){eval(func);Webcrea.bImportLib=true;}, charset);
		}
		else this.LoadImportFile();
	},
	LoadImportFile : function()
	{
		try{
			var nImport = this.sSql.indexOf('import');
			if(nImport<0) return;
			var sImportOpt = this.sSql.substr(nImport+6);
			sImportOpt = sImportOpt.trim();
			var sFileObj = '';
			var bDataOnly = false;
			var bUTF8= false;
			var nSheet = 0;
			var arrOpt = sImportOpt.split(',');
			for(var i=0; i<arrOpt.length; i++)
			{
				var s = arrOpt[i].trim();
				if(i==0)
				{
					sFileObj = s;
					continue;
				}
				if(s.iEquals('dataOnly')) bDataOnly = true;
				else if(s.iEquals('UTF8')) bUTF8 = true;
				else if(s.indexOf('sheet')>=0)
				{
					var n = s.indexOf('sheet');
					var sSheet = s.substr(n+5);
					n = sSheet.indexOf('=');
					if(n>=0) sSheet = sSheet.substr(n+1);
					var bVal = false;
					var bObj = false;
					var n = sSheet.indexOf('.');
					if(n>0)
					{
						var arrObj = sSheet.split('.');
						var obj = Webcrea.GetObjectById(arrObj[0]);
						if(obj)
						{
							nSheet = obj.GetValue(arrObj[1]);
							bObj = true;
						}
					}
					if(bObj || bVal) nSheet = Number(nSheet);
					else nSheet = Extract(sSheet, '[0-9]');
					if(nSheet>0) nSheet -= 1;
				}
			}
			if(Webcrea.IsEmpty(sFileObj)) return;
			var arrObjId = sFileObj.split('.');
			var objForm = Webcrea.GetObjectById(arrObjId[0]);
			if(!objForm) return;
			var importObj = null;
			if(arrObjId.length>1)
			{
				var objCell = objForm.GetCellInfo(arrObjId[1]);
				importObj = objCell.arrFiles[0];
			}
			else importObj = objForm.arrFiles[0];
			if(!importObj) return;
			var currObj = this;
			var rABS = typeof FileReader !== 'undefined' && typeof FileReader.prototype !== 'undefined' && typeof FileReader.prototype.readAsBinaryString !== 'undefined';
			var reader = new FileReader();
			var sFileName = importObj.name;
			var nExt = sFileName.lastIndexOf('.');
			var sExt = '';
			if(nExt>0) sExt = sFileName.substr(nExt+1);
			var bExcel = false;
			if(sExt.indexOf('xls')>=0 ||sExt.indexOf('xml')>=0) bExcel = true;
			reader.onload = function(e)
			{
				var data = e.target.result;
				var wb;
				if(bExcel)
				{
					try{
						if(rABS)
						{
							var sCheck = data.substr(0,5);
							if(sCheck == '<?xml' && bUTF8) data=decodeURIComponent(escape(data));
							wb = XLSX.read(data, {type: 'binary'});
						}
						else
						{
							var arr='';
							var l = 0, w = 10240;
							for(; l<data.byteLength/w; ++l) arr+=String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w,l*w+w)));
							arr+=String.fromCharCode.apply(null, new Uint8Array(data.slice(l*w)));
							var sCheck = arr.substr(0,5);
							if(sCheck == '<?xml' && bUTF8)
							{
								arr=decodeURIComponent(escape(arr));
								wb = XLSX.read(arr, {type: 'binary'});
							}
							else wb = XLSX.read(btoa(arr), {type: 'base64'});
						}
					}
					catch(e)
					{
						Webcrea.MsgBox(Webcrea.LoadString('msgErrExcelImport'));
						return;
					}
					var sheet=[];
					var output = [];
					wb.SheetNames.forEach(function(sheetName){
						var opts = {};
						opts.FS = Webcrea.msvSpColType;
						opts.RS = Webcrea.msvSpRowType;
						var csv = XLSX.utils.sheet_to_csv(wb.Sheets[sheetName], opts);
						if(csv.length>0)
						{
							sheet.push(sheetName);
							output.push(csv);
						}
					});
					if(bDataOnly)
					{
						var sData = output[nSheet];
						if(Webcrea.IsNull(sData)) msvData = '';
						else
						{
							var columnTitle = left(sData, Webcrea.msvSpRowType);
							var cnt=CharCount(columnTitle, Webcrea.msvSpColType)+1;
							columnTitle='';
							for(i=1;i<=cnt;i++) columnTitle+='col'+i+Webcrea.msvSpColType;
							msvData=columnTitle+Webcrea.msvSpRowType+output[nSheet];
						}
					}
					else msvData=output[nSheet];
				}
				else
				{
					if(bDataOnly)
					{
						if(Webcrea.IsNull(data)) msvData = '';
						else msvData='col1\r\n'+data;
					}
					else msvData=data;
				}
				if(Webcrea.IsNull(msvData)) msvData = '';
				else if(!Webcrea.IsEmpty(msvData) && !bDataOnly && bExcel)
				{
					var arrHeader = msvData.split(Webcrea.msvSpRowType);
					var arrColumn = arrHeader[0].split(Webcrea.msvSpColType);
					var columnTitle = '';
					for(var i1=0; i1<arrColumn.length; i1++)
					{
						var sTitle = arrColumn[i1];
						sTitle = Webcrea.RemoveQuote(sTitle);
						sTitle = Webcrea.ReplaceAll(sTitle, '\r\n', '_');
						sTitle = Webcrea.ReplaceAll(sTitle, '\n', '_');
						sTitle = Webcrea.ReplaceAll(sTitle, '\t', '_');
						sTitle = Webcrea.ReplaceAll(sTitle, ' ', '_');
						if(i1>0) columnTitle += Webcrea.msvSpColType;
						columnTitle += sTitle;
					}
					if(!Webcrea.IsEmpty(columnTitle))
					{
						var n = msvData.indexOf(Webcrea.msvSpRowType);
						var msvData1 = msvData.substr(n);
						msvData=columnTitle+Webcrea.msvSpRowType+msvData1;
					}
				}
				sFileName = Webcrea.ReplaceAll(sFileName, ' ', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '(', '');
				sFileName = Webcrea.ReplaceAll(sFileName, ')', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '-', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '!', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '@', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '#', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '^', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '&', '');
				sFileName = Webcrea.ReplaceAll(sFileName, '+', '');
				var sObject = sFileName;
				var n = sObject.lastIndexOf('.');
				if(n>0)
				{
					sObject = sObject.substr(0, n);
					if(sObject.indexOf('.')>0) sObject = sObject.replace('.', '_');
				}
				var pattern = /[^(가-힣ㄱ-ㅎㅏ-ㅣa-zA-Z0-9)]/gi;
                sObject = sObject.replace(pattern,'');
				if(Webcrea.IsEmpty(sObject)) sObject = 'webcrea';
				var objName = '_my_' + currObj.divPage + '_' + sObject;
				var findObj = Webcrea.GetObjectById(sObject);
				if(!findObj)
				{
					var objExe = "new FormObject('" + currObj.divPage + "','" + sObject + "',2);";
					eval(objName + '=' + objExe);
					eval(objName).objName = objName;
					eval(objName).bQuery = true;
					eval(objName).Init();
					eval(objName).sDBID = 'TEXT';
					findObj = eval(objName);
				}
				if(!bExcel && bDataOnly) findObj.MSVDataParser(msvData, bDataOnly);
				else findObj.MSVDataParser(msvData);
				currObj.dataObj = findObj;
				currObj.sSql = 'select * from ' + objName;
				if(!currObj.dataObj) return;
				if(window[currObj.divPage][currObj.divPosOrg] && typeof window[currObj.divPage][currObj.divPosOrg].OnPOSTQUERY != 'undefined')
					window[currObj.divPage][currObj.divPosOrg].OnPOSTQUERY();
			};
			if(bExcel)
			{
				if(rABS) reader.readAsBinaryString(importObj);
				else reader.readAsArrayBuffer(importObj);
			}
			else
			{
				if(bUTF8) reader.readAsText(importObj);
				else reader.readAsText(importObj, 'euc-kr');
			}
		}
		finally
		{
			this.DisplayLoading(true);
		}
	},
	LoadJsLib : function()
	{
		var mode = arguments[0];
		var bTimer = arguments[1];
		var callback = this.objName + '.LoadJsLibClose("' + mode + '");';
		var sRoot = Webcrea.framePath;
		if(Webcrea.IsNull(sRoot)) sRoot = '.';
		if(!Webcrea.IsEmpty(this.loadingMsg) && !bTimer)
		{
			this.DisplayLoading();
			var func = 'Webcrea.LoadJsLib(mode, true)';
			setTimeout(func, 100);
			return;
		}
		if(mode == 'qrcode')
		{
			if(Webcrea.bQRCodeLib == 2) eval(callback);
			else if(Webcrea.bQRCodeLib != 1)
			{
				Webcrea.bQRCodeLib = 1;
				var sLibPath = sRoot + '/frame' + Webcrea.version + '/qrcode/qrcode.min.js';
				var charset = 'utf-8';
				var arrUrl = [];
				arrUrl[arrUrl.length] = sLibPath;
				Webcrea.LoadJsMulti(arrUrl, false, function(){eval(callback);}, charset);
			}
		}
		else if(mode == 'barcode')
		{
			if(Webcrea.bBarCodeLib == 2) eval(callback);
			else if(Webcrea.bBarCodeLib != 1)
			{
				Webcrea.bBarCodeLib = 1;
				var sLibPath = sRoot + '/frame' + Webcrea.version + '/barcode/JsBarcode.all.min.js';
				var charset = 'utf-8';
				var arrUrl = [];
				arrUrl[arrUrl.length] = sLibPath;
				Webcrea.LoadJsMulti(arrUrl, false, function(){eval(callback);}, charset);
			}
		}
		else if(mode == 'signpad')
		{
			if(Webcrea.bSignPadLib == 2) eval(callback);
			else if(Webcrea.bSignPadLib != 1)
			{
				Webcrea.bSignPadLib = 1;
				var sLibPath = sRoot + '/frame' + Webcrea.version + '/signpad/signature_pad.min.js';
				var charset = 'utf-8';
				var arrUrl = [];
				arrUrl[arrUrl.length] = sLibPath;
				Webcrea.LoadJsMulti(arrUrl, false, function(){eval(callback);}, charset);
			}
		}
	},
	LoadJsLibClose : function()
	{
		var mode = arguments[0];
		if(mode == 'qrcode')
		{
			Webcrea.bQRCodeLib = 2;
			var func = this.objName + '.ShowQRCode()';
			setTimeout(func, 100);
		}
		else if(mode == 'barcode')
		{
			Webcrea.bBarCodeLib = 2;
			var func = this.objName + '.ShowBarCode()';
			setTimeout(func, 100);
		}
		else if(mode == 'signpad')
		{
			Webcrea.bSignPadLib = 2;
			var func = this.objName + '.ShowSignPad()';
			setTimeout(func, 100);
		}
	},
	MSVDataParser : function() {
		var msvData = arguments[0];
		var bTextFileDataOnly = arguments[1];
		Webcrea.Trace('MSVDataParser', 1);
		this.pos_B = this.pos;
		var bTextDB = false;
		var n = this.sDBID.indexOf('dbid=TEXT');
		var n1 = this.sParam.indexOf('url=');
		var n2 = this.sSql.indexOf('urlIndex=');
		if(n>=0 && n1<0 && n2<0) bTextDB = true;
		if(!Webcrea.IsNull(msvData))
		{
			msvData = msvData.ltrim();
		}
		this.msvData = msvData;

		var arrRows_B = null;
		var arrField_B = null;
		var arrData_B = null;
		var arrStatus_B = null;
		var arrMulti_B = null;
		var arrRowInfo_B = null;
		if(this.bAddData && this.arrRows)
		{
			arrRows_B = this.arrRows;
			arrField_B = this.arrField;
			arrData_B = this.arrData;
			arrStatus_B = this.arrStatus;
			arrRowInfo_B = this.arrRowInfo;
			if(this.bMulti) arrMulti_B = this.arrMulti;
		}
		var nDataType = msvData.indexOf('<?xml');
		if(nDataType>=0 && nDataType<=5) msvData = Webcrea.XmlToMSV(msvData);
		else if(this.dataType && this.dataType == 'JSON') msvData = Webcrea.JsonToMSV(msvData, this);
		nDataType = msvData.indexOf('{{{');
		if(nDataType>=0) msvData = Webcrea.MultiData(msvData, this);
		var msvSpRowType = Webcrea.msvSpRowType;
		if(bTextDB)
		{
			msvSpRowType = '\r\n';
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 2 && this.arrRows[this.arrRows.length-1]=='') this.arrRows.splice(this.arrRows.length-1, 1);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\n';
				this.arrRows = msvData.split(msvSpRowType);
			}
			var nRowCheck = this.arrRows.length-1;
			while(true)
			{
				if(nRowCheck<0) break;
				var sRowCheck = this.arrRows[nRowCheck];
				if(Webcrea.IsNull(sRowCheck)) sRowCheck = '';
				if(sRowCheck.trim() == '') this.arrRows.splice(nRowCheck, 1);
				else break;
				nRowCheck--;
			}
		}
		else
		{
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\r\n';
				this.arrRows = msvData.split(msvSpRowType);
				if(this.arrRows.length == 1)
				{
					msvSpRowType = '\n';
					this.arrRows = msvData.split(msvSpRowType);
				}
			}
		}
		this.arrField = new Array();
		this.arrFieldType = new Array();
		this.arrData = new Array();
		this.arrStatus = new Array();
		this.arrRowInfo = new Array();
		this.arrMaxLen = new Array();
		if(this.bMulti) this.arrMulti = new Array();
		this.SetInitRecord(true);

		var spType = Webcrea.msvSpColType;
		if(bTextFileDataOnly) spType = Webcrea.webcreaVal + 'noColType';
		if(this.arrRows.length > 0)
		{
			if(Webcrea.IsSqlStatusError(this.arrRows[0])) 
			{
				this.arrRows = null;
				return;
			}
			else Webcrea.SetSqlStatus('');
			var n = this.arrRows[0].indexOf('\r\n');
			while(n==0)
			{
				this.arrRows[0] = this.arrRows[0].replace('\r\n', '');
				n = this.arrRows[0].indexOf('\r\n');
			}
			if(this.arrRows[0].split(spType).length < 2)
			{
				var spType1 = '\t';
				if(this.arrRows[0].split(spType1).length < 2)
				{
					var spType2 = ',';
					if(this.arrRows[0].split(spType2).length > 1) spType = spType2;
				}
				else spType = spType1;
			}
			for(var i=0; i<2; i++)
			{
				var n = this.arrRows[this.arrRows.length-1].lastIndexOf('\n');
				if(n>=0)
				{
					var n1 = this.arrRows[this.arrRows.length-1].lastIndexOf('\r\n');
					if(n1>=0 && n1+2 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n1);
					}
					else if(n1<0 && n+1 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n);
					}
					else break;
				}
				else break;
			}
		}
		else
		{
			if(this.IsForm()) this.bBaseFormRecordApply = true;
			return;
		}

		this.arrDuplField = [];
		var arrColData = this.arrRows[0].split(spType);
		for(var i=0; i<arrColData.length; i++)
		{
			var strCol = arrColData[i];
			var nColType = 0;
			var n = strCol.lastIndexOf('#');
			if(n > 0)
			{
				strCol = strCol.replace('#', '');
				nColType = 1;
			}
			if(Webcrea.IsPrototypeWords(strCol)) strCol = strCol.toUpperCase();
			if(this.arrField.length>0)
			{
				var nFind = this.arrField.search(strCol);
				if(nFind>=0)
				{
					Webcrea.TraceWarning('Duplicate columns exist.(' + strCol + ') ===');
					var objDupl = {};
					objDupl.nSeq = i;
					objDupl.nDuplSeq = nFind;
					objDupl.field = strCol;
					strCol = strCol + '_dupl' + i;
					objDupl.fieldChg = strCol;
					this.arrDuplField[this.arrDuplField.length] = objDupl;
				}
			}
			this.arrField[i] = strCol;
			this.arrFieldType[i] = nColType;
			this.arrMaxLen[i] = -1;
			this.arrData[this.arrField[i]] = new Array();
			this.arrStatus[this.arrField[i]] = new Array();
			var cellInfo = this.GetCellInfo(strCol);
			if(cellInfo)
			{
				cellInfo.field = strCol;
				cellInfo.fieldType = nColType;
			}
			if(!window[strCol]) Webcrea.DynamicVal(strCol, '');
		}
		if(this.arrField.length>0)
		{
			this.arrField[this.arrField.length] = this.dataSeqField;
			this.arrFieldType[this.arrFieldType.length] = 1;
			this.arrData[this.dataSeqField] = new Array();
			this.arrStatus[this.dataSeqField] = new Array();
		}
		this.arrRows.splice(0, 1);
		this.bMore = false;

		/*필드 별 레코드 셋*/
		for(var i=0; i<this.arrRows.length; i++)
		{
			var bLast = (i+1==this.arrRows.length)?true:false;
			var bCRLF = (this.arrRows[i].indexOf('\r\n')<0)?false:true;
			var sRow = this.arrRows[i].replace('\r\n', '');
			var bSkip = false;
			if(sRow.length<1)
			{
				if(!bLast) bSkip = true;
				else if(!bCRLF) bSkip = true;
			}
			if(bSkip)
			{
				this.arrRows.splice(i, 1);
				i--;
				continue;
			}
			else
			{
				var str = sRow.toLowerCase();
				if(!this.bReadAll && str.indexOf('--- more ---') == 0)
				{
					this.bAddData = true;
					this.bMore = true;
					this.pos = this.pos + i;
					this.arrRows.splice(i, 1);
					i--;
					continue;
				}
			}

			this.arrStatus[i] = '';
			var rowInfo = {};
			rowInfo.mode = '';
			this.arrRowInfo[i] = rowInfo;
			if(this.bMulti) this.arrMulti[i] = '';
			var arrColData = this.arrRows[i].split(spType);
			for(var j=0; j<arrColData.length; j++)
			{
				if(j>=this.arrField.length) break;
				this.arrData[this.arrField[j]][i] = arrColData[j];
				this.arrStatus[this.arrField[j]][i] = '';
				var nDataLen = lenb(arrColData[j]);
				if(nDataLen > this.arrMaxLen[j]) this.arrMaxLen[j] = nDataLen;
				if(j==0)
				{
					this.arrData[this.dataSeqField][i] = i;
					this.arrStatus[this.dataSeqField][i] = '';
				}
			}
		}

		if(this.bAddData && arrRows_B)
		{
			for(var i=0; i<arrRows_B.length; i++)
			{
				this.arrRows.splice(i, 0, arrRows_B[i]);
				this.arrStatus.splice(i, 0, arrStatus_B[i]);
				this.arrRowInfo.splice(i, 0, arrRowInfo_B[i]);
				if(this.bMulti) this.arrMulti.splice(i, 0, arrMulti_B[i]);
				for(var j=0; j<arrField_B.length; j++)
				{
					if(i==0)
					{
						if(!this.arrData[arrField_B[j]])
						{
							if(!this.arrField[j]) this.arrField[j] = arrField_B[j];
							this.arrData[arrField_B[j]] = [];
						}
						if(!this.arrStatus[arrField_B[j]]) this.arrStatus[arrField_B[j]] = [];
					}
					this.arrData[arrField_B[j]].splice(i, 0, arrData_B[arrField_B[j]][i]);
					this.arrStatus[arrField_B[j]].splice(i, 0, arrStatus_B[arrField_B[j]][i]);
				}
			}
			if(!this.bMore)
			{
				this.pos = 0;
				this.bAddData = false;
			}
		}
		this.SetInitRecord();
		if(this.IsForm()) this.bBaseFormRecordApply = true;
		if(this.arrField.length>0 && this.arrRows.length==0)
		{
			if(this.IsProc())
			{
				Webcrea.SetSqlStatus('');
				_my_lastStatus = 'QUERY FAILED';
			}
			else _my_sqlStatus = '[DATA BLANK]';
		}
		Webcrea.Trace('MSVDataParser', 2);
	},
	QueryParser : function() {
		var ___param = {};
		___param.sql = arguments[0];
		___param.dataObj = arguments[1];
		if(this.bDummy)
		{
			Webcrea.SetSqlStatus('');
			return;
		}
		if(___param.dataObj == undefined) ___param.dataObj = this.dataObj;
		if(___param.sql == undefined) ___param.sql = this.sSql;
		if(!___param.dataObj.arrRows) return false;

		var obj = QueryParser(___param.sql, ___param.dataObj);
		if(!obj) return;
		this.arrRows = obj.arrRows;
		this.arrField = obj.arrField;
		this.arrFieldType = obj.arrFieldType;
		this.arrData = obj.arrData;
		this.arrStatus = obj.arrStatus;
		if(!this.bFiltering)
		{
			this.sSql = ___param.sql;
			this.SetInitRecord();
			if(this.IsForm()) this.bBaseFormRecordApply = true;
		}
		this.arrRowInfo = new Array(this.arrRows.length);
		if(this.bMulti) this.arrMulti = new Array(this.arrRows.length);
		for(var i=0; i<this.arrRows.length; i++)
		{
			var rowInfo = {};
			rowInfo.mode = '';
			this.arrRowInfo[i] = rowInfo;
			if(this.bMulti) this.arrMulti[i] = false;
		}
	},
	QueryText : function()
	{
		var ___cellId = arguments[0];
		var ___rowNo = arguments[1];
		return this._Get_OrgText(___cellId, ___rowNo);
	},
	GetCellNode : function(cellId, rowId) {
		var tagetPos = this.objTable;
		if(this.IsGrid())
		{
			if(this.bMyGrid && this.objSelRow && Webcrea.IsNull(rowId) && !this.objEvent.bInsertRow && !this.objEvent.bKeyDownMoveRow)
			{
				if(this.objSelInfo && this.objSelInfo.rowNo>=0)
				{
					var rowNo = this.objSelInfo.rowNo;
					var dataRowNo = this.objSelInfo.dataRowNo;
					if(this.IsDisplaySelectRow(dataRowNo, true))
					{
						var n = rowNo + this.nHeader;
						tagetPos = this.objTable.rows[n];
					}
					else tagetPos = this.objSelRow;
				}
			}
			else
			{
				if(rowId == undefined) rowId = this.currRowIndex;
				rowId += this.nHeader;
				tagetPos = this.objTable.rows[rowId];
			}
			if(!tagetPos) return;
			rowId = Number(tagetPos.getAttribute('rowno'));
		}
		if(rowId == undefined || this.IsForm()) rowId = '';
		var node = Webcrea.FindNode(tagetPos, 'id', this.divPos + '.' + cellId + rowId, false, rowId, true);
		if(!node && this.objFDivPos) node = Webcrea.FindNode(this.objFTable, 'id', this.divPos + '.' + cellId);
		if(!node && this.nDataRow>1)
		{
			for(var i=0; i<this.nDataRow; i++)
			{
				var objSelRow;
				if(this.objSelInfo && this.objSelInfo.rowNo>=0)
				{
					var nRowStart = this.objSelInfo.rowNo;
					nRowStart -= (nRowStart%this.nDataRow>0)?(nRowStart%this.nDataRow):0;
					var n = nRowStart + this.nHeader + i;
					objSelRow = this.objTable.rows[n];
				}
				if(objSelRow == tagetPos) continue;
				node = Webcrea.FindNode(objSelRow, 'id', this.divPos + '.' + cellId + rowId);
				if(node) break;
			}
		}
		if(node && this.IsBulletDiv(node)) node = Webcrea.FindNode(node, 'id', this.divPos + '.' + cellId + rowId);
		return node;
	},
	GetCellIdByCrossTab : function()
	{
		var currNode = arguments[0];
		if(!currNode) return;
		var sCellId = currNode.getAttribute('orgId');
		var colNo = currNode.getAttribute('colno');
		if(sCellId && colNo)
		{
			colNo--;
			if(colNo>0) sCellId += colNo;
		}
		else sCellId = this.GetCellId(currNode);
		return sCellId;
	},
	GetCellId : function(cellId, bPublic) {
		var sCellId='', sCellType='';
		var sRowNo='';
		var bMulti=false;
		if(cellId && Webcrea.IsObject(cellId))
		{
			sCellId = cellId.getAttribute('orgId');
			if(!Webcrea.IsEmpty(sCellId)) return sCellId;
			else if(Webcrea.IsMultilineMainDiv(cellId))
			{
				cellId=cellId.childNodes[0];
				sCellId = cellId.getAttribute('orgId');
				if(!Webcrea.IsEmpty(sCellId)) return sCellId;
				else
				{
					cellId=cellId.childNodes[0];
					sCellId = cellId.getAttribute('orgId');
					if(!Webcrea.IsEmpty(sCellId)) return sCellId;
				}
			}
			sCellId = cellId.id;
			sRowNo = cellId.getAttribute('rowno');
			sCellType = cellId.type;
			if(sCellType == 'textarea' && cellId.getAttribute('role')=='multiline_input') sCellId=sCellId.replace('_my_multiline','');
		}
		else if(cellId) sCellId = cellId;
		var arrCellId = sCellId.split('.');
		if(arrCellId.length > 1)
		{
			if(arrCellId[0] == this.divPos)
			{
				if(arrCellId.length == 3 && (sCellType=='checkbox' || sCellType == 'radio')) bMulti=this.IsMulti(arrCellId[1]);
				if(arrCellId.length == 3 && !bMulti) sCellId = arrCellId[1] + '.' + arrCellId[2];
				else sCellId = arrCellId[1];
				if(this.IsGrid() && !bPublic)
				{
					if(Webcrea.IsEmpty(sRowNo))
					{
						sRowNo = this.currRowIndex;
						var nRowData = this.GetRowDataNo(sRowNo);
						if(!nRowData) nRowData=0;
						if(!isNaN(nRowData)) sRowNo = nRowData.toString();
					}
					var s = sCellId.substring(sCellId.length-sRowNo.length, sCellId.length);
					if(sRowNo == s)
					{
						var sChk = sCellId.substring(sCellId.length-s.length);
						if(sChk == s) sCellId = sCellId.substring(0, sCellId.length-s.length);
					}
					else if(arrCellId.length == 3) sCellId = arrCellId[1];
				}
			}
			else sCellId = null;
		}
		return sCellId;
	},
	GetCellIdByNode : function(currNode, bOrg) {
		var sCellId='', sCellType='';
		var sRowNo='';
		var bMulti=false;
		if(!currNode || !Webcrea.IsObject(currNode)) return sCellId;
		sCellId = currNode.getAttribute('orgId');
		if(!Webcrea.IsEmpty(sCellId) && bOrg) return sCellId;
		sRowNo = currNode.getAttribute('rowno');
		sCellId = currNode.getAttribute('id');
		sCellType = currNode.getAttribute('type');
		var arrCellId = sCellId.split('.');
		if(arrCellId.length > 1)
		{
			if(arrCellId[0] == this.divPos)
			{
				if(arrCellId.length == 3 && (sCellType=='checkbox' || sCellType == 'radio'))
				{
					var s = currNode.getAttribute('orgId');
					bMulti=this.IsMulti(s);
				}
				if(arrCellId.length == 3 && !bMulti) sCellId = arrCellId[1] + '.' + arrCellId[2];
				else sCellId = arrCellId[1];
				if(this.IsGrid())
				{
					if(!Webcrea.IsEmpty(sRowNo))
					{
						var s = sCellId.substring(sCellId.length-sRowNo.length, sCellId.length);
						if(sRowNo == s && !bMulti)
						{
							var sChk = sCellId.substring(sCellId.length-s.length);
							if(sChk == s) sCellId = sCellId.substring(0, sCellId.length-s.length);
						}
						else if(arrCellId.length == 3) sCellId = arrCellId[1];
					}
					else if(arrCellId.length == 3) sCellId = arrCellId[1];
				}
			}
			else sCellId = null;
		}
		return sCellId;
	},
	GetColNo : function()
	{
		var id = arguments[0];
		var obj = {};
		var relNode;
		if(Webcrea.IsObject(id)) relNode = id;
		else relNode = Webcrea.FindNode(this.objGDivPos, 'relId', id);
		if(!relNode) return;
		var nColSpan = relNode.getAttribute('colSpan');
		if(!nColSpan) nColSpan = 1;
		else nColSpan = Number(nColSpan);
		nColSpan--;
		var currColNo = relNode.getAttribute('colno');
		obj.node = relNode;
		obj.nColSpan = Number(nColSpan);
		obj.nColNo = Number(currColNo);
		return obj;
	},
	GetFieldType : function(sField)
	{
		var n = this.arrField.isearch(sField);
		return n<0?0:this.arrFieldType[n];
	},
	GetWhere : function()
	{
		var arrCon = arguments[0];
		var rowIndex = arguments[1];
		var sWhere = '';
		for(var i=0; i<arrCon.length; i++)
		{
			var sWherePer='';
			var field = arrCon[i];
			if(!this.IsColumn(field)) continue;
			sWherePer += field;
			sWherePer += '=';
			if(this.GetFieldType(field)) sWherePer += this.arrData[field][rowIndex];
			else sWherePer = sWherePer + "'" + this.arrData[field][rowIndex] + "'";
			if(!Webcrea.IsEmpty(sWhere)) sWhere = sWhere + ' and ' + sWherePer;
			else sWhere = sWherePer;
		}
		return sWhere;
	},
	IsBulletDiv : function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		if(currNode.tagName != 'DIV') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'bulletcolor' || role == 'bulletimage' || role == 'bullettree') bRet = true;
		return bRet;
	},
	IsCodeButtonDiv : function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		if(currNode.tagName != 'DIV') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'codebtndiv') bRet = true;
		return bRet;
	},
	IsCodeButton : function(currNode) {
		var bRet = false;
		var code = currNode.getAttribute('codeobj');
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(nFileVersion<7020170912001) code = currNode.getAttribute('code');
		if(code && code.toLowerCase()=='code') bRet = true;
		return bRet;
	},
	IsCodeCalendar : function(currNode) {
		var bRet = false;
		var code = currNode.getAttribute('codeobj');
		if(code && code.toLowerCase()=='code')
		{
			var type = currNode.getAttribute('realType');
			if(type && (type.toLowerCase()=='date' || type.toLowerCase()=='month' || type.toLowerCase()=='datetime')) bRet = true;
		}
		return bRet;
	},
	IsColumn : function(sField)
	{
		return this.GetColumn(sField)>=0?true:false;
	},
	IsColumnNumber : function(sField)
	{
		var n = this.GetColumn(sField);
		return this.arrFieldType[n]==1?true:false;
	},
	IsDisplayDataRow : function(nDataRow)
	{
		return this.IsDisplaySelectRow(nDataRow, true);
	},
	IsDisplaySelectRow : function(nRow, bData)
	{
		var firstNode = this.GetGridRowNode();
		var lastNode = this.GetGridRowNode(true);
		if(!firstNode || !lastNode) return false;
		var nFirst = firstNode.getAttribute('rowno');
		var nLast = lastNode.getAttribute('rowno');
		var nDataRow = nRow;
		if(!bData) nDataRow = this.GetRowDataNo(nDataRow, true);
		var bRet = false;
		nDataRow = Number(nDataRow);
		if(nDataRow >= nFirst && nDataRow <= nLast) bRet = true;
		return bRet;
	},
	IsDummyRow : function(nRow, bData) {
		var bRet = false;
		if(this.IsGrid())
		{
			var nRowData = (bData)?nRow:this.GetRowDataNo(nRow, true);
			if(nRowData == null || nRowData > this.arrRows.length-1) bRet = true;
		}
		return bRet;
	},
	IsHorzScroll : function() {
		var bRet = false;
		if(!this.IsGrid()) return bRet;
		var nVSHeight1 = this.objDivPos.scrollWidth;
		var nVSHeight2 = this.objDivPos.clientWidth;
		if(nVSHeight1>nVSHeight2) bRet = true;
		return bRet;
	},
	DisableEvent : function(id)
	{
		var obj = id;
		obj = {};
		obj.id = id;
		if(!this.arrEvent) this.arrEvent = [];

		var event;
		var n = this.arrEvent.searchId(id);
		if(n>=0) event = this.arrEvent[n];
		else
		{
			event = obj;
			this.arrEvent[this.arrEvent.length] = event;
		}
		event.enable = false;
		return event;
	},
	IsEnableEvent : function(id)
	{
		var bRet = true;
		if(!this.arrEvent) return true;
		var n = this.arrEvent.searchId(id);
		if(n>=0)
		{
			event = this.arrEvent[n];
			bRet = event.enable;
		}
		return bRet;
	},
	RemoveEvent : function(id)
	{
		if(Webcrea.IsEmpty(id)) this.arrEvent = [];
		else this.arrEvent.removeById(id);
	},
	IsLastRow : function(nRow, bData) {
		var bRet = false;
		if(this.IsGrid())
		{
			if(bData)
			{
				var nRowData = this.GetRowDataNo(nRow);
				if(nRowData == this.arrRows.length-1) bRet = true;
			}
			else
			{
				var nRowCom = this.nRowsPage;
				if(nRowCom>this.arrRows.length) nRowCom = this.arrRows.length;
				bRet = (nRow==nRowCom-1)?true:false;
			}
		}
		return bRet;
	},
	IsLastCol : function(currField) {
		var bRet = false;
		var cellInfo = this.GetCellInfo(currField);
		if(cellInfo)
		{
			var findCell;
			for(var i=0; i<this.nDataRow; i++)
			{
				var tr = this.objTable.rows[this.nHeader+i];
				var trChildNodes = tr.childNodes;
				for(var j=trChildNodes.length-1; j>=0; j--)
				{
					var td = trChildNodes[j];
					if (td.nodeName == 'TD'){
						var colChildNodes = td.childNodes;
						if(Webcrea.IsEditTd(td))
						{
							colChildNodes = [];
							colChildNodes[0] = td;
						}
						for(var k=0; k<td.childNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							if (cell.nodeName == '#text') continue;
							var id = cell.getAttribute('orgId');
							if(!id) continue;
							if(id == currField)
							{
								findCell = cell;
								break;
							}
						}
						if(!findCell && td.childNodes.length==0)
						{
							var id = td.getAttribute('orgId');
							if(id == currField) findCell = td;
						}
						break;
					}
				}
				if(findCell)
				{
					bRet = cellInfo.bDisplay;
					break;
				}
			}
		}
		return bRet;
	},
	IsMultiSelectBox : function(currNode)
	{
		var bRet = false;
		if(!currNode) return bRet;
		var id = this.GetCellId(currNode);
		if(this.IsMySelectBox(currNode) && this.IsMulti(id)) bRet = true;
		return bRet;
	},
	IsMySelectBox : function(currNode)
	{
		var bRet = false;
		if(!currNode) return bRet;
		if(currNode.nodeName == '#text') return bRet;
		var role = currNode.getAttribute('role');
		if(currNode.nodeName == 'INPUT' && (role == 'selectboxinput' || role == 'selectbox')) bRet = true;
		return bRet;
	},
	IsMySelectBoxPublic : function(currNode)
	{
		var bRet = false;
		if(!currNode) return bRet;
		if(currNode.nodeName == '#text') return bRet;
		var role = currNode.getAttribute('role');
		if(this.IsMySelectBox(currNode) && role == 'selectbox') bRet = true;
		return bRet;
	},
	IsScroll : function() {
		if(this.objVSTHDivPos && this.objVSTHDivPos.style.display == 'block') return true;
		return false;
	},
	IsCustomView : function()
	{
		if(this.objType == 11) return true;
		return false;
	},
	IsStatCrossTab : function() {
		return this.IsCrossTab() && !Webcrea.IsEmpty(this.statOptInfo.statParam);
	},
	IsCrossTab : function() {
		return this.bCrossTab;
	},
	IsForm : function() {
		if(this.objType == 0) return true;
		return false;
	},
	IsFilterHeader : function() {
		if(this.arrFilterObj.length>0) return true;
		return false;
	},
	IsGrid : function() {
		if(this.objType == 1 || this.IsList()) return true;
		return false;
	},
	IsImage : function() {
		if(this.objType == 13) return true;
		return false;
	},
	IsMedia : function() {
		if(this.objType == 15) return true;
		return false;
	},
	IsSchedule : function() {
		if(this.objType == 16) return true;
		return false;
	},
	IsList : function() {
		if(this.objType == 10 || this.IsListTreeGrid()) return true;
		return false;
	},
	IsGroup : function (currField){
		var cellInfo = this.GetCellInfo(currField);
		if(!cellInfo || (cellInfo && !cellInfo.nGroup)) return 0;
		var nGroup = cellInfo.nGroup;
		if(nGroup && cellInfo.type == 'radio') nGroup = 0;
		return nGroup;
	},
	IsGroupBox : function() {
		if(this.objType == 8) return true;
		return false;
	},
	IsHScroll : function() {
		if(!this.IsGrid()) return false;
		return Webcrea.IsHScroll(this.objDivPos, this);
	},
	IsMenu : function() {
		return false;
	},
	IsPageScroll : function() {
		if(this.objType == 7) return true;
		return false;
	},
	IsGroupData : function(currField, rowData, mode, bBottom) {
		var bRet = false;
		if(!bBottom && rowData<=0) return bRet;
		if(bBottom && rowData>=this.arrRows.length) return bRet;
		if(mode==1 || mode==3)
		{
			var str = '';
			var strCom = '';
			if(this.IsColumn(currField))
			{
				str = this.arrData[currField][rowData];
				strCom = (!bBottom)?this.arrData[currField][rowData-1]:this.arrData[currField][rowData+1];
			}
			else return bRet;
			if(str == strCom) bRet = true;
			if(bRet)
			{
				if(this.IsCrossTab())
				{
					var n = this.arrCrossDisplayColCellId.isearch(currField);
					for(var i=n-1; i>=0; i--)
					{
						var prevId = this.arrCrossDisplayColCellId[i];
						var prevCell = this.GetCellInfo(prevId);
						if(!prevCell) break;
						if(prevCell.tagName == 'LABEL') continue;
						var field = prevCell.field;
						if(Webcrea.IsEmpty(field))
						{
							var cellId = prevCell.orgId;
							if(!this.IsColumn(cellId)) break;
							else field = cellId;
						}
						var nGroup = this.IsGroup(field);
						if(nGroup != 1 && nGroup != 3) break;

						var nField = this.GetColumn(field);
						if(nField<0)
						{
							bRet = false;
							break;
						}
						field = this.arrField[nField];
						var str = this.arrData[field][rowData];
						var strCom = (!bBottom)?this.arrData[field][rowData-1]:this.arrData[field][rowData+1];
						if(str == strCom) bRet = true;
						else
						{
							bRet = false;
							break;
						}
					}
				}
				else
				{
					var cellInfo = this.GetCellInfo(currField);
					var n = this.arrCellId.isearch(cellInfo.id);
					var groupKey = cellInfo.groupKey;
					var nStop = 0;
					if(!Webcrea.IsEmpty(groupKey))
					{
						var n1 = this.arrCellId.isearch(groupKey);
						if(n1<=n)
						{
							n=n1+1;
							nStop = n1;
						}
						else nStop = n;
					}
					for(var i=n-1; i>=nStop; i--)
					{
						var prevId = this.arrCellId[i];
						var prevCell = this.GetCellInfo(prevId);
						if(!prevCell) break;
						if(prevCell.tagName == 'LABEL') continue;
						var field = prevCell.field;
						if(Webcrea.IsEmpty(field))
						{
							var cellId = prevCell.orgId;
							if(!this.IsColumn(cellId)) break;
							else field = cellId;
						}
						var nGroup = this.IsGroup(field);
						if(nGroup != 1 && nGroup != 3) break;

						var nField = this.GetColumn(field);
						if(nField<0)
						{
							bRet = false;
							break;
						}
						field = this.arrField[nField];
						var str = this.arrData[field][rowData];
						var strCom = (!bBottom)?this.arrData[field][rowData-1]:this.arrData[field][rowData+1];
						if(str == strCom) bRet = true;
						else
						{
							bRet = false;
							break;
						}
					}
				}
			}
		}
		else if(mode==2)
		{
			for(var i=0; i<this.cellGroup.length; i++)
			{
				var field = this.cellGroup[i];
				var nField = this.GetColumn(field);
				if(nField<0)
				{
					bRet = false;
					break;
				}
				field = this.arrField[nField];
				var str = this.arrData[field][rowData];
				var strCom = this.arrData[field][rowData-1];
				if(str == strCom) bRet = true;
				else
				{
					bRet = false;
					break;
				}
			}
		}
		return bRet;
	},
	IsText : function() {
		if(this.objType == 9) return true;
		return false;
	},
	IsTreeGrid : function() {
		return this.IsGrid() && this.IsSetTree();
	},
	IsListTreeGrid : function() {
		if(this.objType == 18) return true;
	},
	IsProc : function() {
		if(this.objType == 2) return true;
		return false;
	},
	IsPanel : function() {
		if(this.objType == 3) return true;
		return false;
	},
	IsStat : function() {
		if(this.objType == 14) return true;
		return false;
	},
	IsSignPad : function() {
		if(this.objType == 17) return true;
		return false;
	},
	IsTab : function() {
		if(this.objType == 4) return true;
		return false;
	},
	IsHtml : function() {
		if(this.objType == 5) return true;
		return false;
	},
	IsViewControl : function() {
		if(this.objType == 19) return true;
		return false;
	},
	IsChart : function() {
		if(this.objType == 6 || this.objType == 12) return true;
		return false;
	},
	IsGoogleChart : function() {
		if(this.objType == 12) return true;
		return false;
	},
	IsRMateChart : function() {
		if(this.objType == 6) return true;
		return false;
	},
	IsCalendar : function() {
		if(this.bCalendar) return true;
		return false;
	},
	IsListSearch : function() {
		var cellId = arguments[0];
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return false;
		return cellInfo.bListSearch;
	},
	IsLoadAll : function() {
		return !this.bMore;
	},
	IsMulti : function(cellId) {
		var bMulti = false;
		var objSub = this.GetObject(cellId);
		if(objSub) bMulti = objSub.IsMulti();
		return bMulti;
	},
	IsMultiSelectCell : function(cell) {
		var bRet = false;
		var cellId = '';
		if(Webcrea.IsEmpty(cell))
		{
			var findId = this.divPos + Webcrea.divId + '_SELECT_';
			if(this.arrCellId.isearch(findId)>=0) bRet = true;
			return bRet;
		}
		if(Webcrea.IsObject(cell))
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion>=7020170720002)
			{
				cellId = cell.orgid;
				if(!cellId && cell.tagName == 'TD') cellId = cell.getAttribute('layoutid');
			}
			else cellId = cell.orgId;
			if(!cellId) cellId = this.GetCellId(cell);
		}
		else cellId = this.GetCellId(cell);
		if(!Webcrea.IsEmpty(cellId) && (cellId.toLowerCase() == '_select_h' || cellId.toLowerCase() == '_select_')) bRet = true;
		return bRet;
	},
	IsSearch : function() {
		return this.arrRows ? true : false;
	},
	IsSpaceText : function() {
		var cellId = arguments[0];
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return false;
		return cellInfo.bSpaceText;
	},
	IsSpinButton : function(currNode) {
		var bRet = false;
		var code = currNode.getAttribute('codeobj');
		if(code && code.toLowerCase()=='spinbtn') bRet = true;
		return bRet;
	},
	IsStatusCell : function(cell) {
		var bRet = false;
		var cellId = '';
		if(Webcrea.IsObject(cell))
		{
			cellId = cell.getAttribute('orgId');
			if(!cellId) cellId = this.GetCellId(cell);
		}
		else cellId = this.GetCellId(cell);
		if(!Webcrea.IsEmpty(cellId) && cellId.toLowerCase() == '_status_') bRet = true;
		return bRet;
	},
	IsSortBtnCell : function() {
		var cell = arguments[0];
		if(!cell) return false;
		var role = null;
		if(cell.getAttribute) role = cell.getAttribute('role');
		return role && role=='sort'?true:false;
	},
	IsSumRow : function(nRowData, bDisplayRowNo) {
		var nRet = 0;
		if(this.arrRowInfo)
		{
			nRowData = bDisplayRowNo?this.GetRowDataNo(nRowData, true):nRowData;
			if(this.arrRowInfo[nRowData] && this.arrRowInfo[nRowData].mode=='total') nRet=2;
			else if(this.arrRowInfo[nRowData] && this.arrRowInfo[nRowData].mode=='sum') nRet=1;
		}
		return nRet;
	},
	IsSumRow_Filter : function(nRowData, bDisplayRowNo) {
		var nRet = 0;
		if(this.IsGrid())
		{
			nRowData = bDisplayRowNo?this.GetRowDataNo(nRowData, true):nRowData;
			if(this.arrRowInfo_Filter[nRowData] && this.arrRowInfo_Filter[nRowData].mode=='total') nRet=2;
			else if(this.arrRowInfo_Filter[nRowData] && this.arrRowInfo_Filter[nRowData].mode=='sum') nRet=1;
		}
		return nRet;
	},
	IsVScroll : function() {
		var bHeightOnly = arguments[0];
		if(!this.IsGrid()) return false;
		return Webcrea.IsVScroll(this.objDivPos, this, bHeightOnly);
	},
	AddObject : function(obj) {
		this.arrObject[this.arrObject.length] = obj;
	},
	GetObject : function(cellId) {
		var findObj = null;
		for(var i=0; i<this.arrObject.length; i++)
		{
			var cellIdFull = this.divPos + '.' + this.arrObject[i].cellId;
			if(this.arrObject[i].cellId.toLowerCase() == cellId.toLowerCase() || cellIdFull.toLowerCase() == cellId.toLowerCase())
			{
				findObj = this.arrObject[i];
				break;
			}
		}
		return findObj;
	},
	SetCheck : function(cellId) {
		if(cellId && cellId != '')
		{
			var cell = null;
			if(this.IsCrossTab()) cell = Webcrea.GetEventNode();
			else cell = this.GetCellNode(cellId);
			if(cell && cell.nodeName == 'INPUT' && cell.type == 'checkbox')
			{
				var obj = this.GetObject(cellId);
				obj.SetCheck(cell);
			}
		}
	},
	ToNumber : function()
	{
		Webcrea.ToNumber(this, arguments[0]);
	},
	ToString : function()
	{
		Webcrea.ToString(this, arguments[0]);
	},
	URL : function() {
		var ___param = arguments[0];
		if(___param == '') return;
		if(!this.IsHtml() && !this.IsViewControl()) return;
		___param=___param.replaceAll('\\','/');
		let bHttpCall = false;
		if(___param.indexOf('http://') == 0 || ___param.indexOf('https://') == 0 || ___param.indexOf('www') == 0) bHttpCall = true;
		else if(___param.indexOf('./') == 0 || ___param.indexOf('..') == 0) bHttpCall = true;
		if(!bHttpCall)
		{
			let rootPath = '.';
			if(!Webcrea.IsEmpty(Webcrea.framePath)) rootPath = Webcrea.framePath;
			___param = rootPath + '/' + ___param;
		}
		___param = Webcrea.HtmlCachePrev(___param);
		var objPos;
		var id = this.divPos + 'Html';
		var objHtmlPos = Webcrea.FindNode(this.objDivPos, 'id', id);
		if(objHtmlPos)
		{
			var orgDivPos = Webcrea.FindNode(this.orgPage, 'id', this.divPos);
			var orgPos = Webcrea.FindNode(orgDivPos, 'name', 'IFRAME');
			var parent = objHtmlPos.parentNode;
			if(parent)
			{
				parent.innerHTML = orgPos.outerHTML;
				objPos = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
			}
		}
		else objPos = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
		if(objPos)
		{
			var n = ___param.lastIndexOf('http');
			if(n<0)
			{
				n = ___param.lastIndexOf('www');
				if(n==0) ___param = 'http://' + ___param;
			}
			objPos.src = ___param;
		}
	},
	_Get_AutoCalc : function()
	{
		return this.bAutoCalc;
	},
	_Set_AutoCalc : function()
	{
		this.bAutoCalc = arguments[0];
	},
	_Get_Autocapitalize : function()
	{
		var cellId = arguments[0];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		return cell.getAttribute('autocapitalize');
	},
	_Set_Autocapitalize : function()
	{
		var param = arguments[0];
		var cellId = arguments[1];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		cell.setAttribute('autocapitalize', param);
	},
	_Get_AutoClick : function()
	{
		return this.autoClickSec;
	},
	_Set_AutoClick : function()
	{
		var sec = arguments[0];
		var cellId = arguments[1];
		if(Webcrea.IsEmpty(sec) || Webcrea.IsEmpty(cellId)) return;
		this.autoClickSec = sec;
		var func = this.objName + ".OnCLICK('" + cellId + "')";
		setTimeout(func, sec);
	},
	_Get_AutoScroll : function()
	{
		return this.nAutoScroll;
	},
	_Set_AutoScroll : function()
	{
		this.nAutoScroll = arguments[0];
		if((this.nAutoScroll == 1 || this.nAutoScroll == 2) && this.bInitHScroll && !this.layoutOpt.bVert)
		{
			var objBlind=Webcrea.FindNodePublic(this.objGDivPos,'id',this.objName+'_HScrollBlind');
			if(!objBlind)
			{
				var zIndex = '';
				var divHCSS = Webcrea.GetCSS('#' + this.divPage + ' #' + this.divPos + 'H');
				if(divHCSS) zIndex = divHCSS.style.zIndex;
				if(Webcrea.IsEmpty(zIndex)) zIndex='999';
				var scrlHeight = this.nScrlWidth;
				if(!this.bMyHScroll) scrlHeight -= 3;
				var divScroll = document.createElement('div');
				divScroll.id = this.objName+'_HScrollBlind';
				divScroll.style.width='100%';
				divScroll.style.zIndex=zIndex;
				divScroll.style.height=scrlHeight+'px';
				divScroll.style.position='absolute';
				divScroll.style.bottom='0';
				divScroll.style.background=this.colorBackground;
				divScroll.style.display='block';
				this.objGDivPos.appendChild(divScroll);
			}
		}
		this.DisplayScroll();
	},
	_Get_BrowserObj : function()
	{
		return this.bBrowserObj;
	},
	_Set_BrowserObj : function()
	{
		this.bBrowserObj = arguments[0];
	},
	_Get_Bullet : function()
	{
		var cellId = arguments[0];
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return;
		return cellInfo.bullet;
	},
	_Set_RightBullet : function()
	{
		var bullet = arguments[0];
		var cellId = arguments[1];
		this._Set_Bullet(bullet, cellId, '', false, '', true);
	},
	_Set_Bullet : function()
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var bullet = arguments[0];
		var cellId = arguments[1];
		var rowNo = arguments[2];
		var bTree = arguments[3];
		var treePadding = arguments[4];
		var bParamRight = arguments[5];
		var id = '';
		var bLayoutCell = false;
		var cellInfo = null;
		if(Webcrea.IsObject(cellId))
		{
			cellInfo = cellId;
			cellId = cellInfo.id;
		}
		else cellInfo = this.GetCellInfo(cellId);
		if(Webcrea.IsEmpty(rowNo))
		{
			rowNo = this.GetCurrRowIndex();
			rowNo = this.GetRowDataNo(rowNo);
		}
		if(cellInfo && this.IsGrid())
		{
			var bGroupStart = this.IsGroupStart(cellInfo.orgId, rowNo);
			var nGroup = this.IsGroup(cellInfo.orgId);
			if(nGroup && !bGroupStart) return;
		}
		if(Webcrea.IsEmpty(bullet) && !bTree)
		{
			if(cellInfo && (cellInfo.lBullet || cellInfo.rBullet))
			{
				this._Set_BulletColor('', cellId, rowNo);
				return;
			}
		}
		if(bTree) id = this.divPos + '.' + 'bullet' + rowNo;
		var currObj = this;
		var SetBullet = function(layoutId, bLeft, bRight)
		{
			var bulletPath = '';
			if(!Webcrea.IsEmpty(bullet)) bulletPath = Webcrea.GetImageLinkPath() + '/' + bullet;
			var divBullet = document.createElement('div');
			var divSubBullet = document.createElement('img');
			var sRole = 'bulletimage';
			if(bTree) sRole = 'bullettree';
			divBullet.setAttribute('role', sRole);
			divSubBullet.setAttribute('role', sRole);
			divSubBullet.src = bulletPath;
			divSubBullet.id = id;
			if(bLeft) divBullet.appendChild(divSubBullet);
			var SetRightBullet = function(parentDiv)
			{
				if(parentDiv.tagName != 'DIV')
				{
					var divSubBullet_c = divSubBullet.cloneNode();
					divBullet.appendChild(currNode);
					divBullet.appendChild(divSubBullet_c);
					parentDiv.appendChild(divBullet);
				}
				else
				{
					var divSubBullet_c = divSubBullet.cloneNode();
					parentDiv.appendChild(divSubBullet_c);
				}
			};
			if(currObj.IsForm() || currObj.IsGrid())
			{
				var findName = 'id';
				if(bLayoutCell) findName = 'layoutid';
				var currNode = null;
				if(currObj.IsGrid())
				{
					if(cellInfo && cellInfo.bDataRow)
					{
						currNode = Webcrea.FindNode(currObj.objDivPos, findName, layoutId + rowNo);
						if(currNode && (currNode.tagName == 'TR' || currNode.tagName == 'DIV')) currNode = Webcrea.FindNode(currNode, findName, layoutId + rowNo);
					}
					else currNode = Webcrea.FindNode(currObj.objHDivPos, findName, layoutId);
				}
				else
				{
					currNode = Webcrea.FindNode(currObj.objDivPos, findName, layoutId);
					if(currNode.tagName == 'DIV')
					{
						var currNodeT = Webcrea.FindNodePublic(currNode, findName, layoutId);
						if(currNodeT) currNode = currNodeT;
					}
				}
				if(!currNode) return;
				if(currObj.IsStatusCell(currNode)) return;
				if(Webcrea.IsEditTd(currNode)) return;
				if(bLayoutCell && currNode.tagName == 'TD')
				{
					currNode = Webcrea.FindNode(currNode, 'name', 'span');
					if(!currNode) return;
				}
				var sPosition = '';
				if(currNode.tagName == 'SPAN' && nFileVersion<7020181119001) sPosition = 'position:absolute;left:0px;';
				divSubBullet.setAttribute('style', sPosition + 'border:0px;padding:0px;margin:0px;vertical-align:middle;');
				if(Webcrea.IsEmpty(bulletPath)) divSubBullet.style.width = '0px';
				var bBulletColor = false;
				var parentDiv = currNode.parentNode;
				if(parentDiv.tagName == 'DIV')
				{
					var role = parentDiv.getAttribute('role');
					if(role == 'bulletcolor')
					{
						bBulletColor = true;
						parentDiv.setAttribute('role', 'bulletimage');
						parentDiv.setAttribute('style', 'position:relative;width:100%;display:block;');
					}
					else if(role != 'bulletimage') parentDiv = null;
				}
				else parentDiv = null;
				var tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
				if(tdNode) tdNode.style.height = '';
				if(parentDiv)
				{
					if(bBulletColor)
					{
						var subDiv = parentDiv.firstChild;
						if(subDiv && subDiv.getAttribute('role') == 'bulletcolor') parentDiv.removeChild(subDiv);
						if(bLeft) parentDiv.insertBefore(divSubBullet, currNode);
						var subDivLast = parentDiv.lastChild;
						if(subDivLast && subDivLast.getAttribute('role') == 'bulletcolor') parentDiv.removeChild(subDivLast);
						if(bRight) SetRightBullet(parentDiv);
						var width = Webcrea.GetWidth(currNode);
						var bulletWidth = Webcrea.GetWidth(divSubBullet);
						if(bulletWidth<16) bulletWidth = 16;
					}
					else
					{
						var bulletWidthLeft = 0;
						var bulletWidthRight = 0;
						var subImg = parentDiv.firstChild;
						var subImgLast = parentDiv.lastChild;
						if(subImg && subImg.tagName == 'IMG') bulletWidthLeft = Webcrea.GetWidth(subImg);
						if(subImgLast && subImgLast.tagName == 'IMG') bulletWidthRight = Webcrea.GetWidth(subImgLast);
						if(bLeft)
						{
							if(subImg && subImg.tagName == 'IMG')
							{
								if(!Webcrea.IsEmpty(bulletPath)) subImg.src = bulletPath;
								else parentDiv.removeChild(subImg);
							}
							else parentDiv.insertBefore(divSubBullet, currNode);
						}
						if(bRight)
						{
							if(subImgLast && subImgLast.tagName == 'IMG')
							{
								if(!Webcrea.IsEmpty(bulletPath)) subImgLast.src = bulletPath;
								else
								{
									bulletWidth = bulletWidthLeft;
									parentDiv.removeChild(subImgLast);
								}
							}
							else SetRightBullet(parentDiv);
						}
					}
				}
				else
				{
					var padding = currNode.style.padding;
					if(!currObj.IsTreeGrid() && tdNode && !Webcrea.IsEmpty(padding) && !bRight)
					{
						var arrPadding = padding.split(' ');
						if(arrPadding.length>1) tdNode.style.padding = '0px ' + arrPadding[1];
					}
					divBullet.setAttribute('style', 'position:relative;width:100%;display:block;');
					var parent = currNode.parentNode;
					if(parent)
					{
						if(!bTree && currObj.IsTreeGrid())
						{
							if(bLeft)
							{
								if(Webcrea.IsEmpty(bulletPath))
								{
									if(currNode.tagName == 'TD')
									{
										var prevNode = currNode.firstChild;
										if(prevNode && prevNode.tagName == 'IMG' && prevNode.getAttribute('role') == 'bulletimage') currNode.removeChild(prevNode);
									}
									else
									{
										var prevNode = currNode.previousElementSibling;
										if(prevNode && prevNode.tagName == 'IMG' && prevNode.getAttribute('role') == 'bulletimage') parent.removeChild(prevNode);
									}
								}
								else
								{
									if(parent.tagName == 'DIV')
									{
										parent.insertBefore(divSubBullet, currNode);
										parent.appendChild(currNode);
									}
									else if(parent.tagName == 'TD')
									{
										parent.insertBefore(divBullet, currNode);
										divBullet.appendChild(currNode);
									}
								}
							}
							if(bRight)
							{
								if(Webcrea.IsEmpty(bulletPath))
								{
									if(currNode.tagName == 'TD')
									{
										var nextNode = currNode.lastChild;
										if(nextNode && nextNode.tagName == 'IMG' && nextNode.getAttribute('role') == 'bulletimage') currNode.removeChild(nextNode);
									}
									else
									{
										var nextNode = currNode.nextElementSibling;
										if(nextNode && nextNode.tagName == 'IMG' && nextNode.getAttribute('role') == 'bulletimage')
										{
											if(parent.tagName == 'TR') currNode.removeChild(nextNode);
											else parent.removeChild(nextNode);
										}
									}
								}
								else
								{
									if(parent.tagName == 'TR') SetRightBullet(currNode);
									else SetRightBullet(parent);
								}
							}
						}
						else
						{
							parent.insertBefore(divBullet, currNode);
							divBullet.appendChild(currNode);
							if(bRight) SetRightBullet(divBullet);
						}
						var width = Webcrea.GetWidth(currNode);
						var bulletWidth = Webcrea.GetWidth(divSubBullet);
						if(bulletWidth<16 && !Webcrea.IsEmpty(bulletPath))
						{
							divSubBullet.onload=function(){
								if(!bBulletColor){
									var w = this.width;
									var h = this.height;
									if(w<16) w = 16;
									if(bTree)
									{
										var parentNode = currNode.parentNode;
										var bulletNode = Webcrea.FindNode(parentNode, 'role', 'bulletimage');
										if(!bulletNode)
										{
											currNode.style.width = 'calc(100% - ' + w + 'px)';
											currNode.style.width = '-webkit-calc(100% - ' + w + 'px)';
											currNode.style.width = '-moz-calc(100% - ' + w + 'px)';
										}
									}
								}
							};
							bulletWidth = 16;
						}
						if(bTree)
						{
							var parentNode = currNode.parentNode;
							var bulletNode = Webcrea.FindNode(parentNode, 'role', 'bulletimage');
							if(!bulletNode)
							{
								currNode.style.width = 'calc(100% - ' + bulletWidth + 'px)';
								currNode.style.width = '-webkit-calc(100% - ' + bulletWidth + 'px)';
								currNode.style.width = '-moz-calc(100% - ' + bulletWidth + 'px)';
							}
						}
						else
						{
							var nPadding = currNode.style.paddingLeft;
							if(!nPadding) nPadding = 0;
							nPadding = Extract(nPadding, '[0-9]');
							nPadding = Number(nPadding);
							var cellId1 = currObj.GetCellId(currNode);
							var data = '';
							if(bLayoutCell) data = currNode.textContent;
							else data = currObj.GetValue(cellId1, rowNo);
							if(!Webcrea.IsEmpty(data))
							{
								var textWidth = Webcrea.GetTextWidth(data, cellId1, currObj);
								currNode.style.width = textWidth + nPadding + 6 + 'px';
							}
							else
							{
								var widthCal = nPadding + bulletWidth;
								currNode.style.width = width - widthCal + 'px';
							}
							if(!parentDiv) parentDiv = currNode.parentNode;
							parentDiv.id = currNode.id;
							parentDiv.setAttribute('orgid', currNode.getAttribute('orgid'));
							parentDiv.readOnly = currNode.readOnly;
							parentDiv.disabled = currNode.disabled;
							if (Webcrea.IsIE69()) parentDiv.attachEvent('onclick', Webcrea.OnONECLK);
							else parentDiv.addEventListener('click', Webcrea.OnONECLK, false);
							if (Webcrea.IsIE69()) parentDiv.attachEvent('ondblclick', Webcrea.OnDBLCLK);
							else parentDiv.addEventListener('dblclick', Webcrea.OnDBLCLK, false);
						}
					}
				}
				if(bTree)
				{
					divSubBullet.setAttribute('onclick', 'Webcrea.OnCLICK(this);');
					if(tdNode && !Webcrea.IsEmpty(treePadding)) tdNode.style.paddingLeft = treePadding + 'px';
				}
				if(currNode.tagName == 'SPAN')
				{
					var height = Webcrea.GetHeight(currNode);
					var heightBullet = Webcrea.GetHeight(divSubBullet);
					if(heightBullet<16) heightBullet = 16;
					var nTop = height - heightBullet;
					if(nTop>1) divSubBullet.style.top = Math.floor(nTop/2)+'px';
					if(currNode.style.display == 'block') currNode.style.display = '';
				}
				if(!currObj.IsTreeGrid() && tdNode && currNode && currNode.getAttribute('indent'))
				{
					var nIndent = currNode.getAttribute('indent');
					tdNode.style.paddingLeft = nIndent + 'px';
					currNode.style.textIndent = '';
					tdNode.setAttribute('indent', nIndent);
				}
			}
		};
		if(Webcrea.IsEmpty(cellId))
		{
			for(var i=0; i<this.arrLayoutCellInfo.length; i++)
			{
				bLayoutCell = true;
				var layoutCellInfo = this.arrLayoutCellInfo[i];
				if(this.IsGrid() && !layoutCellInfo.bDataRow) continue;
				var bLeft = false;
				if(!layoutCellInfo.lBullet && !layoutCellInfo.rBullet && !bParamRight) bLeft = true;
				else bLeft = layoutCellInfo.lBullet;
				if(bLeft && !layoutCellInfo.lBullet) bLeft = false;
				var bRight = bParamRight || layoutCellInfo.rBullet;
				if(!bLeft && !bRight) continue;
				SetBullet(layoutCellInfo.id, bLeft, bRight);
			}
			for(var i=0; i<this.arrCellId.length; i++)
			{
				bLayoutCell = false;
				var id = this.arrCellId[i];
				cellInfo = this.GetCellInfo(id);
				if(cellInfo)
				{
					if(this.IsGrid() && (!cellInfo.bDataRow || Webcrea.IsNull(cellInfo.colno) || cellInfo.colno<0)) continue;
					var bLeft = false;
					if(!cellInfo.lBullet && !cellInfo.rBullet && !bParamRight) bLeft = true;
					else bLeft = cellInfo.lBullet;
					if(bLeft && !cellInfo.lBullet) bLeft = false;
					var bRight = bParamRight || cellInfo.rBullet;
					if(!bLeft && !bRight) continue;
					SetBullet(id, bLeft, bRight);
					if(this.IsGrid())
					{
						for(var j=0; j<this.objTable.rows.length; j++) this._Set_Bullet(bullet, id, j, bTree, treePadding, bParamRight);
					}
				}
			}
			return;
		}
		if(cellInfo)
		{
			bLayoutCell = !cellInfo.cellType;
			var sTagName = cellInfo.tagName;
			var sType = cellInfo.type;
			if(!sTagName) sTagName = '';
			if(!sType) sType = '';
			if(sTagName.iEquals('textarea') || sTagName.iEquals('img') || sType.iEquals('radio') || sType.iEquals('checkbox')) return;
			cellId = cellInfo.id;
			var bLeft = false;
			if(!cellInfo.lBullet && !cellInfo.rBullet && !bParamRight) bLeft = true;
			else bLeft = cellInfo.lBullet;
			var bRight = bParamRight || cellInfo.rBullet;
			if(!bLeft && !bRight) return;
			SetBullet(cellId, bLeft, bRight);
		}
	},
	_Get_BulletColor : function()
	{
		var cellId = arguments[0];
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return;
		return cellInfo.bulletColor;
	},
	_Set_BulletColor : function()
	{
		var color = arguments[0];
		var cellId = arguments[1];
		var rowNo = arguments[2];
		if(Webcrea.IsEmpty(rowNo)) rowNo = this.GetCurrRowIndex();
		var cellInfo = null;
		if(Webcrea.IsObject(cellId))
		{
			cellInfo = cellId;
			cellId = cellInfo.id;
		}
		else cellInfo = this.GetCellInfo(cellId);
		if(cellInfo && this.IsGrid())
		{
			var bGroupStart = this.IsGroupStart(cellInfo.orgId, rowNo);
			var nGroup = this.IsGroup(cellInfo.orgId);
			if(nGroup && !bGroupStart) return;
		}
		var currObj = this;
		var SetBulletColor = function(layoutId, bLeft, bRight)
		{
			var bulletWidth = 3;
			var divBullet = document.createElement('div');
			var divSubBullet = document.createElement('div');
			if(bLeft) divBullet.appendChild(divSubBullet);
			divBullet.setAttribute('role', 'bulletcolor');
			divSubBullet.setAttribute('role', 'bulletcolor');
			if(currObj.IsForm() || currObj.IsGrid())
			{
				var findName = 'id';
				if(!cellInfo || (cellInfo && cellInfo.cellType == 0)) findName = 'layoutid';
				var currNode = null;
				if(currObj.IsGrid())
				{
					if(cellInfo && cellInfo.bDataRow)
					{
						currNode = Webcrea.FindNodePublic(currObj.objDivPos, findName, layoutId + rowNo);
						if(currNode.tagName == 'DIV') currNode = Webcrea.FindNodePublic(currNode, findName, layoutId + rowNo);
					}
					else currNode = Webcrea.FindNodePublic(currObj.objHDivPos, findName, layoutId);
				}
				else
				{
					currNode = Webcrea.FindNodePublic(currObj.objDivPos, findName, layoutId);
					if(currNode.tagName == 'DIV') currNode = Webcrea.FindNodePublic(currNode, findName, layoutId);
				}
				if(!currNode) return;
				if(currObj.IsStatusCell(currNode)) return;
				if((!cellInfo || (cellInfo && cellInfo.cellType == 0)) && currNode.tagName == 'TD')
				{
					currNode = Webcrea.FindNode(currNode, 'name', 'span');
					if(!currNode) return;
				}
				var bBulletImage = false;
				var parentDiv = currNode.parentNode;
				if(parentDiv.tagName == 'DIV')
				{
					var role = parentDiv.getAttribute('role');
					if(role == 'bulletimage')
					{
						var subImg = parentDiv.firstChild;
						if(!subImg || (subImg && subImg.tagName != 'IMG')) return;
						bBulletImage = true;
						parentDiv.setAttribute('role', 'bulletcolor');
						var sHeight = '';
						var height = Webcrea.GetHeight(currNode);
						if(height>0 && currNode.tagName != 'SPAN') sHeight = 'height:' + height + 'px;';
						parentDiv.setAttribute('style', 'width:100%;' + sHeight + 'display:table;');
						divSubBullet.setAttribute('style', 'display:table-cell;background:' + color + ';width:' + bulletWidth + 'px;min-width:' + bulletWidth + 'px;');
					}
					else if(role != 'bulletcolor') parentDiv = null;
				}
				else parentDiv = null;
				if(parentDiv)
				{
					if(bBulletImage)
					{
						if(bLeft)
						{
							var subImg = parentDiv.firstChild;
							if(subImg) parentDiv.removeChild(subImg);
							parentDiv.insertBefore(divSubBullet, currNode);
						}
						if(bRight)
						{
							var subImg = parentDiv.lastChild;
							if(subImg) parentDiv.removeChild(subImg);
							var divSubBullet_c = divSubBullet.cloneNode();
							parentDiv.appendChild(divSubBullet_c);
							currNode.style.width = 'calc(100% - ' + bulletWidth + 'px)';
							currNode.style.width = '-webkit-calc(100% - ' + bulletWidth + 'px)';
							currNode.style.width = '-moz-calc(100% - ' + bulletWidth + 'px)';
						}
					}
					else
					{
						var arrSubDiv = [];
						Webcrea.FindNodeAll(parentDiv, 'name', 'DIV', arrSubDiv);
						for(var i=0; i<arrSubDiv.length; i++)
						{
							var subDiv = arrSubDiv[i];
							subDiv.style.background = color;
						}
					}
				}
				else
				{
					var padding = currNode.style.padding;
					if(!Webcrea.IsEmpty(padding))
					{
						var tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
						if(tdNode) tdNode.style.padding = padding;
					}
					var width = Webcrea.GetWidth(currNode);
					var sHeight = '';
					var height = Webcrea.GetHeight(currNode);
					if(height>0 && currNode.tagName != 'SPAN') sHeight = 'height:' + height + 'px;';
					divBullet.setAttribute('style', 'width:100%;' + sHeight + 'display:table;');
					divSubBullet.setAttribute('style', 'display:table-cell;background:' + color + ';width:' + bulletWidth + 'px;min-width:' + bulletWidth + 'px;');
					var parent = currNode.parentNode;
					if(parent)
					{
						parent.insertBefore(divBullet, currNode);
						divBullet.appendChild(currNode);
						if(bRight)
						{
							var divSubBullet_c = divSubBullet.cloneNode();
							divBullet.appendChild(divSubBullet_c);
						}
						currNode.style.width = 'calc(100% - ' + bulletWidth + 'px)';
						currNode.style.width = '-webkit-calc(100% - ' + bulletWidth + 'px)';
						currNode.style.width = '-moz-calc(100% - ' + bulletWidth + 'px)';
					}
				}
				if(bBulletImage && bLeft && currNode)
				{
					var tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
					tdNode.style.paddingLeft = '';
					if(tdNode && tdNode.getAttribute('indent'))
					{
						var nIndent = tdNode.getAttribute('indent');
						currNode.style.textIndent = nIndent + 'px';
						currNode.setAttribute('indent', nIndent);
					}
				}
			}
		};
		if(Webcrea.IsEmpty(cellId))
		{
			for(var i=0; i<this.arrLayoutCellInfo.length; i++)
			{
				var layoutCellInfo = this.arrLayoutCellInfo[i];
				if(!layoutCellInfo.lBullet && !layoutCellInfo.rBullet) continue;
				if(!Webcrea.IsEmpty(color)) layoutCellInfo.bulletColor = color;
				else if(!Webcrea.IsEmpty(layoutCellInfo.bulletColor)) color = layoutCellInfo.bulletColor;
				SetBulletColor(layoutCellInfo.id, layoutCellInfo.lBullet, layoutCellInfo.rBullet);
			}
			for(var i=0; i<this.arrCellId.length; i++)
			{
				var id = this.arrCellId[i];
				var cellInfo = this.GetCellInfo(id);
				if(cellInfo)
				{
					if(!cellInfo.lBullet && !cellInfo.rBullet) continue;
					if(!Webcrea.IsEmpty(color)) cellInfo.bulletColor = color;
					else if(!Webcrea.IsEmpty(cellInfo.bulletColor)) color = cellInfo.bulletColor;
					SetBulletColor(id, cellInfo.lBullet, cellInfo.rBullet);
					if(this.IsGrid())
					{
						for(var j=0; j<this.objTable.rows.length; j++) this._Set_BulletColor(color, id, j);
					}
				}
			}
			return;
		}
		if(cellInfo)
		{
			if(!cellInfo.lBullet && !cellInfo.rBullet) return;
			cellId = cellInfo.id;
			if(Webcrea.IsEmpty(color)) color = Webcrea.GetBulletColor();
			SetBulletColor(cellId, cellInfo.lBullet, cellInfo.rBullet);
		}
	},
	_Get_EditDown : function()
	{
		return this.bEditDown;
	},
	_Set_EditDown : function()
	{
		this.bEditDown = arguments[0];
	},
	_Get_IsExpanded : function()
	{
		var bRet = false;
		var dataRowNo = this.GetCurrRowDataNo();
		var currTreeObj = this.arrTreeInfo[dataRowNo];
		if(currTreeObj) bRet = currTreeObj.bOpen;
		return bRet;
	},
	_Get_FirstItem : function(cellId) {
		if(!cellId) return;
		var rowNo = '';
		if(this.IsGrid()) rowNo = this.CurRowNo();
		var cell = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.' + cellId + rowNo);
		if(!cell) return;
		var bMySelectBox = this.IsMySelectBox(cell);
		if(cell.nodeName != 'SELECT' && !bMySelectBox && !(cell.nodeName == 'INPUT' && cell.type == 'radio')) return;
		var sRet;
		if(cell.nodeName == 'SELECT')
		{
			if(!cell.options) return;
			if(cell.options.length<1) return;
			sRet = cell.options[0].value;
		}
		else if(bMySelectBox)
		{
			var obj = this.GetObject(cellId);
			if(obj) sRet = obj.FirstItem();
		}
		else if(cell.nodeName == 'INPUT' && cell.type == 'radio') sRet = cell.value;
		return sRet;
	},
	_Get_LastItem : function(cellId) {
		if(!cellId) return;
		var rowNo = '';
		if(this.IsGrid()) rowNo = this.CurRowNo();
		var cell = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.' + cellId + rowNo);
		if(!cell) return;
		var bMySelectBox = this.IsMySelectBox(cell);
		if(cell.nodeName != 'SELECT' && !bMySelectBox && !(cell.nodeName == 'INPUT' && cell.type == 'radio')) return;
		var sRet;
		if(cell.nodeName == 'SELECT')
		{
			if(!cell.options) return;
			if(cell.options.length<1) return;
			sRet = cell.options[cell.options.length-1].value;
		}
		else if(bMySelectBox)
		{
			var obj = this.GetObject(cellId);
			if(obj) sRet = obj.LastItem();
		}
		else if(cell.nodeName == 'INPUT' && cell.type == 'radio')
		{
			var radios = [];
			var trNode = Webcrea.FindParentNode(cell, 'name', 'TR');
			Webcrea.FindNodeAll(trNode, 'name', this.divPos + '.' + cellId, radios);
			if(radios.length>0) sRet = radios[radios.length-1].value;
		}
		return sRet;
	},
	IsGroupStart : function()
	{
		var ___bRet=false;
		var ___cellId = arguments[0];
		var ___rowNo = arguments[1];
		if(!this.arrRows || this.arrRows.length<0) return ___bRet;
		var nCol = this.GetColumn(___cellId);
		if(Webcrea.IsNull(___rowNo)) ___rowNo = this.GetCurrRowIndex();
		var ___str = this.arrData[___cellId][___rowNo];
		var ___str1;
		if(___rowNo>0) ___str1 = this.arrData[___cellId][___rowNo-1];
		if(!___bRet && ___str != ___str1) ___bRet = true;
		return ___bRet?1:'';
	},
	IsGroupEnd : function()
	{
		var ___bRet=false;
		var ___cellId = arguments[0];
		var ___rowNo = arguments[1];
		if(!this.arrRows || this.arrRows.length<0) return ___bRet;
		var nCol = this.GetColumn(___cellId);
		if(Webcrea.IsNull(___rowNo)) ___rowNo = this.GetCurrRowIndex();
		var ___str = this.arrData[___cellId][___rowNo];
		var ___str1;
		if(___rowNo+1<this.arrRows.length) ___str1 = this.arrData[___cellId][___rowNo+1];
		if(!___bRet && ___str != ___str1) ___bRet = true;
		return ___bRet?1:'';
	},
	FirstValue : function() {
		var ___sRet='';
		var ___cellId = arguments[0];
		if(!___cellId) return ___sRet;
		if(!this.arrRows || this.arrRows.length<0) return ___sRet;
		var nCol = this.GetColumn(___cellId);
		if(nCol>=0) ___sRet = this.arrData[this.arrField[nCol]][0];
		return ___sRet;
	},
	_Get_FirstValue : function() {
		return this.FirstValue(arguments[0]);
	},
	LastValue : function() {
		var ___sRet='';
		var ___cellId = arguments[0];
		if(!this.arrRows || this.arrRows.length<0) return ___sRet;
		var nCol = this.GetColumn(___cellId);
		if(nCol>=0) ___sRet = this.arrData[this.arrField[nCol]][this.arrRows.length-1];
		return ___sRet;
	},
	_Get_LastValue : function() {
		return this.LastValue(arguments[0]);
	},
	NextValue : function() {
		var ___sRet='';
		var ___cellId = arguments[0];
		var ___rowNo = arguments[1];
		if(!this.arrRows || this.arrRows.length<0) return ___sRet;
		var nCol = this.GetColumn(___cellId);
		if(Webcrea.IsNull(___rowNo)) ___rowNo = this.GetCurrRowIndex();
		if(nCol>=0 && ___rowNo<this.arrRows.length-1) ___sRet = this.arrData[this.arrField[nCol]][___rowNo+1];
		return ___sRet;
	},
	_Get_NextValue : function() {
		return this.NextValue(arguments[0], arguments[1]);
	},
	PrevValue : function() {
		var ___sRet='';
		var ___cellId = arguments[0];
		var ___rowNo = arguments[1];
		if(!this.arrRows || this.arrRows.length<0) return ___sRet;
		var nCol = this.GetColumn(___cellId);
		if(Webcrea.IsNull(___rowNo)) ___rowNo = this.GetCurrRowIndex();
		if(nCol>=0 && ___rowNo>0) ___sRet = this.arrData[this.arrField[nCol]][___rowNo-1];
		return ___sRet;
	},
	_Get_PrevValue : function() {
		return this.PrevValue(arguments[0], arguments[1]);
	},
	_Get_AutoComplete : function(cellId) {
		if(!cellId) return;
		var rowId = '';
		if(this.IsGrid()) rowId = this.objSelInfo.dataRowNo;
		var cell = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + '.' + cellId + rowId);
		if(!cell) return;
		if(cell.type != 'text') return;
		return cell.autocomplete;
	},
	_Set_AutoComplete : function(sOpt, cellId) {
		if(!cellId) return;
		var rowId = '';
		if(this.IsGrid()) rowId = this.objSelInfo.dataRowNo;
		var cell = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + '.' + cellId + rowId);
		if(!cell) return;
		if(cell.tagName != 'input' && cell.type != 'text') return;
		cell.autocomplete = sOpt;
	},
	_Set_BackImage : function(image, cellId) {
		if(!cellId) return;
		if(!Webcrea.IsEmpty(image))
		{
			var arr = image.split(',');
			image = arr[0].trim();
		}
		var rowId = '';
		if(this.IsGrid()) rowId = this.objSelInfo.dataRowNo;
		var cell = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + '.' + cellId + rowId);
		if(!cell) return;
		if(cell.type == 'checkbox' || cell.type == 'radio' || cell.tagName.iEquals('img'))
		{
			var findNode;
			var nodeParent = cell.parentNode;
			while(nodeParent)
			{
				var sClass = nodeParent.getAttribute('class');
				if(nodeParent.tagName == 'DIV' && sClass)
				{
					findNode = nodeParent;
					break;
				}
				nodeParent = nodeParent.parentNode;
			}
			if(!findNode) return;
			cell = findNode;
		}
		if(!Webcrea.IsEmpty(image))
		{
			cell.style.backgroundImage = "url('" + Webcrea.GetImageLinkPath() + "/" + image + "')";
			cell.style.backgroundRepeat = 'no-repeat';
			cell.style.backgroundSize = '100% 100%';
		}
		else
		{
			cell.style.backgroundImage = '';
			cell.style.backgroundRepeat = '';
			cell.style.backgroundSize = '';
		}
	},
	_Get_BackImage : function(cellId) {
		if(!cellId) return;
		var cell = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + '.' + cellId);
		if(!cell) return;
		if(cell.type == 'checkbox' || cell.type == 'radio')
		{
			var findNode;
			var nodeParent = cell.parentNode;
			while(nodeParent)
			{
				var sClass = nodeParent.getAttribute('class');
				if(nodeParent.tagName == 'DIV' && sClass)
				{
					findNode = nodeParent;
					break;
				}
				nodeParent = nodeParent.parentNode;
			}
			if(!findNode) return;
			cell = findNode;
		}
		var sImg = cell.style.backgroundImage;
		var n = sImg.lastIndexOf('/');
		return sImg.substr(n+1, sImg.length-n-3);
	},
	_Set_BuildThread : function(b) {
		this.BuildThread = b;
	},
	_Get_BuildThread : function() {
		return this.BuildThread;
	},
	_Set_CanSelectAll : function(b) {
		this.ReadOnly('_SELECT_', !b, this.objHTable);
		this.bCanSelectAll = b;
	},
	_Get_CanSelectAll : function() {
		return this.bCanSelectAll;
	},
	_Set_CellGroup : function(param) {
		this.cellGroup = [];
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var field = arr[i].trim();
			var cellInfo = this.GetCellInfo(field);
			if(cellInfo) cellInfo.nGroup = 2;
			this.cellGroup[this.cellGroup.length] = field;
		}
		if(arr.length>0) this.DisplayPublic();
	},
	_Get_CharType : function(cellId) {
		if(!cellId) return;
		var cell = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + '.' + cellId);
		if(!cell) return;
		var type = cell.getAttribute('realType');
		if(!type) type='text';
		else type = type.toLowerCase();
		var nType=0;
		if(type == 'date' || type == 'month' || type == 'number' || type == 'digit') nType=3;
		else if(type == 'eng') nType=2;
		return nType;
	},
	_Get_DeleteCount : function() {
		return this.arrStatus.count('-');
	},
	_Get_InsertCount : function() {
		return this.arrStatus.count('+');
	},
	_Get_ModifyCount : function() {
		return this.arrStatus.count('*');
	},
	_Get_DeleteColor : function() {
		return this.colorDelete;
	},
	_Set_DeleteColor : function(color) {
		this.colorDelete = color;
	},
	_Get_FocusColor : function(cellId) {
		if(cellId)
		{
			var cell = this.GetCellInfo(cellId);
			return cell.colorEdit;
		}
		else return this.colorFocus;
	},
	_Set_FocusColor : function(color, cellId) {
		if(cellId)
		{
			var cell = this.GetCellInfo(cellId);
			if(cell) cell.colorEdit = color;
		}
		else this.colorFocus = color;
	},
	_Set_Indent : function(n, cellId) {
		if(cellId)
		{
			var cell = this.GetCellNode(cellId);
			if(!cell) return;
			if(!n) n=0;
			if(n<0) n=0;
			var nIndent = n*10;
			var tdNode;
			if(cell.tagName != 'TD') tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
			else tdNode = cell;
			var bTdApply = false;
			var divNode = Webcrea.FindNode(tdNode, 'name', 'DIV');
			if(divNode && divNode.getAttribute('role') == 'bulletimage') bTdApply = true;
			if(bTdApply)
			{
				tdNode.style.paddingLeft = nIndent + 'px';
				tdNode.setAttribute('indent', nIndent);
			}
			else
			{
				cell.style.textIndent = nIndent + 'px';
				cell.setAttribute('indent', nIndent);
			}
		}
	},
	_Get_InsertColor : function() {
		return this.colorInsert;
	},
	_Set_InsertColor : function(color) {
		this.colorInsert = color;
	},
	_Get_JoinTitle : function() {
		return this.joinTitle;
	},
	_Set_JoinTitle : function(n) {
		this.joinTitle = n;
	},
	_Get_MaxComboList : function() {
		var cellId = arguments[0];
		var maxComboList = 0;
		if(cellId)
		{
			var cell = this.GetCellInfo(cellId);
			if(cell) maxComboList = cell.maxComboList;
		}
		return maxComboList;
	},
	_Set_MaxComboList : function() {
		var maxComboList = arguments[0];
		var cellId = arguments[1];
		if(cellId)
		{
			var cell = this.GetCellInfo(cellId);
			if(cell) cell.maxComboList = maxComboList;
		}
	},
	_Get_ModifyColor : function() {
		return this.colorModify;
	},
	_Set_ModifyColor : function(color) {
		this.colorModify = color;
	},
	_Get_CellColor : function(cellId, nMode) {
		if(!cellId)
		{
			if(nMode && nMode==1) return this.colorDisable;
			else if(nMode && nMode==2) return this.colorReadOnly;
			else return;
		}
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return;
		if(nMode && nMode==1 && cellInfo.bEnable) return;
		if(nMode && nMode==2 && !cellInfo.bReadOnly) return;
		return cell.style.backgroundColor;
	},
	_Set_CellColor : function(color, cellId, nMode) {
		var currObj = this;
		if(color.indexOf('___my_syscolor')==0)
		{
			color = color.replace('___my_syscolor', '');
			color = Webcrea.GetPaletteColor(this, color);
		}
		if(Webcrea.IsAmpObject(cellId))
		{
			var ampObj = cellId;
			cellId = ampObj.cellId;
			if(cellId == undefined) cellId = '';
		}
		if(nMode && nMode==1) this.colorDisable = color;
		else if(nMode && nMode==2) this.colorReadOnly = color;
		CellColor = function(color, cell, bEditTd)
		{
			var cellId = cell.getAttribute('orgId');
			if(!cellId) return;
			var cellInfo = currObj.GetCellInfo(cellId);
			if(!cellInfo) return;
			if(nMode && nMode==1 && cellInfo.bEnable) return;
			if(nMode && nMode==2 && !cellInfo.bReadOnly) return;
			var tdNode;
			if(cell.tagName != 'TD') tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
			if(cell.type == 'checkbox' || cell.type == 'radio')
			{
				var findNode;
				var nodeParent = cell.parentNode;
				while(nodeParent)
				{
					var sClass = nodeParent.getAttribute('class');
					if(nodeParent.tagName == 'TD' && sClass)
					{
						findNode = nodeParent;
						break;
					}
					nodeParent = nodeParent.parentNode;
				}
				if(!findNode) return;
				findNode.style.backgroundColor = color;
				findNode.setAttribute('colorCell', color);
				if(tdNode)
				{
					tdNode.style.backgroundColor = color;
					tdNode.setAttribute('tdColorCell', color);
				}
			}
			else if(bEditTd || cell.nodeName == 'INPUT' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT'
				|| (cell.nodeName == 'DIV' && cell.getAttribute('role') == 'multiline'))
			{
				cell.style.backgroundColor = color;
				cell.setAttribute('colorCell', color);
				if(tdNode)
				{
					tdNode.style.backgroundColor = color;
					tdNode.setAttribute('tdColorCell', color);
				}
				if(cell.nodeName == 'DIV' && cell.getAttribute('role') == 'multiline')
				{
					var multilineDiv = cell.parentElement;
					if(multilineDiv) multilineDiv.style.backgroundColor = color;
				}
			}
		};

		if(!cellId)
		{
			if(!this.objTable) return;
			{
				var nStartTr = this.nHeader;
				var nTr = 0;
				if(this.IsGrid())
				{
					var rowId = this.currRowIndex;
					rowId += this.nHeader;
					nStartTr = rowId;
					nTr = rowId+1;
				}
				else nTr = this.objTable.rows.length;
				for(var i=nStartTr; i<nTr; i++)
				{
					var tr = this.objTable.rows[i];
					var trChildNodes = tr.childNodes;
					for(var j=0; j<trChildNodes.length; j++)
					{
						var td = trChildNodes[j];
						if (td.nodeName == 'TD'){
							if(Webcrea.IsEditTd(td)) CellColor(color, td, true);
							else
							{
								var colChildNodes = td.childNodes;
								for(var k=0; k<td.childNodes.length; k++)
								{
									var cell = colChildNodes[k];
									if(!cell) continue;
									if(!cell.id)
									{
										if(Webcrea.IsMultilineMainDiv(cell)) cell=cell.childElements()[0].childElements()[0];
										else if(Webcrea.IsBulletDiv(cell) || currObj.IsCodeButtonDiv(cell)) cell=Webcrea.FindNodePublic(cell, 'name', 'INPUT');
										else continue;
									}
									CellColor(color, cell);
								}
							}
						}
					}
				}
			}
		}
		else
		{
			var cell = this.GetCellNode(cellId);
			if(!cell) return;
			var bEditTd = Webcrea.IsEditTd(cell);
			CellColor(color, cell, bEditTd);
		}
	},
	_Get_CursorColor : function()
	{
		return this.colorCursor;
	},
	_Set_CursorColor : function(color)
	{
		this.colorCursor = color;
		var cssId = '#' + this.divPage + ' #' + this.divPos + ' td:hover';
		var css = Webcrea.CreateCSS(cssId);
		css.style.backgroundColor = color;
	},
	_Get_DisableColor : function(cellId) {
		return this._Get_CellColor(cellId, 1);
	},
	_Set_DisableColor : function(color, cellId) {
		this._Set_CellColor(color, cellId, 1);
	},
	_Get_DisableTextColor : function(cellId) {
		return this._Get_TextColor(cellId, 1);
	},
	_Set_DisableTextColor : function(color, cellId) {
		this._Set_TextColor(color, cellId, 1);
	},
	_Get_FontSize : function() {
		return 0;
	},
	_Set_FontSize : function()
	{
		var ___size = arguments[0];
		var ___cellId = arguments[1];
		if(!___size) return;
		if(!___cellId)
		{
			if(!this.objTable) return;
			{
				var nStartTr = this.nHeader;
				var nTr = 0;
				if(this.IsGrid())
				{
					var rowId = this.currRowIndex;
					rowId += this.nHeader;
					nStartTr = rowId;
					nTr = rowId+1;
				}
				else nTr = this.objTable.rows.length;
				for(var i=nStartTr; i<nTr; i++)
				{
					var tr = this.objTable.rows[i];
					var trChildNodes = tr.childNodes;
					for(var j=0; j<trChildNodes.length; j++)
					{
						var td = trChildNodes[j];
						if (td.nodeName == 'TD'){
							if(Webcrea.IsEditTd(td)) Webcrea.FontSize(___size, td);
							else
							{
								var colChildNodes = td.childNodes;
								for(var k=0; k<td.childNodes.length; k++)
								{
									var ___cell = colChildNodes[k];
									if(!___cell) continue;
									if(!___cell.id)
									{
										if(Webcrea.IsMultilineMainDiv(___cell)) ___cell=___cell.childElements()[0].childElements()[0];
										else if(Webcrea.IsBulletDiv(___cell) || this.IsCodeButtonDiv(___cell)) ___cell = Webcrea.FindNodePublic(___cell, 'name', 'INPUT');
										else continue;
									}
									Webcrea.FontSize(___size, ___cell);
								}
							}
						}
					}
				}
			}
		}
		else
		{
			var ___cell = this.GetCellNode(___cellId);
			if(!___cell) return;
			Webcrea.FontSize(___size, ___cell);
		}
	},
	_Get_FontType : function() {
		return 0;
	},
	_Set_FontType : function()
	{
		var ___type = arguments[0];
		var ___cellId = arguments[1];
		if(Webcrea.IsNull(___type)) return;
		if(!___cellId)
		{
			if(!this.objTable) return;
			{
				var nStartTr = this.nHeader;
				var nTr = 0;
				if(this.IsGrid())
				{
					var rowId = this.currRowIndex;
					rowId += this.nHeader;
					nStartTr = rowId;
					nTr = rowId+1;
				}
				else nTr = this.objTable.rows.length;
				for(var i=nStartTr; i<nTr; i++)
				{
					var tr = this.objTable.rows[i];
					var trChildNodes = tr.childNodes;
					for(var j=0; j<trChildNodes.length; j++)
					{
						var td = trChildNodes[j];
						if (td.nodeName == 'TD'){
							if(Webcrea.IsEditTd(td)) Webcrea.FontType(___type, td);
							else
							{
								var colChildNodes = td.childNodes;
								for(var k=0; k<td.childNodes.length; k++)
								{
									var ___cell = colChildNodes[k];
									if(!___cell) continue;
									if(!___cell.id)
									{
										if(Webcrea.IsMultilineMainDiv(___cell)) ___cell=___cell.childElements()[0].childElements()[0];
										else if(Webcrea.IsBulletDiv(___cell) || this.IsCodeButtonDiv(___cell)) ___cell = Webcrea.FindNodePublic(___cell, 'name', 'INPUT');
										else continue;
									}
									Webcrea.FontType(___type, ___cell);
								}
							}
						}
					}
				}
			}
		}
		else
		{
			var ___cell = this.GetCellNode(___cellId);
			if(!___cell) return;
			Webcrea.FontType(___type, ___cell);
		}
	},
	_Get_Format : function()
	{
		var cellId = arguments[0];
		var cellNode = this.GetCellNode(cellId);
		if(!cellNode) return;
		return cellNode.getAttribute('mask');
	},
	_Set_Format : function()
	{
		var format = arguments[0];
		var cellId = arguments[1];
		this.SetFormat(cellId, format);
	},
	_Get_InsertPos : function(pos) {
		return this.nInsertPos;
	},
	_Set_InsertPos : function(pos) {
		this.nInsertPos = pos;
	},
	_Get_MinRange : function(cellId) {
		if(!cellId) return;
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		var value = cell.getAttribute('minrange');
		return (value==undefined)?'':value;
	},
	_Set_MinRange : function(str, cellId) {
		if(!cellId) return;
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		cell.setAttribute('minrange', str);
	},
	_Get_MaxRange : function(cellId) {
		if(!cellId) return;
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		var value = cell.getAttribute('maxrange');
		return (value==undefined)?'':value;
	},
	_Set_MaxRange : function(str, cellId) {
		if(!cellId) return;
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		cell.setAttribute('maxrange', str);
	},
	_Set_MsgAskDelete : function(b) {
	},
	_Get_MsgLoading : function()
	{
		return this.loadingMsg;
	},
	_Set_MsgLoading : function()
	{
		this.loadingMsg = arguments[0];
	},
	_Get_MyGrid : function()
	{
		return this.bMyGrid;
	},
	_Set_MyGrid : function()
	{
		var bMyGrid = arguments[0];
		if(!this.bMyGrid)
		{
			this.bMyGrid = true;
			this.InitLayout(true);
		}
	},
	_Get_NoPrint : function()
	{
		return this.bNoPrint;
	},
	_Set_NoPrint : function()
	{
		this.bNoPrint = arguments[0];
		Webcrea.NoPrint(this, arguments[0]);
	},
	_Get_OnlyPrint : function()
	{
		return this.bOnlyPrint;
	},
	_Set_OnlyPrint : function()
	{
		this.bOnlyPrint = arguments[0];
		Webcrea.OnlyPrint(this, arguments[0]);
	},
	_Get_Editable : function(cellId) {
		var bEditable = true;
		var cell = this.GetCellNode(cellId);
		if(cell && cell.getAttribute('editable') == 'noedit') bEditable=false;
		return bEditable;
	},
	_Set_Editable : function(b, cellId) {
		var cell = this.GetCellNode(cellId);
		if(cell)
		{
			var edit = '';
			if(!b) edit='noedit';
			else
			{
				var orgId = cell.getAttribute('orgId');
				if(orgId)
				{
					var cellInfo = this.GetCellInfo(orgId);
					if(cellInfo && !cellInfo.bEditable) return;
				}
			}
			cell.setAttribute('editable', edit);
		}
	},
	_Get_Enable : function(cellId, rowNo) {
		if(cellId == undefined) return this.bEnable;
		if(!Webcrea.IsEmpty(cellId) && !this.IsTab())
		{
			var cellInfo = this.GetCellInfo(cellId);
			if(!cellInfo) return;
		}
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(!this.objTable)
		{
			var bRet=false;
			if(this.IsTab())
			{
				var childNodes = this.objDivPos.childNodes;
				for(var i=0; i<childNodes.length; i++)
				{
					var cellChild = childNodes[i];
					if(cellChild.nodeName != 'INPUT') continue;
					var bFind=false;
					if(cellId && cellId != '')
					{
						var sCellId = this.GetCellId(cellChild);
						if(cellId == sCellId) bFind = true;
					}
					if(bFind)
					{
						bRet = !cellChild.disabled;
						break;
					}
				}
				if(Webcrea.IsEmpty(cellId)) bRet = this.bEnable;
			}
			return bRet;
		}
		var bRet;
		var bFind=false;
		var currObj = this;
		SetChildAttr = function(cell, bEditTd)
		{
			if(bEditTd || cell.nodeName == 'INPUT' || cell.nodeName == 'BUTTON' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT'
				|| (nFileVersion>=7020200305001 && cell.nodeName == 'DIV' && cell.getAttribute('role') == 'multiline'))
			{
				if(cellId && cellId != '')
				{
					var sCellId = currObj.GetCellId(cell);
					if(cellId == sCellId)
					{
						bFind = true;
						var sEnable = cell.getAttribute('enable_status');
						var bEnable = true;
						if(sEnable && sEnable == 'false') bEnable = false;
						else if(!sEnable)
						{
							if(cell.type == 'checkbox' || cell.type == 'radio' || cell.type == 'button') return !cell.disabled;
							else if(currObj.IsMySelectBox(cell)) return bEnable;
							else
							{
								if(bEditTd)
								{
									if(cell.getAttribute('disabled') == 'disabled') bEnable = false;
									else bEnable = true;
								}
								else bEnable = !cell.readOnly;
								return bEnable;
							}
						}
						return bEnable;
					}
				}
			}
			else if(cell.nodeName == 'DIV')
			{
				var childs = cell.childNodes;
				for(var i=0; i<childs.length; i++)
				{
					var child = childs[i];
					if((child.nodeName == 'DIV' && !currObj.IsBulletDiv(child)) || child.nodeName == 'INPUT') return SetChildAttr(child);
					else if(child.nodeName == 'LABEL')
					{
						var cellSubChild = child.firstChild;
						while(cellSubChild)
						{
							if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
							{
								if(cellId && cellId != '')
								{
									var sCellId = currObj.GetCellId(cellSubChild);
									if(cellId == sCellId)
									{
										bFind = true;
										var sEnable = cellSubChild.getAttribute('enable_status');
										var bEnable = true;
										if(sEnable && sEnable == 'false') bEnable = false;
										else if(!sEnable) return !cellSubChild.disabled;
										return bEnable;
									}
								}
							}
							cellSubChild = cellSubChild.nextElementSibling;
						}
					}
				}
			}
			else if(cell.nodeName == 'LABEL')
			{
				var cellSubChild = cell.firstChild;
				while(cellSubChild)
				{
					if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
					{
						if(cellId && cellId != '')
						{
							var sCellId = currObj.GetCellId(cellSubChild);
							if(cellId == sCellId)
							{
								bFind = true;
								var sEnable = cellSubChild.getAttribute('enable_status');
								var bEnable = true;
								if(sEnable && sEnable == 'false') bEnable = false;
								else if(!sEnable) return !cellSubChild.disabled;
								return bEnable;
							}
						}
					}
					cellSubChild = cellSubChild.nextElementSibling;
				}
			}
		};
		var nStart = 0;
		var nLast = this.objTable.rows.length;
		if(!Webcrea.IsEmpty(rowNo) && this.IsGrid())
		{
			rowNo += this.nHeader;
			nStart = rowNo;
			nLast = nStart+1;
		}
		for(var i=nStart; i<nLast; i++)
		{
			var tr = this.objTable.rows[i];
			if(!tr) continue;
			var trChildNodes = tr.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					if(Webcrea.IsEditTd(td)) bRet = SetChildAttr(td, true);
					else
					{
						var colChildNodes = td.childNodes;
						for(var k=0; k<td.childNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							if (cell.nodeName == '#text') continue;
							bRet = SetChildAttr(cell);
							if(bFind) break;
						}
					}
				}
				if(bFind) break;
			}
			if(bFind) break;
		}
		return bRet;
	},
	_Set_Enable : function(b, cellId) {
		if(Webcrea.IsAmpObject(cellId))
		{
			var ampObj = cellId;
			cellId = ampObj.cellId;
			if(cellId == undefined) cellId = '';
		}
		this.Enable(cellId, b);
	},
	_Get_Layout : function()
	{
		return this.layout;
	},
	_Set_Layout : function()
	{
		this.layout = arguments[0];
	},
	_Get_Left : function() {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		var cellId = arguments[0];
		var nRet = 0;
		var nDivLeft = Webcrea.GetLeft(obj);
		if(!Webcrea.IsEmpty(cellId))
		{
			var objCell = Webcrea.FindNode(obj, 'orgid', cellId);
			if(!objCell) return;
			var tdNode = objCell;
			if(objCell.tagName != 'TD') tdNode = Webcrea.FindParentNode(objCell, 'name', 'TD');
			var nColWidth = Number(Webcrea.GetLeft(tdNode));
			nRet = nColWidth + nDivLeft;
		}
		else nRet = nDivLeft;
		return nRet;
	},
	_Set_Left : function(pos) {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		var org = Webcrea.GetLeft(obj);
		var diff = pos-org;
		if(this.IsGrid() || this.IsTab())
		{
			if(this.objGDivPos) this.objGDivPos.style.left = Webcrea.GetLeft(this.objGDivPos) + diff + 'px';
			else if(this.objHTable) this.objHDivPos.style.left = Webcrea.GetLeft(this.objHDivPos) + diff + 'px';
		}
		if(!this.objGDivPos) this.objDivPos.style.left = Webcrea.GetLeft(this.objDivPos) + diff + 'px';
	},
	_Get_Page : function()
	{
		var param = arguments[0];
		if(this.IsTab())
		{
			if(Webcrea.IsEmpty(param)) return;
			var nPage;
			for(i=0;i<this.arrTabObj.length;i++)
			{
				var itemObj=this.arrTabObj[i];
				if(itemObj.cellId==param)
				{
					nPage=itemObj.page;
					break;
				}
			}
			return nPage;
		}
	},
	_Set_Page : function()
	{
		if(!this.IsTab()) return;
		var nPage = arguments[0];
		if(Webcrea.IsEmpty(nPage)) return;
		_my_File.RunPage(nPage);
	},
	_Get_PasteBlock : function() {
		return this.nPasteBlock;
	},
	_Set_PasteBlock : function() {
		this.nPasteBlock = arguments[0];
	},
	_Get_TextColor : function(cellId, nMode) {
		if(!cellId) return;
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		if(nMode && nMode==1 && !cell.disabled) return;
		else if(nMode && nMode==2)
		{
			var readOnly = cell.getAttribute('readOnly');
			var bReadOnly = (readOnly && readOnly.toLowerCase() == 'readonly')?true:false;
			if(!bReadOnly) return;
		}
		var color = cell.style.color;
		if(!color)
		{
			var style = cell.getAttribute('class');
			var arrCss = style.split(' ');
			for(var i=0; i<arrCss.length; i++)
			{
				var css = Webcrea.GetCSS('.'+arrCss[i]);
				if(css) color = css.style.color;
				if(color) break;
			}
		}
		return color;
	},
	_Set_TextColor : function(color, cellId, nMode) {
		var currObj = this;
		if(color.indexOf('___my_syscolor')==0)
		{
			color = color.replace('___my_syscolor', '');
			color = Webcrea.GetPaletteColor(this, color);
		}
		if(nMode && nMode==1) this.colorDisableText = color;
		else if(nMode && nMode==2) this.colorReadOnlyText = color;
		TextColor = function(color, cell, bEditTd)
		{
			var cellId = cell.getAttribute('orgId');
			if(!cellId) return;
			var cellInfo = currObj.GetCellInfo(cellId);
			if(!cellInfo) return;
			if(nMode && nMode==1 && !cell.disabled) return;
			else if(nMode && nMode==2 && !cell.bReadOnly) return;
			if(cell.type == 'checkbox' || cell.type == 'radio')
			{
				var findNode;
				var nodeParent = cell.parentNode;
				while(nodeParent)
				{
					var sClass = nodeParent.getAttribute('class');
					if(nodeParent.tagName == 'DIV' && sClass)
					{
						findNode = nodeParent;
						break;
					}
					nodeParent = nodeParent.parentNode;
				}
				if(!findNode) return;
				findNode.style.color = color;
				findNode.setAttribute('colorText', color);
			}
			else if(bEditTd || cell.nodeName == 'INPUT' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT'
				|| (cell.nodeName == 'DIV' && cell.getAttribute('role') == 'multiline'))
			{
				cell.style.color = color;
				cell.setAttribute('colorText', color);
			}
		};

		if(!cellId)
		{
			if(!this.objTable) return;
			{
				var nStartTr = this.nHeader;
				var nTr = 0;
				if(this.IsGrid())
				{
					var rowId = this.currRowIndex;
					rowId += this.nHeader;
					nStartTr = rowId;
					nTr = rowId+1;
				}
				else nTr = this.objTable.rows.length;
				for(var i=nStartTr; i<nTr; i++)
				{
					var tr = this.objTable.rows[i];
					var trChildNodes = tr.childNodes;
					for(var j=0; j<trChildNodes.length; j++)
					{
						var td = trChildNodes[j];
						if (td.nodeName == 'TD'){
							if(Webcrea.IsEditTd(td)) TextColor(color, td, true);
							else
							{
								var colChildNodes = td.childNodes;
								for(var k=0; k<td.childNodes.length; k++)
								{
									var cell = colChildNodes[k];
									if(!cell) continue;
									if(!cell.id)
									{
										if(Webcrea.IsMultilineMainDiv(cell)) cell=cell.childElements()[0].childElements()[0];
										else if(Webcrea.IsBulletDiv(cell) || currObj.IsCodeButtonDiv(cell)) cell=Webcrea.FindNodePublic(cell, 'name', 'INPUT');
										else continue;
									}
									TextColor(color, cell);
								}
							}
						}
					}
				}
			}
		}
		else
		{
			var cell = this.GetCellNode(cellId);
			if(!cell) return;
			var bEditTd = Webcrea.IsEditTd(cell);
			TextColor(color, cell, bEditTd);
		}
	},
	_Set_ThreadDisplay : function() {
		this.bThreadDisplay = arguments[0];
	},
	_Get_Top : function() {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetTop(obj);
	},
	_Set_Top : function(pos) {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		var org = Webcrea.GetTop(obj);
		var diff = pos-org;
		if(this.IsGrid() || this.IsTab())
		{
			if(this.objGDivPos) this.objGDivPos.style.top = Webcrea.GetTop(this.objGDivPos) + diff + 'px';
			else if(this.objHTable) this.objHDivPos.style.top = Webcrea.GetTop(this.objHDivPos) + diff + 'px';
		}
		if(!this.objGDivPos) this.objDivPos.style.top = Webcrea.GetTop(this.objDivPos) + diff + 'px';
		this.OnAdjustMainDiv();
	},
	_Get_Prompt : function()
	{
		var cellId = arguments[0];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		return cell.getAttribute('placeholder');
	},
	_Set_Prompt : function()
	{
		var param = arguments[0];
		var cellId = arguments[1];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		cell.setAttribute('placeholder', param);
	},
	_Get_ReadAll : function() {
		return this.bReadAll?1:0;
	},
	_Set_ReadAll : function(b) {
		this.bReadAll = b;
	},
	_Get_ReadOnly : function(cellId, rowNo) {
		if(cellId == undefined) return this.bReadOnly;
		if(!Webcrea.IsEmpty(cellId))
		{
			var cellInfo = this.GetCellInfo(cellId);
			if(!cellInfo) return;
		}
		if(!this.objTable) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var bRet;
		var bFind=false;
		var currObj = this;
		SetChildAttr = function(cell, bEditTd)
		{
			if(bEditTd || cell.nodeName == 'INPUT' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT'
				|| (nFileVersion>=7020200305001 && cell.nodeName == 'DIV' && cell.getAttribute('role') == 'multiline'))
			{
				if(cellId && cellId != '')
				{
					var sCellId = currObj.GetCellId(cell);
					if(cellId == sCellId)
					{
						bFind = true;
						if(currObj.IsMySelectBox(cell))
						{
							var bReadOnly = false;
							var sReadOnly = cell.getAttribute('readonly_status');
							if(sReadOnly && sReadOnly == 'true') bReadOnly = true;
							return bReadOnly;
						}
						else if(bEditTd || cell.nodeName == 'SELECT')
						{
							var bReadOnly = false;
							var sReadOnly = cell.getAttribute('readOnly');
							if(sReadOnly && sReadOnly == 'readOnly') bReadOnly = true;
							return bReadOnly;
						}
						return cell.readOnly;
					}
				}
			}
			else if(cell.nodeName == 'DIV')
			{
				var childs = cell.childNodes;
				for(var i=0; i<childs.length; i++)
				{
					var child = childs[i];
					if((child.nodeName == 'DIV' && !currObj.IsBulletDiv(child)) || child.nodeName == 'INPUT') return SetChildAttr(child);
					else if(child.nodeName == 'LABEL')
					{
						var cellSubChild = child.firstChild;
						while(cellSubChild)
						{
							if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
							{
								if(cellId && cellId != '')
								{
									var sCellId = currObj.GetCellId(cellSubChild);
									if(cellId == sCellId)
									{
										bFind = true;
										return cellSubChild.readOnly;
									}
								}
							}
							cellSubChild = cellSubChild.nextElementSibling;
						}
					}
				}
			}
		};
		var nStart = 0;
		var nLast = this.objTable.rows.length;
		if(!Webcrea.IsEmpty(rowNo) && this.IsGrid())
		{
			rowNo += this.nHeader;
			nStart = rowNo;
			nLast = nStart+1;
		}
		for(var i=nStart; i<nLast; i++)
		{
			var tr = this.objTable.rows[i];
			if(!tr) continue;
			var trChildNodes = tr.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					if(Webcrea.IsEditTd(td)) bRet = SetChildAttr(td, true);
					else
					{
						var colChildNodes = td.childNodes;
						for(var k=0; k<td.childNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							if (cell.nodeName == '#text') continue;
							bRet = SetChildAttr(cell);
							if(bFind) break;
						}
					}
				}
				if(bFind) break;
			}
			if(bFind) break;
		}
		return bRet;
	},
	_Set_ReadOnly : function(b, cellId) {
		this.ReadOnly(cellId, b);
	},
	_Get_ReadOnlyColor : function(cellId) {
		return this._Get_CellColor(cellId, 2);
	},
	_Set_ReadOnlyColor : function(color, cellId) {
		this._Set_CellColor(color, cellId, 2);
	},
	_Get_ReadOnlyTextColor : function(cellId) {
		return this._Get_TextColor(cellId, 2);
	},
	_Set_ReadOnlyTextColor : function(color, cellId) {
		this._Set_TextColor(color, cellId, 2);
	},
	_Get_RecordCount : function() {
		return this.RecordCount();
	},
	_Get_RowNo : function() {
		var ___nRow = arguments[0];
		if(Webcrea.IsNull(this.objSelRow) && Webcrea.IsNull(___nRow)) ___nRow = -1;
		else if(Webcrea.IsNull(___nRow)) ___nRow = Number(this.GetRowDataNo(this.GetCurrRowIndex()));
		return ___nRow;
	},
	SetRowNo : function() {
		if(!this.IsGrid()) return;
		var rowNo = arguments[0];
		if(Webcrea.IsNull(rowNo)) return;
		return this._Set_RowNo(rowNo);
	},
	_Set_RowNo : function(n, mode, bNotFocus) {
		if(!this.arrRows) return;
		var nRowData = n;
		if(this.bMyGrid) n=this.nRowsScrl/this.nDataRowReal;
		if(!mode && !bNotFocus) this.SetCurrRowIndex(n*this.nDataRowReal);
		var bSelect = false;
		if(this.IsGrid())
		{
			if(this.bMyGrid)
			{
				var nPage = this.nRowsPage/this.nDataRowReal - this.nFooter;
				if(this.bLastRowAdjust) nPage -= 1;
				if(nPage<0) nPage=0;
				var nPageH = Math.floor(nPage/2);
				var bFirstPage = false;
				var bLastPage = false;
				if(nRowData<nPageH) bFirstPage = true;
				if(nRowData>=(this.arrRows.length-nPage)) bLastPage = true;
				var bLast = false;
				if(mode)
				{
					var nRowIndex = Math.ceil((this.currRowIndex+1)/this.nDataRowReal)-1;
					var currNode = this.objSelRow;
					if(currNode)
					{
						n = Number(currNode.getAttribute('rowno'));
						n -= nRowIndex;
					}
					else
					{
						var firstNode = this.objTable.rows[this.nHeader];
						if(firstNode) n = Number(firstNode.getAttribute('rowno'));
					}
					if(mode==2)
					{
						if(nRowIndex == (nPage-1)) n++;
						else nRowIndex++;
					}
					this.DisplayPublic(true, n, true);
					n = nRowIndex;
					if(!bNotFocus) this.SetCurrRowIndex(n*this.nDataRowReal);
				}
				else
				{
					if(this.arrRows.length-nRowData<=nPageH)
					{
						n=this.arrRows.length-nPage;
						bLast = true;
					}
					else n=nRowData-nPageH;
					if(n<0 || bFirstPage) n=0;
					else if(bLast) n += this.nFooter;
					this.DisplayPublic(true, n, true);
					var bKeepRow = false;
					var firstNode = this.objTable.rows[this.nHeader];
					if(firstNode)
					{
						var firstRowNo = firstNode.getAttribute('rowno');
						if(firstRowNo!=(n-this.nFooter) && this.nRowsPage>n) bKeepRow = true;
					}
					if(n==0 || bKeepRow)
					{
						n=nRowData;
						if(n>this.nRowsScrl) n-=firstRowNo;
					}
					else if(bLast) n = nPage-(this.arrRows.length-nRowData);
					else n = nPageH;
					if(!this.IsDisplaySelectRow(n*this.nDataRowReal)) n = 0;
					if(!bNotFocus) this.SetCurrRowIndex(n*this.nDataRowReal);
				}
			}
			else
			{
				n = Number(n);
				var nPos = this.nHeaderHeight + (this.nDataHeight/this.nDataRow) * (n-1);
				if(this.IsList() && this.bAutoHeight)
				{
					var nRow = n+this.nHeader-1;
					if(nRow>=0)
					{
						nRow *= this.nDataRowReal;
						var currNode = this.objTable.rows[nRow];
						if(currNode) currNode.scrollIntoView();
					}
				}
				else if (this.objDivPos.scrollHeight > 0) this.objDivPos.scrollTop = nPos;
			}
			if(!bNotFocus)
			{
				this.Select(n*this.nDataRowReal, false, false, null, true);
				bSelect = true;
			}
		}
		if(!bNotFocus) this.SetFocus(null, bSelect);
	},
	_Set_ScrollStart : function(n)
	{
		var nRowData = n;
		if(this.bMyGrid) n = 0;
		this.SetCurrRowIndex(n);
		if(this.IsGrid())
		{
			if(this.bMyGrid)
			{
				this.DisplayPublic(true, nRowData);
				this.SetCurrRowIndex(n);
			}
			else
			{
				var nPos = this.nHeaderHeight + this.nDataHeight * (n-1);
				if(this.IsList() && this.bAutoHeight)
				{
					var nRow = n+this.nHeader-1;
					if(nRow>=0)
					{
						var currNode = this.objTable.rows[nRow];
						if(currNode) currNode.scrollIntoView();
					}
				}
				if (this.objDivPos.scrollHeight > 0) this.objDivPos.scrollTop = nPos;
			}
		}
		this.SetFocus();
	},
	_Get_SelectColor : function()
	{
		return this.colorSelect;
	},
	_Set_SelectColor : function()
	{
		var color = arguments[0];
		this.colorSelect = color;
	},
	_Get_SelectCount : function()
	{
		if(!this.bMulti) return 0;
		if(!this.arrMulti) return 0;
		return this.arrMulti.count(true);
	},
	_Get_Selected : function() {
		var ___nRow = arguments[0];
		return this.IsSelected(___nRow);
	},
	_Set_Selected : function()
	{
		var ___nRow = arguments[0];
		var ___bSelect = arguments[1];
		var ___param = ___bSelect.toString() + ' ' + ___nRow.toString();
		this.SelectRow(___param);
	},
	_Get_SortHistory : function()
	{
		return this.nSortHistory;
	},
	_Set_SortHistory : function()
	{
		this.nSortHistory = arguments[0];
	},
	_Set_Status : function(nRow, sStatus)
	{
		if(!nRow) nRow=0;
		return this.arrStatus[nRow]=sStatus;
	},
	_Get_Status : function(nRow)
	{
		return this.arrStatus[nRow];
	},
	_Set_Stretch : function()
	{
		this.stretch = arguments[0];
		if(this.IsImage())
		{
			var objImg = Webcrea.FindNode(this.objDivPos, 'name', 'img');
			if(objImg)
			{
				var src = objImg.src;
				objImg.style.background="url('" + src + "') repeat-x";
				objImg.src = Webcrea.GetImageLinkPath() + '/frame/blank.png';
			}
		}
		if(!Webcrea.arrStretch) Webcrea.arrStretch = [];
		Webcrea.arrStretch[Webcrea.arrStretch.length] = this;
	},
	_Get_Stretch : function()
	{
		return this.stretch;
	},
	_Set_Summary : function()
	{
		var param = arguments[0];
		var cellId = arguments[1];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		if(cell.tagName == 'IMG')
		{
			if(cell.getAttribute('alt')) cell.setAttribute('alt', param);
		}
		else if(cell.tagName == 'IFRAME')
		{
			if(cell.getAttribute('title')) cell.setAttribute('title', param);
		}
		else
		{
			var labelNode = cell.previousElementSibling;
			if(labelNode && labelNode.tagName == 'LABEL')
			{
				labelNode.textContent = param;
			}
		}
	},
	_Get_Summary : function()
	{
		var cellId = arguments[0];
		var cellId = arguments[0];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		var sRet = '';
		if(cell.tagName == 'IMG') sRet = cell.getAttribute('alt');
		else if(cell.tagName == 'IFRAME') sRet = cell.getAttribute('title');
		else
		{
			var labelNode = cell.previousElementSibling;
			if(labelNode && labelNode.tagName == 'LABEL') sRet = labelNode.textContent;
		}
		return sRet;
	},
	_Set_SyncEdit : function(obj)
	{
		this.syncObj = obj;
	},
	_Get_CodeText : function(cellId)
	{
		return this.CodeText(cellId);
	},
	_Get_OrgText : function(cellId, rowNo)
	{
		var sRet = '';
		if(this.arrData_Org[cellId] && this.arrData_Org[cellId].length>0)
		{
			var nCurrRow = 0;
			if(this.IsGrid())
			{
				var dataRowNo = this._Get_RowNo();
				if(!Webcrea.IsEmpty(rowNo)) dataRowNo = rowNo;
				if(dataRowNo>=0) nCurrRow = dataRowNo;
				else nCurrRow = -1;
			}
			if(nCurrRow>=0)
			{
				sRet = this.arrData_Org[cellId][nCurrRow];
				var nField = this.arrField_Org.isearch(cellId);
				var nType = this.arrFieldType_Org[nField];
				if(nType && !Webcrea.IsEmpty(sRet)) sRet = Webcrea.GetNumberToStringData(sRet);
			}
		}
		else
		{
			var cellInfo = this.GetCellInfo(cellId);
			if(cellInfo) sRet = cellInfo.defaultValue;
		}
		return sRet;
	},
	_Get_OrgValue : function(cellId)
	{
		return this._Get_OrgText(cellId);
	},
	_Get_Type : function(cellId)
	{
		var type = '';
		var cell = this.GetCellNode(cellId);
		if(!cell) return type;
		type = cell.nodeName;
		if(cell.nodeName == 'INPUT' && cell.type == 'checkbox') type = cell.type;
		return type;
	},
	_Get_Vacant : function()
	{
		var bRet = false;
		var cellId = arguments[0];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		bRet = cell.getAttribute('vacant');
		return bRet?1:0;
	},
	_Set_Vacant : function()
	{
		var param = arguments[0];
		var cellId = arguments[1];
		var cell = this.GetCellNode(cellId);
		if(!cell) return;
		if(cell.tagName == 'DIV' || cell.tagName == 'IMG' || (cell.tagName == 'TD' && Webcrea.IsEditTd(cell)))
		{
			if(!param)
			{
				if(cell.tagName == 'TD')
				{
					var sValue = this.GetValueByData(cellId);
					cell.innerHTML = sValue;
				}
				cell.removeAttribute('vacant');
			}
			else
			{
				if(cell.tagName == 'TD') cell.innerHTML = '';
				cell.setAttribute('vacant', 'true');
			}
		}
		else if(cell.tagName == 'INPUT')
		{
			var tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
			if(!tdNode) return;
			var childNodes = tdNode.children;
			for(var i=0; i<childNodes.length; i++)
			{
				var childNode = childNodes[i];
				if(!param) childNode.removeAttribute('vacant');
				else childNode.setAttribute('vacant', 'true');
			}
		}
	},
	_Get_ValidChar : function()
	{
		var sRet = '';
		var cellId = arguments[0];
		var cellInfo = this.GetCellInfo(cellId);
		if(cellInfo && !Webcrea.IsEmpty(cellInfo.validChar)) sRet = cellInfo.validChar;
		return sRet;
	},
	_Set_ValidChar : function()
	{
		var mode = arguments[0];
		var cellId = arguments[1];
		if(Webcrea.IsEmpty(mode)) return;
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return;
		cellInfo.validChar = mode;
	},
	_Get_Visible : function()
	{
		var bVisible=true;
		if(this.IsTab() && !Webcrea.IsEmpty(arguments[0]))
		{
			var obj = this.GetObject(arguments[0]);
			if(obj) bVisible = obj._Get_Visible();
		}
		else
		{
			var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
			if(obj.style.display=='')
			{
				var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos);
				bVisible = css.style.display == 'none' ? false : true;
			}
			else bVisible = obj.style.display == 'none' ? false : true;
		}
		return bVisible;
	},
	_Set_Visible : function()
	{
		var ___bVisible = arguments[0];
		var ___cellId = arguments[1];
		if(this.IsTab() && !Webcrea.IsEmpty(___cellId))
		{
			var obj = this.GetObject(arguments[1]);
			if(obj) obj._Set_Visible(___bVisible);
		}
		else if(this.IsForm() && !Webcrea.IsEmpty(___cellId))
		{
			var objCell = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.' + ___cellId);
			while(objCell)
			{
				if(___bVisible)
				{
					if(objCell.nodeName == 'TD') objCell.style.display = '';
					else objCell.style.display = 'block';
				}
				else objCell.style.display = 'none';
				objCell = objCell.nextElementSibling;
			}
		}
		else
		{
			if(___bVisible) this.Show();
			else this.Hide();
		}
	},
	_Get_Width : function()
	{
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetWidth(obj, true);
	},
	_Set_Width : function(width, cellId)
	{
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		var divWidth = Webcrea.GetWidth(obj, true);
		if(Webcrea.IsEmpty(cellId))
		{
			if(this.IsGrid())
			{
				var diff = width-divWidth;
				if(this.objGDivPos) this.objGDivPos.style.width = Webcrea.GetWidth(this.objGDivPos) + diff + 'px';
				this.objDivPos.style.width = Webcrea.GetWidth(this.objDivPos, true) + diff + 'px';
				if(this.objTable) this.objTable.style.width = Webcrea.GetWidth(this.objTable, true) + diff + 'px';
				if(this.objHTable)
				{
					this.objHDivPos.style.width = Webcrea.GetWidth(this.objHDivPos, true) + diff + 'px';
					this.objHTable.style.width = Webcrea.GetWidth(this.objHTable, true) + diff + 'px';
				}
				if(this.objFTable)
				{
					this.objFDivPos.style.width = Webcrea.GetWidth(this.objFDivPos, true) + diff + 'px';
					this.objFTable.style.width = Webcrea.GetWidth(this.objFTable, true) + diff + 'px';
				}
				if(this.bMyGrid && this.objVSGDivPos) this.objVSGDivPos.style.left = Webcrea.GetLeft(this.objVSGDivPos) + diff + this.nScrlLeftAdjust + 'px';
			}
			else if(this.IsHtml() || this.IsPanel())
			{
				this.objDivPos.style.width = width + 'px';
				if(this.objTable) this.objTable.style.width = width + 'px';
				var objHtml = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
				if(objHtml) objHtml.style.width = width - 2 + 'px';
			}
			else if(this.IsTab())
			{
				var diff = width-divWidth;
				if(this.objGDivPos) this.objGDivPos.style.width = Webcrea.GetWidth(this.objGDivPos) + diff + 'px';
				this.objDivPos.style.width = Webcrea.GetWidth(this.objDivPos, true) + diff + 'px';
				if(this.objTable) this.objTable.style.width = Webcrea.GetWidth(this.objTable, true) + diff + 'px';
				var objTabB = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'B');
				if(objTabB) objTabB.style.width =  Webcrea.GetWidth(objTabB) + diff + 'px';
			}
			else if(this.IsImage())
			{
				var objImg = Webcrea.FindNode(this.objDivPos, 'name', 'img');
				if(objImg)
				{
					obj.style.width = width + 'px';
					objImg.style.width = width + 'px';
				}
			}
			else if(this.IsForm())
			{
				var tdNodeByImg;
				var objImg = Webcrea.FindNode(obj, 'name', 'img');
				var bImgFitWidth = false;
				if(objImg && this.objTable)
				{
					tdNodeByImg = Webcrea.FindParentNode(objImg, 'name', 'TD');
					var tableWidth = Webcrea.GetWidth(this.objTable);
					var tdWidth = Webcrea.GetWidth(tdNodeByImg);
					var imgWidth = Webcrea.GetWidth(objImg);
					if(tdWidth == imgWidth && tableWidth == imgWidth) bImgFitWidth = true;
				}
				if(obj) obj.style.width = width + 'px';
				if(this.objTable) this.objTable.style.width = width + 'px';
				if(bImgFitWidth)
				{
					tdNodeByImg.style.width = width + 'px';
					objImg.style.width = width + 'px';
				}
			}
			else if(this.IsCustomView())
			{
				if(obj) obj.style.width = width + 'px';
			}
		}
		else
		{
			var currNode = Webcrea.FindNode(obj, 'orgid', cellId);
			if(!currNode) return;
			var colNo = currNode.getAttribute('colno');
			if(this.IsGrid())
			{
				if(!this.bInitHScroll && width>=divWidth) return;
				var orgWidth = 0;
				for(var z=0; z<3; z++)
				{
					var targetDiv = this.objDivPos;
					if(z==1) targetDiv = this.objHDivPos;
					else if(z==2) targetDiv = this.objFDivPos;
					if(!targetDiv) continue;
					var colGroup = Webcrea.FindNode(targetDiv, 'name', 'COLGROUP');
					var arrColGroup = [];
					if(colGroup) Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
					var currCol = arrColGroup[colNo];
					orgWidth = currCol.style.width;
					orgWidth = Extract(orgWidth, '[0-9]');
					currCol.style.width = width + 'px';
					currCol.setAttribute('orgwidth', width);
					if(width>0) currCol.setAttribute('display', 1);
					else currCol.setAttribute('display', 0);
				}
				var diff = width - orgWidth;
				if(!diff) return;
				if(!this.bInitHScroll)
				{
					if(diff>0) this.initAllColWidth += diff;
					this.DisplayColSize();
				}
				var tableWidth = Webcrea.GetWidth(this.objTable);
				divWidth = Webcrea.GetWidth(this.objDivPos, true);
				if(tableWidth>divWidth)
				{
					if(this.bInitHScroll)
					{
						if(!this.IsHScroll()) this.objDivPos.style.overflowX = 'auto';
						else if(diff<0)
						{
							this.objHTable.style.width = tableWidth + diff + 'px';
							this.objTable.style.width = tableWidth + diff + 'px';
						}
					}
					else
					{
						if(this.objGDivPos) this.objGDivPos.style.width = divWidth + diff + 'px';
						this.objDivPos.style.width = divWidth + diff + 'px';
						if(this.bMyGrid && this.objVSGDivPos) this.objVSGDivPos.style.left = Webcrea.GetLeft(this.objVSGDivPos) + diff + 'px';
					}
				}
				if(this.bMyGrid)
				{
					var nVSHeight = Webcrea.GetHeight(this.objDivPos, true);
					var nVSHeight1 = this.objDivPos.scrollWidth;
					var nVSHeight2 = this.objDivPos.clientWidth;
					if(nVSHeight1>nVSHeight2) nVSHeight -= this.nHScrlHeight;
					if(this.objVSGDivPos) this.objVSGDivPos.style.height = nVSHeight + 'px';
					if(this.bInitHScroll && this.bMyHScroll && this.objHSGDivPos) nVSHeight -= this.nBaseScrlSize;
					if(this.objVSDWDivPos) this.objVSDWDivPos.style.top = nVSHeight - (this.nBaseScrlSize) + 'px';
				}
			}
			else if(this.IsForm())
			{
				var targetDiv = this.objDivPos;
				var colGroup = Webcrea.FindNode(targetDiv, 'name', 'COLGROUP');
				var arrColGroup = [];
				if(colGroup) Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
				var currCol = arrColGroup[colNo];
				currCol.style.width = width + 'px';
				currCol.setAttribute('orgwidth', width);
				this.DisplayColSize();
			}
		}
	},
	_Get_Height : function()
	{
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetHeight(obj);
	},
	_Set_Height : function(height, cellId)
	{
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(!Webcrea.IsEmpty(cellId))
		{
			if(!this.IsForm()) return;
			var currNode = Webcrea.FindNode(obj, 'orgid', cellId);
			if(!currNode) return;
			var SetChildHeight = function(node)
			{
				if(!node) return;
				var childNodes = node.children;
				for(var i=0; i<childNodes.length; i++)
				{
					var childNode = childNodes[i];
					if(childNode.tagName == 'TD' || childNode.tagName == 'DIV') SetChildHeight(childNode);
					childNode.style.height = height + 'px';
				}
			};
			var trNode = Webcrea.FindParentNode(currNode, 'name', 'TR');
			if(!height) trNode.style.display = 'none';
			else
			{
				trNode.style.display = '';
				SetChildHeight(trNode);
			}
			return;
		}
		var org = Webcrea.GetHeight(obj);
		var diff = height-org;
		if(this.objGDivPos) this.objGDivPos.style.height = height + 'px';
		this.objDivPos.style.height = height + 'px';
		if(this.objTable && !this.IsGrid() && !this.IsHtml()) this.objTable.style.height = Webcrea.GetHeight(this.objTable) + diff + 'px';
		if(this.IsHtml())
		{
			var objHtml = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
			if(objHtml) objHtml.style.height = Webcrea.GetHeight(objHtml) + diff + 'px';
		}
		else if(this.IsTab())
		{
			var objTabB = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'B');
			if(objTabB) objTabB.style.height =  Webcrea.GetHeight(objTabB) + diff + 'px';
		}
		else if(this.IsGrid())
		{
			if(this.bMyGrid)
			{
				var nVSHeight = Webcrea.GetHeight(this.objDivPos, true);
				var nVSHeight1 = this.objDivPos.scrollWidth;
				var nVSHeight2 = this.objDivPos.clientWidth;
				if(nVSHeight1>nVSHeight2) nVSHeight -= this.nHScrlHeight;
				if(this.objVSGDivPos) this.objVSGDivPos.style.height = nVSHeight + 'px';
				if(this.bInitHScroll && this.bMyHScroll && this.objHSGDivPos) nVSHeight -= this.nBaseScrlSize;
				if(this.objVSDWDivPos) this.objVSDWDivPos.style.top = nVSHeight - (this.nBaseScrlSize) + 'px';
				this.DisplayPublic(true);
			}
		}
		else if(this.IsImage())
		{
			var objImg = Webcrea.FindNode(this.objDivPos, 'name', 'img');
			if(objImg)
			{
				obj.style.height = height + 'px';
				objImg.style.height = height + 'px';
			}
		}
	},
	Accumulate : function()
	{
		var param = arguments[0];
		Webcrea.Accumulate(this, param);
	},
	ColToRow : function()
	{
		var param = arguments[0];
		Webcrea.ColToRow(this, param);
	},
	Col2Row : function()
	{
		var param = arguments[0];
		this.ColToRow(param);
	},
	FitColumn : function()
	{
		Webcrea.FitColumn(this);
	},
	PageScrollMax : function()
	{
		this.max = arguments[0];
		if(this.IsPageScroll() && this.row>0) this.DisplayPageScroll();
	},
	PageScrollRow : function()
	{
		this.row = arguments[0];
		if(this.IsPageScroll() && this.max>0) this.DisplayPageScroll();
	},
	Range : function()
	{
		var param = arguments[0];
		Webcrea.Range(this, param);
	},
	SetRank : function()
	{
		this.Rank(arguments[0]);
	},
	Rank : function()
	{
		var param = arguments[0];
		Webcrea.Rank(this, param);
	},
	SetRatio : function()
	{
		var param = arguments[0];
		Webcrea.Ratio(this, param, true);
	},
	Ratio : function()
	{
		var param = arguments[0];
		Webcrea.Ratio(this, param);
	},
	RowStatus : function(nRow)
	{
		if(!this.arrRows || this.arrRows.length<0) return '';
		if(nRow == undefined) nRow = this.GetRowDataNo(this.GetCurrRowIndex());
		var sStatus = this.arrStatus[nRow];
		return sStatus?sStatus:'';
	},
	RecordCount : function()
	{
		var nRet = 0;
		nRet = (this.arrRows)?this.arrRows.length:0;
		if(this.IsForm() && nRet>0)
		{
			if(this.bBaseFormRecord && nRet == 1) nRet = 0;
			else nRet = 1;
		}
		return nRet;
	},
	RemoveColumn : function()
	{
		var param = arguments[0];
		var bRecord = arguments[1];
		param = param.trim();
		var arrParam = param.split(' ');
		if(!bRecord)
		{
			param = Webcrea.ReParamBySp(param);
			var param1 = param.replace(' ', ',');
			this.HideColumn(param1);
			arrParam = param1.split(',');
			for(var i=0; i<arrParam.length; i++)
			{
				var col = arrParam[i].trim();
				var cellInfo = this.GetCellInfo(col);
				if(cellInfo)
				{
					var nCol = this.arrCellId.isearch(cellInfo.id);
					if(nCol<0) continue;
					this.arrCellId.splice(nCol, 1);
					delete this.arrCellInfo[cellInfo.id];
				}
			}
		}
		else Webcrea.RemoveField(this, arrParam);
	},
	RemoveSelect : function()
	{
		if(!this.arrRows) return;
		if(this.arrRows.length<1) return;
		if(this.currRowIndex<0) return;
		var currObj = this;
		var RemoveRow = function(nRow)
		{
			var nRowData = currObj.GetRowDataNo(nRow, true);
			currObj.DeleteRow(nRow);
			nRowData = Number(currObj.GetRowDataNo());
			nRowData += 1;
			if(currObj.bMyGrid)
			{
				if(nRowData >= currObj.arrRows.length) nRowData = currObj.arrRows.length-1;
				currObj._Set_RowNo(nRowData);
			}
			else
			{
				if(nRowData <= currObj.arrRows.length) currObj.ReLoadRow(nRowData, currObj.arrRows.length-1);
				currObj.SetFocus();
			}
		};
		if(this.bMulti)
		{
			for(var i=this.arrRows.length-1; i>=0; i--)
			{
				if(!this.IsSelected(i)) continue;
				RemoveRow(i);
			}
		}
		else RemoveRow(this.currRowIndex);
	},
	RemoveRow : function()
	{
		var param = arguments[0];
		Webcrea.RemoveRow(this, param);
	},
	RemoveSum : function()
	{
		var mode = arguments[0];
		Webcrea.RemoveSum(this, mode);
	},
	RemoveZero : function()
	{
		var param = arguments[0];
		param = param.trim();
		var arrRemoveField = param.split(',');
		if(Webcrea.IsEmpty(param)) arrRemoveField = JSON.parse(JSON.stringify(this.arrField));
		for(var i=0; i<this.arrRows.length; i++)
		{
			for(var j=0; j<arrRemoveField.length; j++)
			{
				var sField = arrRemoveField[j];
				if(!this.IsColumn(sField))
				{
					arrRemoveField.splice(j, 1);
					j--;
					continue;
				}
				if(this.arrData[sField][i] != '' && this.arrData[sField][i] != '0')
				{
					arrRemoveField.splice(j, 1);
					j--;
				}
			}
			if(arrRemoveField.length==0) break;
		}
		if(arrRemoveField.length>0) Webcrea.RemoveField(this, arrRemoveField);
	},
	ReNumber : function()
	{
		var param = arguments[0];
		Webcrea.ReNumber(this, param);
	},
	Serialize : function()
	{
		var param = arguments[0];
		Webcrea.Serialize(this, param);
	},
	SetEventIndex : function(currNode)
	{
		var bFind = false;
		var nCol, nRow = -1;
		if(currNode)
		{
			var node = currNode;
			while(node)
			{
				if(node.cellIndex>=0)
				{
					nRow = node.parentNode.rowIndex;
					nCol = node.cellIndex;
					break;
				}
				else node = node.parentNode;
			}
			if(nRow>=0 && nCol>=0)
			{
				bFind = true;
				if(this.IsGrid()) nRow -= this.nHeader;
			}
		}
		if(!bFind)
		{
			var currObj = this;
			IsChildNode	= function (objCellChild) {
				var objCellChildSub = objCellChild.firstChild;
				while(objCellChildSub) {
					if(objCellChild.nodeName == 'DIV' && objCellChildSub.nodeName == 'DIV') bFind = IsChildNode(objCellChildSub);
					else if (objCellChildSub.nodeName != '#text') {
						if(objCellChildSub.id == currNode.id || objCellChildSub.id == currObj.divPos + '.' + currNode) {
							bFind = true;
							break;
						}
					}
					objCellChildSub = objCellChildSub.nextElementSibling;
				}
				return bFind;
			};
			var rowCnt = this.objTable.rows.length;
			for(var i=0; i<rowCnt; i++) {
				var objRow = this.objTable.rows[i];
				var colCnt = objRow.cells.length;
				for(var j=0; j<colCnt; j++) {
					var objCell = objRow.cells[j];
					var objCellChildNodes = objCell.childNodes;
					if(objCellChildNodes.length>0) {
						for(var k=0; k<objCellChildNodes.length; k++) {
							var objCellChild = objCellChildNodes[k];
							while(objCellChild) {
								if (objCellChild.nodeName != '#text') {
									if(objCellChild.id == currNode.id || objCellChild.id == this.divPos + '.' + currNode) {
										bFind = true;
										break;
									}
									else {
										bFind = IsChildNode(objCellChild);
										if(bFind) break;
									}
								}
								objCellChild = objCellChild.nextElementSibling;
							}
							if(bFind)break;
						}
					}
					if(bFind)break;
				}
				if(bFind) {
					nRow = i;
					nCol = j;
					if(this.IsGrid()) nRow -= this.nHeader;
					break;
				}
			}
		}
		if(bFind) {
			var bDiffRow = false;
			var nRowOrg;
			var nRowDataOrg;
			var objSelRowOrg;
			if(this.IsGrid())
			{
				nRowOrg = this.GetCurrRowIndex();
				nRowDataOrg = this.GetRowDataNo(nRowOrg, true);
				objSelRowOrg = this.objSelRow;
				if(this.objSelInfo)
				{
					nRowOrg = this.objSelInfo.rowNo;
					nRowDataOrg = this.objSelInfo.dataRowNo;
				}
			}
			this.SetCurrRowIndex(nRow);
			this.SetCurrColIndex(nCol);
			if(this.IsGrid() || this.IsForm())
			{
				if(this.IsGrid() && this.bMyGrid)
				{
					var nCurrRowNo = this.GetCurrRowIndex();
					var nCurrNodeRowNo = this.GetRowNo(currNode);
					if(nCurrNodeRowNo>nCurrRowNo)
					{
						bDiffRow = true;
						var firstNode = this.objTable.rows[this.nHeader];
						var firstRowNo = firstNode.getAttribute('rowno');
						this.SetCurrRowIndex(nRowOrg, true, nRowDataOrg);
						this.objSelRow = objSelRowOrg;
						this.DisplayPublic(true, Number(firstRowNo));
					}
				}
				if(!bDiffRow)
				{
					this.Select(this.GetCurrRowIndex(), true);
					this.SelectCol(this.GetCurrColIndex(), currNode);
				}
			}
			if(!bDiffRow) this.SetCurrObjInfo(currNode);
		}
	},
	SetCurrRowInfo : function(nRow, dataRowNo)
	{
		this.objSelInfo.rowNo_B = this.objSelInfo.rowNo;
		this.objSelInfo.dataRowNo_B = this.objSelInfo.dataRowNo;
		this.objSelInfo.rowNo = nRow;
		this.objSelInfo.dataRowNo = dataRowNo;
	},
	SetCurrRowIndex : function(nRow, bForceFix, dataRowNo)
	{
		if(nRow<0) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(nRow>this.nRowsScrl && !bForceFix && this.bMyGrid && nFileVersion<7020191004001) nRow = this.nRowsScrl;
		var bDiffRow = false;
		if(nRow != this.currRowIndex)
		{
			bDiffRow = true;
			this.currRowIndex_B = this.currRowIndex;
		}
		this.currRowIndex = nRow;
		if(Webcrea.IsNull(dataRowNo)) dataRowNo = this.GetRowDataNo(nRow, true);
		var bSetInfo = false;
		if(dataRowNo != this.objSelInfo.dataRowNo) bSetInfo = true;
		else if(bDiffRow && this.nDataRow>1) bSetInfo = true;
		if(bSetInfo)
		{
			this.objSelInfo.rowNo = nRow;
			this.objSelInfo.rowNo_B = this.currRowIndex_B;
			this.objSelInfo.dataRowNo_B = this.objSelInfo.dataRowNo;
			this.objSelInfo.dataRowNo = dataRowNo;
		}
		else if((this.IsForm() || this.nDataRow>1) && nRow != this.objSelInfo.rowNo)
		{
			this.objSelInfo.rowNo = nRow;
			this.objSelInfo.rowNo_B = this.currRowIndex_B;
		}
		if(this.IsGrid()) _ROWNO_ = this.currRowIndex;
		else _ROWNO_ = -1;
		if(!this.IsGrid()) nRow = 0;
		this.SetCurrRecord(nRow);
	},
	SetCurrColIndex : function(nCol)
	{
		this.currColIndex = nCol;
		_COLNO_ = this.currColIndex;
	},
	SetCurrRecord : function(nRow, bDataRow, bBlankData)
	{
		if(!bDataRow) nRow = this.GetRowDataNo(nRow, true);
		for(var j=0; j<this.arrField.length; j++)
		{
			var sField = this.arrField[j];
			var sData = '';
			if(this.arrRows && this.arrRows.length>0) sData = this.arrData[sField][nRow];
			if(sData == undefined || bBlankData) sData = '';
			Webcrea.DynamicVal(sField, sData, this.objName);
			Webcrea.DynamicVal(sField, sData);
			var cellInfo = this.GetCellInfo(sField);
			if(cellInfo && sField != cellInfo.orgId) Webcrea.DynamicVal(cellInfo.orgId, sData);
		}
	},
	GetAllRowText : function()
	{
		var nRow = arguments[0];
		var sName = arguments[1];
		if(nRow<0) return;
		var ClearRowText = function(sClearName)
		{
			for(var i=0; i<Webcrea.arrGetRowText.length; i++)
			{
				var sRowName = Webcrea.arrGetRowText[i];
				if(sRowName.indexOf(sClearName) == 0)
				{
					Webcrea.DynamicVal(sRowName, '');
					Webcrea.arrGetRowText.splice(i, 1);
					i--;
				}
			}
		};
		if(Webcrea.IsEmpty(sName)) sName = 'row_';
		if(!Webcrea.arrGetRowText) Webcrea.arrGetRowText = [];
		else ClearRowText(sName);
		for(var i=0; i<this.arrField.length; i++)
		{
			var sField = this.arrField[i];
			var sValue = this.arrData[sField][nRow];
			sField = sName + sField;
			Webcrea.arrGetRowText[Webcrea.arrGetRowText.length] = sField;
			Webcrea.DynamicVal(sField, sValue);
		}
	},
	GetDisplayRows : function()
	{
		let bInfo = arguments[0];
		var nDisplayRows = 0;
		var nRowsHeight = 0;
		this.bLastRowAdjust = false;
		var nDivHeight = Webcrea.GetHeight(this.objDivPos, true);
		if(this.bMyHScroll && this.IsHScroll()) nDivHeight -= this.nBaseScrlSize;
		if(bInfo && this.objTable && this.objTable.rows.length>=(this.nHeader+this.nDataRow) && !this.objTableInfoHeightAdjust)
		{
			for(let i=0; i<this.arrTableData.length; i++)
			{
				var objInfo = this.arrTableData[i];
				let nRowHeightByInfo = objInfo.height;
				let nRowHeight = Webcrea.GetHeight(this.objTable.rows[i+this.nHeader], true);
				if(nRowHeightByInfo<nRowHeight) objInfo.height = nRowHeight;
			}
			this.objTableInfoHeightAdjust = true;
		}
		if(bInfo)
		{
			nDivHeight -= this.nHeaderHeight;
			let bLoop = true;
			while(bLoop)
			{
				if(!this.arrTableData.length) break;
				for(let i=0; i<this.arrTableData.length; i++)
				{
					nDisplayRows++;
					var objInfo = this.arrTableData[i];
					nRowsHeight += objInfo.height;
					if(nRowsHeight>=nDivHeight)
					{
						let nHide = nRowsHeight - nDivHeight;
						if(nHide>2 && nDisplayRows%this.nDataRowReal==0) this.bLastRowAdjust = true;
						bLoop = false;
						break;
					}
				}
			}
			if(this.arrRows && this.arrRows.length<(nDisplayRows-this.nSumRow))
			{
				this.bLastRowAdjust = false;
			}
		}
		else
		{
			nDisplayRows -= this.nHeader;
			for(var i=0; i<this.objTable.rows.length; i++)
			{
				nDisplayRows++;
				let nRowHeight = Webcrea.GetHeight(this.objTable.rows[i], true);
				nRowsHeight += nRowHeight;
				if(nRowsHeight>=nDivHeight)
				{
					let nHide = nRowsHeight - nDivHeight;
					if(nHide>2 && nDisplayRows%this.nDataRowReal==0) this.bLastRowAdjust = true;
					break;
				}
			}
		}
		return nDisplayRows;
	},
	GetDisplayRowsByInfo : function()
	{
		return this.GetDisplayRows(true);
	},
	GetDisplayRowsByListTreeGrid : function()
	{
		if(!this.IsListTreeGrid()) return;
		var nFirst = arguments[0];
		if(!nFirst)
		{
			var firstNode = this.objTable.rows[this.nHeader+(this.vLock*this.nDataRow)];
			if(firstNode) nFirst = Number(firstNode.getAttribute('rowno'));
			else nFirst = 0;
		}
		var nRowsPage = 0;
		var nDivHeight = Webcrea.GetHeight(this.objDivPos, true);
		if(!this.IsVisible()) nDivHeight = this.initDivHeight;
		if(this.objHSGDivPos && this.bMyHScroll && this.IsHScroll()) nDivHeight -= this.nBaseScrlSize;
		var nDataHeight = 0;
		var nMaxDataHeight = 0;
		for(var i=0; i<this.arrTableData.length; i++)
		{
			var objInfo = this.arrTableData[i];
			if(nMaxDataHeight<objInfo.height) nMaxDataHeight = objInfo.height;
		}
		if(nFirst == this.arrRows.length)
		{
			for (var nRowData=this.arrRows.length-1; nRowData>=0; nRowData--)
			{
				for(var i=this.arrTableData.length-1; i>=0; i--)
				{
					var objInfo = this.arrTableData[i];
					var bDisplay = true;
					if(this.arrRowCond)
					{
						let objRowCond = this.arrRowCond[i];
						var sCond = objRowCond.cond;
						if(!Webcrea.IsEmpty(sCond)) bDisplay = this.IsWhere(sCond, nRowData);
					}
					if(bDisplay) nDataHeight += objInfo.height;
				}
				if(nDivHeight<nDataHeight) break;
				nRowsPage++;
			}
		}
		else
		{
			for (var nRowData=nFirst; nRowData<this.arrRows.length; nRowData++)
			{
				for(var i=0; i<this.arrTableData.length; i++)
				{
					var objInfo = this.arrTableData[i];
					var bDisplay = true;
					if(this.arrRowCond)
					{
						let objRowCond = this.arrRowCond[i];
						var sCond = objRowCond.cond;
						if(!Webcrea.IsEmpty(sCond)) bDisplay = this.IsWhere(sCond, nRowData);
					}
					if(bDisplay) nDataHeight += objInfo.height;
				}
				if(nDivHeight<nDataHeight) break;
				nRowsPage++;
			}
		}
		while(nDivHeight>nDataHeight)
		{
			nDataHeight += nMaxDataHeight;
			if(nDivHeight<nDataHeight) break;
			nRowsPage++;
		}
		return nRowsPage;
	},
	GetRowDataNoByScrollPos : function()
	{
		if(!this.bMyGrid) return;
		var nThumbTop = arguments[0];
		var nRet = 0;
		var nScrlThumb = Webcrea.GetHeight(this.objVSTHDivPos);
		if(!nScrlThumb) nScrlThumb = this.DisplayScrollThumbSize();
		var nScrlFirst = Webcrea.GetBottom(this.objVSUPDivPos, true) + 2;
		var nScrlLast = Webcrea.GetTop(this.objVSDWDivPos, true) - 2;
		var nScrlMaxTop = nScrlLast - nScrlThumb;
		if(Webcrea.IsNull(nThumbTop)) nThumbTop = Webcrea.GetTop(this.objVSTHDivPos, true);
		let nRowsPageReal = this.nRowsPageReal;
		if(this.bLastRowAdjust) nRowsPageReal -= 1;
		if(nThumbTop >= nScrlMaxTop) nRet = this.arrRows.length-nRowsPageReal;
		else if(nThumbTop <= nScrlFirst) nRet = 0;
		else
		{
			var nScrlMinTop = this.initVScrlTHTop;
			nRet = Math.ceil(((nThumbTop-nScrlMinTop)/(nScrlMaxTop-nScrlMinTop))*(this.arrRows.length-nRowsPageReal));
		}
		return nRet;
	},
	GetRowDataNo : function(nRow, bCurrRow)
	{
		if(this.IsProc()) return 0;
		var currNode;
		if(this.IsGrid() && this.bMyGrid && this.objSelRow && !this.objEvent.bInsertRow && !this.objEvent.bKeyDownMoveRow && !bCurrRow) currNode = this.objSelRow;
		else currNode = this.objTable.rows[Number(nRow)+this.nHeader];
		if(!currNode) return;
		nRow = currNode.getAttribute('rowno');
		if(this.IsForm()) nRow = 0;
		return nRow;
	},
	GetRowNo : function(currNode, bFirstRow)
	{
		var nRow=-1;
		if(!Webcrea.IsNull(currNode))
		{
			if(Webcrea.IsObject(currNode))
			{
				var node = currNode;
				while(node)
				{
					nRow = node.rowIndex;
					if(!Webcrea.IsNull(nRow) && nRow>=0) break;
					else node = node.parentNode;
				}
				if(this.IsGrid() && nRow>=0) nRow -= this.nHeader;
			}
			else
			{
				var rowDataNo = currNode;
				var firstNode = this.objTable.rows[this.nHeader];
				if(!firstNode) return;
				var firstRowNo = firstNode.getAttribute('rowno');
				nRow = Number(rowDataNo) - Number(firstRowNo);
				if(this.nDataRow>1)
				{
					nRow *= this.nDataRow;
					if(!bFirstRow)
					{
						var currRowIndex = this.GetCurrRowIndex();
						var addseq = currRowIndex>0?currRowIndex%this.nDataRow:0;
						nRow += addseq;
					}
				}
			}
		}
		return nRow;
	},
	GetCurrRowObj : function()
	{
		if(!this.IsGrid()) return;
		var nRow = this.GetCurrRowIndex();
		if(Webcrea.IsNull(nRow)) return;
		return this.objTable.rows[Number(nRow)+this.nHeader];
	},
	GetCurrRowIndex : function()
	{
		var nRow = this.currRowIndex;
		if(this.objSelInfo && !Webcrea.IsNull(this.objSelInfo.rowNo)) nRow = this.objSelInfo.rowNo;
		return nRow;
	},
	GetCurrRowIndexing : function()
	{
		return this.currRowIndex;
	},
	GetCurrRowDataNo : function()
	{
		var currNode = arguments[0];
		var nRow;
		if(!currNode)
		{
			currNode = this.objSelRow;
			if(!currNode) return;
			nRow = currNode.getAttribute('rowno');
		}
		else
		{
			if(!currNode) return;
			if(currNode.getAttribute('rowno')) nRow = currNode.getAttribute('rowno');
			else
			{
				var nCurrNodeRowNo = this.GetRowNo(currNode);
				nRow = this.GetRowDataNo(nCurrNodeRowNo);
			}
		}
		return nRow;
	},
	GetCurrColIndex : function()
	{
		return this.currColIndex;
	},
	SetTitle : function()
	{
		this.arrStackEvent[this.arrStackEvent.length] = 'ontitle';
		if(typeof window[this.divPage][this.divPosOrg].OnTITLE != 'undefined') window[this.divPage][this.divPosOrg].OnTITLE();
		this.arrStackEvent.removeByValue('ontitle');
		if(this.IsGrid())
		{
			var obj = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'H');
			if(obj) Webcrea.SetTitleCommon(obj, this);
		}
		else Webcrea.SetTitleCommon(this.objDivPos, this);
	},
	SetBWZDisplay : function()
	{
		var currNode = arguments[0];
		var bOut = arguments[1];
		if(Webcrea.IsEditTd(currNode)) return;
		if(Webcrea.IsMultilineMainDiv(currNode)) return;
		var tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
		var cellId = this.GetCellId(currNode);
		var bBWZ = this.IsBWZ(cellId);
		var bBWZDisplay = false;
		var sValue = currNode.value;
		if(bBWZ && Webcrea.IsEmptyByBWZ(sValue)) bBWZDisplay = true;
		else if(sValue == '' || Webcrea.IsNull(sValue)) bBWZDisplay = true;
		if(bBWZDisplay)
		{
			if(!bOut)
			{
				if(tdNode) sValue = tdNode.getAttribute('value');
				if(sValue == 'undefined') sValue = '';
				currNode.value = sValue;
			}
			else
			{
				if(tdNode) tdNode.setAttribute('value', sValue);
				currNode.value = '';
			}
		}
	},
	SetCurrObjInfo : function(currNode)
	{
		_FORMID_ = this.divPos;
		if(currNode)
		{
			var sId = '';
			if(this.IsCrossTab()) sId = this.GetCellId(currNode.id);
			else sId = this.GetCellId(currNode);
			sId = this.divPos + Webcrea.divId + sId;
			_CELLID_ = sId;
		}
		else _CELLID_ = '';
	},
	SelectCol : function(nCol, currNode)
	{
		this.bEditing = false;
		if(currNode && (currNode.disabled || currNode.readOnly))
		{
			this.objSelCol_B = this.objSelCol;
			this.objSelCol = null;
			return;
		}
		if(currNode.getAttribute('forcefocus')) return;
		this.SetBWZDisplay(currNode);
		var color = this.colorEdit;
		var id = currNode.getAttribute('orgId');
		if(!id) id = currNode.id;
		var cell = this.GetCellInfo(id);
		if(cell)
		{
			var role = currNode.getAttribute('role');
			if(cell.tagName == 'IMG' && role != 'selectboxarrow') color = 'transparent';
			else if(cell.tagName == 'INPUT' && (cell.type == 'checkbox' || cell.type == 'radio')) color = 'transparent';
			else if((cell.tagName == 'INPUT' || cell.tagName == 'BUTTON') && cell.type == 'button' && cell.bMenuButton) color = 'transparent';
			else if(Webcrea.IsEditTd(currNode) && id.toUpperCase() == '_STATUS_') color = 'transparent';
			else
			{
				color = cell.colorEdit;
				if(!color) color = this.colorEdit;
				else if(color.toLowerCase() == 'none') color = 'transparent';
				if(color == this.colorEdit) this.bEditing = true;
			}
		}
		else if(Webcrea.IsEmpty(currNode.id)) color = '';
		if(this.objSelInfo){
			var currObj = this;
			var SelectCol = function(col)
			{
				var colChildNodes = col.childNodes;
				for(var j=0; j<colChildNodes.length; j++)
				{
					var colChild = colChildNodes[j];
					if(currObj.IsBulletDiv(colChild) || currObj.IsCodeButtonDiv(colChild)) SelectCol(colChild);
					else if(Webcrea.IsMultilineMainDiv(colChild))
					{
						currObj.SetMultiLineColor(colChild, color);
					}
					else
					{
						while(colChild)
						{
							if (colChild.nodeName != '#text' && !currObj.IsBulletDiv(colChild) && !currObj.IsSpinButton(colChild))
							{
								var bSkip = false;
								if((colChild.tagName == 'INPUT' || colChild.tagName == 'BUTTON') && (colChild.type == 'checkbox' || colChild.type == 'radio' || colChild.type == 'button')) bSkip = true;
								if(!bSkip) colChild.style.backgroundColor = color;
								if(color == currObj.colorEdit) currObj.bEditing = true;
							}
							colChild = colChild.nextElementSibling;
						}
					}
				}
			};
			var rowNo = this.objSelInfo.rowNo;
			if(this.IsGrid() && this.IsDummyRow(rowNo)) return;
			var objSelRow = this.objTable.rows[rowNo+this.nHeader];
			var col = objSelRow.cells[nCol];
			if(!col)
			{
				if(currNode)
				{
					var trNode;
					if(currNode.tagName == 'TR') trNode = currNode;
					else trNode = Webcrea.FindParentNode(currNode, 'name', 'TR');
					if(trNode)
					{
						rowNo = trNode.getAttribute('rowno');
						if(this.IsGrid() && this.IsDummyRow(rowNo)) return;
						if(Webcrea.IsString(rowNo)) rowNo = Number(rowNo);
						var objSelRow = this.objTable.rows[rowNo+this.nHeader];
						col = objSelRow.cells[nCol];
					}
				}
				if(!col) return;
			}
			this.objSelCol_B = this.objSelCol?this.objSelCol:col;
			this.objSelCol = col;
			SelectCol(col);
		}
	},
	SelectDragRow : function(objSelRow, objSelRow_B)
	{
		if(objSelRow_B) this.ClearSelect(objSelRow_B);
		if(!this.IsGrid()) return;
		var currObj = this;
		if(objSelRow)
		{
			var SelectCol = function(col)
			{
				var colChildNodes = col.childNodes;
				for(var j=0; j<colChildNodes.length; j++)
				{
					var colChild = colChildNodes[j];
					if(currObj.IsBulletDiv(colChild) || currObj.IsCodeButtonDiv(colChild)) SelectCol(colChild);
					else if(Webcrea.IsMultilineMainDiv(colChild))
					{
						currObj.SetMultiLineColor(colChild, currObj.colorFocus);
					}
					else
					{
						while(colChild)
						{
							if (colChild.nodeName != '#text' && !currObj.IsBulletDiv(colChild) && !currObj.IsSpinButton(colChild))
							{
								var bSkip = false;
								if((colChild.tagName == 'INPUT' || colChild.tagName == 'BUTTON') && (colChild.type == 'checkbox' || colChild.type == 'radio' || colChild.type == 'button')) bSkip = true;
								if(!bSkip) colChild.style.backgroundColor = currObj.colorFocus;
							}
							colChild = colChild.nextElementSibling;
						}
					}
				}
			};
			var nCol = objSelRow.cells.length;
			for(var i=0; i<nCol; i++)
			{
				var col = objSelRow.cells[i];
				var color = this.colorFocus;
				if(!Webcrea.IsEmpty(color) && color.toLowerCase() == 'none')
				{
					color = col.getAttribute('colorcell');
					if(Webcrea.IsNull(color) && col.getAttribute('tdcolorcell')) color = col.getAttribute('tdcolorcell');
				}
				col.style.backgroundColor = color;
				var sId = this.GetCellId(col);
				if(Webcrea.IsEditTd(col) && sId && sId.toUpperCase() == '_STATUS_') continue;
				SelectCol(col);
			}
		}
	},
	Select : function(nRow, bDisplay, bDrag, dataRowNo, bForceSelect)
	{
		if(!bDisplay && this.objSelRow && this.objSelRow_B && this.objSelRow_B === this.objSelRow) return;
		else if(!bDisplay && this.objSelRow && !bForceSelect)
		{
			if(this.objSelRow.getAttribute('rowno') == this.GetRowDataNo(nRow, true)) return;
		}
		var currObj = this;
		if(!this.IsDisplaySelectRow(nRow)) return;
		if(this.IsDummyRow(nRow)) return;
		this.SetCurrRowIndex(nRow, false, dataRowNo);
		if(nRow > -1)
		{
			this.objSelRow_B = this.objSelRow;
			this.objSelRow = this.objTable.rows[nRow+this.nHeader].cloneNode(true);
		}
		else
		{
			this.objSelRow_B = this.objSelRow;
			this.objSelRow = null;
		}
		if(Webcrea.IsNull(dataRowNo)) dataRowNo = this.GetRowDataNo(nRow, true);
		if(this.IsGrid() && this.bMulti && !Webcrea.bShiftKey)
		{
			if(!this.arrShift) this.arrShift = [];
			this.nShiftFisrtNo = Number(dataRowNo);
			if(this.arrShift.search(this.nShiftFisrtNo)<0) this.arrShift[this.arrShift.length] = this.nShiftFisrtNo;
		}
		var rowNo=-1, rowNo_B=-1;
		if(this.objSelRow) rowNo = nRow;
		if(this.bThreadDisplay)
		{
			if(this.objSelRow_B)
			{
				if(this.objSelRow_B.getAttribute('rowno')) rowNo_B = this.GetRowNo(this.objSelRow_B.getAttribute('rowno'));
				else rowNo_B = this.currRowIndex_B;
			}
		}
		else
		{
			if(this.objSelRow_B) rowNo_B = this.currRowIndex_B;
		}
		if(!bDisplay || bForceSelect)
		{
			this.objSelInfo.rowNo = rowNo;
			this.objSelInfo.rowNo_B = rowNo_B;
			this.objSelInfo.dataRowNo_B = this.objSelInfo.dataRowNo;
			this.objSelInfo.dataRowNo = dataRowNo;
		}
		rowNo -= (rowNo%this.nDataRow>0)?(rowNo%this.nDataRow):0;
		rowNo_B -= (rowNo_B%this.nDataRow>0)?(rowNo_B%this.nDataRow):0;
		for(var i=0; i<this.nDataRow; i++)
		{
			var objSelRow = this.objTable.rows[rowNo+this.nHeader+i];
			var objSelRow_B = null;
			if(rowNo_B>=0) objSelRow_B = this.objTable.rows[rowNo_B+this.nHeader+i];
			if(bDrag) this.SelectDragRow(objSelRow);
			else
			{
				var bClear = true;
				if(objSelRow_B && this.objDrag && this.objDrag.arrDragRowNo.length>0)
				{
					var no_b = objSelRow_B.getAttribute('rowno');
					if(this.objDrag.arrDragRowNo.search(no_b)>=0) bClear = false;
				}
				if(bClear) this.SelectDragRow(objSelRow, objSelRow_B);
				else this.SelectDragRow(objSelRow);
			}
		}
		if(!bDisplay || bForceSelect)
		{
			if(window[this.divPage][this.divPosOrg].Data && typeof window[this.divPage][this.divPosOrg].Data.OnCLICK != 'undefined')
			{
				window[this.divPage][this.divPosOrg].Data.OnCLICK();
			}
		}
	},
	SetRowText : function(colId, nRow, colValue)
	{
		if(this.arrRows && this.arrRows.length > 0)
		{
			var nField = this.GetColumn(colId);
			if(nField<0) return;
			colId = this.arrField[nField];
			var nFieldType = this.arrFieldType[nField];
			var bOrgData = this.arrData_Org;
			if(bOrgData)
			{
				nField = this.arrField_Org.isearch(colId);
				nFieldType = this.arrFieldType_Org[nField];
			}
			var orgValue = bOrgData?this.arrData_Org[colId][nRow]:this.arrData[colId][nRow];
			if(nFieldType && !Webcrea.IsEmpty(orgValue)) orgValue = Webcrea.GetNumberToStringData(orgValue);
			if(!this.arrStatus_b) this.arrStatus_b = this.arrStatus.clone();
			else this.arrStatus_b[nRow] = this.arrStatus[nRow];
			var bChgFlag=(colValue==orgValue)?false:true;
			if(bChgFlag)
			{
				var colObj=Webcrea.FindNode(this.objDivPos, 'id', this.divPos+'.'+colId+nRow);
				if(colObj && colObj.getAttribute('role')=='multiline')
				{
					if(colValue.replace(new RegExp('\r?\n','g'), '<br>') == orgValue.replace(new RegExp('\r?\n','g'), '<br>')) bChgFlag=false;
				}
			}
			if(bOrgData && !bChgFlag) this.arrStatus[colId][nRow] = '';
			else if(!bOrgData && !bChgFlag && this.arrStatus[colId][nRow] != '*') this.arrStatus[colId][nRow] = '';
			else this.arrStatus[colId][nRow] = '*';

			if(this.arrStatus[nRow] != '+' && this.arrStatus[nRow] != '-')
			{
				var bModify = false;
				for(var i=0; i<this.arrField.length; i++)
				{
					if(this.arrStatus[this.arrField[i]][nRow] == '*')
					{
						bModify = true;
						break;
					}
				}
				if(bModify) this.arrStatus[nRow] = '*';
				else this.arrStatus[nRow] = '';
			}
			this.arrData[colId][nRow] = colValue;
			if(this.IsTreeGrid() && this.IsColumn(this.dataSeqField))
			{
				var nSeqOrg = this.arrData[this.dataSeqField][nRow];
				this.arrData_Org[colId][nSeqOrg] = colValue;
			}
			var nRowFilter = nRow;
			if(this.bFiltering && this.arrData[this.dataSeqField]) nRowFilter = this.arrData[this.dataSeqField][nRowFilter];
			if(this.arrData_Filter && this.arrData_Filter[colId]) this.arrData_Filter[colId][nRowFilter] = colValue;
			if(this.arrStatus_Filter)
			{
				this.arrStatus_Filter[nRowFilter] = this.arrStatus[nRow];
				if(this.arrStatus_Filter[colId]) this.arrStatus_Filter[colId][nRowFilter] = this.arrStatus[colId][nRow];
			}
		}
	},
	SetMultiLineColor : function(currNode, color)
	{
		var rootDiv;
		var firstDiv;
		var mainDiv;
		var bMultiline = Webcrea.IsMultilineMainDiv(currNode);
		if(!bMultiline)
		{
			if(currNode.nodeName != 'DIV' || (currNode.nodeName == 'DIV' && currNode.getAttribute('role') != 'multiline')) return;
		}
		if(bMultiline)
		{
			rootDiv = currNode;
			firstDiv = currNode.firstChild;
			mainDiv = firstDiv.firstChild;
		}
		else
		{
			mainDiv = currNode;
			firstDiv = mainDiv.parentNode;
			rootDiv = firstDiv.parentNode;
		}
		if(!Webcrea.IsEmpty(color) && color.toLowerCase() == 'none') color = mainDiv.getAttribute('colorcell');
		if(rootDiv) rootDiv.style.backgroundColor = color;
		if(firstDiv) firstDiv.style.backgroundColor = color;
		if(mainDiv) mainDiv.style.backgroundColor = color;
	},
	SetModified : function(colId, colValue, bSyncCall)
	{
		if(!this.IsEnableEvent('SetModified')) return;
		var colObj;
		if(bSyncCall == undefined) bSyncCall = false;
		if (Webcrea.IsObject(colId))
		{
			colObj = colId;
			if(this.IsCrossTab()) colId = this.GetCellIdByNode(colObj);
			else colId = colId.id;
		}

		var event = 'SetModified(' + colId + ')';
		if(!this.IsEnableEvent(event)) return;
		this.DisableEvent(event);
		var nRow = this.currRowIndex;
		var nRowData = this.GetRowDataNo(nRow);
		if(!this.IsGrid()) nRow = 0, nRowData = 0;

		if(this.IsCrossTab()) colId = this.GetCellId(colId);
		else
		{
			if(!colId) colId = _CELLID_;
			colId = this.GetCellId(colObj?colObj:colId);
		}
		if(Webcrea.IsNull(colValue)) colValue = this.GetValue(colId);
		if(this.bMulti)
		{
			if(!this.arrShift) this.arrShift = [];
			if(this.IsGrid() && Webcrea.bShiftKey) this.DisplaySelectRowByShift(nRowData);
			else
			{
				if(this.objDrag)
				{
					if(colValue) this.objDrag.arrDragRowNo[this.objDrag.arrDragRowNo.length] = nRowData;
					else
					{
						for(var i=0; i<this.objDrag.arrDragRowNo.length; i++)
						{
							var nRowDrag = this.objDrag.arrDragRowNo[i];
							if(nRowData == nRowDrag)
							{
								this.objDrag.arrDragRowNo.splice(i, 1);
								break;
							}
						}
					}
				}
				if(Webcrea.bCtrlKey && colId != '_SELECT_')
				{
					var bCheck = this.arrMulti[nRowData];
					if(Webcrea.IsEmpty(bCheck)) bCheck = 0;
					this.arrMulti[nRowData] = !bCheck;
				}
				else this.arrMulti[nRowData] = colValue;
				if(this.IsSetTree())
				{
					var treeInfo = this.arrTreeInfo[nRowData];
					treeInfo.bChecked = colValue;
				}
				if(colValue) this.RefreshHeader();
				else this.RefreshHeader(colValue);
			}
		}
		var bSetRow = false;
		if(this.arrRows && this.arrRows.length > 0)
		{
			if(this.GetColumn(colId)>=0) bSetRow = true;
			else if(colObj && colObj.type == 'radio')
			{
				var trNode = Webcrea.FindParentNode(colObj, 'name', 'TR');
				var groupCol = Webcrea.FindNode(trNode, 'id', colObj.name);
				if(groupCol)
				{
					var field = groupCol.getAttribute('orgId');
					if(this.GetColumn(field)>=0)
					{
						colId = field;
						bSetRow = true;
					}
				}
			}
		}
		var orgValue = '';
		if(bSetRow)
		{
			var nField = this.GetColumn(colId);
			orgValue = this.arrData[this.arrField[nField]][nRowData];
			this.SetRowText(colId, nRowData, colValue);
			if(this.IsGrid()) this.RefreshRow(nRow, colId);
		}
		else if(this.syncObj)
		{
			var nSyncRowNo = this.syncObj._Get_RowNo();
			var nField = this.syncObj.GetColumn(colId);
			if(nSyncRowNo>=0)
			{
				if(nField>=0) orgValue = this.syncObj.arrData[this.syncObj.arrField[nField]][nSyncRowNo];
				else bSyncCall = true;
			}
		}
		Webcrea.DynamicVal(colId, colValue);
		this.RemoveEvent(event);
		if(!bSyncCall && this.syncObj && colValue != orgValue && Win.bLoaded) this.syncObj.SetModified(colId, colValue, true);
		this.OnCALCULATE();
	},
	SetSelect : function()
	{
		if(!this.bMulti) return;
		var param = arguments[0];
		var bLock = false;
		var bEnable = false;
		var bDisable = false;
		var sWhere = '';
		var n = param.indexOf('lock');
		if(n>=0)
		{
			bLock = true;
			sWhere = param.substr(n+4);
			sWhere = sWhere.trim();
		}
		else
		{
			var nLen = 7;
			n = param.indexOf('disable');
			if(n<0)
			{
				n = param.indexOf('no');
				nLen = 2;
			}
			if(n>=0)
			{
				bDisable = true;
				sWhere = param.substr(n+nLen);
				sWhere = sWhere.trim();
			}
			else
			{
				n = param.indexOf('enable');
				if(n>=0)
				{
					bEnable = true;
					sWhere = param.substr(n+6);
					sWhere = sWhere.trim();
				}
			}
			if(n<0 && Webcrea.IsEmpty(sWhere))
			{
				n = param.indexOf('where');
				if(n>=0)
				{
					sWhere = param.substr(n);
					sWhere = sWhere.trim();
				}
			}
		}
		var bWhere = true;
		if(Webcrea.IsEmpty(sWhere)) bWhere = false;
		var arrWhere;
		if(bWhere)
		{
			arrWhere = Webcrea.MakeToken(sWhere);
			if(arrWhere[0].iEquals('where')) arrWhere.splice(0, 1);
		}
		for(var i=0; i<this.arrRows.length; i++)
		{
			var rowInfo = this.arrRowInfo[i];
			var bFind = true;
			if(bWhere) bFind = Webcrea.IsWhereData(this, i, arrWhere);
			if(bFind)
			{
				rowInfo.bLock = bLock;
				rowInfo.bMultiSelectDisabled = bDisable;
				if(!bLock && !bDisable && !bEnable) this.arrMulti[i] = true;
			}
		}
	},
	IsFormModified : function(nRow, cellId)
	{
		var bModified = false;
		if(nRow == undefined)
		{
			for(var i=0; i<this.arrStatus.length; i++)
			{
				if(this.arrStatus[i] == '+' || this.arrStatus[i] == '*' || this.arrStatus[i] == '-')
				{
					bModified = true;
					break;
				}
			}
		}
		else
		{
			nRow = this.GetRowDataNo(nRow);
			if(!Webcrea.IsEmpty(cellId))
			{
				if(this.arrStatus[cellId][nRow] == '*') bModified = true;
			}
			else if(this.arrStatus[nRow] == '*') bModified = true;
		}
		return bModified;
	},
	IsDeleteRow : function(nRow, bDataNo)
	{
		var bRet = false;
		var bRowNo = true;
		if(Webcrea.IsEmpty(nRow)) bRowNo = false;
		if(!bDataNo) nRow = this.GetRowDataNo(nRow, bRowNo);
		if(this.arrStatus[nRow] == '-') bRet = true;
		return bRet;
	},
	IsInsertRow : function(nRow, bDataNo)
	{
		var bRet = false;
		var bRowNo = true;
		if(Webcrea.IsEmpty(nRow)) bRowNo = false;
		if(!bDataNo) nRow = this.GetRowDataNo(nRow, bRowNo);
		if(this.arrStatus[nRow] == '+') bRet = true;
		return bRet;
	},
	IsModifyRow : function(nRow, bDataNo)
	{
		var bRet = false;
		var bRowNo = true;
		if(Webcrea.IsEmpty(nRow)) bRowNo = false;
		if(!bDataNo) nRow = this.GetRowDataNo(nRow, bRowNo);
		if(this.arrStatus[nRow] == '*') bRet = true;
		return bRet;
	},
	IsSelected : function(nRow)
	{
		return this.arrMulti[nRow]==''?0:1;
	},
	SetRowPageCount : function()
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		let nDisplayRows = this.GetDisplayRowsByInfo();
		this.nRowsPageReal = Math.floor(nDisplayRows/this.nDataRowReal);
		this.nRowsPage = this.nRowsPageReal*this.nDataRowReal;
		this.nRowsScrl = this.nRowsPage-this.nFooter;
		this.DisplayScrollThumbSize();
	},
	SetRowStatus : function()
	{
		var ___param = arguments[0];
		var ___bNotSync = arguments[1];
		var ___bCommand = arguments[2];
		if(Webcrea.IsNull(___param)) return;
		if(!___bCommand) ___param = ___param.trim();
		var sWhere = '';
		var arrWhere = ___param.split('where');
		if(arrWhere.length > 1)
		{
			sWhere = arrWhere[1].trim();
			___param = arrWhere[0].trim();
		}
		var ___arr = ___param.split(' ');
		if(___arr.length<1) return;
		var ___cmd = ___arr[0];
		var ___nRow = '';
		if(___arr.length>1)
		{
			for(var i=1; i<___arr.length; i++)
			{
				if(Webcrea.IsEmpty(___arr[i])) continue;
				if(Webcrea.IsFuncInnerVal(___arr[i])) ___nRow = Webcrea.GetFuncInnerVal(___arr[i]);
				else ___nRow = ___arr[i];
				if(!IsDigit(___nRow)) ___nRow = eval(___nRow);
				break;
			}
		}
		if ((typeof ___cmd).toLowerCase() == 'string')
		{
			___cmd = Webcrea.RemoveQuote(___cmd);
			___cmd = ___cmd.toLowerCase();
		}
		if(___cmd == 'insert' || ___cmd == '+') ___cmd = '+';
		else if(___cmd == 'delete' || ___cmd == '-') ___cmd = '-';
		else if(___cmd == 'update' || ___cmd == '*') ___cmd = '*';
		else if(___cmd == '') ___cmd = '';
		else return;
		if(!this.arrRows) return;
		if(Webcrea.IsEmpty(___nRow) || !Webcrea.IsEmpty(sWhere))
		{
			for(var ___i=0; ___i<this.arrRows.length; ___i++)
			{
				if(!Webcrea.IsEmpty(sWhere) && !this.IsWhere(sWhere, ___i)) continue;
				if(this.arrStatus[___i] == '+' && ___cmd != '') continue;
				if(this.arrStatus[___i] == '-' && (___cmd != '+' && ___cmd != '') && !___bCommand) continue;
				if(!this.arrStatus_b) this.arrStatus_b = this.arrStatus.clone();
				else this.arrStatus_b[___i] = this.arrStatus[___i];
				this.arrStatus[___i] = ___cmd;
				for(var ___j=0; ___j<this.arrField.length; ___j++)
					this.arrStatus[this.arrField[___j]][___i] = ___cmd;
			}
		}
		else
		{
			if(this.arrStatus[___nRow] == '+' && ___cmd != '') return;
			if(this.arrStatus[___nRow] == '-' && (___cmd != '+' && ___cmd != '') && !___bCommand) return;
			if(!this.arrStatus_b) this.arrStatus_b = this.arrStatus.clone();
			else this.arrStatus_b[___nRow] = this.arrStatus[___nRow];
			this.arrStatus[___nRow] = ___cmd;
			for(var ___j=0; ___j<this.arrField.length; ___j++)
				this.arrStatus[this.arrField[___j]][___nRow] = ___cmd;
		}
		if(this.bMyGrid && !Webcrea.IsEmpty(___nRow) && !this.IsDisplaySelectRow(___nRow, true)) ___bNotSync = true;
		if(!___bNotSync) this.SyncData();
	},
	RowNo : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowNo', param);
	},
	RowSize : function()
	{
		if(arguments.length<1) return;
		Webcrea.RowSize(this, arguments[0]);
	},
	RowToCol : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowToCol', param);
	},
	Row2Col : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowToCol', param);
	},
	AddRecordSet : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		if(!this.arrRecordSet) this.arrRecordSet = [];
		this.arrRecordSet[this.arrRecordSet.length] = ___param.sql;
	},
	MakeRecordSet : function()
	{
		Webcrea.MakeRecordSet(this);
		this.arrRecordSet = [];
	},
	MakeData : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		___param.rowIndex = arguments[1];
		var sRet = '';
		var arr = Webcrea.MakeToken(___param.sql);
		var sValue = '';
		var sRsFunc = '';
		var ___arrTempVar = [];
		for(var i=0; i<arr.length; i++)
		{
			var ___str = arr[i];
			if(___str.indexOf('.GetValue')>0 && i+3<arr.length && arr[i+1] == '(')
			{
				if(!___param.rowIndex) ___str = ___str + arr[i+1] + arr[i+2] + arr[i+3];
				else ___str = ___str + arr[i+1] + arr[i+2] + ',' + ___param.rowIndex + arr[i+3];
				var ___strValue = eval(___str);
				___str = "'" + ___strValue + "'";
				i=i+3;
			}
			else if(___str == '&_ME_') ___str = Webcrea.GetMEData();
			else if((___str.indexOf('sum')>=0 || ___str.indexOf('count')>=0 || ___str.indexOf('count0')>=0 
					|| ___str.indexOf('avg')>=0 || ___str.indexOf('avg0')>=0 
					|| ___str.indexOf('min')>=0 || ___str.indexOf('min0')>=0 || ___str.indexOf('max')>=0 
					|| ___str.indexOf('stddev')>=0 || ___str.indexOf('stddev0')>=0) 
					&& i+3<arr.length && arr[i+1] == '(')
			{
				var mode = '';
				if(___str.indexOf('sum')>=0) mode = 'sum';
				else if(___str.indexOf('count0')>=0) mode = 'count0';
				else if(___str.indexOf('count')>=0) mode = 'count';
				else if(___str.indexOf('avg0')>=0) mode = 'avg0';
				else if(___str.indexOf('avg')>=0) mode = 'avg';
				else if(___str.indexOf('min0')>=0) mode = 'min0';
				else if(___str.indexOf('min')>=0) mode = 'min';
				else if(___str.indexOf('max')>=0) mode = 'max';
				else if(___str.indexOf('stddev0')>=0) mode = 'stddev0';
				else if(___str.indexOf('stddev')>=0) mode = 'stddev';
				var ___subStr = '';
				i++;
				while(true)
				{
					i++;
					if(arr[i] == ')' || i==arr.length-1) break;
					___subStr += arr[i];
				}
				var calObj = this;
				var arrObj = ___subStr.split('.');
				if(arrObj.length>1)
				{
					var obj = Webcrea.GetObjectById(arrObj[0]);
					if(obj)
					{
						calObj = obj;
						___subStr = arrObj[1];
					}
				}
				___str = calObj.GetCalculationByCol(mode, ___subStr, ___param.rowIndex);
			}
			else if(___str == 'Date' && i>0 && i<arr.length-2 && arr[i-1] != '.' && arr[i+1] == '(') ___str = 'Webcrea.' + ___str;
			else if(Webcrea.IsRsFunction(___str) && i+3<=arr.length && arr[i+1] == '(')
			{
				sRsFunc = ___str;
				var ___sql = this.objName + '.' + ___str;
				while(true)
				{
					i++;
					if(arr[i] == ')' || i==arr.length-1) break;
					var ___subStr = arr[i];
					var iField = this.GetColumn(___subStr);
					if(iField>=0) ___subStr = "'" + ___subStr + "'";
					___sql += ___subStr;
				}
				if(arr[i-1] == '(' && arr[i] == ')')
				{
					if(sRsFunc.toLowerCase() == 'rowno') ___str = ___param.rowIndex;
					else ___str = ___sql + ___param.rowIndex + ')';
				}
				else ___str = ___sql + ',' + ___param.rowIndex + ')';
			}
			else
			{
				var cellId = this.GetCellId(___str);
				var iField = this.GetColumn(cellId);
				if(cellId && iField>=0)
				{
					var sField = this.arrField[iField];
					___str = this.arrData[sField][___param.rowIndex];
					if(this.IsColumnNumber(sField))
					{
						if(!___str) ___str = 0;
						___str = ___str;
					}
					else
					{
						___arrTempVar[___arrTempVar.length] = ___str;
						___str = '___arrTempVar[';
						___str += ___arrTempVar.length-1;
						___str += ']';
					}
				}
				else if(Webcrea.IsFuncInnerVal(___str)) ___str = Webcrea.GetFuncInnerVal(___str);
				else ___str = Webcrea.GetConvSyntax(___str);
			}
			sValue += ___str;
		}
		if(Webcrea.IsQuote(sValue)) sRet = Webcrea.RemoveQuote(sValue);
		else if(Webcrea.IsNumber(sValue)) sRet = Webcrea.NumberReDef(sValue);
		else
		{
			sRet = sValue;
			sRet = Webcrea.Eval(sRet, ___arrTempVar);
		}
		if(sRet == undefined) sRet = '';
		else if(Webcrea.IsNaN(sRet)) sRet = 0;
		return sRet;
	},
	IsFixCell : function()
	{
		var node = arguments[0];
		var bFixCell=false;
		var colno = node.getAttribute('colno');
		if(colno)
		{
			var findCol = Webcrea.FindNode(this.objHTable, 'colno', colno);
			if(findCol) bFixCell = findCol.getAttribute('fixwidth')?true:false;
		}
		return bFixCell;
	},
	SetFixCell : function()
	{
		var node = arguments[0];
		var bFix = arguments[1];
		if(!node) return;
		var rulerNode = Webcrea.FindNode(node, 'role', 'ruler');
		if(rulerNode)
		{
			if(bFix)
			{
				rulerNode.setAttribute('fix', 'fix');
				rulerNode.style.cursor = '';
			}
			else
			{
				var bFixCell = this.IsFixCell(node);
				if(bFixCell)
				{
					rulerNode.setAttribute('fix', 'fix');
					rulerNode.style.cursor = '';
				}
				else
				{
					rulerNode.removeAttribute('fix');
					rulerNode.style.cursor = 'col-resize';
				}
			}
		}
	},
	MoveColumn : function()
	{
		var currObj = arguments[0];
		var moveObj = arguments[1];
		var bAfter = arguments[2];
		var nCol = currObj.nColNo;
		var nColSpan = currObj.nColSpan;
		var nMoveCol = moveObj.nColNo;
		var nMoveColSpan = moveObj.nColSpan;
		if(nCol == nMoveCol) return;
		if(!this.arrTableHeader) return;
		var currObj = this;
		var MoveHeader = function()
		{
			var arrHeader = arguments[0];
			for(var i=0; i<arrHeader.length; i++)
			{
				var trNode = arrHeader[i];
				var arrCurrNode = [];
				var currNode = Webcrea.FindNode(trNode, 'colno', nCol.toString());
				arrCurrNode[arrCurrNode.length] = currNode;
				for(var j=0; j<nColSpan; j++)
				{
					var n = nCol+j+1;
					var spanNode = Webcrea.FindNode(trNode, 'colno', n.toString());
					if(spanNode) arrCurrNode[arrCurrNode.length] = spanNode;
				}
				var arrMoveNode = [];
				var moveNode = Webcrea.FindNode(trNode, 'colno', nMoveCol.toString());
				if(!moveNode)
				{
					var node = currObj.moveRowSpanNode;
					var n = node.getAttribute('colno');
					moveNode = Webcrea.FindNode(trNode, 'colno', n.toString());
				}
				arrMoveNode[arrMoveNode.length] = moveNode;
				for(var j=0; j<nMoveColSpan; j++)
				{
					var n = nMoveCol+j+1;
					var spanNode = Webcrea.FindNode(trNode, 'colno', n.toString());
					if(spanNode) arrMoveNode[arrMoveNode.length] = spanNode;
				}
				if(!currNode || !moveNode) return;
				if(moveNode.getAttribute('rowspan')) currObj.moveRowSpanNode = moveNode.nextElementSibling;

				var arrCurrTdNode = [];
				var arrMoveTdNode = [];
				for(var j=0; j<arrCurrNode.length; j++)
				{
					var node = arrCurrNode[j];
					var tdNode;
					if(node.tagName == 'TD') tdNode = node;
					else tdNode = Webcrea.FindParentNode(node, 'name', 'TD');
					if(!tdNode) return;
					arrCurrTdNode[arrCurrTdNode.length] = tdNode;
				}
				for(var j=0; j<arrMoveNode.length; j++)
				{
					var node = arrMoveNode[j];
					var tdNode;
					if(node.tagName == 'TD') tdNode = node;
					else tdNode = Webcrea.FindParentNode(node, 'name', 'TD');
					if(!tdNode) return;
					arrMoveTdNode[arrMoveTdNode.length] = tdNode;
				}

				var childNodes = trNode.childNodes;
				for(var j=0; j<childNodes.length; j++)
				{
					var colNode = childNodes[j];
					if(!colNode) break;
					if(colNode.tagName != 'TD') continue;
					var colClone = colNode.cloneNode(true);
					var rootNode = colNode.parentNode;
					var colNodeCom;
					if(bAfter) colNodeCom = arrMoveTdNode[arrMoveTdNode.length-1];
					else colNodeCom = arrMoveTdNode[0];
					if(colNode != colNodeCom) continue;
					var colNextNode;
					if(bAfter) colNextNode = colNode.nextElementSibling;
					else colNextNode = colNode;
					if(i==0 && arrCurrTdNode.length>0)
					{
						var node = arrCurrTdNode[0];
						var rulerNode = Webcrea.FindNode(node, 'role', 'ruler');
						if(rulerNode && currObj.IsFixCell(node))
						{
							var prevNode = node.previousElementSibling;
							if(prevNode)
							{
								currObj.SetFixCell(prevNode);
								var prevColNo = prevNode.getAttribute('colno');
								for(var k=i+1; k<arrHeader.length; k++)
								{
									var trNode = arrHeader[k];
									prevNode = Webcrea.FindNode(trNode, 'colno', prevColNo);
									if(prevNode) currObj.SetFixCell(prevNode);
								}
							}
							var movePrevNode;
							if(colNextNode) movePrevNode = colNextNode.previousElementSibling;
							else movePrevNode = colNode;
							if(movePrevNode)
							{
								currObj.SetFixCell(movePrevNode, true);
								var moveObj = currObj.GetColNo(movePrevNode);
								var moveColNo = moveObj.nColNo + moveObj.nColSpan;
								for(var k=i+1; k<arrHeader.length; k++)
								{
									var trNode = arrHeader[k];
									movePrevNode = Webcrea.FindNode(trNode, 'colno', moveColNo.toString());
									if(movePrevNode) currObj.SetFixCell(movePrevNode, true);
								}
							}
						}
						else
						{
							var movePrevNode;
							if(colNextNode) movePrevNode = colNextNode.previousElementSibling;
							else movePrevNode = colNode;
							if(movePrevNode)
							{
								currObj.SetFixCell(movePrevNode);
								var moveObj = currObj.GetColNo(movePrevNode);
								var moveColNo = moveObj.nColNo + moveObj.nColSpan;
								for(var k=i+1; k<arrHeader.length; k++)
								{
									var trNode = arrHeader[k];
									movePrevNode = Webcrea.FindNode(trNode, 'colno', moveColNo.toString());
									if(movePrevNode) currObj.SetFixCell(movePrevNode);
								}
							}

							var moveNextNode;
							if(colNextNode) moveNextNode = colNextNode;
							else moveNextNode = colNode;
							if(moveNextNode)
							{
								var bFixCell = currObj.IsFixCell(moveNextNode);
								currObj.SetFixCell(node, bFixCell);
								for(var k=i+1; k<arrHeader.length; k++)
								{
									var trNode = arrHeader[k];
									if(!trNode) break;
									var nCol1 = nCol + nColSpan;
									var node1 = Webcrea.FindNode(trNode, 'colno', nCol1.toString());
									if(node1) currObj.SetFixCell(node1, bFixCell);
								}
							}

							var prevNode = node.previousElementSibling;
							var nextNode = node.nextElementSibling;
							if(prevNode && nextNode)
							{
								bFixCell = currObj.IsFixCell(nextNode);
								currObj.SetFixCell(prevNode, bFixCell);
								var prevObj = currObj.GetColNo(prevNode);
								var prevColNo = prevObj.nColNo + prevObj.nColSpan;
								for(var k=i+1; k<arrHeader.length; k++)
								{
									var trNode = arrHeader[k];
									prevNode = Webcrea.FindNode(trNode, 'colno', prevColNo.toString());
									if(prevNode) currObj.SetFixCell(prevNode, bFixCell);
								}
							}
						}
					}
					for(var k=0; k<arrCurrTdNode.length; k++)
					{
						var cloneNode = arrCurrTdNode[k].cloneNode(true);
						if(!colNextNode) rootNode.appendChild(cloneNode);
						else rootNode.insertBefore(cloneNode, colNextNode);
						if(Webcrea.IsMobile() && currObj.bMyGrid)
						{
							if (Webcrea.IsIE69()) cloneNode.attachEvent('ontouchstart', function(){Webcrea.OnDRAG(window.event);});
							else cloneNode.addEventListener('touchstart', function(){Webcrea.OnDRAG(window.event);}, false);
						}
					}
					for(var k=0; k<arrCurrTdNode.length; k++)
					{
						rootNode.removeChild(arrCurrTdNode[k]);
					}
					break;
				}
			}
		};
		var MoveCol = function()
		{
			var arrCols = arguments[0];
			var currNode, moveNode;
			var arrCurrNode = [];
			var arrMoveNode = [];
			for(var i=0; i<arrCols.length; i++)
			{
				var colNode = arrCols[i];
				if(colNode.tagName != 'COL') continue;
				var no = colNode.getAttribute('colno');
				if(no == nCol)
				{
					currNode = colNode;
					arrCurrNode[arrCurrNode.length] = currNode;
					for(var j=0; j<nColSpan; j++)
					{
						var n = nCol+j+1;
						colNode = arrCols[++i];
						no = colNode.getAttribute('colno');
						if(no == n) arrCurrNode[arrCurrNode.length] = colNode;
					}
				}
				else if(no == nMoveCol)
				{
					moveNode = colNode;
					arrMoveNode[arrMoveNode.length] = moveNode;
					for(var j=0; j<nMoveColSpan; j++)
					{
						var n = nMoveCol+j+1;
						colNode = arrCols[++i];
						no = colNode.getAttribute('colno');
						if(no == n) arrMoveNode[arrMoveNode.length] = colNode;
					}
				}
			}
			if(!currNode || !moveNode) return;

			for(var i=0; i<arrCols.length; i++)
			{
				var colNode = arrCols[i];
				if(colNode.tagName != 'COL') continue;
				var colClone = colNode.cloneNode(true);
				var rootNode = colNode.parentNode;
				var colNodeCom;
				if(bAfter) colNodeCom = arrMoveNode[arrMoveNode.length-1];
				else colNodeCom = arrMoveNode[0];
				if(colNode != colNodeCom) continue;
				var colNextNode;
				if(bAfter) colNextNode = colNode.nextElementSibling;
				else colNextNode = colNode;
				for(var k=0; k<arrCurrNode.length; k++)
				{
					var cloneNode = arrCurrNode[k].cloneNode(true);
					rootNode.insertBefore(cloneNode, colNextNode);
				}
				for(var k=0; k<arrCurrNode.length; k++)
				{
					rootNode.removeChild(arrCurrNode[k]);
				}
				break;
			}
		};
		var arrTableRow = [];
		var arrMoveTableRow = [];
		if(this.arrMoveTableRow) arrTableRow = this.arrMoveTableRow;
		else
		{
			if(this.bCopyObject) Webcrea.FindNodeAll(this.objDivPosOrg, 'id', this.divPos + Webcrea.divId + 'Data', arrTableRow);
			else Webcrea.FindNodeAll(this.orgPage, 'id', this.divPos + Webcrea.divId + 'Data', arrTableRow);
		}
		for(var i=0; i<arrTableRow.length; i++)
		{
			var orgTableRow = arrTableRow[i];
			var moveTableRow = orgTableRow.cloneNode();
			var arrCurrNode = [];
			var currNode = Webcrea.FindNode(orgTableRow, 'colno', nCol.toString());
			arrCurrNode[arrCurrNode.length] = currNode;
			for(var j=0; j<nColSpan; j++)
			{
				var n = nCol+j+1;
				var spanNode = Webcrea.FindNode(orgTableRow, 'colno', n.toString());
				arrCurrNode[arrCurrNode.length] = spanNode;
			}
			var arrMoveNode = [];
			var moveNode = Webcrea.FindNode(orgTableRow, 'colno', nMoveCol.toString());
			arrMoveNode[arrMoveNode.length] = moveNode;
			for(var j=0; j<nMoveColSpan; j++)
			{
				var n = nMoveCol+j+1;
				var spanNode = Webcrea.FindNode(orgTableRow, 'colno', n.toString());
				arrMoveNode[arrMoveNode.length] = spanNode;
			}
			if(!currNode || !moveNode)
			{
				if(arrTableRow.length>1)
				{
					moveTableRow = orgTableRow.cloneNode(true);
					arrMoveTableRow[i] = moveTableRow;
				}
				continue;
			}

			var arrCurrTdNode = [];
			var arrMoveTdNode = [];
			for(var j=0; j<arrCurrNode.length; j++)
			{
				var node = arrCurrNode[j];
				var tdNode;
				if(node.tagName == 'TD') tdNode = node;
				else tdNode = Webcrea.FindParentNode(node, 'name', 'TD');
				if(!tdNode) return;
				arrCurrTdNode[arrCurrTdNode.length] = tdNode;
			}
			for(var j=0; j<arrMoveNode.length; j++)
			{
				var node = arrMoveNode[j];
				var tdNode;
				if(node.tagName == 'TD') tdNode = node;
				else tdNode = Webcrea.FindParentNode(node, 'name', 'TD');
				if(!tdNode) return;
				arrMoveTdNode[arrMoveTdNode.length] = tdNode;
			}

			var bAppend=false;
			var childNodes = orgTableRow.childNodes;
			for(var j=0; j<childNodes.length; j++)
			{
				var colNode = childNodes[j];
				if(colNode.tagName != 'TD') continue;
				var colClone = colNode.cloneNode(true);
				var bCurrNode=false;
				for(var k=0; k<arrCurrTdNode.length; k++)
				{
					if(colNode == arrCurrTdNode[k])
					{
						bCurrNode=true;
						break;
					}
				}
				if(bCurrNode) continue;
				var bMoveNode=false;
				for(var k=0; k<arrMoveTdNode.length; k++)
				{
					if(colNode == arrMoveTdNode[k])
					{
						bMoveNode=true;
						break;
					}
				}
				if(bMoveNode)
				{
					if(bAppend) continue;
					if(bAfter)
					{
						for(var k=0; k<arrMoveTdNode.length; k++)
						{
							var cloneNode = arrMoveTdNode[k].cloneNode(true);
							moveTableRow.appendChild(cloneNode);
						}
						for(var k=0; k<arrCurrTdNode.length; k++)
						{
							var cloneNode = arrCurrTdNode[k].cloneNode(true);
							moveTableRow.appendChild(cloneNode);
						}
					}
					else
					{
						for(var k=0; k<arrCurrTdNode.length; k++)
						{
							var cloneNode = arrCurrTdNode[k].cloneNode(true);
							moveTableRow.appendChild(cloneNode);
						}
						for(var k=0; k<arrMoveTdNode.length; k++)
						{
							var cloneNode = arrMoveTdNode[k].cloneNode(true);
							moveTableRow.appendChild(cloneNode);
						}
					}
					bAppend=true;
				}
				else moveTableRow.appendChild(colClone);
			}
			arrMoveTableRow[i] = moveTableRow;
		}
		this.SetAddRowInfo(arrMoveTableRow);
		var rowId = this.GetRowDataNo(0);
		this.DisplayPublic(true, rowId);
		this.arrMoveTableRow = arrMoveTableRow;

		var arrHTableHeader = [];
		var arrTableHeader = [];
		Webcrea.FindNodeAll(this.objHTable, 'id', this.divPos + '.Header', arrHTableHeader);
		Webcrea.FindNodeAll(this.objTable, 'id', this.divPos + '.Header', arrTableHeader);
		MoveHeader(arrHTableHeader);
		MoveHeader(arrTableHeader);

		var arrHCols = [];
		var arrCols = [];
		Webcrea.FindNodeAll(this.objHTable, 'name', 'COL', arrHCols);
		Webcrea.FindNodeAll(this.objTable, 'name', 'COL', arrCols);
		MoveCol(arrHCols);
		MoveCol(arrCols);
		this.DisplayRuler();
	},
	IsWhere : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		if(Webcrea.IsEmpty(___param.sql)) return true;
		___param.rowIndex = arguments[1];
		var bVal = arguments[2];
		var aWhere = Webcrea.MakeToken(___param.sql);
		return Webcrea.IsWhereData(this, ___param.rowIndex, aWhere, null, false, bVal);
	},
	RefreshHeader : function(b)
	{
		if(this.objHDivPos)
		{
			if(b == undefined)
			{
				var b = false;
				for(var i=0; i<this.arrMulti.length; i++)
				{
					if(this.arrRowInfo[i].bLock || this.arrRowInfo[i].bMultiSelectDisabled) continue;
					b = this.arrMulti[i];
					if(!b) break;
				}
			}
			var sID = '_SELECT_';
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion>=7020170614001) sID += 'H';
			var div = Webcrea.FindNode(this.objHDivPos, 'id', this.divPos + '.' + sID);
			if(div) div.checked = b;
		}
		if(this.bDrag && this.objDrag) this.DisplaySelectRowByDrag();
	},
	RefreshSumRow : function()
	{
		if(this.IsList() && this.arrSumRowCond)
		{
			var nRow = this.GetCurrRowDataNo();
			for(let i=0; i<this.arrSumRowCond.length; i++)
			{
				let objRowCond = this.arrSumRowCond[i];
				var sCond = objRowCond.cond;
				var nSeq = objRowCond.seq;
				if(!Webcrea.IsEmpty(sCond))
				{
					var trNode = this.arrTableSum[nSeq];
					var bOK = this.IsWhere(sCond, nRow, true);
					if(!bOK) trNode.style.display = 'none';
					else trNode.style.display = '';
				}
			}
			if(this.objFDivPos)
			{
				this.objFDivPos.style.display = 'block';
				this.DisplaySumRow();
			}
		}
		var currObj = this;
		var Refresh = function(node)
		{
			var childNodes = node.childNodes;
			for(var j=0; j<childNodes.length; j++)
			{
				var child = childNodes[j];
				if (child.nodeName == 'TD'){
					var colChildNodes = child.childNodes;
					var bEditTd = Webcrea.IsEditTd(child);
					if(bEditTd)
					{
						colChildNodes = [];
						colChildNodes[0] = child;
					}
					for(var k=0; k<colChildNodes.length; k++)
					{
						var cell = colChildNodes[k];
						if(!cell) continue;
						if(cell.nodeName == 'INPUT' || bEditTd)
						{
							var value = '';
							var sCellId = currObj.GetCellId(cell, true);
							var cellInfo = currObj.GetCellInfo(sCellId);
							if(cellInfo && cellInfo.bRunTime)
							{
								value = cellInfo.defaultValue;
								if(!Webcrea.IsEmpty(value)) value = Webcrea.Calculation(value);
							}
							else value = cell.defaultValue;
							if(Webcrea.IsEmpty(value, true))
							{
								var valueT = '';
								try{valueT = window[sCellId]}catch(e){};
								if(valueT != undefined && valueT != '') value = valueT;
							}
							if(Webcrea.IsNull(value)) value = '';
							if(bEditTd)
							{
								value = Webcrea.FormatValue(cell, true, value);
								cell.setAttribute('value', value);
								cell.innerText = value;
							}
							else
							{
								cell.value = value;
								cell.value = Webcrea.FormatValue(cell, true);
							}
						}
					}
				}
			}
		};
		if(this.arrTableHeaderSum)
		{
			for(var i=0; i<this.arrTableHeaderSum.length; i++)
			{
				var tr = this.arrTableHeaderSum[i];
				Refresh(tr);
			}
		}
		if(this.arrTableSum)
		{
			for(var i=0; i<this.arrTableSum.length; i++)
			{
				var tr = this.arrTableSum[i];
				Refresh(tr);
			}
		}
		if(window[this.divPage][this.divPosOrg]['Sum'] && typeof window[this.divPage][this.divPosOrg]['Sum'].OnQUERY != 'undefined')
			window[this.divPage][this.divPosOrg]['Sum'].OnQUERY();
	},
	RefreshCol : function(cellId, nRow)
	{
		if(!cellId) return;
		if(!this.IsColumn(cellId)) return;
		if(this.IsGrid()) this.RefreshRow(nRow, cellId);
		else
		{
			var colNode = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + cellId);
			if(colNode.nodeName == 'TD') colNode.textContent = this.arrData[cellId][0];
			else this.SetValueByData(cellId, this.arrData[cellId][0]);

			colNode = Webcrea.FindNode(this.objTable, 'id', this.divPos + '._STATUS_');
			if(colNode)
			{
				if(colNode.nodeName == 'TD' && !Webcrea.IsEditTd(colNode)) colNode.textContent = this.arrStatus[0];
				else this.SetValueByData('_STATUS_', this.arrStatus[0]);
			}
		}
	},
	RefreshRow : function(nRow, cellId)
	{
		var nRowData = this.GetRowDataNo(nRow);
		var arrNode = [];
		for(let i=0; i<this.nDataRow; i++)
		{
			let trNode = this.objTable.rows[nRow + i + this.nHeader];
			if(!trNode) continue;
			if(i>0 && i != trNode.getAttribute('seq'))
			{
				let seq =  trNode.getAttribute('seq');
				if(!Webcrea.IsNull(seq) && seq != i) break;
			}
			arrNode[arrNode.length] = trNode;
		}
		if(arrNode.length<1) return;
		var nSeq = nRow%this.nDataRow;
		nRow -= nSeq;
		var bChange_b = this.objEvent.bChange;
		var bModify_b = this.objEvent.bModify;
		this.objEvent.bChange = false;
		this.objEvent.bModify = false;
		for(var i=0; i<arrNode.length; i++)
		{
			var rowNode = arrNode[i];
			var nField = this.GetColumn(cellId);
			if(cellId && nField>=0)
			{
				colNode = Webcrea.FindNode(rowNode, 'id', this.divPos + '.' + this.arrField[nField] + nRowData, false, nRowData, true);
				if(colNode)
				{
					if(colNode.nodeName == 'TD') colNode.textContent = this.arrData[this.arrField[nField]][nRowData];
					else this.SetValueByData(this.arrField[nField], this.arrData[this.arrField[nField]][nRowData], nRow+i);
				}
			}
			else
			{
				for(var j=0; j<this.arrField.length; j++)
				{
					if(cellId && cellId != this.arrField[j]) continue;
					colNode = Webcrea.FindNode(rowNode, 'id', this.divPos + '.' + this.arrField[j] + nRowData, false, nRowData, true);
					if(!colNode) continue;
					if(colNode.nodeName == 'TD') colNode.textContent = this.arrData[this.arrField[j]][nRowData];
					else this.SetValueByData(this.arrField[j], this.arrData[this.arrField[j]][nRowData], nRow+i);
				}
			}
			colNode = Webcrea.FindNode(rowNode, 'id', this.divPos + '._STATUS_' + nRowData, false, nRowData, true);
			if(colNode)
			{
				if(colNode.nodeName == 'TD' && !Webcrea.IsEditTd(colNode)) colNode.textContent = this.arrStatus[nRowData];
				else
				{
					this.SetValueByData('_STATUS_', this.arrStatus[nRowData], nRow+i);
					if(this.bMulti) this.SetValueByData('_SELECT_', this.arrMulti[nRowData], nRow+i);
				}
			}
			this.DisplayGroup(rowNode, false);
		}
		this.objEvent.bChange = bChange_b;
		this.objEvent.bModify = bModify_b;
	},
	ReLoadRow : function(nStart, nEnd)
	{
		if(this.bMyGrid) return;
		for(var i=nEnd; i>=nStart; i--)
		{
			var row = i*this.nDataRow-1+this.nHeader;
			for(var j=this.nDataRow-1; j>=0; j--)
			{
				row += j;
				row++;
				this.objTable.deleteRow(row);
			}
		}
		for(var i=nStart; i<=nEnd; i++) this.InsertRow();
	},
	AppendRow : function(arrData, nJump){
		this.objEvent.bAppendMode = true;
		var addRow = this.InsertRow(true, arrData, nJump);
		this.objEvent.bAppendMode = false;
		if(!addRow) return;
		var rowId = addRow.rowIndex;
		rowId -= this.nHeader;
		if(arrData) this.RefreshRow(rowId);
	},
	InsertRow : function(bInsert, arrData, nJump){
		this.objEvent.bInsertRow = true;
		this.objEvent.bModify = false;
		for(var i=0; i<this.arrObjAddInfo.length; i++)
		{
			var objAddInfo = this.arrObjAddInfo[i];
			var strRow = objAddInfo.strAddRow;
			var addRow = this.InsertRowDetail(bInsert, arrData, nJump, strRow, i);
			if(this.IsList() && this.arrRowCond)
			{
				var nRowData = addRow.getAttribute('rowno');
				let objRowCond = this.arrRowCond[i];
				var sCond = objRowCond.cond;
				if(!Webcrea.IsEmpty(sCond))
				{
					var bOK = this.IsWhere(sCond, nRowData);
					if(!bOK) addRow.style.display = 'none';
				}
			}
		}
		this.objEvent.bModify = true;
		this.objEvent.bInsertRow = false;
	},
	InsertRowDetail : function(bInsert, arrData, nJump, strRow, nSeq){

		var row = this.objTable.rows.length;
		var nAddRow = this.nHeader;
		var rowData = 0;
		var addRow;
		var bDummy = false;
		let bNewApply = false;
		if(this.IsTreeGrid()) bNewApply = true;
		if(bNewApply)
		{
			if(bInsert)
			{
				if(this.nInsertPos == 1 || this.nInsertPos == 2)
				{
					if(this.nInsertPos == 1) row = this.nHeader;
					else if(this.nInsertPos == 2) row = this.objTable.rows.length;
					if(nJump) rowData = nJump;
					else
					{
						let nCurrRow = 0;
						if(this.nInsertPos == 1) nCurrRow = this.nHeader + nSeq;
						else nCurrRow = row+nSeq;
						let currNode = this.objTable.rows[nCurrRow];
						if(currNode) rowData = Number(currNode.getAttribute('rowno'));
						if(this.nInsertPos == 1)
						{
							rowData -= 1;
							row += nSeq;
						}
					}
				}
				else
				{
					if(nJump)
					{
						rowData = nJump;
						row = this.GetRowNo(rowData, true);
						row += this.nHeader;
					}
					else
					{
						let nCurrRow = this.currRowIndex;
						if(nCurrRow) nCurrRow += this.nHeader;
						let currNode = this.objTable.rows[nCurrRow+this.nHeader];
						rowData = this.GetCurrRowDataNo(currNode);
						row = currNode.rowIndex;
					}
				}
				if(arrData && !nSeq)
				{
					if(this.IsTreeGrid())
					{
						if(!Webcrea.InsertRecord(this, rowData, arrData, 'tree')) return;
					}
					else
					{
						if(!Webcrea.InsertRecord(this, rowData, arrData)) return;
					}
				}
			}
			else
			{
				var lastNode = this.objTable.rows[row-1];
				if(row-1>=this.nHeader && lastNode)
				{
					rowData = Number(lastNode.getAttribute('rowno'));
					if(nSeq==0) rowData += 1;
				}
				else rowData = 0;
			}
			bDummy = this.IsDummyRow(rowData, true);
			if(bDummy) addRow = this.objTable.insertRow(row);
			else addRow = this.InsertBlankRow(row, strRow);

			row -= this.nHeader;
			if(row<0) row = 0;
		}
		else
		{
			rowData = row;
			if(bInsert)
			{
				if(this.nInsertPos == 1) row = nAddRow;
				else if(this.nInsertPos == 2) row = this.objTable.rows.length;
				else
				{
					if(this.objTable.rows.length == this.nHeader) row=this.nHeader;
					else if(this.objTable.rows.length - nAddRow > 0)
						row = this.currRowIndex + nAddRow + 1;
					else row = 1 + nAddRow;
				}
				rowData = row;
				if(arrData)
				{
					if(!Webcrea.InsertRecord(this, row-1, arrData)) return;
				}
				else
				{
					if(nJump) rowData = nJump*this.nDataRow + this.nHeader;
					else
					{
						var nextNode = this.objTable.rows[row+nSeq+(this.vLock*this.nDataRow)];
						if(nextNode)
						{
							var nRow = Number(nextNode.getAttribute('rowno'));
							if(nRow>0) rowData = ((nRow-1)*this.nDataRow)+nAddRow+nSeq;
						}
					}
				}
				if(this.nInsertPos == 1) row+=nSeq;
			}
			else
			{
				var lastNode = this.objTable.rows[row-1];
				if(lastNode)
				{
					var nRow = Number(lastNode.getAttribute('rowno'));
					if(nRow>0) rowData = (nRow*this.nDataRow)+nAddRow+(this.nDataRow-nSeq);
				}
			}
			bDummy = this.IsDummyRow(Math.floor((rowData-this.nHeader)/this.nDataRow), true);
			if(bDummy) addRow = this.objTable.insertRow(row);
			else addRow = this.InsertBlankRow(row, strRow);

			rowData -= this.nHeader;
			rowData = Math.floor(rowData/this.nDataRow);
			row -= this.nHeader;
		}
		this.currColIndex = 0;
		var addseq = 0;
		if(this.nInsertPos == 1) addseq = this.nDataRow-this.currRowIndex_B-1;
		this.currRowIndex = row-addseq;

		var setId = rowData;
		if(this.nDataRow<=0)
		{
			this.arrTableData = [];
			var arr = [];
			Webcrea.FindNodeAll(this.objTable, 'id', this.divPos + '.Data', arr);
			for(var i=0; i<arr.length; i++)
			{
				var objInfo = {};
				objInfo.node = arr[i];
				this.arrTableData[this.arrTableData.length] = objInfo;
			}
			this.nDataRow = this.arrTableData.length;
		}
		addRow.setAttribute('id', this.divPos + '.Data' + setId);
		addRow.setAttribute('seq', nSeq);
		var attrRow = document.createAttribute('rowno');
		attrRow.value = setId;
		addRow.setAttributeNode(attrRow);
		var bMultiSelectDisabled = false;
		var bDisabledRow = false;
		var rowInfo = this.arrRowInfo[setId];
		if(rowInfo)
		{
			bDisabledRow = rowInfo.bLock;
			bMultiSelectDisabled = rowInfo.bMultiSelectDisabled;
			if(bDisabledRow && this.bMulti) this.arrMulti[setId] = true;
		}

		var currObj = this;
		SetChildAttr = function(colChild) {
			var colChildSub = colChild.firstChild;
			var bChildSub = false;
			while(colChildSub)
			{
				if(colChild.nodeName == 'DIV' && colChildSub.nodeName == 'DIV') bChildSub = SetChildAttr(colChildSub);
				else if (colChildSub.nodeName != '#text')
				{
					if(currObj.bMyGrid && rowData == currObj.arrRows.length)
					{
						colChildSub.outerHTML = '';
						colChild.textContent = '';
					}
					bChildSub = true;
					if(colChild.nodeName == 'LABEL' || colChildSub.nodeName == 'IMG')
					{
						var bAddEvent = false;
						colChildSub.setAttribute('id', colChildSub.getAttribute('id') + setId);
						if(colChildSub.getAttribute('name')) colChildSub.setAttribute('name', colChildSub.getAttribute('name') + setId);
						if(colChildSub.nodeName == 'INPUT' && (colChildSub.type == 'checkbox' || colChildSub.type == 'radio'))
						{
							var id = colChildSub.getAttribute('id');
							colChild.setAttribute('for', id);
							if((currObj.IsReadOnly() || !currObj.IsEnable() || bDisabledRow) && !currObj.IsMultiSelectCell(colChildSub))
							{
								colChild.disabled = true;
								colChildSub.disabled = true;
							}
							else
							{
								var cellId = colChildSub.getAttribute('orgId');
								var bDisabled = false;
								var cellInfo = currObj.GetCellInfo(cellId);
								if(cellInfo) bDisabled = (cellInfo.bReadOnly || !cellInfo.bEnable)?true:false;
								if(!bDisabled) bDisabled = bDisabledRow;
								if(!bDisabled && bMultiSelectDisabled && currObj.IsMultiSelectCell(colChildSub)) bDisabled = bMultiSelectDisabled;
								colChild.disabled = bDisabled;
								colChildSub.disabled = bDisabled;
							}
							var tdNode = Webcrea.FindParentNode(colChild, 'name', 'TD');
							if(tdNode)
							{
								tdNode.id = id + '_mytdcell_';
								tdNode.setAttribute('forcefocus', 'forcefocus');
								if (Webcrea.IsIE69()) tdNode.attachEvent('onclick', Webcrea.OnONECLK);
								else tdNode.addEventListener('click', Webcrea.OnONECLK, false);
								if (Webcrea.IsIE69()) tdNode.attachEvent('ondblclick', Webcrea.OnDBLCLK);
								else tdNode.addEventListener('dblclick', Webcrea.OnDBLCLK, false);
								bAddEvent = true;
							}
						}
						else if(colChildSub.nodeName == 'IMG' && colChild.nodeName == 'A')
						{
							var code = colChildSub.getAttribute('codeobj');
							var nFileVersion = Webcrea.GetCurrFileVersion();
							if(nFileVersion<7020170912001) code = colChildSub.getAttribute('code');
							if(code && code.toLowerCase() == 'codebtn' && nFileVersion<7020200131001)
							{
								var rowTop = Webcrea.GetTop(addRow);
								var rowHeight = Webcrea.GetHeight(addRow);
								var height = Webcrea.GetHeight(colChildSub);
								var top = rowTop + Math.ceil((rowHeight - height)/2);
								colChildSub.style.top = top + 'px';
							}
						}

						if(!bAddEvent);
						{
							if (Webcrea.IsIE69()) colChildSub.attachEvent('onclick', Webcrea.OnONECLK);
							else colChildSub.addEventListener('click', Webcrea.OnONECLK, false);
							if (Webcrea.IsIE69()) colChildSub.attachEvent('ondblclick', Webcrea.OnDBLCLK);
							else colChildSub.addEventListener('dblclick', Webcrea.OnDBLCLK, false);

							if (Webcrea.IsIE69()) colChildSub.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event, 'drag');});
							else colChildSub.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
							if (Webcrea.IsIE69()) colChildSub.attachEvent('onmousemove', function(){Webcrea.OnDRAG(window.event, 'drag');});
							else colChildSub.addEventListener('mousemove', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
						}
					}
					else
					{
						if (Webcrea.IsIE69()) colChild.attachEvent('onclick', Webcrea.OnONECLK);
						else colChild.addEventListener('click', Webcrea.OnONECLK, false);
						if (Webcrea.IsIE69()) colChild.attachEvent('ondblclick', Webcrea.OnDBLCLK);
						else colChild.addEventListener('dblclick', Webcrea.OnDBLCLK, false);

						if (Webcrea.IsIE69()) colChild.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event, 'drag');});
						else colChild.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
						if (Webcrea.IsIE69()) colChild.attachEvent('onmousemove', function(){Webcrea.OnDRAG(window.event, 'drag');});
						else colChild.addEventListener('mousemove', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
					}

					var attrRow = document.createAttribute('rowno');
					var attrCol = document.createAttribute('colno');
					attrRow.value = setId;
					attrCol.value = i;
					colChildSub.setAttributeNode(attrRow);
					colChildSub.setAttributeNode(attrCol);
					var attrRowSeq = document.createAttribute('rowseq');
					attrRowSeq.value = nSeq;
					colChildSub.setAttributeNode(attrRowSeq);
				}
				colChildSub = colChildSub.nextElementSibling;
			}
			return bChildSub;
		};

		var bSetTreeApply = false;
		var SetChildNo = function(col, i)
		{
			var colChildNodes = col.children;
			if(!colChildNodes) colChildNodes = col.childNodes;
			for(var j=0; j<colChildNodes.length; j++)
			{
				var colChild = colChildNodes[j];
				while(colChild)
				{
					if(colChild.nodeName == 'DIV' && colChild.getAttribute('role')!='pMultiline' && colChild.getAttribute('role')!='qrcode' && colChild.getAttribute('role')!='barcode') SetChildNo(colChild, i);
					else if (colChild.nodeName != '#text')
					{
						var bMultiLine = false;
						if(colChild.getAttribute('role')=='pMultiline')
						{
							bMultiLine = true;
							if (Webcrea.IsIE69()) colChild.attachEvent('onclick', Webcrea.OnONECLK);
							else colChild.addEventListener('click', Webcrea.OnONECLK, false);
							colChild=colChild.childNodes[0].childNodes[0];
						}
						var attrRow = document.createAttribute('rowno');
						var attrCol = document.createAttribute('colno');
						attrRow.value = setId;
						attrCol.value = i;
						colChild.setAttributeNode(attrRow);
						colChild.setAttributeNode(attrCol);

						colChild.setAttribute('id', colChild.getAttribute('id') + setId);
						colChild.setAttribute('for', colChild.getAttribute('for') + setId);
						var bAddEvent = false;
						if(colChild.nodeName == 'INPUT' || colChild.nodeName == 'BUTTON' || colChild.nodeName == 'TEXTAREA' || colChild.nodeName == 'SELECT' || (bMultiLine && colChild.nodeName == 'DIV'))
						{
							var bCurrEnable = !colChild.disabled;
							if(!currObj.bEnable || !bCurrEnable || bDisabledRow)
							{
								colChild.disabled = false;
								if(!bCurrEnable) colChild.setAttribute('enable_status', false);
								if(colChild.type == 'checkbox' || colChild.type == 'radio' || colChild.type == 'button') colChild.disabled = true;
								else colChild.readOnly = true;
							}
							if(currObj.bReadOnly) colChild.readOnly = true;
							if(colChild.type == 'checkbox' || colChild.type == 'radio')
							{
								if((currObj.IsReadOnly() || !currObj.IsEnable()) && !currObj.IsMultiSelectCell(colChild)) colChild.disabled = true;
								else
								{
									var cellId = colChild.getAttribute('orgId');
									var bDisabled = false;
									var cellInfo = currObj.GetCellInfo(cellId);
									if(cellInfo) bDisabled = (cellInfo.bReadOnly || !cellInfo.bEnable)?true:false;
									if(!bDisabled) bDisabled = bDisabledRow;
									if(!bDisabled && bMultiSelectDisabled && currObj.IsMultiSelectCell(colChild)) bDisabled = bMultiSelectDisabled;
									colChild.disabled = bDisabled;
								}
								if(colChild.type == 'radio' && !currObj.IsMulti(cellId)) colChild.setAttribute('name', colChild.getAttribute('name') + setId);
								else colChild.setAttribute('name', colChild.getAttribute('name') + i.toString() + setId);
								var tdNode = Webcrea.FindParentNode(colChild, 'name', 'TD');
								if(tdNode)
								{
									tdNode.id = colChild.id + '_mytdcell_';
									tdNode.setAttribute('forcefocus', 'forcefocus');
									if (Webcrea.IsIE69()) tdNode.attachEvent('onclick', Webcrea.OnONECLK);
									else tdNode.addEventListener('click', Webcrea.OnONECLK, false);
									if (Webcrea.IsIE69()) tdNode.attachEvent('ondblclick', Webcrea.OnDBLCLK);
									else tdNode.addEventListener('dblclick', Webcrea.OnDBLCLK, false);

									if (Webcrea.IsIE69()) tdNode.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event, 'drag');});
									else tdNode.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
									if (Webcrea.IsIE69()) tdNode.attachEvent('onmousemove', function(){Webcrea.OnDRAG(window.event, 'drag');});
									else tdNode.addEventListener('mousemove', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
									bAddEvent = true;
								}
							}
							else
							{
								if(colChild.nodeName == 'INPUT' && currObj.IsMySelectBox(colChild) && currObj.IsSumRow(rowData)) colChild.disabled = true;
								var cellId = colChild.getAttribute('orgId');
								var cellInfo = currObj.GetCellInfo(cellId);
								if(cellInfo.lBullet || cellInfo.rBullet)
								{
									if(!Webcrea.IsEmpty(cellInfo.bullet)) currObj._Set_Bullet(cellInfo.bullet, cellId, setId);
									else
									{
										if(!Webcrea.IsEmpty(Webcrea.GetBulletImage())) currObj._Set_Bullet(Webcrea.GetBulletImage(), cellId, setId);
										else currObj._Set_BulletColor(cellInfo.bulletColor, cellId, setId);
									}
								}
								if(!bSetTreeApply && currObj.IsSetTree() && (i == 0 || (currObj.bMulti && i == 1)))
								{
									currObj.SetTreeIcon(colChild, cellId);
									bSetTreeApply = true;
								}
							}
						}

						var bChildSub = false;
						if(colChild.nodeName != 'SELECT') bChildSub = SetChildAttr(colChild);
						else
						{
							colChild.selectedIndex = -1;
							if(currObj.IsSumRow(rowData)) colChild.disabled = true;
						}
						if(!bChildSub && colChild && !bAddEvent)
						{
							var bOneClkSkip = false;
							if(colChild.getAttribute('role')=='multiline') bOneClkSkip = true;
							if(!bOneClkSkip)
							{
								if (Webcrea.IsIE69()) colChild.attachEvent('onclick', Webcrea.OnONECLK);
								else colChild.addEventListener('click', Webcrea.OnONECLK, false);
							}
							if (Webcrea.IsIE69()) colChild.attachEvent('ondblclick', Webcrea.OnDBLCLK);
							else colChild.addEventListener('dblclick', Webcrea.OnDBLCLK, false);

							if (Webcrea.IsIE69()) colChild.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event, 'drag');});
							else colChild.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
							if (Webcrea.IsIE69()) colChild.attachEvent('onmousemove', function(){Webcrea.OnDRAG(window.event, 'drag');});
							else colChild.addEventListener('mousemove', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
						}
					}
					colChild = colChild.nextElementSibling;
				}
				break;
			}
			if(Webcrea.IsEditTd(col) && col.tagName == 'TD' && colChildNodes.length==0)
			{
				var attrRow = document.createAttribute('rowno');
				var attrCol = document.createAttribute('colno');
				attrRow.value = setId;
				attrCol.value = i;
				col.setAttributeNode(attrRow);
				col.setAttributeNode(attrCol);
				col.setAttribute('id', col.getAttribute('id') + setId);
				if(currObj.bReadOnly) col.setAttribute('readOnly', 'readOnly');
				if (Webcrea.IsIE69()) col.attachEvent('onclick', Webcrea.OnONECLK);
				else col.addEventListener('click', Webcrea.OnONECLK, false);
				if (Webcrea.IsIE69()) col.attachEvent('ondblclick', Webcrea.OnDBLCLK);
				else col.addEventListener('dblclick', Webcrea.OnDBLCLK, false);

				if (Webcrea.IsIE69()) col.attachEvent('onmousedown', function(){Webcrea.OnDRAG(window.event, 'drag');});
				else col.addEventListener('mousedown', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
				if (Webcrea.IsIE69()) col.attachEvent('onmousemove', function(){Webcrea.OnDRAG(window.event, 'drag');});
				else col.addEventListener('mousemove', function(){Webcrea.OnDRAG(window.event, 'drag');}, false);
			}
		};
		var colCnt = addRow.cells.length;
		for(var i=0; i<colCnt; i++)
		{
			var col = addRow.cells[i];
			SetChildNo(col, i);
		}
		var groupNode = addRow;
		if(bDummy) groupNode = addRow.previousSibling;
		this.DisplayGroup(groupNode, bDummy);
		if(!this.bMyGrid) this.ClearSelect(addRow);
		this.SetValueByData('_STATUS_', this.arrStatus[rowData], row);
		if(this.bMulti) this.SetValueByData('_SELECT_', this.arrMulti[rowData], row);
		var func = 'Data';
		if(this.IsTreeGrid() && nSeq>0)
		{
			let currRowNo = addRow.getAttribute('seq');
			if(addRow.tagName == 'TR' && currRowNo && currRowNo>0) func += currRowNo;
		}
		if(typeof window[this.divPage][this.divPosOrg][func].OnQUERY != 'undefined')
		{
			if(this.arrStackEvent.isearch('commandinsert')>=0 && this.commandInsertRowId == setId) return addRow;
			var nCurrRow_b = this.GetCurrRowIndex();
			var objSelRowOrg = this.objSelRow;
			this.objSelRow = addRow;
			this.SetCurrRowIndex(row, true);
			this.arrStackEvent[this.arrStackEvent.length] = 'ondataquery';
			window[this.divPage][this.divPosOrg][func].OnQUERY();
			this.arrStackEvent.removeByValue('ondataquery');
			this.objSelRow = objSelRowOrg;
			this.SetCurrRowIndex(nCurrRow_b);
		}
		if(this.IsStatCrossTab() && this.arrStatJoinScript.length>0)
		{
			var nCurrRow_b = this.GetCurrRowIndex();
			this.SetCurrRowIndex(row, true);
			var nRowId = this.GetValue('_ROWID_');
			if(nRowId>0)
			{
				nRowId = Number(nRowId)-1;
				var func = this.objName + '.' + "JoinCell('" + this.arrStatJoinScript[nRowId] + "');";
				try{eval(func);}catch(e){}
			}
			this.SetCurrRowIndex(nCurrRow_b);
		}

		return addRow;
	},
	InsertBlankRow : function(row, strRow) {
		if(this.vLock>0 && (this.vLock*this.nDataRow)+row<this.objTable.rows.length) row += (this.vLock*this.nDataRow);
		if(Webcrea.Browser.ie9)
		{
			for(var k=0; k<this.arrObjAddInfo.length; k++)
			{
				var addRow = this.objTable.insertRow(row+k);
				var objAddInfo = this.arrObjAddInfo[k];
				for(var i=0; i<objAddInfo.arrAddCol.length; i++)
				{
					var addCol = addRow.insertCell();
					for(var j=0; j<objAddInfo.arrAddColAttr[i].length; j++)
					{
						var arr = objAddInfo.arrAddColAttr[i][j];
						var attribute = document.createAttribute(arr[0]);
						attribute.nodeValue = arr[1];
						addCol.setAttributeNode(attribute);
					}
					addCol.innerHTML = objAddInfo.arrAddCol[i];
				}
			}
		}
		else
		{
			var addRow = this.objTable.insertRow(row);
			addRow.innerHTML = strRow;
		}
		return addRow;
	},
	DeleteRow : function(nRow, bNotFocus){
		if(this.objTable.rows.length < this.nHeader+1) return;
		var delRow = nRow;
		delRow += this.nHeader;
		for(var i=0; i<this.arrTableHeader.length; i++)
		{
			if(this.objTable.rows[delRow] == this.arrTableHeader[i]) return;
		}
		var nRowData = this.GetRowDataNo(nRow, true);
		for(let i=0; i<this.nDataRow; i++) this.objTable.deleteRow(delRow);
		Webcrea.DeleteRecord(this, nRowData);

		if(!bNotFocus)
		{
			if(nRow-1 < 0) nRow = 0;
			else nRow -= 1;
			this.SetCurrRowIndex(nRow);
			this.Select(this.GetCurrRowIndex());
		}
	},
	DeleteAll : function(){
		var nRow = this.objTable.rows.length;
		for(var i=nRow-1; i>=this.nHeader; i--)
		{
			var bContinue = false;
			var row = this.objTable.rows[i];
			for(var j=0; j<this.arrTableHeader.length; j++)
			{
				if(this.arrTableHeader[j] == row)
				{
					bContinue = true;
					break;
				}
			}
			if(!bContinue) this.objTable.deleteRow(i);
		}
		if(this.bMyGrid) this.DisplayScrlArrow();
	},
	MoreOnClick : function()
	{
		this.OnQUERY();
		if(this.bMyGrid) this.DisplayPublic(true, this.arrRows.length-this.nRowsPage+1);
		else Webcrea.MoveVScrollEnd(this.objDivPos);
	},
	DisplayLoading : function(bStop)
	{
		if(Webcrea.IsEmpty(this.loadingMsg)) return;
		var id = this.divPos + 'LoadingDiv';
		var loadingDiv = Webcrea.FindNode(document.body, 'id', id);
		if(!bStop && !loadingDiv)
		{
			Webcrea.LockUI(true, true);
			var bImage = false;
			var n = this.loadingMsg.lastIndexOf('.');
			if(n>0) bImage = Webcrea.IsImage(this.loadingMsg.substr(n+1));
			if(bImage)
			{
				loadingDiv = Webcrea.CreateObject('loaging image', id, _my_File.objMain);
				var img = document.createElement('img');
				img.setAttribute('src', Webcrea.GetImageLinkPath() + '/' + this.loadingMsg);
				loadingDiv.appendChild(img);
				var func = this.objName + ".DisplayLoading()";
				if(Webcrea.IE()) this.aniImgTimeout = setTimeout(func, 100);
			}
			else
			{
				var arrMsg = this.loadingMsg.split('\n');
				var nWidth = 0;
				for(var i=0; i<arrMsg.length; i++)
				{
					var nMsg = lenb(arrMsg[i]) * 9;
					if(nMsg>nWidth) nWidth = nMsg;
				}
				var nImgDiv = 70;
				nWidth += nImgDiv;
				if(nWidth < 200) nWidth = 200;
				var nHeight = 60;
				loadingDiv = Webcrea.CreateObject('loaging div', id, _my_File.objMain, null, null, null, nWidth, nHeight);
				var divImg = document.createElement('div');
				var sStyle = 'display:table-cell;veritcal-align:middle;width:' + nImgDiv + 'px';
				divImg.setAttribute('style', sStyle);
				var img = document.createElement('img');
				img.setAttribute('src', Webcrea.GetImageLinkPath() + '/frame/loading/loading.png');
				img.setAttribute('style', 'width:35px;height:35px;');
				divImg.appendChild(img);
				loadingDiv.appendChild(divImg);

				var divMsg = document.createElement('div');
				var sStyle = 'text-align:left;display:table-cell;veritcal-align:middle;';
				divMsg.setAttribute('style', sStyle);
				this.loadingMsg = Webcrea.ReplaceAll(this.loadingMsg, '\n', '<br\>');
				divMsg.innerHTML = this.loadingMsg;
				loadingDiv.appendChild(divMsg);
			}
			Webcrea.MoveObject(5, loadingDiv, 'display');
		}
		else if(loadingDiv)
		{
			if(bStop)
			{
				if(this.aniImgTimeout) clearTimeout(this.aniImgTimeout);
				_my_File.objMain.removeChild(loadingDiv);
				Webcrea.LockUI(false);
			}
			else
			{
				var loadingDivImg = Webcrea.FindNode(loadingDiv, 'name', 'img');
				loadingDivImg.setAttribute('src', Webcrea.GetImageLinkPath() + '/frame/loading/loading.png');
				var func = this.objName + ".DisplayLoading()";
				if(this.aniImgTimeout)
				{
					clearTimeout(this.aniImgTimeout);
				    this.aniImgTimeout = setTimeout(func, 100);
				}
			}
		}
	},
	DisplayMobile : function()
	{
		if(this.arrMobileLayout.length<1) return;
		if(!Webcrea.IsMobileScreen()) return;
		_my_File.bMultiLayout = true;
		var arrLayout = [];
		var bLayout = Webcrea.GetMobileLayout(this, arrLayout);
		if(!bLayout && !this.arrLayoutOrg) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var currObj = this;
		ApplyLayout = function(arrLayout, bOrgLayout)
		{
			if(!bOrgLayout)
			{
				var arrLayoutOrg = [];
				for(var i=0; i<arrLayout.length; i++)
				{
					var layout = arrLayout[i];
					var bForm = layout.type==0?true:false;
					var cellId = layout.cellid;
					var nTopOrg = 0;
					var nLeftOrg = 0;
					var nWidthOrg = 0;
					var nHeightOrg = 0;

					if(bForm)
					{
						if(currObj.objGDivPos)
						{
							nTopOrg = Webcrea.GetTop(currObj.objGDivPos);
							nLeftOrg = Webcrea.GetLeft(currObj.objGDivPos);
						}
						else
						{
							nTopOrg = Webcrea.GetTop(currObj.objDivPos);
							nLeftOrg = Webcrea.GetLeft(currObj.objDivPos);
						}
						nWidthOrg = Webcrea.GetWidth(currObj.objDivPos, true);
						nHeightOrg = Webcrea.GetHeight(currObj.objDivPos, true);
					}
					else
					{
						var currNode = Webcrea.FindNode(currObj.objDivPos, 'orgId', cellId);
						if(!currNode) currNode = Webcrea.FindNode(currObj.objDivPos, 'layoutid', cellId);
						if(currNode)
						{
							if(currNode.tagName != 'TD') currNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
							nWidthOrg = Webcrea.GetWidth(currNode, true);
							nHeightOrg = Webcrea.GetHeight(currNode, true);
							var nPaddingTop = currNode.style.paddingTop;
							if(nPaddingTop) nPaddingTop = Extract(nPaddingTop, '[0-9]');
							else nPaddingTop = 0;
							var nPaddingBottom = currNode.style.paddingTop;
							if(nPaddingBottom) nPaddingBottom = Extract(nPaddingBottom, '[0-9]');
							else nPaddingBottom = 0;
							nHeightOrg = nHeightOrg - nPaddingTop - nPaddingBottom;
						}
					}
					var layoutOrg = {};
					layoutOrg.type = layout.type;
					layoutOrg.top = nTopOrg;
					layoutOrg.left = nLeftOrg;
					layoutOrg.width = nWidthOrg;
					layoutOrg.height = nHeightOrg;
					layoutOrg.cellid = layout.cellid;
					arrLayoutOrg[i] = layoutOrg;
				}
				if(!currObj.arrLayoutOrg) currObj.arrLayoutOrg = arrLayoutOrg;
			}
			for(var i=0; i<arrLayout.length; i++)
			{
				var layout = arrLayout[i];
				var bForm = layout.type==0?true:false;
				var nTop = layout.top;
				var nLeft = layout.left;
				var nWidth = layout.width;
				var nHeight = layout.height;
				var cellId = layout.cellid;
				var bHide = layout.bHide;

				if(bForm)
				{
					if(currObj.objGDivPos)
					{
						currObj.objGDivPos.style.top = nTop + 'px';
						currObj.objGDivPos.style.left = nLeft + 'px';
						currObj.objGDivPos.style.width = nWidth + 'px';
						if(!currObj.bAutoHeight) currObj.objGDivPos.style.height = nHeight + 'px';
						if(bHide) currObj.objGDivPos.style.display = 'none';
						else currObj.objGDivPos.style.display = 'block';
					}
					else
					{
						currObj.objDivPos.style.top = nTop + 'px';
						currObj.objDivPos.style.left = nLeft + 'px';
						if(bHide) currObj.objDivPos.style.display = 'none';
						else currObj.objDivPos.style.display = 'block';
					}
					if(currObj.IsGrid() && !currObj.IsList() && currObj.bVScroll)
					{
						if(bLayout) nWidth -= currObj.nScrlWidth;
						if(currObj.objVSGDivPos)
						{
							currObj.objVSGDivPos.style.height = nHeight + 'px';
							currObj.objVSDWDivPos.style.top = (nHeight-(currObj.nScrlWidth-1)) + 'px';
							currObj.objVSGDivPos.style.left = nWidth + currObj.nScrlLeftAdjust + 'px';
						}
					}
					currObj.objDivPos.style.width = nWidth + 'px';
					if(!currObj.bAutoHeight)
					{
						if(nFileVersion>=7020210202001 && currObj.IsList() && currObj.bVScroll && !Webcrea.IsMobile())	nWidth -= currObj.nScrlWidth;
						currObj.objDivPos.style.height = nHeight + 'px';
					}
					if(currObj.objTable)
					{
						currObj.objTable.style.width = nWidth + 'px';
						currObj.objTable.style.height = nHeight + 'px';
					}
					if(currObj.objHDivPos)
					{
						currObj.objHDivPos.style.width = nWidth + 'px';
						currObj.objHTable.style.width = nWidth + 'px';
					}
					if(currObj.IsHtml() || currObj.IsPanel() || currObj.IsChart())
					{
						var objHtml = Webcrea.FindNode(currObj.objDivPos, 'name', 'IFRAME');
						if(objHtml)
						{
							objHtml.style.width = '100%';
							objHtml.style.height = '100%';
						}
					}
					else if(currObj.IsImage())
					{
						var arrImg = [];
						Webcrea.FindNodeAll(currObj.objDivPos, 'name', 'IMG', arrImg);
						for(var i=0; i<arrImg.length; i++)
						{
							var imgNode = arrImg[i];
							imgNode.style.width = '100%';
							imgNode.style.height = '100%';
						}
					}
				}
				else
				{
					var SetCol = function(divNode)
					{
						var colGroup = Webcrea.FindNode(divNode, 'name', 'COLGROUP');
						var arrColGroup = [];
						if(colGroup) Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
						var tdNode;
						var currNode = Webcrea.FindNode(divNode, 'orgId', cellId);
						if(!currNode)
						{
							currNode = Webcrea.FindNode(divNode, 'layoutid', cellId);
							tdNode = currNode;
						}
						else
						{
							if(currNode.tagName == 'TD') tdNode = currNode;
							else tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
						}
						if(!currNode) return;
						var colNo = currNode.getAttribute('colno');
						if(Webcrea.IsNull(colNo)) return;
						var colNode = arrColGroup[colNo];
						colNode.style.width = nWidth + 'px';
						colNode.setAttribute('orgWidth', nWidth);
						colNode.setAttribute('designwidth', nWidth);
						var bSkip = false;
						var autoExpand = currNode.getAttribute('autoexpand');
						if(autoExpand && autoExpand == 'height') bSkip = true;
						if(!bSkip)
						{
							tdNode.style.height = nHeight + 'px';
							if(tdNode != currNode)
							{
								if(currNode.style.height != '100%')
								{
									if(currObj.IsCodeButton(currNode)) currNode.style.height = '100%';
									else currNode.style.height = nHeight + 'px';
								}
							}
						}
					};
					var cellInfo = currObj.GetCellInfo(cellId);
					if(currObj.IsGrid() && cellInfo && cellInfo.bDataRow)
					{
						if(!nWidth || !nHeight) continue;
						for(var j=0; j<currObj.arrObjAddInfo.length; j++)
						{
							var objAddInfo = currObj.arrObjAddInfo[j];
							var orgTableRow = objAddInfo.orgTableRow;
							var orgTdNode;
							var orgNode = Webcrea.FindNode(orgTableRow, 'orgId', cellId);
							if(!orgNode)
							{
								orgNode = Webcrea.FindNode(orgTableRow, 'layoutid', cellId);
								orgTdNode = orgNode;
							}
							else orgTdNode = Webcrea.FindParentNode(orgNode, 'name', 'TD');
							if(!orgTdNode && orgNode && orgNode.tagName == 'TD') orgTdNode = orgNode;
							if(orgNode)
							{
								var SetOrgNode = function(node)
								{
									var sStyle = node.getAttribute('style');
									var n = sStyle.indexOf('height');
									if(n>=0)
									{
										var sStyle1 = sStyle.substr(n);
										var n1 = sStyle1.indexOf(';');
										if(n1>0) sStyle1 = sStyle1.substr(n1+1);
										else sStyle1 = '';
										sStyle = sStyle.substr(0, n) + 'height:' + nHeight + 'px;' + sStyle1;
										node.setAttribute('style', sStyle);
									}
								};
								SetOrgNode(orgTdNode);
								if(orgTdNode != orgNode) SetOrgNode(orgNode);
							}
						}
					}
					else
					{
						SetCol(currObj.objDivPos);
						if(currObj.objHDivPos) SetCol(currObj.objHDivPos);
					}
				}
			}
		};

		if(bLayout)
		{
			if(arrLayout.length<1) return;
			ApplyLayout(arrLayout);
			_my_File.baseInfo.screenWidth = arrLayout[0].screenWidth;
			_my_File.baseInfo.screenHeight = arrLayout[0].screenHeight;
		}
		else
		{
			ApplyLayout(this.arrLayoutOrg, true);
			_my_File.baseInfo.screenWidth = 0;
			_my_File.baseInfo.screenHeight = 0;
		}
		if(this.IsGrid())
		{
			if(this.objTable.rows.length > this.nHeader)
			{
				var firstNode = this.objTable.rows[this.nHeader];
				var nFirstRow = 0;
				if(firstNode) nFirstRow = Number(firstNode.getAttribute('rowno'));
				if(nFirstRow>0) this.Display(true, nFirstRow);
				else this.Display();
			}
		}

		var nDivWidth = Webcrea.GetWidth(this.objDivPos);
		var nDivHeight = Webcrea.GetHeight(this.objDivPos, true);
		if(this.IsList())
		{
			this.DisplayScroll(false);
		}
		if(this.IsForm() || this.bMyGrid || (this.IsList() && this.bEnableList)) this.DisplayCodeButton();
	},
	DisplayMoreButton : function(bDisplay)
	{
		var id = this.divPos + 'More';
		var obj = Webcrea.FindNode(this.objDivPage, 'id', id);
		if(!obj)
		{
			if(Webcrea.IsEmpty(this.moreImage.image)) obj = Webcrea.CreateObject('more button', id, this.objDivPage);
			else
			{
				obj = Webcrea.CreateObject('div', id, this.objDivPage);
				obj.style.width = this.moreImage.width + 'px';
				obj.style.height = this.moreImage.height + 'px';
				var css = Webcrea.CreateCSS('#' + this.divPage + ' #' + id);
				if(css)
				{
					css.style.position = 'absolute';
					css.style.background = "url('" +  this.moreImage.image + "') no-repeat center center";

					css = Webcrea.CreateCSS('#' + this.divPage + ' #' + id + ':hover');
					css.style.background = "url('" +  this.moreImage.imageHover + "') no-repeat center center";
				}
			}
			obj.setAttribute('onclick', this.objName + '.MoreOnClick()');
			Webcrea.MoveObject(8, obj, this);
		}
		if(bDisplay != undefined && !bDisplay) obj.style.display = 'none';
		else obj.style.display = 'block';
	},
	IsCalendarCell : function(cell)
	{
		var bRet = false;
		if(!this.IsCalendar()) return bRet;
		if(Webcrea.IsEmpty(cell)) return bRet;
		var sCellId = '';
		if(cell && Webcrea.IsObject(cell)) sCellId = this.GetCellId(cell);
		else sCellId = cell;
		if(sCellId.length == 3 && sCellId[0] == 'd')
		{
			var str = Number(sCellId.substr(1));
			if(str>=0 && str<=36) bRet=true;
		}
		return bRet;
	},
	Calendar : function()
	{
		if(arguments.length<1) return;
		this.bCalendar = true;
		this.objCalendar = {};
		this.objCalendar.bAppendColumn=false;
		this.objCalendar.bMonday=false;
		for(var i=0; i<arguments.length; i++)
		{
			var str = arguments[i];
			if(Webcrea.IsNumber(str)) str = str.toString();
			if(str.toLowerCase() ==  'appendcolumn') this.objCalendar.bAppendColumn=true;
			else if(str.toLowerCase() ==  'monday') this.objCalendar.bMonday=true;
		}
		if(this.objCalendar.bAppendColumn)
		{
			var startDate = arguments[0];
			if(Webcrea.IsNumber(startDate)) startDate = startDate.toString();
			this.objCalendar.startDate = GetDate(startDate);
			var endDate = '';
			if(arguments.length>2)
			{
				endDate = arguments[1];
				if(Webcrea.IsNumber(endDate)) endDate = endDate.toString();
			}
			else endDate = Last(startDate);
			this.objCalendar.endDate = GetDate(endDate);
		}
		else
		{
			var date = arguments[0];
			if(date.length == 6) date += '01';
			this.objCalendar.date = GetDate(date);
		}
		if(this.IsForm()) this.DisplayFormCalendar();
		else if(this.IsGrid()) this.DisplayGridCalendar();
	},
	DisplayFormCalendar : function()
	{
		if(!this.IsCalendar() || !this.objCalendar) return;
		if(this.IsForm() && !Webcrea.IsEmpty(this.objCalendar.date))
		{
			var cDate = this.objCalendar.date;
			var seq = cDate.getDay();
			if(this.objCalendar.bMonday) seq -= 1;
			if(seq<0) seq=6;
			var date = cDate.getFullYear() + Webcrea.AddZero(cDate.getMonth()+1,2) + '01';
			var endDate = Last(date);
			var cEndDate = GetDate(endDate);
			var endSeq = cEndDate.getDate()+seq-1;

			var blankColor = '#EEFFFF', dataColor = '', holidayColor = '';
			var nCol=0, nStartSeq=0, nEndSeq=0;
			var findId = 'd' + Webcrea.AddZero(7,2);
			var startId = 'd' + Webcrea.AddZero(0,2);
			var holidayId = (this.objCalendar.bMonday)?'d'+Webcrea.AddZero(6,2):'d'+Webcrea.AddZero(0,2);
			var holidayCell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + holidayId);
			if(holidayCell)
			{
				var tdNode;
				if(holidayCell.tagName == 'TD') tdNode = holidayCell;
				else tdNode = Webcrea.FindParentNode(holidayCell, 'name', 'TD');
				var style = tdNode.getAttribute('class');
				var css = Webcrea.GetCSS('.'+style);
				holidayColor = css.style.color;
			}
			var startCell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + startId);
			if(!startCell)
			{
				for(var i=1; i<7; i++)
				{
					nStartSeq=i;
					startId = 'd' + Webcrea.AddZero(i,2);
					startCell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + startId);
					if(startCell) break;
				}
			}
			if(!startCell) return;
			var endChkId = 'd' + Webcrea.AddZero(6,2);
			var endChkCell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + endChkId);
			if(!endChkCell)
			{
				for(var i=5; i>=0; i--)
				{
					nEndSeq++;
					endChkId = 'd' + Webcrea.AddZero(i,2);
					endChkCell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + endChkId);
					if(endChkCell) break;
				}
			}
			if(!endChkCell) return;
			var trNode = Webcrea.FindParentNode(startCell, 'name', 'TR');
			var nextTrNode = trNode.nextElementSibling;
			while(nextTrNode)
			{
				var findCell = Webcrea.FindNode(nextTrNode, 'id', this.divPos + '.' + findId);
				if(findCell) break;
				nextTrNode = nextTrNode.nextElementSibling;
				nCol++;
			}

			var endId = 'd' + Webcrea.AddZero(36,2);
			var endCell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + endId);
			if(endCell)
			{
				var tdNode;
				if(endCell.tagName == 'TD') tdNode = endCell;
				else tdNode = Webcrea.FindParentNode(endCell, 'name', 'TD');
				var style = tdNode.getAttribute('class');
				var css = Webcrea.GetCSS('.'+style);
				dataColor = css.style.background;

				var nextNode = tdNode.nextElementSibling;
				style = nextNode.getAttribute('class');
				css = Webcrea.GetCSS('.'+style);
				blankColor = css.style.background;
			}
			var nNext = 0;
			for(var i=0; i<37; i++)
			{
				var bHoliday=false;
				var id = 'd' + Webcrea.AddZero(i,2);
				var cell = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + id);
				if(!cell) continue;
				var value = '';
				var sDate = '';
				var tdNode;
				if(cell.tagName == 'TD') tdNode = cell;
				else tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
				var trNode = Webcrea.FindParentNode(cell, 'name', 'TR');
				var bData = (i>=seq && i<=endSeq)?true:false;
				cell.style.cursor = '';
				var bCellDisabled = true;
				if(bData)
				{
					value = i-seq+1;
					sDate = cDate.getFullYear() + Webcrea.AddZero(cDate.getMonth()+1,2) + Webcrea.AddZero(value,2);
					tdNode.style.backgroundColor = dataColor;
					for(var j=0; j<tdNode.childNodes.length; j++)
					{
						var child = tdNode.childNodes[j];
						if (child.nodeName != '#text') child.style.backgroundColor = dataColor;
					}
					bCellDisabled = false;
					cell.disabled = bCellDisabled;
					var holidayObj = Webcrea.GetHoliday(sDate);
					if(holidayObj)
					{
						bHoliday = true;
						sHolidayTitle = holidayObj.name;
						if(!Webcrea.IsEmpty(sHolidayTitle) && Webcrea.bHolidayTitle) value = value + ' ' + sHolidayTitle;
					}
					if(bHoliday) cell.style.color = holidayColor;
					else cell.style.color = '';
				}
				else
				{
					tdNode.style.backgroundColor = blankColor;
					for(var j=0; j<tdNode.childNodes.length; j++)
					{
						var child = tdNode.childNodes[j];
						if (child.nodeName != '#text' && !Webcrea.IsEmpty(child.id)) child.style.backgroundColor = blankColor;
					}
					cell.disabled = bCellDisabled;
				}
				cell.setAttribute('editable', 'noedit');
				cell.setAttribute('date', sDate);
				Webcrea.DynamicVal('d', sDate);
				this.SetValue(id, value);
				Webcrea.DynamicVal(id, sDate);
				var SetChildValue = function(node)
				{
					var childNodes = node.children;
					for(var i1=0; i1<childNodes.length; i1++)
					{
						var childNode = childNodes[i1];
						if(childNode.tagName == 'DIV')
						{
							if(childNode.getAttribute('role')=='pMultiline' || childNode.getAttribute('role')=='multiline') childNode.setAttribute('date', sDate);
							SetChildValue(childNode);
						}
						else if(childNode.tagName == 'INPUT' || Webcrea.IsEditTd(childNode))
						{
							childNode.setAttribute('date', sDate);
							break;
						}
					}
				};
				var nSeq = nNext%(7-nStartSeq-nEndSeq);
				var nColSpan = tdNode.getAttribute('colspan');
				if(!nColSpan) nColSpan = 1;
				else nColSpan = Number(nColSpan);
				var nNextCellSeq = 0;
				var nextTdNode = tdNode.nextElementSibling;
				var bLastTd = false;
				if(i==36) bLastTd = true;
				if(bLastTd) nextTdNode = tdNode;
				while(nextTdNode)
				{
					var bNextDateCell = false;
					var childNodes = nextTdNode.children;
					if(Webcrea.IsEditTd(nextTdNode))
					{
						childNodes = [];
						childNodes[0] = nextTdNode;
					}
					for(var i1=0; i1<childNodes.length; i1++)
					{
						var childNode = childNodes[i1];
						var nextId = this.GetCellId(childNode);
						if(nextId[0] == 'd')
						{
							bNextDateCell = true;
							break;
						}
					}
					if(bNextDateCell) break;
					SetChildValue(nextTdNode);
					nextTdNode = nextTdNode.nextElementSibling;
					nNextCellSeq++;
				}
				nColSpan += nNextCellSeq;
				nSeq *= nColSpan;
				var trNodeOrg = trNode;
				for(var j=0; j<nColSpan; j++)
				{
					var trNode = trNodeOrg;
					while(true)
					{
						var bNextDateCell = false;
						trNode = trNode.nextElementSibling;
						if(!trNode) break;
						var baseTdNode = trNode.children[j];
						var nNextColSpan = baseTdNode.getAttribute('colspan');
						if(nNextColSpan>1 && j==0)
						{
							nSeq /= nColSpan;
							nColSpan = nColSpan - nNextColSpan + 1;
							nSeq *= nColSpan;
						}
						var tdNode = trNode.children[nSeq+j];
						if(!tdNode) continue;
						if(bData)
						{
							var childNodes = tdNode.childNodes;
							if(Webcrea.IsEditTd(tdNode))
							{
								childNodes = [];
								childNodes[0] = tdNode;
							}
							for(var k=0; k<childNodes.length; k++)
							{
								var child = childNodes[k];
								if(child.nodeName != '#text')
								{
									child.style.cursor = '';
									var nextId = this.GetCellId(child);
									if(nextId[0] == 'd')
									{
										bNextDateCell = true;
										break;
									}
									if(!Webcrea.IsEmpty(child.id)) child.style.backgroundColor = dataColor;
									child.setAttribute('date', sDate);
									child.disabled = bCellDisabled;
									if(child.nodeName == 'DIV' || child.nodeName == 'SELECT')
									{
										tdNode.style.backgroundColor = '';
										if(child.style.display == 'none' || Webcrea.IsEmpty(child.style.display))
										{
											var display_org = child.getAttribute('display_org');
											if(Webcrea.IsEmpty(display_org)) display_org = 'block';
											child.style.display = display_org;
										}
										if(child.nodeName == 'DIV') SetChildValue(child);
									}
								}
							}
						}
						else
						{
							var childNodes = tdNode.childNodes;
							if(Webcrea.IsEditTd(tdNode))
							{
								childNodes = [];
								childNodes[0] = tdNode;
							}
							for(var k=0; k<childNodes.length; k++)
							{
								var child = childNodes[k];
								if(child.nodeName != '#text')
								{
									child.style.cursor = '';
									var nextId = this.GetCellId(child);
									if(nextId[0] == 'd')
									{
										bNextDateCell = true;
										break;
									}
									if(!Webcrea.IsEmpty(child.id)) child.style.backgroundColor = blankColor;
									child.setAttribute('date', sDate);
									child.disabled = bCellDisabled;
									if(child.nodeName == 'DIV' || child.nodeName == 'SELECT')
									{
										tdNode.style.backgroundColor = blankColor;
										var display_org = child.style.display;
										if(!Webcrea.IsEmpty(display_org)) child.setAttribute('display_org', display_org);
										if(!bLastTd) child.style.display = 'none';
										if(child.nodeName == 'DIV') SetChildValue(child);
									}
								}
							}
						}
						if(bNextDateCell || (nColSpan>j+1)) break;
					}
				}
				nNext++;
			}
		}
	},
	DisplayGridCalendar : function()
	{
		if(!this.IsCalendar() || !this.objCalendar) return;
		if(this.arrStackEvent.isearch('ontitle')>=0)
		{
			var date = this.objCalendar.date;
			var startDate = null, endDate = null;
			if(Webcrea.IsEmpty(date))
			{
				startDate = this.objCalendar.startDate;
				endDate = this.objCalendar.endDate;
			}
			else startDate = date;
			if(this.IsGrid() && this.objCalendar.bAppendColumn)
			{
				var sStartDate = startDate.getFullYear() + Webcrea.AddZero(startDate.getMonth()+1, 2) + Webcrea.AddZero(startDate.getDate(), 2);
				var sEndDate = endDate.getFullYear() + Webcrea.AddZero(endDate.getMonth()+1, 2) + Webcrea.AddZero(endDate.getDate(), 2);
				var nCol = Number(sEndDate) - Number(sStartDate);
				var nStartDay = startDate.getDate();
				var copyColNo = -1;
				for(var i=0; i<2; i++)
				{
					var root = (i==0)?this.objHTable:this.objTable;
					if(copyColNo<0)
					{
						var arrTableHeader = [];
						Webcrea.FindNodeAll(root, 'id', this.divPos + '.Header', arrTableHeader);
						for(var j=0; j<arrTableHeader.length; j++)
						{
							var trNode = arrTableHeader[j];
							var arrTdNode = [];
							Webcrea.FindNodeAll(trNode, 'name', 'TD', arrTdNode);
							for(var k=0; k<arrTdNode.length; k++)
							{
								var tdNode = arrTdNode[k];
								var id = tdNode.id;
								id = id.substr(0, 2);
								if(id[0] == ':')
								{
									copyCopyTdNode = tdNode;
									copyColNo = k;
									break;
								}
							}
							if(copyColNo>=0) break;
						}
					}
					var colGroup = Webcrea.FindNode(root, 'name', 'COLGROUP');
					var arrColGroup = [];
					if(!colGroup) break;
					Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
					for(var j=arrColGroup.length-1; j>=0; j--)
					{
						if(j<=copyColNo) break;
						colGroup.removeChild(arrColGroup[j]);
					}
					if(arrColGroup.length < 1) break;
					for(var j=0; j<nCol; j++)
					{
						var copyColNode = arrColGroup[copyColNo].cloneNode(true);
						copyColNode.setAttribute('colno', j+copyColNo+1);
						colGroup.appendChild(copyColNode);
					}
					for(var j=0; j<arrTableHeader.length; j++)
					{
						var trNode = arrTableHeader[j];
						var arrTdNode = [];
						Webcrea.FindNodeAll(trNode, 'name', 'TD', arrTdNode);
						for(var k=arrTdNode.length-1; k>=0; k--)
						{
							if(k<=copyColNo) break;
							trNode.removeChild(arrTdNode[k]);
						}
						var tdNode = arrTdNode[copyColNo];
						var id = tdNode.id;
						var startSeq = Number(id.substr(2));
						id = id.substr(0, 2);
						for(var k=0; k<nCol; k++)
						{
							var copyTdNode = tdNode.cloneNode(true);
							var chgId = id + Webcrea.AddZero(startSeq+k+1, 2);
							copyTdNode.id = chgId;
							copyTdNode.removeAttribute('relId');
							trNode.appendChild(copyTdNode);
						}
					}
				}
				for(var i=0; i<this.arrObjAddInfo.length; i++)
				{
					var objAddInfo = this.arrObjAddInfo[i];
					var trNode = objAddInfo.orgTableRow;
					var arrTdNode = [];
					Webcrea.FindNodeAll(trNode, 'name', 'TD', arrTdNode);
					for(var j=arrTdNode.length-1; j>=0; j--)
					{
						if(j<=copyColNo) break;
						trNode.removeChild(arrTdNode[j]);
					}
					var tdNode = arrTdNode[copyColNo];
					var orgId='';
					var inputNode = Webcrea.FindNode(tdNode, 'name', 'INPUT');
					if(inputNode) orgId = inputNode.getAttribute('orgId');
					for(var j=0; j<nCol; j++)
					{
						var copyTdNode = tdNode.cloneNode(true);
						if(!Webcrea.IsEmpty(orgId))
						{
							var nodes = copyTdNode.children;
							for(var k=0; k<nodes.length; k++)
							{
								var node = nodes[k];
								var id = node.id;
								var seq = j+1;
								var chgId = orgId+seq;
								chgId = id.replace(orgId, chgId);
								node.id = chgId;

								var forId = node.getAttribute('for');
								if(!Webcrea.IsEmpty(forId))
								{
									var chgForId = orgId+seq;
									chgForId = forId.replace(orgId, chgForId);
									node.setAttribute('for', chgForId);
								}
							}
						}
						trNode.appendChild(copyTdNode);
					}
				}
				this.Refresh();
			}
			if(this.IsGrid() && !Webcrea.IsEmpty(startDate))
			{
				var sStartDate = startDate.getFullYear() + Webcrea.AddZero(startDate.getMonth()+1, 2) + Webcrea.AddZero(startDate.getDate(), 2);
				var sEndDate = '';
				if(endDate) sEndDate = endDate.getFullYear() + Webcrea.AddZero(endDate.getMonth()+1, 2) + Webcrea.AddZero(endDate.getDate(), 2);
				if(!this.arrTableHeader) return;
				for(var i=0; i<this.arrTableHeader.length; i++)
				{
					var trNode = this.arrTableHeader[i];
					var childNodes = trNode.childNodes;
					for(var j=0; j<childNodes.length; j++)
					{
						childNode = childNodes[j];
						if(!childNode) break;
						if (childNode.nodeName == 'xml') continue;
						if (childNode.nodeName == '#text') continue;
						if (childNode.nodeName == '#comment') continue;
						else if(childNode.nodeName.toLowerCase() == 'td')
						{
							var title = childNode.id;
							title = title.trim();
							if(title && title.length > 1)
							{
								var n = title.indexOf(':');
								if(n>=0)
								{
									title = title.substr(n+1, title.length);
									var seq = title.substr(1)-1;
									var sDate = AddDate(sStartDate, Number(seq));
									if(Webcrea.IsEmpty(sDate) || sDate.length<8) continue;
									var nameDay = Webcrea.GetDayOfWeek(sDate);
									var sDayOfWeek = Webcrea.GetDayName(nameDay);
									var color = '';
									if(sDayOfWeek == Webcrea.GetDayName(6)) color = '#0000FF';
									else if(Webcrea.IsHoliday(sDate)) color = '#FF0000';
									var sValue = '';
									if(title[0] == 'd') sValue = Number(sDate.substr(6,2));
									if(title[0] == 'w') sValue = sDayOfWeek;
									childNode.textContent = sValue;
									if(!Webcrea.IsEmpty(color)) childNode.style.color = color;
									else childNode.style.color = '';
								}
							}
						}
					}
				}
			}
		}
		Webcrea.CrossTabColSize(this);
	},
	DisableCodeButton : function(currNode) {
		if(!this.IsCodeButton(currNode)) return;
		var bRet = false;
		var codeNode = currNode.nextElementSibling;
		var bReadOnly = Webcrea.IsReadOnly(currNode);
		var bEnable = Webcrea.IsEnable(currNode);
		if(bReadOnly || !bEnable || (Webcrea.IsMobile() && this.IsCodeCalendar(currNode)))
		{
			let bPaddingRight = true;
			if(Webcrea.IsMobile() && this.IsCodeCalendar(currNode)) bPaddingRight = false;
			else if(codeNode.style.display != 'none') bPaddingRight = false;
			var paddingRight = currNode.style.paddingRight;
			if(paddingRight && !bPaddingRight)
			{
				currNode.style.paddingRight = '0px';
				currNode.setAttribute('paddingRightOrg', paddingRight);
			}
			codeNode.style.display = 'none';
			bRet = true;
		}
		else
		{
			var bDisplay = true;
			if(codeNode.getAttribute('vacant')) bDisplay = false;
			if(bDisplay)
			{
				var paddingRight = currNode.getAttribute('paddingRightOrg');
				if(paddingRight) currNode.style.paddingRight = paddingRight;
				codeNode.style.display = 'block';
			}
			else codeNode.style.display = 'none';
		}
		return bRet;
	},
	DisableSpinButton : function(currNode, codeNode) {
		var bRet = false;
		var bReadOnly = Webcrea.IsReadOnly(currNode);
		var bEnable = Webcrea.IsEnable(currNode);
		if(!codeNode)
		{
			var codeNodeUp = currNode.nextElementSibling;
			var codeNodeDown = codeNodeUp.nextElementSibling;
			if(bReadOnly || !bEnable)
			{
				var paddingRight = currNode.style.paddingRight;
				if(paddingRight && codeNodeUp.style.display != 'none')
				{
					currNode.style.paddingRight = '2px';
					currNode.setAttribute('paddingRightOrg', paddingRight);
				}
				codeNodeUp.style.display = 'none';
				codeNodeDown.style.display = 'none';
				bRet = true;
			}
			else
			{
				var paddingRight = currNode.getAttribute('paddingRightOrg');
				if(paddingRight) currNode.style.paddingRight = paddingRight;
				codeNodeUp.style.display = 'block';
				codeNodeDown.style.display = 'block';
			}
		}
		else
		{
			var role = codeNode.getAttribute('role');
			if(bReadOnly || !bEnable || Webcrea.IsMobile())
			{
				var paddingRight = currNode.style.paddingRight;
				if(paddingRight)
				{
					if(codeNode.style.display != 'none' && role == 'spinup')
					{
						currNode.style.paddingRight = '2px';
						currNode.setAttribute('paddingRightOrg', paddingRight);
					}
				}
				codeNode.style.display = 'none';
				bRet = true;
			}
			else
			{
				 if(role == 'spinup')
				 {
					var paddingRight = currNode.getAttribute('paddingRightOrg');
					if(paddingRight) currNode.style.paddingRight = paddingRight;
				 }
				codeNode.style.display = 'block';
			}
		}
		return bRet;
	},
	DisplayCodeButton : function() {
		if(!this.objTable) return;
		var currObj = this;
		var Display = function(node, row)
		{
			for(var i=0; i<node.childNodes.length; i++)
			{
				var child = node.childNodes[i];
				if(node.nodeName=='A' && child.nodeName == 'IMG')
				{
					var relId = child.getAttribute('relId');
					var realNode = node.previousElementSibling;
					var code = child.getAttribute('codeobj');
					var nFileVersion = Webcrea.GetCurrFileVersion();
					if(nFileVersion<7020170912001) code = child.getAttribute('code');
					if(!code || code.toLowerCase()!='codebtn') continue;
					if(currObj.DisableCodeButton(realNode)) break;
					var role = child.getAttribute('role');
					var nAdjustLeft = 0;
					if(role && role == 'selectboxarrow')
					{
						if(!Webcrea.IsEmpty(WebcreaInfo.sComboImage))
						{
							child.setAttribute('src', Webcrea.GetImageLinkPath() + '/' + WebcreaInfo.sComboImage);
						}
					}
					else if(!Webcrea.IsEmpty(WebcreaInfo.sDateImage))
					{
						var bDateBtn = false;
						if(role && role == 'calendar') bDateBtn = true;
						else if(nFileVersion<7020181021001)
						{
							var realType = child.getAttribute('realType');
							if(realType && (realType == 'date' || realType == 'month' || realType == 'datetime'))
							{
								child.setAttribute('role', 'calendar');
								bDateBtn = true;
							}
						}
						if(bDateBtn)
						{
							child.setAttribute('src', Webcrea.GetImageLinkPath() + '/' + WebcreaInfo.sDateImage);
							child.setAttribute('imageover', WebcreaInfo.sDateImage);
							child.setAttribute('imageout', WebcreaInfo.sDateImage);
						}
					}
					var bDisplay = true;
					if(currObj.IsHideColumn(relId)) bDisplay = false;
					if(!bDisplay) child.style.display = 'none';
					else child.style.display = '';
					if(nFileVersion<7020200131001)
					{
					var rowTop = Webcrea.GetTop(row);
					var parent = node.parentNode;
					if(!parent) continue;
					var rowHeight = Webcrea.GetHeight(parent);
					var height = 16;
					if(role && role == 'filterboxarrow') height = 14;
					var top = rowTop + Math.ceil((rowHeight - height)/2);
					child.style.height = height + 'px';
					child.style.top = top + 'px';
					var left = 0;
					child.style.left = '';
					left = Webcrea.GetLeft(child) - height + Webcrea.GetWidth(realNode, true) - 2 - nAdjustLeft;
					if(role && role == 'filterboxarrow') left += height;
					child.style.left = left + 'px';
					}
				}
				else if(child.nodeName=='SPAN')
				{
					var code = child.getAttribute('codeobj');
					if(!code || code.toLowerCase()!='spinbtn') continue;
					var relId = child.getAttribute('relId');
					var realNode = child.previousElementSibling;
					if(!realNode) continue;
					var role = child.getAttribute('role');
					if(role == 'spindown') realNode = realNode.previousElementSibling;
					if(currObj.DisableSpinButton(realNode, child)) continue;
					var bDisplay = true;
					if(currObj.IsHideColumn(relId)) bDisplay = false;
					if(!bDisplay) child.style.display = 'none';
					else child.style.display = '';
					var marginLeft = realNode.style.marginLeft;
					var marginRight = realNode.style.marginRight;
					if(marginLeft) marginLeft = Number(Extract(marginLeft, '[DIGIT]'));
					else marginLeft = 0;
					if(marginRight) marginRight = Number(Extract(marginRight, '[DIGIT]'));
					else marginRight = 0;
					var marginTop = realNode.style.marginTop;
					var marginBottom = realNode.style.marginBottom;
					if(marginTop) marginTop = Number(Extract(marginTop, '[DIGIT]'));
					else marginTop = 0;
					if(marginBottom) marginBottom = Number(Extract(marginBottom, '[DIGIT]'));
					else marginBottom = 0;
					var parent = node.parentNode;
					if(!parent) continue;
					var rowHeight = Webcrea.GetHeight(parent, true);
					var realHeight = Webcrea.GetHeight(realNode, true);
					if(realHeight>rowHeight) rowHeight = realHeight;
					if(currObj.IsGrid()) rowHeight += 1;
					rowHeight = rowHeight - marginTop - marginBottom;
					if(marginTop) rowHeight -= 1;
					if(marginBottom) rowHeight -= 1;
					var height = rowHeight/2-1;
					var width = Math.ceil(height);
					width += Math.ceil(width/3);
					var top = 0;
					if(marginTop) top = marginTop + 1;
					var nFileVersion = Webcrea.GetCurrFileVersion();
					if(nFileVersion<7020200218001 && Webcrea.IE())
					{
						var rowTop = Webcrea.GetTop(row);
						top += rowTop;
						var realLeft = Webcrea.GetLeft(node);
						var realWidth = Webcrea.GetWidth(realNode, true);
						realLeft = Number(Extract(realLeft, '[DIGIT]'));
						var spinLeft = realLeft + realWidth + marginLeft - width;
						child.style.left = spinLeft + 'px';
					}
					else if(nFileVersion<7020200218001)
					{
						var tdNode = realNode;
						if(tdNode.tagName != 'TD') tdNode = Webcrea.FindParentNode(realNode, 'name', 'TD');
						tdNode.style.overflow = 'hidden';
						tdNode.style.position = 'relative';
					}
					if(role == 'spindown')
					{
						top += height;
						if(!Webcrea.IsEmpty(WebcreaInfo.sSpinDownImage) && !Webcrea.IsEmpty(WebcreaInfo.sSpinUpImage))
						{
							child.style.border='none';
							child.style.background = "url('" + Webcrea.GetImageLinkPath() + "/" + WebcreaInfo.sSpinDownImage + "') 50% 0% no-repeat";
						}
					}
					child.style.width = width + 'px';
					if(nFileVersion<7020200218001)
					{
						child.style.height = height + 'px';
						child.style.top = top + 'px';
					}
					if(role == 'spinup') 
					{
						var nPadding = width + 4;
						realNode.style.paddingRight = nPadding + 'px';
						if(!Webcrea.IsEmpty(WebcreaInfo.sSpinDownImage) && !Webcrea.IsEmpty(WebcreaInfo.sSpinUpImage))
						{
							child.style.border='none';
							child.style.background = "url('" + Webcrea.GetImageLinkPath() + "/" + WebcreaInfo.sSpinUpImage + "') 50% 100% no-repeat";
						}
					}
				}
				if(child.childNodes.length>0 && child.nodeName != 'SELECT') Display(child, row);
			}
		};
		var cellId = arguments[0];
		var currNode = null;
		if(!Webcrea.IsEmpty(cellId)) currNode = Webcrea.FindNode(this.objTable, 'id', this.divPos + '.' + cellId);
		if(currNode)
		{
			var tdNode = currNode;
			if(!currNode.tagName.iEquals('td')) tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
			var trNode = Webcrea.FindParentNode(tdNode, 'name', 'TR');
			Display(tdNode, trNode);
		}
		else
		{
			if(this.objHTable && this.IsFilterHeader())
			{
				for(var i=0; i<2; i++)
				{
					var target = this.objHTable;
					if(i==1) target = this.objTable;
					var rowH = target.rows[0];
					if(rowH)
					{
						var childNodes = rowH.childNodes;
						for(var j=0; j<childNodes.length; j++)
						{
							var child = childNodes[j];
							if (child.nodeName != '#text') Display(child, rowH);
						}
					}
				}
			}
			for(var i=this.nHeader; i<this.objTable.rows.length; i++)
			{
				var row = this.objTable.rows[i];
				var childNodes = row.childNodes;
				for(var j=0; j<childNodes.length; j++)
				{
					var child = childNodes[j];
					if (child.nodeName != '#text') Display(child, row);
				}
			}
		}
	},
	DisplayGroup : function(currNode, bLast)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		let currObj = this;
		if(!currNode || (currNode && currNode.nodeName == '#text')) return;
		var bChange_b = this.objEvent.bChange;
		var bModify_b = this.objEvent.bModify;
		this.objEvent.bChange = false;
		this.objEvent.bModify = false;
		var row = currNode.rowIndex-this.nHeader;
		var addRow = currNode;
		let trSeq = addRow.getAttribute('seq');
		if(!trSeq) trSeq = 0;
		var rowData = Number(addRow.getAttribute('rowno'));
		if(!bLast) bLast = this.IsLastRow(rowData, true);
		var firstNode = this.objTable.rows[this.nHeader];
		var nFirstSeq = 0;
		if(firstNode) nFirstSeq = Number(firstNode.getAttribute('rowno'));
		var nField = this.arrField.length;
		var nCellCnt = this.arrCellId.length;
		if(this.bCrossTab) nCellCnt = nField;
		for(var j=0; j<nCellCnt; j++)
		{
			var bField=true;
			var cellId = this.arrField[j];
			var sOrgId = cellId;
			var bSumRow = false;
			var defaultValue = '';
			var cellInfo = this.GetCellInfo(cellId);
			if(!this.bCrossTab)
			{
				cellId = this.arrCellId[j];
				cellInfo = this.GetCellInfo(cellId);
				if(!cellInfo || !cellInfo.bDataRow) continue;
				if(nFileVersion>7020201208001 && cellInfo.trSeq != trSeq) continue;
				sOrgId = cellInfo.orgId;
				if(Webcrea.IsEmpty(sOrgId)) continue;
				if(this.IsStatusCell(cellId) || this.IsMultiSelectCell(cellId)) continue;

				bField=false;
				var iField = this.GetColumn(sOrgId);
				if(iField>=0)
				{
					bField = true;
					sOrgId = this.arrField[iField];
				}
				else if(!cellInfo || (!Webcrea.IsEmpty(sOrgId) && this.IsStatusCell(sOrgId))) continue;
				if(!bField && cellInfo.type == 'button') continue;
				if(!bField && cellInfo.type == 'radio')
				{
					if(cellInfo.groupId)
					{
						groupId = cellInfo.groupId;
						iField = this.GetColumn(cellInfo.groupId);
						if(iField>=0)
						{
							bField = true;
							sOrgId = this.arrField[iField];
						}
					}
				}
				bSumRow = cellInfo.bSumRow;
				defaultValue = cellInfo.defaultValue;
			}
			var data = '';
			var imgdata = '';
			if(!bField && !bSumRow)
			{
				if(bLast)
				{
					if(!Webcrea.IsEmpty(defaultValue))
					{
						if(cellInfo.bRunTime) data = this.MakeData(defaultValue, rowData);
					}
					else data = this.GetValueByDisplay(sOrgId, row);
				}
				else if(cellInfo.bRunTime) data = this.MakeData(defaultValue, rowData);
			}
			else
			{
				data = this.arrData[sOrgId][rowData];
				if(cellInfo && cellInfo.tagName.iEquals('img') && this.IsColumn('_my_filedata')) imgdata = this.arrData['_my_filedata'][rowData];
			}
			if(nFileVersion>=7020201203001 && !WebcreaInfo.Nullable && data == '')
			{
				if(cellInfo && cellInfo.realType == 'number' && !this.IsBWZ(cellId)) data = 0;
			}

			var addCol = Webcrea.FindNode(addRow, 'id', this.divPos + '.' + sOrgId + rowData, false, rowData);
			if(!addCol) continue;
			if(addCol.getAttribute('vacant')) continue;
			var bEditTd = Webcrea.IsEditTd(addCol);
			if(addCol.nodeName == 'TD' && !bEditTd) addCol.textContent = data;
			else
			{
				if(addCol.nodeName == 'DIV' && addCol.getAttribute('role') == 'multiline')
				{
					var txt=data;
					var bTagDisplay = false;
					if(nFileVersion<7020190215004) bTagDisplay = true;
					else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
					if(bTagDisplay)
					{
						txt=txt.replace(new RegExp('\r?\n','g'), '<br>');
						if(!Webcrea.IsEmpty(txt))
						{
							txt = Webcrea.ReplaceAll(txt, '{+}', '<br>');
							addCol.innerHTML=txt;
						}
						else addCol.innerHTML='&nbsp;';
					}
					else
					{
						if(Webcrea.IsIE() && Webcrea.IsEmpty(txt)) txt = ' ';
						addCol.innerText=txt;
					}
				}
				var bDisplayData = true;
				var bDisplayDataB = true;
				var bDisplayDataN = true;
				var nGroup = this.IsGroup(sOrgId);
				var bDisplayBottom = false;
				var bDisplayLine = (nGroup==3)?true:false;
				if(nGroup)
				{
					var cellInfo = this.GetCellInfo(sOrgId);
					if(cellInfo && cellInfo.nDisplayPos == 1) bDisplayBottom = true;
					var parentNodeB, parentNodeN, parentNodeL;
					var addColB, addColN, lastCol;
					var seqB = Number(rowData)-1;
					if(seqB>0)
					{
						var nTr = seqB - nFirstSeq;
						var trNode = this.objTable.rows[nTr];
						addColB = Webcrea.FindNode(trNode, 'id', this.divPos + '.' + sOrgId + seqB, false, seqB);
						if(addColB) parentNodeB = addColB.parentNode;
					}
					var seqN = Number(rowData)+1;
					if(seqN>0)
					{
						var nTr = seqN - nFirstSeq;
						var trNode = this.objTable.rows[nTr];
						addColN = Webcrea.FindNode(trNode, 'id', this.divPos + '.' + sOrgId + seqN, false, seqN);
						if(addColN) parentNodeN = addColN.parentNode;
					}
					var nLast = Number(nFirstSeq)+this.nRowsPage;
					if(nLast>0)
					{
						var nTr = nLast - nFirstSeq;
						var trNode = this.objTable.rows[nTr];
						lastCol = Webcrea.FindNode(trNode, 'id', this.divPos + '.' + sOrgId + nLast, false, nLast);
						if(lastCol) parentNodeL = lastCol.parentNode;
					}
					if(bDisplayBottom && rowData>=0) bDisplayData = !this.IsGroupData(sOrgId, rowData, nGroup, bDisplayBottom);
					else if(!bDisplayBottom && rowData>0) bDisplayData = !this.IsGroupData(sOrgId, rowData, nGroup, bDisplayBottom);
					if(seqB>0) bDisplayDataB = !this.IsGroupData(sOrgId, seqB, nGroup, bDisplayBottom);
					if(seqN>0) bDisplayDataN = !this.IsGroupData(sOrgId, seqN, nGroup, bDisplayBottom);
					var parentNode = addCol.parentNode;
                    if(parentNode.getAttribute('role')=='pMultiline')
                    {
                        while(parentNode)
                        {
                            parentNode=parentNode.parentNode;
                            if(parentNode.nodeName != 'DIV') break;
                        }
						var bReadOnly = this.IsReadOnly(sOrgId);
						if(Webcrea.bGroupCellMerge && bReadOnly && this.IsGrid() && !this.IsList())
						{
							let bFirstNode = (firstNode == currNode);
							var CreateGroupInfo = function()
							{
								let bUpdate = arguments[0];
								let groupInfo = {};
								groupInfo.rowDataNo = rowData;
								groupInfo.data = data;
								groupInfo.groupCell = parentNode;
								groupInfo.cellIndex = parentNode.cellIndex;
								groupInfo.rowSpan = 1;
								let nInsertSeq = -1;
								let groupInfoBefore = currObj.GetGroupInfo(sOrgId, rowData);
								if(groupInfoBefore) nInsertSeq = currObj.arrGroupInfo[sOrgId].search(groupInfoBefore)+1;
								if(!bUpdate)
								{
									if(nInsertSeq>0) currObj.arrGroupInfo[sOrgId].splice(nInsertSeq, 0, groupInfo);
									else currObj.arrGroupInfo[sOrgId][currObj.arrGroupInfo[sOrgId].length] = groupInfo;
								}
								else
								{
									let nFind = currObj.arrGroupInfo[sOrgId].searchKey(groupInfo, 'data');
									if(nFind<0)
									{
										if(nInsertSeq>0) currObj.arrGroupInfo[sOrgId].splice(nInsertSeq, 0, groupInfo);
										else currObj.arrGroupInfo[sOrgId][currObj.arrGroupInfo[sOrgId].length] = groupInfo;
									}
									else currObj.arrGroupInfo[sOrgId][nFind] = groupInfo;
								}
								return groupInfo;
							};
							if(this.objEvent.bAppendMode)
							{
								if(this.arrGroupInfo[sOrgId])
								{
									let rowSpan = 1;
									var groupInfo = this.GetGroupInfo(sOrgId, rowData, data);
									if(!bDisplayDataN)
									{
										var bRemoveNextNode = true;
										if(!groupInfo)
										{
											groupInfo = this.GetGroupInfo(sOrgId, rowData+1, data);
											if(!groupInfo)
											{
												bRemoveNextNode = false;
												groupInfo = CreateGroupInfo();
											}
											else groupInfo.rowDataNo = rowData;
											groupInfo.rowDataNo = rowData;
										}
										if(bRemoveNextNode)
										{
											let nextNode = this.objTable.rows[this.nHeader+1];
											let removeNode = nextNode.cells[groupInfo.cellIndex];
											rowSpan += removeNode.rowSpan;
											nextNode.removeChild(removeNode);
										}
									}
									else if(!groupInfo) groupInfo = CreateGroupInfo();
									var multiLineDiv=Webcrea.FindNodePublic(parentNode,'role','multiline');
									groupInfo.rowSpan = rowSpan;
									groupInfo.groupCell = parentNode;
									groupInfo.cellIndex = parentNode.cellIndex;
									groupInfo.groupCell.rowSpan = groupInfo.rowSpan;
									var nHeight = Webcrea.GetHeight(groupInfo.groupCell);
									multiLineDiv.style.maxHeight = nHeight + 'px';
								}
							}
							else
							{
								if(!bDisplayData)
								{
									if(this.arrGroupInfo[sOrgId])
									{
										var groupInfo = this.GetGroupInfo(sOrgId, rowData, data);
										if(!groupInfo) groupInfo = CreateGroupInfo();
										if(bFirstNode)
										{
											var groupCellIndex = groupInfo.cellIndex;
											var groupCell = currNode.cells[groupCellIndex];
											groupInfo.groupCell = groupCell;
										}
										var nGroupFirst = nFirstSeq;
										if(groupInfo.rowDataNo>nGroupFirst) nGroupFirst = groupInfo.rowDataNo;
										var rowSpan = rowData - nGroupFirst + 1;
										groupInfo.rowSpan = rowSpan;
										groupInfo.groupCell.rowSpan = groupInfo.rowSpan;
										let nHeight = Webcrea.GetHeight(groupInfo.groupCell);
										let multiLineDiv=Webcrea.FindNodePublic(groupInfo.groupCell,'role','multiline');
										multiLineDiv.style.maxHeight = nHeight + 'px';
									}
									if(!bFirstNode) currNode.removeChild(parentNode);
								}
								else
								{
									if(!this.arrGroupCell)
									{
										this.arrGroupCell = [];
										this.arrGroupInfo = [];
									}
									if(!this.arrGroupInfo[sOrgId]) this.arrGroupInfo[sOrgId] = [];
									if(this.arrGroupCell.search(sOrgId)<0) this.arrGroupCell[this.arrGroupCell.length] = sOrgId;
									let groupInfo = CreateGroupInfo(true);
								}
							}
							continue;
						}
					}
					else if(this.IsCodeButtonDiv(parentNode)) parentNode=parentNode.parentNode;
					if((bEditTd || parentNode.nodeName == 'TD') && !bDisplayLine)
					{
						if(!bDisplayData)
						{
							bDisplayBottom?addCol.style.borderBottom = '0':addCol.style.borderTop = '0';
							bDisplayBottom?parentNode.style.borderBottom = '0':parentNode.style.borderTop = '0';
						}
						else
						{
							bDisplayBottom?addCol.style.borderBottom = '':addCol.style.borderTop = '';
							bDisplayBottom?parentNode.style.borderBottom = '':parentNode.style.borderTop = '';
						}
						if(addColB)
						{
							if(!bDisplayDataB)
							{
								bDisplayBottom?addColB.style.borderBottom = '0':addColB.style.borderTop = '0';
								bDisplayBottom?parentNodeB.style.borderBottom = '0':parentNodeB.style.borderTop = '0';
							}
							else
							{
								bDisplayBottom?addColB.style.borderBottom = '':addColB.style.borderTop = '';
								bDisplayBottom?parentNodeB.style.borderBottom = '':parentNodeB.style.borderTop = '';
							}
							if(bDisplayBottom)
							{
								addColB.style.borderTop = '0';
								parentNodeB.style.borderTop = '0';
							}
							else if(!bDisplayData)
							{
								addColB.style.borderBottom = '0';
								parentNodeB.style.borderBottom = '0';
							}
							if(bLast && !bDisplayDataB && !bDisplayData && nGroup==1)
							{
								bDisplayBottom?addCol.style.borderBottom = '0':addCol.style.borderTop = '0';
								bDisplayBottom?parentNode.style.borderBottom = '0':parentNode.style.borderTop = '0';
							}
							if(nGroup==2 && bDisplayDataB)
							{
								addColB.style.borderBottom = '';
								parentNodeB.style.borderBottom = '';
							}
						}
						else
						{
							if(bDisplayBottom)
							{
								addCol.style.borderTop = '0';
								parentNode.style.borderTop = '0';
							}
							else if(!bDisplayDataN)
							{
								addCol.style.borderBottom = '0';
								parentNode.style.borderBottom = '0';
							}
							if((nGroup==2 && bDisplayData) || bLast)
							{
								addCol.style.borderBottom = '';
								parentNode.style.borderBottom = '';
							}
						}
						if(lastCol)
						{
							bDisplayBottom?lastCol.style.borderBottom = '':lastCol.style.borderTop = '';
							bDisplayBottom?parentNodeL.style.borderBottom = '':parentNodeL.style.borderTop = '';
						}
					}
				}
				if(!Webcrea.IsEmpty(imgdata)) this.SetValueByData(sOrgId, (!bDisplayData)?'':imgdata, row);
				else this.SetValueByData(sOrgId, (!bDisplayData)?'':data, row);
				this.SetBWZDisplay(addCol, true);
				if(!bDisplayData)
				{
					if((bEditTd || addCol.nodeName == 'INPUT') && addCol.value == '0') addCol.value = '';
					else if(bEditTd && addCol.textContent == '0') addCol.textContent = '';
				}
				var nextNode = addCol.nextElementSibling;
				if(cellInfo && cellInfo.rBullet && nextNode && nextNode.getAttribute('role') == 'bulletimage')
				{
					var textWidth = Webcrea.GetTextWidth(data, sOrgId, this);
					addCol.style.width = textWidth + 6 + 'px';
				}
			}
		}
		this.objEvent.bChange = bChange_b;
		this.objEvent.bModify = bModify_b;
	},
	DisplayStat : function()
	{
		var dragDiv = arguments[0];
		var dragArea = arguments[1];
		var nDragHeight = Webcrea.GetHeight(dragDiv);
		var copyDragDiv = dragDiv.cloneNode(true);
		var copyDragNode = Webcrea.FindNode(copyDragDiv, 'role');
		var dragRole = dragArea.getAttribute('role');
		var dropDiv = arguments[2];
		var dropArea = arguments[3];
		var dropRole = dropArea.getAttribute('role');

		var bDragCol = false;
		var bDragRow = false;
		var bDragFld = false;
		var bDropCol = false;
		var bDropRow = false;
		var bDropFld = false;
		if(dragRole == 'statcolarea') bDragCol = true;
		else if(dragRole == 'statrowarea') bDragRow = true;
		else if(dragRole == 'statfldarea') bDragFld = true;
		if(dropRole == 'statcolarea') bDropCol = true;
		else if(dropRole == 'statrowarea') bDropRow = true;
		else if(dropRole == 'statfldarea') bDropFld = true;

		var dragInfo;
		var arrStatDragInfo = [];
		if(bDragCol) arrStatDragInfo = this.arrStatColInfo;
		else if(bDragRow) arrStatDragInfo = this.arrStatRowInfo;
		else if(bDragFld) arrStatDragInfo = this.arrStatFldInfo;
		for(var i=0; i<arrStatDragInfo.length; i++)
		{
			var objInfo = arrStatDragInfo[i];
			var currNode = objInfo.node;
			if(currNode == dragDiv)
			{
				dragInfo = objInfo;
				break;
			}
		}

		var nTop=0;
		var nLeft=0;
		if(bDropCol)
		{
			var chgRole='statcol';
			if(!dropDiv)
			{
				if(this.arrStatColInfo.length>0)
				{
					var objInfo = this.arrStatColInfo[this.arrStatColInfo.length-1];
					var currNode_l = objInfo.node;
					var nLeft_l = Webcrea.GetLeft(currNode_l);
					var nLeftPer = Math.floor(nLeft_l/(this.arrStatColInfo.length-1));
					if(isNaN(nLeftPer)) nLeftPer = Webcrea.GetWidth(currNode_l) + 10;
					nLeft = this.arrStatColInfo.length*nLeftPer;
				}
				if(this.arrStatColInfo.length>0) copyDragDiv.style.position = 'absolute';
				else copyDragDiv.style.position = '';
				copyDragDiv.style.left = nLeft + 'px';
				copyDragDiv.style.top = nTop + 'px';
				copyDragNode.setAttribute('role', chgRole);
				dropArea.appendChild(copyDragDiv);
				this.SetStatInfo(1, dragInfo.field, dragInfo.title, dragInfo.sort, dragInfo.group, dragInfo.filter);
			}
			else
			{
				var objInfo = this.arrStatColInfo[this.arrStatColInfo.length-1];
				var currNode = objInfo.node;
				var nLeft_l = Webcrea.GetLeft(currNode);
				var nLeftPer = Math.floor(nLeft_l/(this.arrStatColInfo.length-1));
				if(isNaN(nLeftPer)) nLeftPer = Webcrea.GetWidth(currNode) + 10;
				var nAddSeq = 0;
				var bFind = false;
				for(var i=0; i<this.arrStatColInfo.length; i++)
				{
					var objInfo = this.arrStatColInfo[i];
					var currNode = objInfo.node;
					nLeft = Webcrea.GetLeft(currNode);
					if(currNode == dropDiv)
					{
						bFind = true;
						if(i>0)	copyDragDiv.style.position = 'absolute';
						copyDragDiv.style.left = nLeft + 'px';
						copyDragDiv.style.top = nTop + 'px';
						copyDragNode.setAttribute('role', chgRole);
						dropArea.insertBefore(copyDragDiv, currNode);
						nAddSeq = i;
					}
					if(bFind)
					{
						nLeft += nLeftPer;
						currNode.style.position = 'absolute';
						currNode.style.left = nLeft + 'px';
					}
				}
				this.SetStatInfo(1, dragInfo.field, dragInfo.title, dragInfo.sort, dragInfo.group, dragInfo.filter, nAddSeq);
			}
		}
		else if(bDropRow || bDropFld)
		{
			var nAddSeq = 0;
			var chgRole='';
			var nAreaHeight = Webcrea.GetHeight(dropArea);
			var arrStatDropInfo = [];
			if(bDropRow)
			{
				chgRole = 'statrow';
				arrStatDropInfo = this.arrStatRowInfo;
			}
			else if(bDropFld)
			{
				chgRole = 'statfld';
				arrStatDropInfo = this.arrStatFldInfo;
			}
			if(!dropDiv)
			{
				if(arrStatDropInfo.length>0)
				{
					var objInfo = arrStatDropInfo[arrStatDropInfo.length-1];
					var currNode = objInfo.node;
					nTop = arrStatDropInfo.length*5;
				}
				copyDragDiv.style.position = 'relative';
				copyDragDiv.style.left = nLeft + 'px';
				copyDragDiv.style.top = nTop + 'px';
				copyDragNode.setAttribute('role', chgRole);
				dropArea.appendChild(copyDragDiv);
			}
			else
			{
				var nTopPer = 5;
				var bFind = false;
				for(var i=0; i<arrStatDropInfo.length; i++)
				{
					var objInfo = arrStatDropInfo[i];
					var currNode = objInfo.node;
					if(currNode == dropDiv)
					{
						bFind = true;
						nTop = i*nTopPer;
						copyDragDiv.style.position = 'relative';
						copyDragDiv.style.left = nLeft + 'px';
						copyDragDiv.style.top = nTop + 'px';
						copyDragNode.setAttribute('role', chgRole);
						dropArea.insertBefore(copyDragDiv, currNode);
						nAddSeq = i;
					}
					if(bFind)
					{
						nTop += nTopPer;
						currNode.style.top = nTop + 'px';
					}
				}
			}
			if(bDropRow)
			{
				var trNode = Webcrea.FindParentNode(dropArea, 'name', 'TR');
				dropArea.style.height = nAreaHeight + nDragHeight + 'px';
				trNode.style.height = nAreaHeight + nDragHeight + 'px';
			}
			if(!dropDiv) nAddSeq = null;
			var mode = 0;
			if(bDropFld) mode = 2;
			this.SetStatInfo(mode, dragInfo.field, dragInfo.title, dragInfo.sort, dragInfo.group, dragInfo.filter, nAddSeq);
		}
		nLeft = 0;
		nTop = 0;
		var bFind = false;
		var objInfo_l = arrStatDragInfo[arrStatDragInfo.length-1];
		var currNode_l = objInfo_l.node;
		var nLeft_l = Webcrea.GetLeft(currNode_l);
		var nLeftPer = Math.floor(nLeft_l/(arrStatDragInfo.length-1));
		if(isNaN(nLeftPer)) nLeftPer = Webcrea.GetWidth(currNode_l) + 10;
		for(var i=0; i<arrStatDragInfo.length; i++)
		{
			var objInfo = arrStatDragInfo[i];
			var currNode = objInfo.node;
			nLeft = Webcrea.GetLeft(currNode);
			if(bFind)
			{
				if(bDragCol) nLeft -= nLeftPer;
				else if(bDragRow || bDragFld) nTop = i*5;
				if(i==0 && bDragCol) currNode.style.position = '';
				currNode.style.left = nLeft + 'px';
				currNode.style.top = nTop + 'px';
			}
			else if(currNode == dragDiv)
			{
				bFind = true;
				dragArea.removeChild(dragDiv);
				arrStatDragInfo.splice(i, 1);
				i--;
			}
		}
		if(bDragRow)
		{
			var nAreaHeight = Webcrea.GetHeight(dragArea);
			var trNode = Webcrea.FindParentNode(dragArea, 'name', 'TR');
			dragArea.style.height = nAreaHeight - nDragHeight + 'px';
			trNode.style.height = nAreaHeight - nDragHeight + 'px';
		}
		this.crossTabObj.InitLayout(false, true);
		this.SetStatCrossTab(this.crossTabObj.divPos);
		this.crossTabObj.Refresh();
	},
	DisplayTabArraw : function() {
		if(this.tabPos == 2 || this.tabPos == 3) return;
		var nTabLeftAdjust = 5;
		var nArrawGroupWidth = 30;
		var nArrawLeftAdjust = 2;
		{
			var nItemGroupWidthR = 0;
			for(var i=0; i<this.arrObject.length; i++)
			{
				var obj = this.arrObject[i];
				var nItemWidth = Webcrea.GetWidth(obj.objItemLabel, true);
				nItemGroupWidthR += nItemWidth;
				nItemGroupWidthR += nArrawLeftAdjust;
				var sText = obj.objItemLabel.textContent;
				if(sText.indexOf('\\n')>0)
				{
					sText = Webcrea.ReplaceAll(sText, '\\n', '<br\>');
					var divNode = Webcrea.FindNode(obj.objItemLabel, 'name', 'DIV');
					var childDivNode = Webcrea.FindNode(divNode, 'name', 'DIV');
					divNode.removeChild(childDivNode);
					var newDiv = document.createElement('div');
					newDiv.setAttribute('style', 'text-align:center;display:table-cell;veritcal-align:middle;');
					newDiv.innerHTML = sText;
					divNode.appendChild(newDiv);
				}
			}
			nItemGroupWidthR += nTabLeftAdjust;
			this.initTabItemsWidth = nItemGroupWidthR;
		}
		var nTabArrawLeft = Webcrea.GetLeft(this.objTabArrawGroup);
		var objTabB = Webcrea.FindNode(this.objGDivPos, 'id', this.divPos+'B');
		var nDivWidth = Webcrea.GetWidth(objTabB);

		var nTabItemGroupWidth = nDivWidth - nTabLeftAdjust;
		var nTabArrawLeft = nDivWidth;
		var nArrawGroupChk = 0;
		if(this.objTabArrawGroup.style.display == 'block') nArrawGroupChk = nArrawGroupWidth;
		if(nDivWidth - nArrawGroupChk - nArrawLeftAdjust < this.initTabItemsWidth)
		{
			this.objTabArrawGroup.style.display = 'block';
			var nTop = Webcrea.GetTop(objTabB);
			var nHeight = Webcrea.GetHeight(this.objTabArrawGroup);
			if(this.tabPos == 1)
			{
				nTop += Webcrea.GetHeight(objTabB);
				nTop += 2;
			}
			else nTop = nTop - nHeight;
			this.objTabArrawGroup.style.top = nTop + 'px';
			nTabItemGroupWidth -= nArrawGroupWidth;
			nTabItemGroupWidth -= nArrawLeftAdjust;
			nTabArrawLeft -= nArrawGroupWidth;
		}
		else
		{
			this.objTabArrawGroup.style.display = 'none';
			this.TabArrawClick();
		}
		this.objTabItemGroup.style.width = nTabItemGroupWidth + 'px';
		this.objTabArrawGroup.style.left = nTabArrawLeft + 'px';
	},
	DisplayRuler : function() {
		var arrRuler = [];
		Webcrea.FindNodeAll(this.objHDivPos, 'role', 'ruler', arrRuler);
		for(var i=0; i<arrRuler.length; i++)
		{
			var rulerNode = arrRuler[i];
			var tdNode = rulerNode.parentNode;
			var width = Webcrea.GetWidth(tdNode, true);
			var left = Webcrea.GetLeft(tdNode);
			rulerNode.style.left = Number(left) + Number(width) - 1 + 'px';
			if(Webcrea.IsMobileScreen() && this.bMyGrid)
			{
				if (Webcrea.IsIE69()) rulerNode.attachEvent('ontouchstart', function(){Webcrea.OnDRAG(window.event);});
				else rulerNode.addEventListener('touchstart', function(){Webcrea.OnDRAG(window.event);}, false);
			}
		}

		if(this.bSortArraw)
		{
			var arrSort = [];
			Webcrea.FindNodeAll(this.objHDivPos, 'role', 'sort', arrSort);
			for(var i=0; i<arrSort.length; i++)
			{
				var sortNode = arrSort[i];
				if(arrSort[i].tagName == 'INPUT' || arrSort[i].tagName == 'BUTTON') continue;
				var tdNode = sortNode.parentNode;
				var width = Webcrea.GetWidth(tdNode, true);
				var left = Webcrea.GetLeft(tdNode);
				sortNode.style.marginLeft = Number(width) - 15 + 'px';
			}
		}
	},
	DisplayScrollAdjust : function()
	{
		var mode = arguments[0];
		if(!this.bMyGrid) return;
		if(!mode)
		{
			if((this.nAutoScroll == 1 || this.nAutoScroll == 2) && this.bInitHScroll && !this.layoutOpt.bVert)
			{
				var objBlind=Webcrea.FindNodePublic(this.objGDivPos,'id',this.objName+'_HScrollBlind');
				if(objBlind && this.IsHScroll()) objBlind.style.display='none';
				else if(objBlind)
				{
					var nHeight1 = Webcrea.GetHeight(this.objDivPos, true);
					var nHeight2 = Webcrea.GetHeight(this.objTable, true);
					var nHeight = nHeight2 - nHeight1;
					if(nHeight>0)
					{
						var nScrlHeight = this.nDataHeight - nHeight;
						objBlind.style.height = nScrlHeight + 'px';
						objBlind.style.display='block';
					}
				}
			}
		}
		else if(mode==1)
		{
			var nLineWidth = 0;
			if(this.objGDivInfo && this.objGDivInfo.bLineWidth>0) nLineWidth = this.objGDivInfo.bLineWidth*2;
			var nVSHeight = Webcrea.GetHeight(this.objDivPos, true);
			var nVSHeight1 = this.objDivPos.scrollWidth;
			var nVSHeight2 = this.objDivPos.clientWidth;
			if(nVSHeight1>nVSHeight2) nVSHeight -= this.nHScrlHeight;
			if(this.objVSGDivPos) this.objVSGDivPos.style.height = nVSHeight + 'px';
			var nAdjust = 0;
			var bHScroll = this.IsHScroll();
			if(bHScroll) nAdjust = this.nBaseScrlSize;
			if(this.objVSDWDivPos)
			{
				let dwTop = nVSHeight - nAdjust - this.nBaseScrlSize;
				this.objVSDWDivPos.style.top = dwTop + 'px';
				if(this.IsVScroll())
				{
					let lastNode = this.objTable.rows[this.objTable.rows.length-1];
					let nLast = Number(lastNode.getAttribute('rowno'));
					let nLastReg = nLast+2;
					if(this.arrRows.length<nLastReg)
					{
						var nScrlThumb = Webcrea.GetHeight(this.objVSTHDivPos);
						var nScrlLast = dwTop;
						var nScrlMaxTop = nScrlLast - nScrlThumb - this.nScrlThumbMargin;
						var nScrlTHTop = Webcrea.GetTop(this.objVSTHDivPos, true);
						if(nScrlTHTop>nScrlMaxTop) this.DisplayScrollPos(nLast);
					}
				}
			}
			if(this.bInitHScroll && this.bMyHScroll && this.objHSGDivPos) this.objHSGDivPos.style.top = nVSHeight - nAdjust + 'px';
		}
	},
	DisplayScroll : function(b, mode) {
		if(!this.IsGrid()) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(mode == 2 && this.bMyGrid)
		{
			var nGWidth = Webcrea.GetWidth(this.objGDivPos, true);
			if(this.IsVScroll() || this.bVScroll)
			{
				var nWidth = Webcrea.GetWidth(this.objDivPos, true);
				if(this.objVSGDivPos) this.objVSGDivPos.style.left = nWidth + this.nScrlLeftAdjust + 'px';
			}
			if((this.IsVScroll() || this.bVScroll) && this.layoutOpt.bHorz != undefined && this.layoutOpt.bHorz)
			{
				var nHeight = Webcrea.GetHeight(this.objDivPos, true);
				if(!this.layoutOpt.bVert || this.objFDivPos)
				{
					var nDWTopOrg = Webcrea.GetTop(this.objVSDWDivPos, true);
					var nVSHeight = nHeight;
					if(this.objVSGDivPos) this.objVSGDivPos.style.height = nVSHeight + 'px';
					var nDWTop = nVSHeight - this.nBaseScrlSize;
					if(this.objVSDWDivPos) this.objVSDWDivPos.style.top = nDWTop + 'px';
				}
			}
			else if(nGWidth==0 && this.initGDivWidth>0) this.OnAdjustGrid(1);
			return;
		}
		if(this.bMyGrid && this.objHSGDivPos && this.bMyHScroll)
		{
			if(!this.bHScroll) this.objHSGDivPos.style.display = 'none';
			else this.objHSGDivPos.style.display = 'block';
		}
		if(this.nAutoScroll && this.bVScroll)
		{
			if(this.bMyGrid)
			{
				if(this.nAutoScroll >= 10) return;
				if(!mode)
				{
					if(!this.objVSGDivPos) return;
					this.objVSGDivPos.style.display = 'none';
					this.objGDivPos.style.width = Webcrea.GetWidth(this.objDivPos, true) + 'px';
					this.initDivWidth += this.nBaseScrlSize;
				}
				else if(mode == 1)
				{
					if(this.IsVScroll())
					{
						if(this.objVSGDivPos && this.objVSGDivPos.style.display != 'block')
						{
							this.objVSGDivPos.style.display = 'block';
							this.objGDivPos.style.width = Webcrea.GetWidth(this.objDivPos, true) + this.nScrlWidth + 2 + 'px';
							this.initDivWidth -= this.nBaseScrlSize;
						}
						this.DisplayScrollThumbSize();
					}
					else if(this.objVSGDivPos && this.objVSGDivPos.style.display != 'none')
					{
						this.objVSGDivPos.style.display = 'none';
						this.objGDivPos.style.width = Webcrea.GetWidth(this.objDivPos, true) + 'px';
						this.initDivWidth += this.nBaseScrlSize;
					}
				}
			}
			else this.objDivPos.style.overflowY = 'auto';
			if((this.nAutoScroll == 1 || this.nAutoScroll == 2) && this.bInitHScroll)
			{
				if(!this.bMyHScroll) this.objDivPos.style.overflowX = 'auto';
				this.DisplayScrollAdjust();
			}
		}
		else if(nFileVersion>=7020180809001 && !this.nAutoScroll && this.bInitHScroll && !this.bHScroll && !this.IsHScroll())
		{
			this.objDivPos.style.overflowX = 'scroll';
			if(this.bMyGrid)
			{
				var clientHeight = Webcrea.GetHeight(this.objDivPos, true);
				if(this.objVSGDivPos)
				{
					if(!this.bVScroll) this.objVSGDivPos.style.display = 'none';
					else this.objVSGDivPos.style.display = 'block';
					this.objVSGDivPos.style.height = clientHeight + 'px';
					this.objVSDWDivPos.style.top = (clientHeight-(this.nScrlWidth-1)) + 'px';
				}
				if(this.bMyHScroll) this.objDivPos.style.overflowX = 'hidden';
			}
		}
		else
		{
			if(!Webcrea.IsEmpty(b)) this.bVScroll = b;
			if(this.bMyGrid)
			{
				if(!this.objVSGDivPos) return;
				if(!this.bVScroll) this.objVSGDivPos.style.display = 'none';
				else this.objVSGDivPos.style.display = 'block';
			}
			else
			{
				if(!this.bVScroll && !Webcrea.IsMobileScreen())
				{
					if(this.IsList())
					{
						var widthOrg_b = Webcrea.GetWidth(this.objDivPos, true);
						this.objDivPos.style.overflowY = 'hidden';
						var widthOrg = Webcrea.GetWidth(this.objDivPos, true);
						var widthTableOrg = Webcrea.GetWidth(this.objTable, true);
						if(widthOrg_b<widthTableOrg && !this.IsHScroll()) widthOrg = widthTableOrg;
						var diff = widthOrg - widthOrg_b;
						this.objGDivPos.style.width = Webcrea.GetWidth(this.objGDivPos, true) - diff + 'px';
					}
					else this.objDivPos.style.overflowY = 'hidden';
				}
				else
				{
					if(nFileVersion>=7020210202001 && this.IsList() && this.bVScroll && !this.bAutoHeight) this.objDivPos.style.overflowY = 'scroll';
					else this.objDivPos.style.overflowY = 'auto';
					if(Webcrea.IsMobile() && this.IsList()) this.objTable.style.width = Webcrea.GetWidth(this.objDivPos, true) + 'px';
				}
			}
			if((this.nAutoScroll == 1 || this.nAutoScroll == 2) && (this.bInitHScroll || this.bHScroll))
			{
				if(!this.bMyHScroll) this.objDivPos.style.overflowX = 'auto';
			}
			else if(!this.bHScroll) this.objDivPos.style.overflowX = 'hidden';
		}
	},
	DisplayScrollPos : function()
	{
		if(!this.bMyGrid) return;
		var nRowPos = arguments[0];
		var nScrlThumb = Webcrea.GetHeight(this.objVSTHDivPos);
		if(!nScrlThumb) nScrlThumb = this.DisplayScrollThumbSize();
		var nScrlLast = Webcrea.GetTop(this.objVSDWDivPos, true);
		var nScrlMaxTop = nScrlLast - nScrlThumb - 2;
		var nTop = 0;
		var bFirst = false, bLast = false;
		var firstNode = this.objTable.rows[this.nHeader+(this.vLock*this.nDataRowReal)];
		var lastNode = this.objTable.rows[this.objTable.rows.length-1];
		if(firstNode)
		{
			var nFirst = Number(firstNode.getAttribute('rowno'));
			if(nFirst == 0) bFirst = true;
		}
		if(!bFirst && lastNode)
		{
			var nLast = Number(lastNode.getAttribute('rowno'));
			if(nLast == this.arrRows.length) bLast = true;
		}
		if(bFirst) nTop = this.initVScrlTHTop;
		else if(bLast) nTop = nScrlMaxTop;
		else if(nRowPos > (this.arrRows.length-(this.nRowsPage/this.nDataRowReal))) nTop = nScrlMaxTop;
		else
		{
			var nScrlMinTop = this.initVScrlTHTop;
			let nRowsPage = this.nRowsPage;
			if(this.bLastRowAdjust) nRowsPage -= 1;
			nTop = ((nRowPos)/(this.arrRows.length-(nRowsPage/this.nDataRowReal)))*(nScrlMaxTop-nScrlMinTop)+nScrlMinTop;
			if(nTop > nScrlMaxTop) nTop = nScrlMaxTop;
			if(nRowPos==0) nTop = nScrlMinTop;
		}
		this.objVSTHDivPos.style.top = nTop + 'px';
	},
	DisplayScrollThumbSize : function()
	{
		var bHScroll = arguments[0];
		var bRePosition = arguments[1];
		if(bHScroll)
		{
			var nDivWidth = Webcrea.GetWidth(this.objDivPos, true);
			var nTableWidth = Webcrea.GetWidth(this.objTable, true);
			var nDiffWidth = nTableWidth - nDivWidth;
			var nHScrlThumb = 0;
			if(nDiffWidth>0)
			{
				var nScrlWidth = Webcrea.GetWidth(this.objHSTRDivPos);
				var nLFScrlWidth = Webcrea.GetWidth(this.objHSLFDivPos);
				nScrlWidth -= nLFScrlWidth*2;
				nScrlWidth -= this.nScrlThumbMargin*2;
				nHScrlThumb = Math.floor(nDivWidth*nScrlWidth/nTableWidth);
				this.objHSTHDivPos.style.width = nHScrlThumb + 'px';
			}
			else nHScrlThumb = Webcrea.GetHeight(this.objHSTHDivPos);

			if(bRePosition)
			{
				let scrollWidth = Webcrea.GetWidth(this.objTable, true);
				let gridSize = nDivWidth;
				let thumbSize = nHScrlThumb;
				let scrollSize = scrollWidth - gridSize;
				let minPos = Webcrea.GetLeft(this.objHSLFDivPos) + this.nBaseScrlSize + this.nScrlThumbMargin;
				let maxPos = Webcrea.GetLeft(this.objHSRGDivPos) - thumbSize - this.nScrlThumbMargin;
				let trackSize = maxPos - minPos;
				nScrollMove = this.objDivPos.scrollLeft;
				let nScrollBarMove = Math.floor((nScrollMove*trackSize)/scrollSize) + minPos;
				if(nScrollBarMove<minPos) nScrollBarMove = minPos;
				if(nScrollBarMove>maxPos) nScrollBarMove = maxPos;
				this.objHSTHDivPos.style.left = nScrollBarMove + 'px';
			}
			return nHScrlThumb;
		}
		else
		{
			if(!this.arrRows) return;
			var nRowAll = this.arrRows.length;
			var nScrlFirst = Webcrea.GetTop(this.objVSUPDivPos, true) + this.nBaseScrlSize;
			var nScrlLast = Webcrea.GetTop(this.objVSDWDivPos, true);
			var nScrlHeight = nScrlLast - nScrlFirst;
			nScrlHeight -= this.nScrlThumbMargin*2;
			let nRowsPage=this.nRowsPage-this.nSumRow;
			if(this.bLastRowAdjust) nRowsPage -= 1;
			var nScrlThumb = Math.floor(nScrlHeight/nRowAll*nRowsPage);
			nScrlThumb = Math.floor(nScrlThumb/this.nDataRow);
			if(nScrlHeight<nScrlThumb) nScrlThumb = nScrlHeight;
			if(nScrlThumb<0) nScrlThumb = 15;
			this.objVSTHDivPos.style.height = nScrlThumb + 'px';
			return nScrlThumb;
		}
	},
	MoveSwipe : function(mode, nPos)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(!this.bMyGrid) return;
		if(this.objTable.rows.length<=this.nHeader) return;
		var nAdjustRow = 0;
		if(this.nSumRow>0 && this.nRowsScrl<(this.objTable.rows.length-this.nHeader))
		{
			if(this.nSumHeight>this.nDataHeight) nAdjustRow += Math.ceil(this.nSumHeight/this.nDataHeight);
			else if(nFileVersion<7020191004001) nAdjustRow = 1;
		}
		var firstNode = this.objTable.rows[this.nHeader];
		var nFirst = Number(firstNode.getAttribute('rowno'));
		var lastNode = this.objTable.rows[this.objTable.rows.length-1];
		var nLast = Number(lastNode.getAttribute('rowno'));
		var lastNodeAdjust = this.objTable.rows[this.objTable.rows.length-1-nAdjustRow];
		var nLastAdjust = Number(lastNodeAdjust.getAttribute('rowno'));
		var nData = this.arrRows.length - nLastAdjust;
		if(nPos<0) nPos *= -1;
		var nAdd = Math.ceil(nPos/this.nDataHeight);
		var bDir = true;
		if(mode == 2) bDir = false;

		if(!bDir)
		{
			if(nData<=0) return;
			if(nAdd>nData) nAdd = nData;
		}
		else
		{
			var nDivTop = Webcrea.GetTop(this.objDivPos);
			var nFirstTop = Webcrea.GetTop(firstNode) - nDivTop;
			if(nFirst<=0 && nFirstTop>=this.nHeaderHeight)
			{
				this.DisplayScrollPos(0);
				this.DisplayCodeButton();
				this.DisplayScrlArrow();
				return;
			}
			if(nAdd>nFirst) nAdd = nFirst;
		}
		for(var i=0; i<nAdd; i++)
		{
			if(bDir)
			{
				for(var j=0; j<this.nDataRow; j++) this.objTable.deleteRow(this.objTable.rows.length-1);
				var nInsertPos = this.nInsertPos;
				this.nInsertPos = 1;
				if(nFirst>0) this.AppendRow();
				this.nInsertPos = nInsertPos;
			}
			else
			{
				for(var j=0; j<this.nDataRow; j++) this.objTable.deleteRow(this.nHeader);
				var nInsertPos = this.nInsertPos;
				this.nInsertPos = 2;
				this.InsertRow();
				this.nInsertPos = nInsertPos;
			}
		}
		this.DisplayScrollPos(nAdd+nFirst);
		this.DisplayCodeButton();
		this.DisplayScrlArrow();
		if(this.IsGrid() && this.relObj && this.relObj.IsPageScroll())
		{
			var firstNode = this.objTable.rows[this.nHeader];
			var nFirst = 0;
			if(firstNode) nFirst = Number(firstNode.getAttribute('rowno'));
			this.relObj.DisplayPageScroll(nFirst);
		}
	},
	MoveScrollMySelectBox : function()
	{
		var mode = arguments[0];
		var selectBoxObj = Webcrea.arrSelectBox[0];
		var dlNode = selectBoxObj.dlNode;
		var ulNode = Webcrea.FindNodePublic(dlNode, 'name', 'UL');
		var selectNode = selectBoxObj.selectNode;
		if(selectNode)
		{
			var nextNode;
			if(mode==6) nextNode = selectNode.previousSibling;
			else nextNode = selectNode.nextElementSibling;
			if(!nextNode)
			{
				if(mode==6) ulNode.scrollTop = 0;
				return;
			}
			else
			{
				while(nextNode.style.display == 'none')
				{
					if(mode==6) nextNode = nextNode.previousSibling;
					else nextNode = nextNode.nextElementSibling;
					if(!nextNode)
					{
						if(mode==6) ulNode.scrollTop = 0;
						return;
					}
				}
				selectNode.removeAttribute('select');
				selectNode = nextNode;
			}
			selectNode.removeAttribute('select');
		}
		else selectNode = selectBoxObj.arrLi[0];
		if(selectNode)
		{
			selectNode.setAttribute('select', 'select');
			selectBoxObj.selectNode = selectNode;
			var nRootHeight = Webcrea.GetHeight(ulNode, true);
			var nHeight = Webcrea.GetHeight(selectNode);
			var nTop = Webcrea.GetTop(selectNode);
			var currTop = ulNode.scrollTop;
			if(mode==6)
			{
				if(nTop<nHeight*2)
				{
					currTop -= nHeight;
					ulNode.scrollTop = currTop;
				}
			}
			else if(nTop>nRootHeight-nHeight)
			{
				currTop += nHeight;
				ulNode.scrollTop = currTop;
			}
		}
	},
	MoveHScroll : function(mode, nPos, bDrag) {
		let nFileVersion = Webcrea.GetCurrFileVersion();
		let scrollWidth = Webcrea.GetWidth(this.objTable, true);
		let gridSize = Webcrea.GetWidth(this.objDivPos, true);
		let thumbSize = Webcrea.GetWidth(this.objHSTHDivPos);
		let minPos = Webcrea.GetLeft(this.objHSLFDivPos) + this.nBaseScrlSize + this.nScrlThumbMargin;
		let maxPos = Webcrea.GetLeft(this.objHSRGDivPos) - thumbSize - this.nScrlThumbMargin;
		let trackSize = maxPos - minPos;
		let scrollSize = scrollWidth - gridSize;
		if(bDrag)
		{
			let nPosGrid = Math.floor((scrollSize*nPos)/trackSize);
			let initObjX = Webcrea.objDragPublic.startObjX;
			let initScrollX = Webcrea.objDragPublic.startScrollX;

			let nScrollBarMove = nPos + initObjX;
			let nScrollMove = nPosGrid + initScrollX;

			if(nScrollMove<0) nScrollMove = 0;
			if(nScrollBarMove<minPos) nScrollBarMove = minPos;
			if(nScrollBarMove>maxPos) nScrollBarMove = maxPos;

			this.objDivPos.scrollLeft = nScrollMove;
			this.objHSTHDivPos.style.left = nScrollBarMove + 'px';
		}
		else if(mode==5 || mode==6)
		{
			let currScrollLeft = this.objDivPos.scrollLeft;
			let line = 1;
			let colWidth = 0;
			let nHeader = 0;
			if(this.objTable.rows[this.nHeader]) nHeader = this.nHeader;
			for(let j=0; j<this.objTable.rows[nHeader].cells.length; j++)
			{
				let colNode = this.objTable.rows[nHeader].cells[j];
				let colNodeWidth = Webcrea.GetWidth(colNode, true);
				colWidth += colNodeWidth;
				colWidth += line;
				if(mode == 5)
				{
					if(currScrollLeft<colWidth) break;
				}
				else if(mode ==6)
				{
					if(currScrollLeft<=colWidth)
					{
						colWidth -= colNodeWidth;
						colWidth -= line;
						break;
					}
				}
			}
			let nScrollMove = colWidth;
			let nScrollBarMove = Math.floor((nScrollMove*trackSize)/scrollSize) + minPos;
			if(nScrollMove<0) nScrollMove = 0;
			if(nScrollBarMove<minPos) nScrollBarMove = minPos;
			if(nScrollBarMove>maxPos) nScrollBarMove = maxPos;
			this.objDivPos.scrollLeft = nScrollMove;
			this.objHSTHDivPos.style.left = nScrollBarMove + 'px';
		}
		else if(mode==7 || mode==8)
		{
			let thumbLeft = Webcrea.GetLeft(this.objHSTHDivPos);
			let nScrollBarMove = 0;
			if(mode==7) nScrollBarMove = thumbLeft + thumbSize;
			else if(mode==8) nScrollBarMove = thumbLeft - thumbSize;
			nScrollMove = Math.floor((nScrollBarMove - minPos)*scrollSize/trackSize);
			if(nScrollMove<0) nScrollMove = 0;
			if(nScrollBarMove<minPos) nScrollBarMove = minPos;
			if(nScrollBarMove>maxPos) nScrollBarMove = maxPos;
			this.objDivPos.scrollLeft = nScrollMove;
			this.objHSTHDivPos.style.left = nScrollBarMove + 'px';
		}
		this.DisplayHScrlArrow();
	},
	MoveScroll : function(mode, nPos, bDrag) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(!this.bMyGrid)
		{
			if(this.IsList() && (mode >= 3 && mode <= 6))
			{
				var nScrlTop = this.nDataHeight;
				var nDisplayRows = this.GetDisplayRows();
				var nSelectRow = Math.floor(this.GetCurrRowIndex()/this.nDataRow);
				if(this.objSelRow) nSelectRow = Number(this.objSelRow.getAttribute('rowno'));
				nSelectRow *= this.nDataRow;
				if(mode == 3)
				{
					nScrlTop *= this.nRowsPage;
					var nCurrScrlTop = this.objDivPos.scrollTop;
					nCurrScrlTop += nScrlTop;
					this.objDivPos.scrollTop = nCurrScrlTop;
				}
				else if(mode == 4)
				{
					nScrlTop *= this.nRowsPage;
					var nCurrScrlTop = this.objDivPos.scrollTop;
					nCurrScrlTop -= nScrlTop;
					if(nCurrScrlTop<0) nCurrScrlTop = 0;
					this.objDivPos.scrollTop = nCurrScrlTop;
				}
				else if(mode == 5)
				{
					nSelectRow += this.nDataRow;
					var nLastRowNo = Math.floor(this.objDivPos.scrollTop/nScrlTop)*this.nDataRow + nDisplayRows;
					if(nLastRowNo <= nSelectRow+1) this.objDivPos.scrollTop += nScrlTop;
				}
				else if(mode == 6)
				{
					nSelectRow -= this.nDataRow;
					if(nSelectRow<0) nSelectRow = 0;
					var nFirstRowNo = Math.floor(this.objDivPos.scrollTop/nScrlTop)*this.nDataRow;
					if(nFirstRowNo>0 && nFirstRowNo >= nSelectRow+1) this.objDivPos.scrollTop -= nScrlTop;
					else if(nFirstRowNo==0 && nSelectRow==0) this.objDivPos.scrollTop=0;
				}
				if(mode==5 || mode==6) this.Select(nSelectRow, true);
			}
			return;
		}
		if(this.objTable.rows.length<=this.nHeader) return;
		var firstNode = this.objTable.rows[this.nHeader+(this.vLock*this.nDataRow)];
		var nFirst = Number(firstNode.getAttribute('rowno'));
		var lastNode = this.objTable.rows[this.objTable.rows.length-1];
		var nLast = Number(lastNode.getAttribute('rowno'));
		var nAdjustRow = 0;
		if(this.nSumRow>0 && this.nRowsScrl<(this.objTable.rows.length-this.nHeader))
		{
			if(this.nSumHeight>this.nDataHeight) nAdjustRow += Math.ceil(this.nSumHeight/this.nDataHeight);
			else
			{
				if(nFileVersion>=7020191004001)
				{
					var dwEnableStatus = this.objVSDWDivPos.getAttribute('enable_status');
					if(dwEnableStatus == 'true')
					{
						if(mode == 3)
						{
							var nLastBottom = Webcrea.GetBottom(lastNode);
							if(this.arrTableSum.length>0)
							{
								var nSumTop = Webcrea.GetTop(this.objFDivPos);
								if(nLastBottom>nSumTop) nAdjustRow = 1;
							}
						}
						else nAdjustRow = 1;
					}
				}
				else nAdjustRow = 1;
			}
		}
		var lastNodeAdjust = this.objTable.rows[this.objTable.rows.length-1-nAdjustRow];
		var nLastAdjust = Number(lastNodeAdjust.getAttribute('rowno'));
		var nData = this.arrRows.length - nLastAdjust;

		var nScrlTHHeight = Webcrea.GetHeight(this.objVSTHDivPos, true);
		nScrlTHHeight += 2;
		var nScrlTHTop = Webcrea.GetTop(this.objVSTHDivPos, true);
		var nScrlFirst = Webcrea.GetTop(this.objVSUPDivPos, true) + this.nBaseScrlSize;
		var nScrlLast = Webcrea.GetTop(this.objVSDWDivPos, true);

		var nScrlMinTop = this.initVScrlTHTop;
		var nScrlMaxTop = nScrlLast - nScrlTHHeight - this.nScrlThumbMargin;
		if(mode == 5 || mode == 6)
		{
			if(this.objSelRow)
			{
				var nSelectRow = Number(this.objSelRow.getAttribute('rowno'));
				if(nSelectRow+this.vLock<nFirst || nLast<nSelectRow+this.vLock)
				{
					var nJump = nSelectRow;
					this.DisplayPublic(true, nJump);
					this.MoveScroll(mode, nPos);
					if(mode == 5) this.objVSTHDivPos.style.top = nScrlMaxTop + 'px';
					else if(mode == 6) this.objVSTHDivPos.style.top = nScrlMinTop + 'px';
					return;
				}
			}
		}

		var bDir = true;
		if(mode == 2 || mode == 4 || mode == 6) bDir = false;

		if(bDir)
		{
			if(this.objVSDWDivPos.getAttribute('enable_status')=='false')
			{
				if(mode==5)
				{
					if(this.objSelRow == lastNode) return;
				}
				else return;
			}
			var nSel = this.GetCurrRowIndex()+this.nDataRow;
			var nSelChk = Math.floor(nSel/this.nDataRow);
			var nDisplayRows = this.GetDisplayRowsByInfo();
			nDisplayRows = Math.floor(nDisplayRows/this.nDataRow);

			nDisplayRows-=nAdjustRow;
			if(this.bLastRowAdjust) nDisplayRows-=1;
			if(mode == 5)
			{
				let nSelDataChk = Number(this.objSelRow.getAttribute('rowno'));
				if(nSelDataChk == this.arrRows.length-1) return;
				if(nSelChk<nDisplayRows)
				{
					var bLastRowMove = false;
					if(this.bLastRowAdjust)
					{
						var lastNodeBefore = this.objTable.rows[this.objTable.rows.length-this.nDataRowReal*2];
						var nLastBefore = Number(lastNodeBefore.getAttribute('rowno'));
						if(nSelDataChk == nLastBefore) bLastRowMove = true;
					}
					if(!bLastRowMove)
					{
						this.Select(nSel);
						return;
					}
				}
			}
		}
		else
		{
			if(this.objVSUPDivPos.getAttribute('enable_status')=='false')
			{
				if(mode==6)
				{
					if(this.objSelRow == firstNode) return;
				}
				else return;
			}
			var nSel = this.GetCurrRowIndex()-this.nDataRow;
			if(nFirst <= this.vLock || (mode == 6 && nSel>=0))
			{
				if(mode == 6 && nSel>=0) this.Select(nSel);
				if(mode != 6) this.objVSTHDivPos.style.top = nScrlMinTop + 'px';
				return;
			}
		}

		var bLastScrl = false;
		var nAdd = 0;
		var nScrlCnt = 0, nScrlHeight = 0, nScrlPer = 0, nMove = 0;
		if(nPos)
		{
			nMove = nPos;
			nMove += nScrlTHTop;
			var nCurr = this.GetRowDataNoByScrollPos(nMove);
			nScrlHeight = nScrlLast - nScrlTHTop - nScrlTHHeight - 2;
			if(nPos>nScrlHeight) nAdd = nData;
			else nAdd = nCurr-nFirst-1;
			if(nData <= nAdd) nAdd = nData;
			if(!bDir)
			{
				nAdd = nAdd*-1;
				if(nAdd>(nFirst-this.vLock)) nAdd = nFirst-this.vLock;
				if(nCurr==1) nMove = nScrlMinTop;
			}
			if(nAdd<0) nAdd = 0;
			else if(nAdd == 0 && bDir) nAdd = 1;
		}
		else
		{
			nAdd = 1;
			if(mode == 3 || mode == 4) nAdd = this.nRowsScrl;
			if(bDir)
			{
				if(nData <= nAdd)
				{
					nAdd = nData;
					bLastScrl = true;
				}
			}
			else
			{
				if(nAdd > nFirst) nAdd = nFirst;
				if(!nData) bLastScrl = true;
			}

			if(bDir)
			{
				nScrlHeight = nScrlLast - nScrlTHTop - nScrlTHHeight - 2;
				if(mode == 1 || mode == 5) nScrlCnt = nData;
				else nScrlCnt = Math.ceil(nData/this.nRowsScrl);
			}
			else
			{
				nScrlHeight = nScrlTHTop - nScrlFirst;
				nScrlHeight -= 2;
				if(mode == 2 || mode == 6) nScrlCnt = nFirst;
				else nScrlCnt = Math.ceil(nFirst/this.nRowsScrl);
			}
			nMove = Math.floor(nScrlHeight/nScrlCnt);
			if(!this.nMoveDown) this.nMoveDown=0;
			if(!this.nMoveUp) this.nMoveUp=0;
			if(nMove==0)
			{
				if(mode == 1 || mode == 5)
				{
					this.nMoveDown += nScrlHeight/nScrlCnt;
					nMove = Math.floor(this.nMoveDown);
				}
				else if(mode == 2 || mode == 6)
				{
					this.nMoveUp += nScrlHeight/nScrlCnt;
					nMove = Math.floor(this.nMoveUp);
				}
			}
			if(nMove>0)
			{
				this.nMoveDown = 0;
				this.nMoveUp = 0;
			}
			if(!bDir) nMove *= -1;
			nMove += nScrlTHTop;
		}
		if(nMove < nScrlMinTop) nMove = nScrlMinTop;
		if(nMove > nScrlMaxTop) nMove = nScrlMaxTop;
		this.objVSTHDivPos.style.top = nMove + 'px';

		/*grid delete, insert*/
		var nJump = 0;
		if(nAdd > this.nRowsScrl)
		{
			var n = this.nRowsScrl + (nAdd%this.nRowsScrl);
			nJump = nAdd-n;
			nAdd = n;
		}
		if(!this.bMoveScrolling) this.MoveScrollSub(mode, bDrag, nAdd, bDir, nFirst, nJump, nLastAdjust);
		else
		{
			if(nJump==0) return;
			if(!this.arrMoveScroll) this.arrMoveScroll = [];
			var func = this.objName + '.MoveScrollSub(' + mode + ',' + bDrag + ',' + nAdd + ',' + bDir + ',' + nFirst + ',' + nJump + ',' + nLastAdjust + ')';
			this.arrMoveScroll[this.arrMoveScroll.length] = func;
		}
	},
	MoveScrollFirst : function()
	{
		this.MoveScrollJump(0);
	},
	MoveScrollLast : function()
	{
		var nLast = this.arrRows.length;
		this.MoveScrollJump(nLast);
	},
	MoveScrollPage : function()
	{
		var mode = arguments[0];
		var firstNode = this.objTable.rows[this.nHeader+(this.vLock*this.nDataRowReal)];
		var nMoveDataRowNo = Number(this.GetCurrRowDataNo(firstNode));
		var nRowsPage = this.nRowsScrl;
		nRowsPage = Math.floor(nRowsPage/this.nDataRowReal);
		if(mode==3) nMoveDataRowNo = nMoveDataRowNo + nRowsPage;
		else if(mode==4) nMoveDataRowNo = nMoveDataRowNo - nRowsPage;
		if(nMoveDataRowNo<0) nMoveDataRowNo = 0;
		else if(nMoveDataRowNo>this.arrRows.length) nMoveDataRowNo = this.arrRows.length;
		this.MoveScrollJump(nMoveDataRowNo);
	},
	MoveScrollJump : function()
	{
		var nJump = arguments[0];
		if(this.moveScrollTimeout)
		{
			this.arrMoveScroll = [];
			clearTimeout(this.moveScrollTimeout);
		}
		this.MoveScrollClose();
		var nRowsPage = Math.floor(this.nRowsScrl/this.nDataRowReal);
		if(this.IsListTreeGrid())
		{
			nRowsPage = this.GetDisplayRowsByListTreeGrid(nJump);
		}
		var nRowsPageHalf = Math.floor(nRowsPage/2);
		nJump += nRowsPageHalf;
		this._Set_RowNo(nJump, null, true);
	},
	MoveScrollSub : function()
	{
		this.bMoveScrolling = true;
		var mode = arguments[0];
		var bDrag = arguments[1];
		var nAdd = arguments[2];
		var bDir = arguments[3];
		var nFirst = arguments[4];
		var nJump = arguments[5];
		var nLastAdjust = arguments[6];
		var i = arguments[7];
		if(!i) i = 0;
		if(nAdd>i)
		{
			if(!bDir)
			{
				for(var j=0; j<this.nDataRow; j++)
				{
					var nDelRow = this.objTable.rows.length-1;
					var currTrNode = this.objTable.rows[nDelRow];
					var dataRowNo = this.GetCurrRowDataNo(currTrNode);
					if(Webcrea.bGroupCellMerge && this.arrGroupCell)
					{
						for(let iG=0; iG<this.arrGroupCell.length; iG++)
						{
							var data = this.GetValueByData(this.arrGroupCell[iG], dataRowNo);
							var groupInfo = this.GetGroupInfo(this.arrGroupCell[iG], dataRowNo, data);
							groupInfo.rowSpan--;
							if(groupInfo.rowSpan<0) groupInfo.rowSpan = 1;
						}
					}
					if(this.objTable.rows.length>nDelRow) this.objTable.deleteRow(nDelRow);
				}
				var nInsertPos = this.nInsertPos;
				this.nInsertPos = 1;/*append*/
				if(nJump>0)
				{
					nJump = nFirst - nJump;
					this.AppendRow(null, nJump);
					nJump=0;
				}
				else this.AppendRow();
				this.nInsertPos = nInsertPos;
			}
			else
			{
				for(var j=0; j<this.nDataRow; j++)
				{
					var nDelRow = this.nHeader+(this.vLock*this.nDataRow);
					var currTrNode = this.objTable.rows[nDelRow];
					var nextTrNode = this.objTable.rows[nDelRow+1];
					var dataRowNo = this.GetCurrRowDataNo(currTrNode);
					if(Webcrea.bGroupCellMerge && this.arrGroupCell)
					{
						for(let iG=0; iG<this.arrGroupCell.length; iG++)
						{
							var data = this.GetValueByData(this.arrGroupCell[iG], dataRowNo);
							var groupInfo = this.GetGroupInfo(this.arrGroupCell[iG], dataRowNo, data);
							groupInfo.rowSpan--;
							if(groupInfo.rowSpan<0) groupInfo.rowSpan = 1;
							if(currTrNode && nextTrNode && currTrNode.cells.length > nextTrNode.cells.length)
							{
								var groupCellIndex = groupInfo.cellIndex;
								var groupCell = currTrNode.cells[groupCellIndex];
								groupCell.rowSpan = groupInfo.rowSpan;
								if(groupCellIndex<currTrNode.cells.length-1)
								{
									var nextCellNode = nextTrNode.cells[groupCellIndex];
									nextTrNode.insertBefore(groupCell, nextCellNode);
								}
								else nextTrNode.appendChild(groupCell);
								let multiLineDiv=Webcrea.FindNodePublic(groupCell,'role','multiline');
								let nHeight = Webcrea.GetHeight(groupCell);
								multiLineDiv.style.maxHeight = nHeight + 'px';
							}
						}
					}
					this.objTable.deleteRow(nDelRow);
				}
				var nInsertPos = this.nInsertPos;
				this.nInsertPos = 2;/*insert*/
				if(nJump>0)
				{
					nJump += nLastAdjust;
					this.InsertRow(true, null, nJump);
					nJump=0;
				}
				else this.InsertRow();
				this.nInsertPos = nInsertPos;
			}
		}
		if(++i<nAdd)
		{
			var func = this.objName + '.MoveScrollSub(' + mode + ',' + bDrag + ',' + nAdd + ',' + bDir + ',' + nFirst + ',' + nJump + ',' + nLastAdjust + ',' + i + ')';
			this.moveScrollTimeout = setTimeout(func);
		}
		else
		{
			if(this.arrMoveScroll && this.arrMoveScroll.length>0)
			{
				var func = this.arrMoveScroll[this.arrMoveScroll.length-1];
				this.arrMoveScroll = [];
				setTimeout(func);
			}
			else this.MoveScrollClose(mode, bDrag);
		}
	},
	MoveScrollClose : function()
	{
		var mode = arguments[0];
		var bDrag = arguments[1];
		if(mode == 5 || mode == 6)
		{
			if(mode == 5) this.currRowIndex_B = this.GetCurrRowIndex()-this.nDataRow;
			else if(mode == 6) this.currRowIndex_B = this.GetCurrRowIndex()+this.nDataRow;
			this.Select(this.GetCurrRowIndex());
		}
		else if(mode == 1 || mode == 2)
		{
			var dataRowNo = this.objSelInfo.dataRowNo;
			var nRow = this.GetRowNo(dataRowNo);
			if(nRow>=0)
			{
				this.SetCurrRowInfo(nRow, dataRowNo);
				this.currRowIndex = nRow;
				if(Webcrea.IsIE() && this.objSelCol) this.objSelCol.focus();
			}
		}
		this.DisplayCodeButton();
		this.DisplayScrlArrow();
		var firstNode = this.objTable.rows[this.nHeader];
		var nFirst = 0;
		if(firstNode) nFirst = Number(firstNode.getAttribute('rowno'));
		if(this.IsGrid() && this.relObj && this.relObj.IsPageScroll())
		{
			this.relObj.DisplayPageScroll(nFirst);
		}
		if(!bDrag) this.DisplayScrollPos(nFirst);
		else if(mode == 2 && nFirst==0)	this.DisplayScrollPos(nFirst);
		this.bMoveScrolling = false;
	},
	DisplayHScrlArrow : function()
	{
		if(!this.bMyHScroll || !this.IsHScroll()) return;
		let bEnable = false;
		if(this.objHSTHDivPos.style.display == 'block') bEnable = true;
		if(!bEnable)
		{
			this.objHSLFDivPos.setAttribute('enable_status', 'false');
			this.objHSLFADivPos.style.borderColor = 'transparent #A3A3A3 transparent transparent';

			this.objHSRGDivPos.setAttribute('enable_status', 'false');
			this.objHSRGADivPos.style.borderColor = 'transparent transparent transparent #A3A3A3';
		}
		else
		{
			let thumbSize = Webcrea.GetWidth(this.objHSTHDivPos);
			let minPos = Webcrea.GetLeft(this.objHSLFDivPos) + this.nBaseScrlSize + this.nScrlThumbMargin;
			let maxPos = Webcrea.GetLeft(this.objHSRGDivPos) - thumbSize - this.nScrlThumbMargin;
			let nLeft = Webcrea.GetLeft(this.objHSTHDivPos, true);
			let bFirst = false, bLast = false;
			if(minPos>=nLeft) bFirst = true;
			if(maxPos<=nLeft) bLast = true;
			if(bFirst)
			{
				this.objHSLFDivPos.setAttribute('enable_status', 'false');
				this.objHSLFADivPos.style.borderColor = 'transparent #A3A3A3 transparent transparent';
			}
			else
			{
				this.objHSLFDivPos.setAttribute('enable_status', 'true');
				this.objHSLFADivPos.style.borderColor = 'transparent #505050 transparent transparent';
			}
			if(bLast)
			{
				this.objHSRGDivPos.setAttribute('enable_status', 'false');
				this.objHSRGADivPos.style.borderColor = 'transparent transparent transparent #A3A3A3';
			}
			else
			{
				this.objHSRGDivPos.setAttribute('enable_status', 'true');
				this.objHSRGADivPos.style.borderColor = 'transparent transparent transparent #505050';
			}
		}
	},
	DisplayScrlArrow : function() {
		if(!this.objVSUPADivPos || !this.objVSDWADivPos || !this.objVSTHDivPos) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var firstNode = this.objTable.rows[this.nHeader+(this.vLock*this.nDataRow)];
		var lastNode = this.objTable.rows[this.objTable.rows.length-1];
		var nFirst = 0, nLast = 0;
		if(firstNode)
		{
			nFirst = Number(firstNode.getAttribute('rowno'));
			nLast = Number(lastNode.getAttribute('rowno'));
		}
		if(nFirst == this.vLock)
		{
			this.objVSUPDivPos.setAttribute('enable_status', 'false');
			this.objVSUPADivPos.style.borderColor = 'transparent transparent #A3A3A3 transparent';
		}
		else
		{
			this.objVSUPDivPos.setAttribute('enable_status', 'true');
			this.objVSUPADivPos.style.borderColor = 'transparent transparent #505050 transparent';
		}

		var bVScroll = false;
		if(this.arrRows && (this.arrRows.length*this.nDataRowReal) >= (this.nRowsPage-this.nSumRow))
		{
			let nAddChk = 0;
			if(this.bLastRowAdjust) nAddChk = 1;
			if((this.arrRows.length*this.nDataRowReal) == (this.nRowsPage-this.nSumRow-nAddChk)) bVScroll = this.IsVScroll(true);
			else bVScroll = true;
		}
		var bEnable = false;
		var nDataRows = this.arrRows?this.arrRows.length:0;
		if(this.IsListTreeGrid() || !this.bLastRowAdjust) nDataRows -= 1;
		if(this.arrRows && nLast>0 && (nLast-this.nSumRow)<nDataRows && bVScroll)
		{
			bEnable = true;
			if(nFileVersion>=7020191004001)
			{
				var nLastBottom = Webcrea.GetBottom(lastNode);
				if(this.arrTableSum.length>0)
				{
					var nSumTop = Webcrea.GetTop(this.objFDivPos);
					if(nLastBottom<nSumTop) bEnable = false;
				}
			}
		}
		if(!bEnable)
		{
			this.objVSDWDivPos.setAttribute('enable_status', 'false');
			this.objVSDWADivPos.style.borderColor = '#A3A3A3 transparent transparent transparent';
			if(this.arrRows && this.arrRows.length>0 && nLast == this.arrRows.length)
			{
				var groupNode = lastNode.previousSibling;
				this.DisplayGroup(groupNode, true);
				if(nFileVersion>=7020191004001)
				{
					if(bVScroll) this.objVSTHDivPos.style.display = 'block';
					this.DisplayScrollPos(nLast);
				}
				var dataRowNo = Number(groupNode.getAttribute('rowno'));
				if(!this.bMyGrid) this.ClearSelect(groupNode);
			}
		}
		else
		{
			this.objVSDWDivPos.setAttribute('enable_status', 'true');
			this.objVSDWADivPos.style.borderColor = '#505050 transparent transparent transparent';
		}

		if(nLast>0 && bVScroll) this.objVSTHDivPos.style.display = 'block';
		else this.objVSTHDivPos.style.display = 'none';

		if(this.bMyGrid) this.ClearSelect();
		if(this.objSelRow && (nLast>0 || (firstNode && nFirst==0 && nLast==0)))
		{
			var dataRowNo = Number(this.objSelRow.getAttribute('rowno'));
			if(this.IsDisplaySelectRow(dataRowNo, true))
			{
				var nRow = this.GetRowNo(dataRowNo);
				this.Select(nRow, true, false, dataRowNo);
			}
		}
		if(this.bDrag && this.objDrag) this.DisplaySelectRowByDrag();
	},
	DisplaySelectRowByDrag : function()
	{
		if(!this.bDrag || !this.objDrag) return;
		if(this.bMulti)
		{
			var firstNode = this.objTable.rows[this.nHeader+(this.vLock*this.nDataRow)];
			var lastNode = this.objTable.rows[this.objTable.rows.length-1];
			if(!firstNode) return;
			nFirst = Number(firstNode.getAttribute('rowno'));
			nLast = Number(lastNode.getAttribute('rowno'));
			for(var i=nFirst; i<=nLast; i++)
			{
				var rowNo = this.GetRowNo(i);
				if(this.nDataRow>1)
				{
					var addseq = rowNo>0?rowNo%this.nDataRow:0;
					if(addseq>0) rowNo -= addseq;
				}
				for(var j=0; j<this.nDataRow; j++)
				{
					var node = this.objTable.rows[this.nHeader+rowNo+j];
					if(this.arrMulti[i]) this.SelectDragRow(node);
					else if(!this.objDrag || (this.objDrag && this.objDrag.arrDragRowNo.length>0)) this.ClearSelect(node);
				}
			}
		}
		else
		{
			for(var i=0; i<this.objDrag.arrDragRowNo.length; i++)
			{
				var dataRowNo = this.objDrag.arrDragRowNo[i];
				dataRowNo = Number(dataRowNo);
				if(!this.IsDisplayDataRow(dataRowNo)) continue;
				var rowNo = this.GetRowNo(dataRowNo);
				for(var j=0; j<this.nDataRow; j++)
				{
					var node = this.objTable.rows[this.nHeader+rowNo+j];
					this.SelectDragRow(node);
				}
			}
		}
	},
	DisplaySelectRowByShift : function()
	{
		if(!this.IsGrid() || !Webcrea.bShiftKey) return;
		var nRowData = arguments[0];
		if(!this.arrShift) this.arrShift = [];
		for(var i=0; i<this.arrShift.length; i++)
		{
			var nClear = this.arrShift[i];
			this.arrMulti[nClear] = '';
			if(this.IsDisplaySelectRow(nClear, true))
			{
				var rowNo = this.GetRowNo(nClear);
				if(this.nDataRow>1)
				{
					var addseq = rowNo>0?rowNo%this.nDataRow:0;
					if(addseq>0) rowNo -= addseq;
				}
				this.SetValueByData('_SELECT_', '', rowNo);
				for(var j=0; j<this.nDataRow; j++)
				{
					var node = this.objTable.rows[this.nHeader+rowNo+j];
					this.ClearSelect(node);
				}
			}
		}
		if(Webcrea.IsNull(this.nShiftFisrtNo)) this.nShiftFisrtNo = this.objSelInfo.dataRowNo_B;
		var nRowData_b = this.nShiftFisrtNo;
		nRowData_b = Number(nRowData_b);
		nRowData = Number(nRowData);
		if(Webcrea.IsNull(this.nShiftFisrtNo)) this.nShiftFisrtNo = nRowData;
		var nFirst=nRowData_b;
		var nLast=nRowData;
		if(nRowData_b > nRowData)
		{
			nFirst = nRowData;
			nLast = nRowData_b;
		}
		for(var i=nFirst; i<=nLast; i++)
		{
			if(this.arrShift.search(i)<0) this.arrShift[this.arrShift.length] = i;
			if(this.objDrag)
			{
				if(this.objDrag.arrDragRowNo.search(i)<0) this.objDrag.arrDragRowNo[this.objDrag.arrDragRowNo.length] = i;
			}
			if(i==this.nShiftFisrtNo) this.arrMulti[i] = true;
			else this.arrMulti[i] = !this.arrMulti[i];
			if(this.IsDisplaySelectRow(i, true))
			{
				var rowNo = this.GetRowNo(i);
				if(this.nDataRow>1)
				{
					var addseq = rowNo>0?rowNo%this.nDataRow:0;
					if(addseq>0) rowNo -= addseq;
				}
				this.SetValueByData('_SELECT_', this.arrMulti[i], rowNo);
				var bSMultiSelect = false;
				if(this.bMulti && !Webcrea.IsEmpty(this.colorSelect) || !this.IsMultiSelectCell()) bSMultiSelect = true;
				if(bSMultiSelect)
				{
					var colorFocus = this.colorFocus;
					if(!Webcrea.IsEmpty(this.colorSelect)) this.colorFocus = this.colorSelect;
					for(var j=0; j<this.nDataRow; j++)
					{
						var node = this.objTable.rows[this.nHeader+rowNo+j];
						if(this.arrMulti[i]) this.SelectDragRow(node);
						else if(!this.objDrag || (this.objDrag && this.objDrag.arrDragRowNo.length>0)) this.ClearSelect(node);
					}
					this.colorFocus = colorFocus;
				}
			}
		}
		this.RefreshHeader();
	},
	DisplayPageScroll : function(pos) {
		var currObj = this;
		var CreatePageNo = function(root, startNo, max)
		{
			if(!root) return;
			if(root.childNodes.length<1) return;
			var aNode = Webcrea.FindNode(root, 'name', 'a');
			var copyNode = aNode.cloneNode(true);
			Webcrea.RemoveChildNode(root);
			for(i=0; i<max; i++)
			{
				startNo++;
				copyNode = copyNode.cloneNode(true);
				if(i>0) copyNode.style.paddingLeft = '6px';
				var span = Webcrea.FindNode(copyNode, 'name', 'span');
				span.textContent = startNo;
				copyNode.setAttribute('id', currObj.divPos + '.' + startNo.toString());
				copyNode.style.textDecoration = '';
				copyNode.style.fontWeight = '';
				root.appendChild(copyNode);
			}
		};
		if(!this.IsPageScroll()) return;
		if(!pos) pos = 0;
		pos += 1;
		var nMaxPage = this.pageScrollOpt.nMaxPage;
		if(this.max>0) this._Set_Visible(true);
		else this._Set_Visible(false);
		var nAllPageR = Math.ceil(this.max/this.row);
		var nCurrPage = Math.ceil(pos/this.row);
		var nNext = Math.ceil(nCurrPage/nMaxPage)-1;
		var nAllPage = Math.ceil(nAllPageR/nMaxPage)*nMaxPage;
		var nPrev = Math.ceil((nAllPage-nCurrPage+1)/nMaxPage)-1;
		var nStart = nNext*nMaxPage;
		var nCnt = nMaxPage;
		if(nMaxPage>nAllPageR) nCnt = nAllPageR;
		else if(nStart+nMaxPage>nAllPageR) nCnt = nAllPageR-nStart;
		var root = Webcrea.FindNode(this.objDivPos, 'id', 'number');
		if(nCnt == 0) nCnt = 1;
		CreatePageNo(root, nStart, nCnt);
		if(!this.objFirst) this.objFirst = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.first');
		if(!this.objPrev) this.objPrev = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.prev');
		if(!this.objNext) this.objNext = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.next');
		if(!this.objEnd) this.objEnd = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + '.end');
		if(nNext == 0)
		{
			this.objFirst.style.display = 'none';
			this.objPrev.style.display = 'none';
		}
		else if(nNext == 1)
		{
			this.objFirst.style.display = 'none';
			this.objPrev.style.display = '';
		}
		else
		{
			this.objFirst.style.display = '';
			this.objPrev.style.display = '';
		}
		if(nPrev == 0)
		{
			this.objNext.style.display = 'none';
			this.objEnd.style.display = 'none';
		}
		else if(nPrev == 1)
		{
			this.objNext.style.display = '';
			this.objEnd.style.display = 'none';
		}
		else
		{
			this.objNext.style.display = '';
			this.objEnd.style.display = '';
		}
		var currNode = Webcrea.FindNode(root, 'id', this.divPos + '.' + nCurrPage.toString());
		this.objSelCol_B = this.objSelCol;
		this.objSelCol = currNode;
		if(currNode)
		{
			currNode.style.textDecoration = 'underline';
			currNode.style.fontWeight = 'bold';
		}
		this.page = nCurrPage;
	},
	DisplaySumRow : function() {
		if(!this.objFDivPos) return;
		var clientHeight = Webcrea.GetHeight(this.objDivPos, true);
		var sumHeight = Webcrea.GetHeight(this.objFDivPos, true);
		var top = clientHeight - sumHeight;
		if(this.IsHorzScroll())
		{
			if(this.IsHScroll() && this.bMyHScroll) top -= this.nScrlWidth;
		}
		this.objFDivPos.style.top = top + 'px';
	},
	DisplayColSize : function()
	{
		if(!this.IsForm() && !this.IsGrid()) return;
		if(!this.objTable) return;
		var divWidth = Webcrea.GetWidth(this.objDivPos, true);
		var tableWidth = Webcrea.GetWidth(this.objTable);
		if(this.IsList() && Webcrea.IsMobileScreen()) tableWidth = Webcrea.GetWidth(this.objTable, true);
		var bCrossTabAdjust = false;
		if(this.IsCrossTab() && divWidth>tableWidth && !this.layoutOpt.bHorz)
		{
			tableWidth = divWidth;
			bCrossTabAdjust = true;
		}
		var bAdjust = tableWidth>this.initAllColWidth;
		if(Webcrea.IsIE() && this.IsList() && bAdjust)
		{
			if(tableWidth-this.initAllColWidth == 1) bAdjust = false;
		}
		if(bAdjust)
		{
			for(var z=0; z<3; z++)
			{
				var targetDiv = this.objDivPos;
				if(z==1) targetDiv = this.objHDivPos;
				else if(z==2) targetDiv = this.objFDivPos;
				if(!targetDiv) continue;
				var colGroup = Webcrea.FindNode(targetDiv, 'name', 'COLGROUP');
				var arrColGroup = [];
				Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
				var hiddenWidth=0;
				var nDesignHiddenCol=0;
				var nHiddenCol=0;
				var nFixCol=0;
				for(var i=0; i<arrColGroup.length; i++)
				{
					var colNode = arrColGroup[i];
					if(colNode.style.visibility == 'hidden' || colNode.getAttribute('display')=='0')
					{
						hiddenWidth += Number(colNode.getAttribute('orgwidth'));
						nHiddenCol++;
					}
					else if(colNode.getAttribute('designwidth')=='0') nDesignHiddenCol++;
					else if(colNode.getAttribute('fixWidth')) nFixCol++;
				}
				var nCol = arrColGroup.length - nHiddenCol - nFixCol - nDesignHiddenCol;
				var calWidth = divWidth - this.initAllColWidth + hiddenWidth;
				if(this.IsHScroll() && calWidth<0) calWidth = 0;
				var perWidth = Math.floor(calWidth/nCol);
				var perWidth1 = calWidth - perWidth*nCol;
				perWidth1 -= 1;
				var colNode_b;
				var width_b=0;
				for(var i=0; i<arrColGroup.length; i++)
				{
					var colNode = arrColGroup[i];
					if(colNode.style.visibility == 'hidden' || colNode.getAttribute('orgwidth')=='0' || colNode.getAttribute('display')=='0') continue;
					if(colNode.getAttribute('fixWidth'))
					{
						if(i==arrColGroup.length-1 && perWidth1 && colNode_b) colNode_b.style.width = width_b + perWidth1 + 'px';
						continue;
					}
					var width = Number(colNode.getAttribute('orgwidth'));
					width += perWidth;
					if(i==arrColGroup.length-1) width += perWidth1;
					colNode.style.width = width + 'px';
					if(this.layoutOpt.bHorz != undefined && this.layoutOpt.bHorz) colNode.setAttribute('resizewidth', width);
					else colNode.setAttribute('orgwidth', width);
					colNode_b = colNode;
					width_b = width;
				}
			}
			if(bCrossTabAdjust) this.initAllColWidth = tableWidth;
			else if(this.IsList() && this.bAutoHeight)
			{
				this.initAllColWidth = Webcrea.GetWidth(this.objTable);
			}
		}
		this.DisplayRuler();
	},
	DisplayFitColSize : function()
	{
		if(!this.IsGrid()) return;
		if(!this.arrRows) return;
		if(this.arrRows.length < 1) return;
		var firstNode = this.objTable.rows[this.nHeader];
		var arrColNo = [];
		var arrColAddWidth = [];
		for(var j=0; j<this.arrCellId.length; j++)
		{
			var id = this.arrCellId[j];
			var cellInfo = this.GetCellInfo(id);
			if(!cellInfo) continue;
			if(Webcrea.IsNull(cellInfo.field)) continue;
			var colObj = Webcrea.FindNode(firstNode, 'orgid', cellInfo.field);
			if(!colObj) continue;
			var colWidth = Webcrea.GetWidth(colObj, true);
			var nCol = this.GetColumn(cellInfo.field);
			if(nCol<0) continue;
			if(this.autoWidthOpt.arrCol && this.autoWidthOpt.arrCol.length>0 && this.autoWidthOpt.arrCol.isearch(cellInfo.field)<0) continue;
			var fontRate = 1;
			if(!Webcrea.IsEmpty(cellInfo.fontsize))
			{
				var fontSize = Extract(cellInfo.fontsize, '[DIGIT]');
				fontRate = fontSize/12;
				if(fontRate<0) fontRate = 1;
			}
			var nLen = this.arrMaxLen[nCol];
			if(cellInfo.realType == 'number') nLen += Math.floor(nLen/3);
			var maxWidth = nLen * 10 * fontRate;
			maxWidth += this.autoWidthOpt.addWidth;
			var addWidth = maxWidth - colWidth;
			if(addWidth<=0) continue;
			arrColNo[arrColNo.length] = cellInfo.colno;
			arrColAddWidth[arrColAddWidth.length] = addWidth;
		}
		for(var z=0; z<3; z++)
		{
			var targetDiv = this.objDivPos;
			if(z==1) targetDiv = this.objHDivPos;
			else if(z==2) targetDiv = this.objFDivPos;
			if(!targetDiv) continue;
			var colGroup = Webcrea.FindNode(targetDiv, 'name', 'COLGROUP');
			var arrColGroup = colGroup.getElementsByTagName('COL');
			for(var i=0; i<arrColGroup.length; i++)
			{
				var colNode = arrColGroup[i];
				if(colNode.style.visibility == 'hidden' || colNode.getAttribute('orgwidth')=='0' || colNode.getAttribute('display')=='0') continue;
				if(colNode.getAttribute('fixWidth')) continue;
				var colno = colNode.getAttribute('colno');
				var n = arrColNo.search(colno);
				if(n<0) continue;
				var addWidth = arrColAddWidth[n];
				var width = Number(colNode.getAttribute('orgwidth'));
				width += addWidth;
				colNode.style.width = width + 'px';
				if(this.layoutOpt.bHorz != undefined && this.layoutOpt.bHorz) colNode.setAttribute('resizewidth', width);
				else colNode.setAttribute('orgwidth', width);
			}
		}
		this.DisplayRuler();
	},
	DisplaySetRowSize : function(nData)
	{
		if(!this.IsGrid()) return;
		var allSize = this.nHeaderHeight + this.nDataHeight*nData;
		var nDiff = allSize-this.initDivHeight;
		var nDivHeight = this.initDivHeight + nDiff;
		var nHeight = this.initHeight + nDiff;

		this.objDivPos.style.height = nDivHeight + 'px';
		if(this.objGDivPos) this.objGDivPos.style.height = nDivHeight + 'px';
		if(this.bMyGrid)
		{
			var nVSHeight = nHeight;
			var nVSHeight1 = this.objDivPos.scrollWidth;
			var nVSHeight2 = this.objDivPos.clientWidth;
			if(nVSHeight1>nVSHeight2) nVSHeight -= this.nHScrlHeight;
			if(this.objVSGDivPos)
			{
				this.objVSGDivPos.style.height = nVSHeight + 'px';
				this.objVSDWDivPos.style.top = nVSHeight - this.nBaseScrlSize + 'px';
			}
		}
	},
	DisplayDraw : function(bJump, nJump) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(Webcrea.IsNull(bJump) && Webcrea.IsNull(nJump)) bJump = true;
		if(nJump<0) nJump=0;
		if(!this.arrRows)
		{
			this.bSearched = true;
			this.DisplayLoading(true);
			return;
		}
		var bLastServiceError = false;
		if(_my_sqlStatus != '')
		{
			if(_my_sqlStatus.indexOf('[DATA BLANK]')==0)
			{
				Webcrea.SetSqlStatus('');
				_my_lastStatus = 'QUERY FAILED';
			}
			else
			{
				bLastServiceError=true;
			}
		}
		if(this.bDisplayDataFit) this.DisplaySetRowSize(this.arrRows.length);
		var nFirst = -1, nLast = -1;
		if(bJump)
		{
			var firstNode = this.objTable.rows[this.nHeader];
			var lastNode = this.objTable.rows[this.objTable.rows.length-1];
			if(firstNode)
			{
				nFirst = Number(firstNode.getAttribute('rowno'));
				nLast = Number(lastNode.getAttribute('rowno'));
			}
		}
		else Webcrea.Trace('Display', 1);
		if(bLastServiceError && this.arrField.length<1)
		{
			var bClear = true;
			this.InitializeOrg('', bClear);
			this.bSearched = true;
			this.DisplayLoading(true);
			return;
		}
		else this.InitializeOrg();
		var nKeepRow = -1;
		var n = 0;
		var nRow = this.pos_B;
		if(nRow < 0) nRow = 0;
		var nRowAll = this.arrRows.length;
		if(this.IsChart())
		{
			var objPos = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
			if(objPos)
			{
				var sDataAll = '';
				if(this.IsRMateChart())
				{
					if(this.chartKind.iEquals('gauge'))
					{
						if(nRowAll>0)
						{
							var field = this.arrField[0];
							sDataAll = this.arrData[field][nRow];
						}
						if(sDataAll.IsEmpty()) sDataAll = '0.0';
						else if(!Webcrea.IsNumber(sDataAll))
						{
							var sError = Webcrea.LoadString('msgErrData') + '(' + sDataAll + ')';
							Webcrea.Trace(sError);
							sDataAll = '0.0';
						}
					}
					else
					{
						for(var i=nRow; i<nRowAll; i++)
						{
							var sRow='';
							for(var j=0; j<this.arrField.length; j++)
							{
								var field = this.arrField[j];
								if(field == this.dataSeqField) continue;
								var data = this.arrData[field][i];
								if(Webcrea.IsEmpty(sRow)) sRow = field + ':"' + data + '"';
								else sRow = sRow + ',' + field + ':"' + data + '"';
							}
							if(Webcrea.IsEmpty(sDataAll)) sDataAll = '{' + sRow + '}';
							else sDataAll = sDataAll + ',{' + sRow + '}';
						}
					}
					sDataAll = '[' + sDataAll + ']';
				}
				else
				{
					var sField = '';
					for(var j=0; j<this.arrField.length; j++)
					{
						var field = this.arrField[j];
						if(field == this.dataSeqField) continue;
						if(!Webcrea.IsEmpty(sField)) sField += ',';
						sField = sField + "'" + field + "'";
					}
					sField = '[' + sField + ']';
					var sData = '';
					for(var i=nRow; i<nRowAll; i++)
					{
						var sRow='';
						for(var j=0; j<this.arrField.length; j++)
						{
							var field = this.arrField[j];
							if(field == this.dataSeqField) continue;
							var fieldType = this.arrFieldType[j];
							var data = this.arrData[field][i];
							if(!Webcrea.IsEmpty(sRow)) sRow += ',';
							if(fieldType == 1) sRow += data;
							else sRow = sRow + "'" + data + "'";
						}
						sRow = '[' + sRow + ']';
						if(!Webcrea.IsEmpty(sData)) sData += ', ';
						sData += sRow;
					}
					sDataAll = '[' + sField + ', ' + sData + ']';
				}

				if(!this.objChart)
				{
					this.objChart = {};
					if(!Webcrea.arrChart) Webcrea.arrChart = [];
					this.objChart.seq = Webcrea.arrChart.length;
					Webcrea.arrChart[Webcrea.arrChart.length] = this.objChart;
				}
				if(this.IsRMateChart()) this.objChart.layout = this.layout;
				else
				{
					this.objChart.chartType = this.chartType;
					this.objChart.chartKind = this.chartKind;
					var options;
					if(this.options[0] == '{') options = this.options;
					else options = '{' + this.options + '}';
					this.objChart.options = JSON.parse(options);
				}
				this.objChart.data = eval(sDataAll);
				this.objChart.width = Webcrea.GetWidth(objPos, true);
				this.objChart.height = Webcrea.GetHeight(objPos, true);

				if(this.IsRMateChart()) objPos.src = Webcrea.GetChartUrl(this) + '?seq=' + this.objChart.seq;
				else objPos.src = Webcrea.GetChartUrl(this) + '?seq=' + this.objChart.seq + '&chartType=' + this.objChart.chartType;
				objPos.contentWindow.location.href=objPos.src;
			}
			this.bSearched = true;
			if(!bJump) Webcrea.Trace('Display', 2);
			return;
		}
		else if(this.IsGrid())
		{
			if(!this.nRowsPage) this.nRowsPage = 0;
			var nRowsPage_B = this.nRowsPage;
			let nDiff = 0;
			if(this.IsListTreeGrid()) this.nRowsPageReal = this.GetDisplayRowsByListTreeGrid(nJump);
			else
			{
				let nDisplayRows = this.GetDisplayRowsByInfo();
				this.nRowsPageReal = Math.floor(nDisplayRows/this.nDataRowReal);
			}
			this.nRowsPage = this.nRowsPageReal*this.nDataRowReal;
			this.nRowsScrl = this.nRowsPage-this.nFooter;
			if(nFileVersion<7020191004001) this.nRowsScrl -= 1;
			if(Webcrea.IsNull(nJump) && this.bGoLast)
			{
				bJump = true;
				nJump = this.arrRows.length-this.nRowsPage;
			}

			 if(this.bMyGrid)
			 {
				nRow = 0;
				if(nJump == undefined)
				{
					if(nRowsPage_B>=this.nRowsPage) nJump = nFirst;
					else
					{
						if(nLast >= this.arrRows.length) nJump = nLast-Math.floor(this.nRowsPage/this.nDataRow)+1;
						else nJump = nFirst;
					}
				}
				if(!this.relObj || (this.relObj && !this.relObj.IsPageScroll()))
				{
					var nAdd = 0;
					if(this.nFooter>0) nAdd = this.nFooter;
					if(this.bLastRowAdjust) nAdd += 1;
					var nCheck = this.arrRows.length-Math.floor(this.nRowsPage/this.nDataRow)+nAdd;
					if(nJump && nJump > nCheck)
					{
						nKeepRow = nJump;
						nJump = nCheck;
					}
				}

				var nDivWidth = Webcrea.GetWidth(this.objDivPos, true);
				if(this.objVSGDivPos) this.objVSGDivPos.style.left = nDivWidth + this.nScrlLeftAdjust + 'px';
				if(nJump>=0) this.DisplayScrollPos(nJump);

				let nDataRow = this.nDataRowReal;
				if(nRowAll*nDataRow>this.nRowsPage && this.nRowsPage>0)
				{
					nRowAll = Math.floor(this.nRowsPage/nDataRow);
					if(nDiff>0) nRowAll++;
				}
			}
		}
		var bNotThread = !this.bThreadDisplay;
		if(nJump>0) bNotThread = true;
		if(!bNotThread && (this.arrStackEvent.isearch('commandinsert')>=0 || this.arrStackEvent.isearch('commanddelete')>=0)) bNotThread = true;
		if(!bNotThread && this.IsTreeGrid()) bNotThread = true;
		if(this.displayTimeout && this.DisplayThreading) clearTimeout(this.displayTimeout);
		this.DisplayThreading = !bNotThread;
		this.DisplayDrawSub(nRow, nRowAll, bJump, nJump, nKeepRow, 0, bNotThread);
	},
	DisplayDrawSub : function()
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var nRow = arguments[0];
		var nRowAll = arguments[1];
		var bJump = arguments[2];
		var nJump = arguments[3];
		var nKeepRow = arguments[4];
		var i = arguments[5];
		var bNotThread = arguments[6];
		if(!i) i = 0;
		if(nRowAll>0)
		{
			if(this.IsGrid())
			{
				if(!this.IsListTreeGrid() && this.objTable.rows.length>=(this.nHeader+this.nDataRow) && !this.objTableInfoHeightAdjust)
				{
					let nDisplayRows = this.GetDisplayRowsByInfo();
					this.nRowsPageReal = Math.floor(nDisplayRows/this.nDataRowReal);
				}
				let nAdd = 0;
				if(this.bLastRowAdjust) nAdd += 1;
				if(this.arrRows.length == nRowAll && nRowAll == (this.nRowsPage-this.nFooter-nAdd))
				{
					nJump = 0;
					this.DisplayScrollPos(nJump);
				}
				if(nJump>0)
				{
					if(this.arrRows.length < nJump) nJump = this.arrRows.length-this.nRowsPage;
					this.InsertRow(true, null, nJump);
					nJump = 0;
				}
				else this.InsertRow();
			}
			else if(!this.IsCalendar())
			{
				var addRow = this.objTable;
				for(var j=0; j<this.arrCellId.length; j++)
				{
					var id = this.arrCellId[j];
					var objCell = this.GetCellInfo(id);
					if(!objCell) continue;
					var iField = this.GetColumn(objCell.orgId);
					if(iField>=0)
					{
						var addCol = Webcrea.FindNode(addRow, 'id', this.divPos + '.' + this.arrField[iField]);
						if(!addCol) continue;
						let sValue = this.arrData[this.arrField[iField]][i];
						if(nFileVersion>=7020201203001 && !WebcreaInfo.Nullable && objCell.realType == 'number' && Webcrea.IsEmpty(sValue) && !this.IsBWZ(id)) sValue = 0;
						if(addCol.nodeName == 'TD' && !Webcrea.IsEditTd(addCol)) addCol.textContent = sValue;
						else this.SetValueByData(this.arrField[iField], sValue);
					}
					else if(!Webcrea.IsEmpty(objCell.defaultValue) && objCell.bRunTime)
					{
						var addCol = Webcrea.FindNode(addRow, 'id', this.divPos + '.' + objCell.orgId);
						if(!addCol) continue;
						var sValue = this.MakeData(objCell.defaultValue, i);
						if(addCol.nodeName == 'TD' && !Webcrea.IsEditTd(addCol)) addCol.textContent = sValue;
						else this.SetValueByData(objCell.orgId, sValue);
					}
				}
				nRowAll = 1;
			}
		}
		if(++i<nRowAll)
		{
			if(bNotThread) this.DisplayDrawSub(nRow, nRowAll, bJump, nJump, nKeepRow, i, bNotThread);
			else
			{
				this.DisplayLoading(true);
				var func = this.objName + '.DisplayDrawSub(' + nRow + ',' + nRowAll + ',' + bJump + ',' + nJump + ',' + nKeepRow + ',' + i + ')';
				this.displayTimeout = setTimeout(func);
			}
		}
		else this.DisplayDrawClose(bJump, nKeepRow);
	},
	DisplayDrawClose : function()
	{
		var bJump = arguments[0];
		var nKeepRow = arguments[1];
		if(this.IsCalendar())
		{
			var addRow = this.objTable;
			for(var j=0; j<this.arrCellId.length; j++)
			{
				var id = this.arrCellId[j];
				var objCell = this.GetCellInfo(id);
				if(!objCell) continue;
				id = objCell.orgId;
				if(Webcrea.IsEmpty(id)) continue;
				if(this.IsCalendarCell(id)) continue;
				var addCol = Webcrea.FindNode(addRow, 'id', this.divPos + '.' + id);
				if(!addCol) continue;
				var sField = id.substr(0, id.length-2);
				var sDate = addCol.getAttribute('date');
				var sValue = '';
				if(!Webcrea.IsEmpty(sDate))
				{
					var n = -1;
					if(this.arrData['d']) n = this.arrData['d'].search(sDate);
					if(n<0 && this.arrData['D']) n = this.arrData['D'].search(sDate);
					var iField = this.GetColumn(sField);
					sField = this.arrField[iField];
					if(n>=0) sValue = this.arrData[sField][n];
				}
				Webcrea.DynamicVal('d', sDate);
				if(addCol.nodeName == 'TD' && !Webcrea.IsEditTd(addCol)) addCol.textContent = sValue;
				else this.SetValueByData(id, sValue);
				if(Webcrea.IsEmpty(sValue)) sValue = 0;
				else addCol.style.cursor = 'pointer';
				Webcrea.DynamicVal(id, sValue);
			}
		}
		this.RefreshSumRow();
		if(this.IsGrid() && !this.bMyGrid && this.nSumRow>0 && this.arrRows.length>=this.nRowsPage)
		{
			var nLastRow = this.objTable.rows.length - this.nHeader - 1;
			if(this.IsLastRow(nLastRow, true))
			{
				for(var i=0; i<this.nSumRow; i++)
				{
					for(var j=0; j<this.arrObjAddInfo.length; j++)
					{
						var objAddInfo = this.arrObjAddInfo[j];
						var strRow = objAddInfo.strAddRow;
						this.InsertBlankRow(this.objTable.rows.length, strRow);
					}
				}
			}
		}
		if(this.IsList() && this.nSumRow>0)
		{
			var nLastRow = this.objTable.rows.length - this.nHeader - 1;
			if(this.IsLastRow(nLastRow, true))
			{
				for(var j=0; j<this.arrTableSum.length; j++)
				{
					var sumRow = this.arrTableSum[j].innerHTML;
					this.InsertBlankRow(this.objTable.rows.length, sumRow);
				}
			}
		}
		if(!this.bMore) this.statusMode = 2;
		else this.statusMode = 1;
		if(this.IsForm() || this.bMyGrid || (this.IsList() && this.bEnableList)) this.DisplayCodeButton();
		if(this.bMyGrid) this.DisplayScrlArrow();
		if(this.IsGrid() && this.relObj && this.relObj.IsPageScroll())
		{
			var firstNode = this.objTable.rows[this.nHeader];
			var nFirst = 0;
			if(firstNode) nFirst = Number(firstNode.getAttribute('rowno'));
			this.relObj.row = this.nRowsPage;
			this.relObj.max = this.arrRows.length;
			this.relObj.DisplayPageScroll(nFirst);
		}
		if(this.arrRows.length < 1)
		{
			this.DisplayLoading(true);
			this.DisplayThreading = false;
			this.bDisplayStartByScript = false;
			return;
		}
		if(this.IsGrid())
		{
			if(this.bAutoWidth) this.DisplayFitColSize();
			if(this.nAutoScroll && this.bVScroll) this.DisplayScroll('', 1);
			if(this.bMore) this.DisplayMoreButton();
			else this.DisplayMoreButton(false);
			if(nKeepRow>=0)
			{
				this.SetCurrRowIndex(nKeepRow);
				this.Select(nKeepRow);
			}
			else if(this.objSelInfo && this.objSelInfo.dataRowNo>-1)
			{
				nKeepRow = Number(this.objSelInfo.dataRowNo);
				var bSelect = this.IsDisplaySelectRow(nKeepRow, true);
				if(!bSelect) nKeepRow = 0;
				else nKeepRow = this.GetRowNo(nKeepRow);
				if(bSelect)
				{
					this.SetCurrRowIndex(nKeepRow);
					this.Select(nKeepRow);
				}
			}
			if(this.IsList() && !this.IsListTreeGrid())
			{
				if(this.bAutoHeight) this.OnAdjustMainDiv(this);
				if(this.bInitVScroll && this.layoutOpt && this.layoutOpt.bHorz) this.OnResizeHorz();
			}
		}
		this.bSearched = true;
		this.DisplayLoading(true);
		this.DisplayThreading = false;
		this.displayTimeout = null;
		if(!bJump) Webcrea.Trace('Display', 2);
		this.bDisplayStart = false;
		this.bDisplayStartByScript = false;
		if(window[this.divPage][this.divPosOrg] && typeof window[this.divPage][this.divPosOrg].OnDATA != 'undefined' && this.objEvent.bOnData)
		{
			if(!this.bFiltering) window[this.divPage][this.divPosOrg].OnDATA();
		}
	},
	Display : function(bJump, nJump)
	{
		if(this.IsProc()) return;
		this.bDisplayStartByScript = true;
		if(this.IsStatCrossTab()) this.CrossTab(this.statOptInfo.statParam);
		this.bDisplayStart = true;
		if(this.arrSortHistory && this.arrSortHistory.length>0)
		{
			if(this.nSortHistory == 1 || (this.nSortHistory<0 && WebcreaInfo.nSortHistory == 1)) this.Sort('', true);
			else if(this.nSortHistory == 2 || (this.nSortHistory<0 && WebcreaInfo.nSortHistory == 2)) this.arrSortHistory = [];
		}
		this.DisplayDraw(bJump, nJump);
		if(_my_File.bAdjustMainDiv && this.bMultiLineAutoExpand) this.pageObj.OnAdjustMainDiv();
		if(this.bMyGrid) this.SetRowPageCount();
		if(this.IsStatCrossTab()) this.Enable(false);
		if(this.bRunForm)
		{
			this.bRunForm = false;
			this.SetFocus();
		}
	},
	DisplayPublic : function(bJump, nJump, bNotThread)
	{
		this.objEvent.bOnData = false;
		var bThreadDisplayOrg = this.bThreadDisplay;
		if(bNotThread) this.bThreadDisplay = false;
		this.bDisplayStart = true;
		this.DisplayDraw(bJump, nJump);
		if(this.bRunForm)
		{
			this.bRunForm = false;
			this.SetFocus();
		}
		this.bDisplayStart = false;
		this.bThreadDisplay = bThreadDisplayOrg;
		this.objEvent.bOnData = true;
	},
	JoinCell : function(param)
	{
		var nRow = this.GetCurrRowIndex();
		if(!this.bMyGrid) nRow = this.objTable.rows.length-this.nHeader-1;
		var nRowData = this.GetRowDataNo(nRow);
		var arrParam = Webcrea.MakeToken(param);
		if(arrParam.length<3) return;
		var n = arrParam.isearch('when');
		if(n>=0)
		{
			var sWhen='';
			for(var i=n+1; i<arrParam.length; i++) sWhen += arrParam[i];
			var bOK = this.IsWhere(sWhen, nRowData);
			if(!bOK) return;
		}
		var dataItem = arrParam[0];
		if(arrParam[1]==',') arrParam.splice(1, 1);
		var fromItem = arrParam[1];
		if(arrParam[2]==',') arrParam.splice(2, 1);
		var toItem = arrParam[2];
		if(fromItem == toItem) return;
		var currNode = this.objTable.rows[nRow+this.nHeader];
		if(!currNode) return;
		var bStart = false;
		var colStart, colEnd;
		var colData, colDataTd;
		var nRemove=0;
		var arrRemove = [];
		var nField = this.GetColumn(dataItem);
		if(nField<0) return;
		var sValue = this.arrData[this.arrField[nField]][nRowData];
		var childNodes = currNode.childNodes;
		for(var i=0; i<childNodes.length; i++)
		{
			var child = childNodes[i];
			while(child)
			{
				if (child.nodeName == 'TD')
				{
					if(!colStart)
					{
						var sComId = this.divPos + Webcrea.divId + fromItem + nRowData;
						if(Webcrea.IsEditTd(child) && child.id.toLowerCase() == sComId.toLowerCase()) colStart = child;
						else colStart = Webcrea.FindNode(child, 'id', sComId);
						if(colStart) bStart = true;
					}
					else if(!colEnd)
					{
						var sComId = this.divPos + Webcrea.divId + toItem + nRowData;
						if(Webcrea.IsEditTd(child) && child.id.toLowerCase() == sComId.toLowerCase()) colEnd = child;
						else colEnd = Webcrea.FindNode(child, 'id', sComId);
					}
					if(bStart)
					{
						var sComId = this.divPos + Webcrea.divId + dataItem + nRowData;
						if(Webcrea.IsEditTd(child) && child.id.toLowerCase() == sComId.toLowerCase()) colData = child;
						else colData = Webcrea.FindNode(child, 'id', sComId);
						if(!colData)
						{
							arrRemove[arrRemove.length] = child;
							nRemove++;
						}
						else colDataTd = child;
					}
					if(colEnd) break;
				}
				child = child.nextElementSibling;
			}
			if(colStart)
			{
				var nColspan = colDataTd.getAttribute('colspan');
				if(nColspan && nColspan>0) break;
				colDataTd.setAttribute('colspan', nRemove+1);
				colStart.value = sValue;
				var nField = this.GetColumn(fromItem);
				if(nField<0) return;
				this.arrData[this.arrField[nField]][nRowData] = sValue;
				for(var j=0; j<arrRemove.length; j++) currNode.removeChild(arrRemove[j]);
				break;
			}
		}
		if(currNode) this.ClearSelect(currNode);
	},
	TextAlign : function(param)
	{
		var nRow = this.GetCurrRowIndex();
		if(!this.bMyGrid) nRow = this.objTable.rows.length-this.nHeader-1;
		var nRowData = this.GetRowDataNo(nRow);
		var arrParam = Webcrea.MakeToken(param);
		if(arrParam.length<1) return;
		var n = arrParam.isearch('when');
		if(n>=0)
		{
			var sWhen='';
			for(var i=n+1; i<arrParam.length; i++) sWhen += arrParam[i];
			var bOK = this.IsWhere(sWhen, nRowData);
			if(!bOK) return;
			arrParam.splice(n, arrParam.length-n);
		}
		var sAlign = arrParam[0];
		arrParam.splice(0, 1);
		var currNode = null;
		if(this.IsGrid()) currNode = this.objTable.rows[nRow+this.nHeader];
		else currNode = this.objTable;
		if(!currNode) return;
		if(arrParam.length==0)
		{
			if(this.IsGrid())
			{
				var children = currNode.children;
				for(var j=0; j<children.length; j++)
				{
					var node = children[j];
					if(node)
					{
						node.style.textAlign = sAlign;
						node.setAttribute('cellAlign', sAlign);
					}
				}
			}
			else
			{
				var nTr = this.objTable.rows.length;
				for(var i=0; i<nTr; i++)
				{
					var tr = this.objTable.rows[i];
					var trChildNodes = tr.childNodes;
					for(var j=0; j<trChildNodes.length; j++)
					{
						var td = trChildNodes[j];
						if (td.nodeName == 'TD'){
							if(Webcrea.IsEditTd(td))
							{
								td.style.textAlign = sAlign;
								td.setAttribute('cellAlign', sAlign);
							}
							else
							{
								var colChildNodes = td.childNodes;
								for(var k=0; k<td.childNodes.length; k++)
								{
									var cell = colChildNodes[k];
									if(!cell) continue;
									if(!cell.id)
									{
										if(Webcrea.IsMultilineMainDiv(cell)) cell=cell.childElements()[0].childElements()[0];
										else if(Webcrea.IsBulletDiv(cell) || this.IsCodeButtonDiv(cell)) cell=Webcrea.FindNodePublic(cell, 'name', 'INPUT');
										else continue;
									}
									cell.style.textAlign = sAlign;
									cell.setAttribute('cellAlign', sAlign);
								}
							}
						}
					}
				}
			}
		}
		else
		{
			for(var j=0; j<arrParam.length; j++)
			{
				var sParam = arrParam[j];
				if(sParam == ',') continue;
				var node = Webcrea.FindNode(currNode, 'id', this.divPos + '.' + sParam + nRowData);
				if(node)
				{
					node.style.textAlign = sAlign;
					node.setAttribute('cellAlign', sAlign);
				}
			}
		}
	},
	PageScrollClick : function(currNode)
	{
		var nMaxPage = this.pageScrollOpt.nMaxPage;
		var bFirst = false, bPrev = false, bNext = false, bEnd = false;
		var nCurrData = 0;
		var nCurrPage = this.page;
		if(currNode.id == this.divPos + '.first') bFirst = true;
		if(currNode.id == this.divPos + '.prev') bPrev = true;
		if(currNode.id == this.divPos + '.next') bNext = true;
		if(currNode.id == this.divPos + '.end') bEnd = true;
		if(bFirst || bPrev || bNext || bEnd)
		{
			nCurrData = this.row*nCurrPage-this.row;
			if(bFirst)
			{
				nCurrData = 0;
				nCurrPage = 1;
			}
			else if(bPrev)
			{
				var nPrevPage = Math.ceil(nCurrPage/nMaxPage)-2;
				nCurrData = (nMaxPage*nPrevPage+1)*this.row-this.row;
				nCurrPage = nPrevPage*nMaxPage+1;
			}
			else if(bNext)
			{
				var nNextPage = Math.ceil(nCurrPage/nMaxPage);
				nCurrData = (nMaxPage*nNextPage+1)*this.row-this.row;
				nCurrPage = nNextPage*nMaxPage+1;
			}
			else if(bEnd)
			{
				var nData = this.max;
				nCurrPage = Math.floor(nData/this.row);
				nCurrData = nCurrPage*this.row;
				nCurrPage++;
			}
		}
		else
		{
			var span = Webcrea.FindNode(currNode, 'name', 'span');
			nCurrPage = Number(span.textContent);
			nCurrData =  this.row*nCurrPage-this.row;
		}
		this.pos = nCurrPage*this.row-this.row;
		this.page = nCurrPage;
		if(this.pageScrollOpt.relObj) this.pageScrollOpt.relObj.DisplayPublic(true, nCurrData);
		else if(this.pageScrollOpt.bScript)
		{
			if(typeof window[this.divPage][this.divPosOrg].OnCLICK != 'undefined')
				window[this.divPage][this.divPosOrg].OnCLICK();
			this.DisplayPageScroll(this.pos);
		}
	},
	SetActive : function()
	{
		var ___currNode = arguments[0];
		var ___param = arguments[1];
		if(!___currNode || !___param) return;
		if(!this.IsForm() && !this.IsGrid()) return;
		if(this.IsGrid() && !this.IsMultiSelectCell(___currNode)) return;
		var cellId = this.GetCellId(___currNode);
		var cellInfo = this.GetCellInfo(cellId);
		if(!cellInfo) return;
		cellInfo.activeCond = ___param;
		if(!Webcrea.GetTimer('_my_File.OnUpdateCommandButton()',true)) Webcrea.SetTimer('_my_File.OnUpdateCommandButton()', 0.1);
	},
	SetButtonImage : function()
	{
		var ___currNode = arguments[0];
		var ___param = arguments[1];
		if(!___currNode || !___param) return;
		var ___arr = ___param.split('=');
		if(___arr.length<2) return;
		var ___mode = ___arr[0].trim();
		___mode = ___mode.toLowerCase();
		var ___image = ___arr[1].trim();
		___image = Webcrea.RemoveQuote(___image);
		var bHttpPath = false;
		if(!Webcrea.IsEmpty(___image) && (___image.indexOf('http://') == 0 || ___image.indexOf('https://') == 0)) bHttpPath = true;
		if(___mode == 'image' || ___mode == 'downimage')
		{
			var evt = window.event;
			var obj;
			if(evt)
			{
				obj=Webcrea.GetEventNode(evt);
			}
			if(___mode == 'downimage' && (!obj || (obj && ___currNode != obj))) return;
			___currNode.setAttribute('imageout', ___image);
			var src = ___currNode.getAttribute('src');
			if(src)
			{
				if(bHttpPath) ___currNode.src = ___image;
				else ___currNode.src = Webcrea.GetImageLinkPath() + '/' + ___image;
				___currNode.value = ___image;
			}
			else if(___currNode.style.backgroundImage)
			{
				if(bHttpPath) ___currNode.style.backgroundImage = "url('" + ___image + "')";
				else ___currNode.style.backgroundImage = "url('" + Webcrea.GetImageLinkPath() + "/" + ___image + "')";
			}
		}
		else if(___mode.toLowerCase() == 'hoverimage')
		{
			___currNode.setAttribute('imageover', ___image);
		}
		var ___param1 = arguments[2];
		if(Webcrea.IsEmpty(___param1)) return;
		var ___arr1 = ___param1.split('=');
		if(___arr1.length<2) return;
		var ___mode1 = ___arr1[0].trim();
		___mode1 = ___mode1.toLowerCase();
		var ___color = ___arr1[1].trim();
		if(___mode1 == 'textcolor') ___currNode.style.color = ___color;
	},
	SetFilterData : function()
	{
		if(!this.IsGrid()) return;
		if(!this.arrRows) return;
		if(this.arrRows.length < 1) return;
		var findid = arguments[0];
		for(var i=0; i<this.arrFilterObj.length; i++)
		{
			var obj = this.arrFilterObj[i];
			var field = obj.id;
			if(!Webcrea.IsEmpty(findid) && !findid.iEquals(field)) continue;
			var codeObj = this.GetObject(field);
			var target = Webcrea.FindNode(this.objHDivPos, 'relId', field);
			obj.target = target;
			if(!this.IsColumn(field))
			{
				obj.bColumn = false;
				continue;
			}
			var nField = this.GetColumn(field);
			field = this.arrField[nField];
			obj.bColumn = true;
			var arr = [];
			if(this.arrData_Filter)
			{
				for(var j=0; j<this.arrData_Filter[field].length; j++)
				{
					if(this.IsSumRow_Filter(j)) continue;
					var sValue = this.arrData_Filter[field][j];
					if(codeObj && !Webcrea.IsEmpty(codeObj.sSql))
					{
						var sText = codeObj.CodeText(sValue, j);
						sValue = sText + '(' + sValue + ')';
					}
					arr[arr.length] = sValue;
				}
			}
			else
			{
				for(var j=0; j<this.arrData[field].length; j++)
				{
					if(this.IsSumRow(j)) continue;
					var sValue = this.arrData[field][j];
					if(codeObj && !Webcrea.IsEmpty(codeObj.sSql))
					{
						var sText = codeObj.CodeText(sValue, j);
						sValue = sText + '(' + sValue + ')';
					}
					arr[arr.length] = sValue;
				}
			}
			arr.sort();
			for(var j=1; j<arr.length; j++)
			{
				var sCom = arr[j-1];
				if(sCom.iEquals(arr[j]))
				{
					arr.splice(j, 1);
					j--;
				}
			}
			obj.arrData = arr;
			if(codeObj) obj.bCode = true;
			else obj.bCode = false;
		}
		this.CreateFilterBox(findid);
	},
	SetGroupKey : function()
	{
		var target = arguments[0];
		var key = arguments[1];
		if(Webcrea.IsEmpty(target)) return;
		if(Webcrea.IsNull(key)) key = target;
		var cellInfo = this.GetCellInfo(target);
		if(!cellInfo) return;
		cellInfo.groupKey = key;
	},
	SetText : function()
	{
		if(!this.IsText() && !this.IsHtml()) return;
		var param = arguments[0];
		var arrValue = param.split('\r\n');
		var currHtml = this.objDivPos.innerHTML;
		var currText = this.objDivPos.innerText;
		var arrSpan = [];
		Webcrea.FindNodeAll(this.objDivPos, 'name', 'span', arrSpan);
		if(!Webcrea.IsEmpty(currHtml) && arrSpan.length>0)
		{
			for(var i=0; i<arrValue.length; i++)
			{
				var str = Webcrea.ReplaceAll(arrValue[i], '/t', '&nbsp;');
				var spanNode;
				if(arrSpan[i]) spanNode = arrSpan[i];
				else spanNode = arrSpan[arrSpan.length-1];
				spanNode.innerHTML = str;
			}
			var nDelSpan = arrSpan.length - arrValue.length;
			for(var i=0; i<nDelSpan; i++)
			{
				var spanNode = arrSpan[arrSpan.length-1-i];
				this.objDivPos.removeChild(spanNode);
			}
		}
		else
		{
			var setValue = '';
			for(var i=0; i<arrValue.length; i++)
			{
				var str = Webcrea.ReplaceAll(arrValue[i], '/t', '&nbsp;');
				if(!Webcrea.IsEmpty(setValue)) setValue += '<br>';
				setValue += str;
			}
			this.objDivPos.innerHTML = setValue;
		}
		if(this.IsHtml()) this.objDivPos.style.overflow = 'auto';
	},
	Expand : function()
	{
		var sOpt = arguments[0];
		var sWhere = '';
		var level = '';
		var nodeId = '';
		var bSelectOnly = false;
		var arrOpt = sOpt.split(',');
		for(var i=0; i<arrOpt.length; i++)
		{
			var s = arrOpt[i];
			s = s.trim();
			var nWhere = s.indexOf('where');
			if(nWhere>=0)
			{
				sWhere = s.substr(nWhere+5);
				sWhere = sWhere.trim();
				s = s.substr(0, nWhere);
				s = s.trim();
			}
			if(i==0 && s.substr(0, 4) == 'Node' && s.indexOf('=')>0)
			{
				var n = s.indexOf('=');
				nodeId = s.substr(n+1);
				nodeId = nodeId.trim();
			}
			else if(s.indexOf('selectOnly')>=0)
			{
				if(nWhere<0) bSelectOnly = true;
				var n = s.indexOf('selectOnly');
				if(n>0)
				{
					s = s.substr(0, n);
					s = s.trim();
					if(i==0 && s >= '0') level = s;
				}
			}
			else if(i==0 && s >= '0') level = s;
		}
		var currNode = this.GetCurrRowObj();
		var opt = {};
		opt.level = level;
		opt.bSelectOnly = bSelectOnly;
		opt.where = sWhere;
		opt.nodeId = nodeId;
		this.ExpandTreeGrid(currNode, opt);
		var func = 'Data';
		if(currNode)
		{
			let currRowNo = currNode.getAttribute('seq');
			if(currNode.tagName == 'TR' && currRowNo && currRowNo>0) func += currRowNo;
		}
		if(typeof window[this.divPage][this.divPosOrg][func].OnEXPAND != 'undefined') window[this.divPage][this.divPosOrg][func].OnEXPAND();
	},
	ExpandTreeGrid : function()
	{
		var currNode = arguments[0];
		var opt = arguments[1];
		if(!this.arrRows || this.arrRows.length<1) return;
		let bSyncData = true;
		var rowNo = '';
		var dataRowNo = '';
		var bSelectOnly = true;
		var bCurrOpen = false;
		var bSelf = false;
		if(opt)
		{
			bSelectOnly = opt.bSelectOnly;
			bSelf = opt.bSelf;
		}
		if(bSelectOnly && this.IsList() && !this.IsListTreeGrid()) bSyncData = false;
		var currObj = this;
		var Expand = function(pCurrTreeObj, dataRowNo, level, bSub)
		{
			var expandSeq = 0;
			var bDisplay = currObj.IsDisplayDataRow(dataRowNo);
			var nCurrRowNo = -1;
			if(bDisplay) nCurrRowNo = Number(currObj.GetRowNo(dataRowNo));
			if(bCurrOpen)
			{
				var bClose = false;
				for(var i=pCurrTreeObj.arrChild.length-1; i>=0; i--)
				{
					var childObj = pCurrTreeObj.arrChild[i];
					var subDataRowNo = currObj.arrTreeInfo.searchId(childObj.id);
					if(childObj.bChild && childObj.bOpen) Expand(childObj, subDataRowNo, level);
					if(childObj.level<=level && level>0) continue;
					var bSubDisplay = currObj.IsDisplayDataRow(subDataRowNo);
					if(bSubDisplay)
					{
						var subRowNo = Number(currObj.GetRowNo(subDataRowNo, true));
						currObj.DeleteRow(subRowNo, true);
						currObj.arrTreeInfo.splice(subDataRowNo, 1);
						childObj.bOpen = false;
						childObj.bDisplay = false;
					}
					else
					{
						Webcrea.DeleteRecord(currObj, subDataRowNo);
						currObj.arrTreeInfo.splice(subDataRowNo, 1);
					}
					bClose = true;
				}
				if(bClose) pCurrTreeObj.bOpen = false;
			}
			else
			{
				for(var i=0; i<pCurrTreeObj.arrChild.length; i++)
				{
					var childObj = pCurrTreeObj.arrChild[i];
					if(childObj.level>level && level>0 && bSub) return expandSeq;
					var subDataRowNo = dataRowNo+i+1;
					childObj.bOpen = false;
					childObj.bDisplay = true;
					var addId = childObj.id;
					var addData = [];
					for(var j=0; j<currObj.arrField.length; j++)
					{
						var sAdd = currObj.arrData_Org[currObj.arrField[j]][addId];
						if(Webcrea.IsNull(sAdd)) sAdd = '';
						addData[addData.length] = sAdd;
					}
					expandSeq++;
					Webcrea.InsertRecord(currObj, subDataRowNo, addData, 'tree');
					currObj.arrTreeInfo.splice(subDataRowNo, 0, childObj);
					if(!bSyncData)
					{
						let nInsertPosOrg = currObj.nInsertPos;
						currObj.nInsertPos = 0;
						currObj.InsertRow(true, '' , subDataRowNo);
						currObj.nInsertPos = nInsertPosOrg;
					}
					if(currObj.bMulti) currObj.arrMulti[subDataRowNo] = childObj.bChecked;
					if(childObj.bChild && !bSelf)
					{
						var addSeq = Expand(childObj, subDataRowNo, level, true);
						dataRowNo += addSeq;
						if(childObj.arrChild.length==0) childObj.bOpen = true;
					}
				}
				pCurrTreeObj.bOpen = true;
			}
			return expandSeq;
		};
		var UpdateRowNo = function()
		{
			let baseNode = arguments[0];
			let rowDataNo = Number(baseNode.getAttribute('rowno'));
			let startRowNo = baseNode.rowIndex+currObj.nDataRow;
			for(let i=startRowNo; i<currObj.objTable.rows.length; i++)
			{
				let n = i%currObj.nDataRow;
				if(n==0) rowDataNo++;
				let trNode = currObj.objTable.rows[i];
				let currRowId = trNode.getAttribute('rowno');
				let arrNode = [];
				Webcrea.FindNodeAll(trNode, 'rowno', currRowId, arrNode);
				for(let j=0; j<arrNode.length; j++)
				{
					let nodeCell = arrNode[j];
					let cellId = nodeCell.getAttribute('id');
					if(Webcrea.IsEmpty(cellId)) continue;
					let cellOrgId = nodeCell.getAttribute('orgid');
					nodeCell.setAttribute('id', currObj.divPos + Webcrea.divId + cellOrgId + rowDataNo);
					nodeCell.setAttribute('rowno', rowDataNo);
				}
				trNode.setAttribute('rowno', rowDataNo);
			}
		};
		if(bSelectOnly)
		{
			if(!currNode) return;
			rowNo = Number(this.GetRowNo(currNode));
			dataRowNo = Number(this.GetRowDataNo(rowNo));
			var currTreeObj = this.arrTreeInfo[dataRowNo];
			if(!currTreeObj) return;
			bCurrOpen = currTreeObj.bOpen;
			if(opt && opt.level == '0' && !bCurrOpen) return;
			var level = '0';
			if(opt)
			{
				level = opt.level;
				if(Webcrea.IsFuncInnerVal(level)) level = Webcrea.GetFuncInnerVal(level);
				if(!Webcrea.IsEmpty(opt.where))
				{
					var arrWhere = Webcrea.MakeToken(opt.where);
					if(!Webcrea.IsWhereData(currObj, dataRowNo, arrWhere)) return;
					else level = currTreeObj.level;
				}
			}
			if(level>0) level = Number(level) + Number(currTreeObj.level);
			if(bCurrOpen && currTreeObj.level>=level && level>0) return;
			let currRowIndex = this.currRowIndex;
			let expandSeq = Expand(currTreeObj, dataRowNo, level);
			if(!bSyncData)
			{
				if(currNode.tagName != 'TR') currNode = Webcrea.FindParentNode(currNode, 'name', 'TR');
				let baseRowIndex = currNode.rowIndex;
				let n = baseRowIndex%this.nDataRow;
				baseRowIndex -= n;
				baseNode = this.objTable.rows[baseRowIndex + expandSeq*this.nDataRow];
				UpdateRowNo(baseNode);
				this.currRowIndex = currRowIndex;
			}
			_EXPAND_ = !bCurrOpen;
		}
		else
		{
			Webcrea.SetRecoveryRecord(this);
			var level = this.treeMaxLevel;
			if(opt && !Webcrea.IsEmpty(opt.level)) level = opt.level;
			this.SetTreeObject(this.levelField, level, opt);
			_EXPAND_ = level>0?1:0;
		}
		if(this.bMulti) this.RefreshHeader();
		if(bSyncData) this.SyncData();
		else
		{
			if(this.bAutoHeight && this.IsList() && !this.IsListTreeGrid()) this.OnAdjustMainDiv();
		}
	},
	IsSetTree : function()
	{
		return this.levelField?1:0;
	},
	SetTree : function(id, openLevel)
	{
		this.levelField = id;
		this.openLevel = openLevel;
		this.SetTreeObject(id, openLevel);
	},
	SetTreeIcon : function()
	{
		var currNode = arguments[0];
		var cellId = arguments[1];
		var rowNo = -1;
		if(Webcrea.IsObject(currNode)) rowNo = this.GetRowNo(currNode);
		else rowNo = currNode;
		var nRows = this.objTable.rows.length;
		if(nRows<1 || rowNo<0) return;
		var dataRowNo = this.GetRowDataNo(rowNo);
		var currTr = this.objTable.rows[rowNo+this.nHeader];
		if(!currTr) return;
		var currTd = currTr.cells[0];
		if(this.bMulti)
		{
			var chkNode = currTd.firstChild;
			if(this.IsMultiSelectCell(chkNode)) currTd = currTr.cells[1];
		}
		if(!currTd) return;
		if(Webcrea.IsEmpty(cellId))
		{
			var currCol = currTd;
			if(currTd.tagName == 'TD') currCol = currTd.firstChild;
			cellId = this.GetCellId(currCol);
		}
		var currTreeObj = this.arrTreeInfo[dataRowNo];
		if(!currTreeObj) return;
		var bOpen = currTreeObj.bOpen;
		var bChild = currTreeObj.bChild;
		var treeIcon = '';
		var iconPath = 'frame/tree/';
		if(bChild)
		{
			if(bOpen) treeIcon = iconPath + 'noline_minus.gif';
			else treeIcon = iconPath + 'noline_plus.gif';
		}
		var level = currTreeObj.level;
		var padding = level*16;
		if(!currTreeObj.bChild) padding += 16;
		if(!Webcrea.IsEmpty(treeIcon)) this._Set_Bullet(treeIcon, cellId, dataRowNo, true, padding);
		else if(level>=0) currTd.style.paddingLeft = padding + 'px';
	},
	SetTreeObject : function()
	{
		if(!this.IsSetTree()) return;
		this.arrTreeObj = [];
		this.arrTreeInfo = [];
		var levelField = arguments[0];
		var openLevel = arguments[1];
		var opt = arguments[2];
		if(!openLevel) openLevel = 0;
		var nField = this.GetColumn(levelField);
		if(nField<0) return;
		levelField = this.arrField[nField];
		var arrWhere = [];
		if(opt && !Webcrea.IsEmpty(opt.where)) arrWhere = Webcrea.MakeToken(opt.where);
		var currObj = this;
		var GetParent = function(level)
		{
			var findObj;
			for(var i=currObj.arrTreeObj.length-1; i>=0; i--)
			{
				var treeObj = currObj.arrTreeObj[i];
				if(level>treeObj.level)
				{
					findObj = treeObj;
					break;
				}
			}
			return findObj;
		};
		var id = 0;
		var pid = -1;
		this.treeMaxLevel = 0;
		for(var i=0; i<this.arrRows.length; i++)
		{
			var treeObj = {};
			treeObj.arrChild = [];
			var level = this.arrData[levelField][i];
			if(this.treeMaxLevel<level) this.treeMaxLevel = level;
			treeObj.level = level;
			treeObj.id = id;
			treeObj.bOpen = false;
			treeObj.bChild = false;
			var parentObj = GetParent(level);
			treeObj.parentObj = parentObj;
			if(arrWhere.length>0)
			{
				if(Webcrea.IsWhereData(this, i, arrWhere)) treeObj.bOpen = true;
				else treeObj.bOpen = false;
			}
			else if(openLevel>level) treeObj.bOpen = true;

			if(parentObj && parentObj.bOpen) treeObj.bDisplay = true;
			else if(openLevel<=level && parentObj && !parentObj.bOpen)
			{
				treeObj.bOpen = false;
				treeObj.bDisplay = false;
				Webcrea.DeleteRecord(this, i);
				i--;
			}
			else treeObj.bDisplay = true;
			if(parentObj)
			{
				parentObj.bChild = true;
				pid = parentObj.id;
				parentObj.bOpen = treeObj.bDisplay;
				parentObj.arrChild[parentObj.arrChild.length] = treeObj;
			}
			else pid = -1;
			treeObj.pid = pid;
			id++;
			if(treeObj.bDisplay) this.arrTreeInfo[this.arrTreeInfo.length] = treeObj;
			this.arrTreeObj[this.arrTreeObj.length] = treeObj;
		}
	},
	SetMedia : function()
	{
		var mode = arguments[0];
		var param = arguments[1];
		if(this.IsMedia())
		{
			var video = Webcrea.FindNodePublic(this.objDivPos, 'name', 'video');
			if(video)
			{
				if(mode == 0)
				{
					video.src = param;
					video.load();
				}
				else if(mode == 1) video.autoplay = param;
				else if(mode == 2) video.loop = param;
				else if(mode == 3) video.pause();
				else if(mode == 4) video.play();
			}
		}
	},
	SetSignPad : function()
	{
		var signData = arguments[0];
		var currObj = this.SignaturePad;
		if(!this.IsSignPad() && !currObj) return;
		if(signData)
		{
			if(!currObj.isEmpty()) currObj.clear();
			currObj.fromDataURL(signData);
			this.messagObj.style.display='none';
		}
		else this.messagObj.style.display='table-cell';
	},
	SetValueFilterBox : function()
	{
		if(!Webcrea.filterBoxObj) return;
		var relId = Webcrea.filterBoxObj.id;
		var dataObj = Webcrea.filterBoxObj.dataObj;
		var currNode = Webcrea.filterBoxObj.headerObj;
		var objPage = _my_File.GetPageObjById(this.divPage);
		var myFilterBoxId = this.divPos + '.' + relId;
		var dlNode = Webcrea.FindNode(objPage.objDivPage, 'id', '_my_filterbox_groupDL_' + myFilterBoxId);
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_items_' + myFilterBoxId);
		if(!itemsNode) return;
		var ulNode = Webcrea.FindNode(itemsNode, 'name', 'UL');
		var arrValue = dataObj.arrChecked;
		if(!arrValue) arrValue = [];
		var arrLi = [];
		Webcrea.FindNodeAll(itemsNode, 'name', 'input', arrLi);
		arrLi.sort(ArrayCompID);
		var bAllChecked = true;
		var arrLiCheck = [];
		var arrLiNotCheck = [];
		var bExistDataCheck = false;
		var arrLiNotCheckByData = [];
		for(var i=0; i<arrLi.length; i++)
		{
			var inputNode = arrLi[i];
			var liNode = inputNode.parentNode;
			var sValue = inputNode.value;
			if(arrValue.isearch(sValue)>=0)
			{
				inputNode.checked = true;
				arrLiCheck[arrLiCheck.length] = liNode.cloneNode(true);
			}
			else
			{
				inputNode.checked = false;
				bAllChecked = false;
				if(bExistDataCheck)
				{
					var field = relId;
					var nField = this.GetColumn(field);
					if(nField>=0) field = this.arrField[nField];
					if(this.arrData[field].search(sValue)>=0) arrLiNotCheckByData[arrLiNotCheckByData.length] = liNode.cloneNode(true);
					else arrLiNotCheck[arrLiNotCheck.length] = liNode.cloneNode(true);
				}
				else arrLiNotCheck[arrLiNotCheck.length] = liNode.cloneNode(true);
			}
			ulNode.removeChild(liNode);
		}
		for(var i=0; i<arrLiCheck.length; i++) ulNode.appendChild(arrLiCheck[i]);
		for(var i=0; i<arrLiNotCheckByData.length; i++) ulNode.appendChild(arrLiNotCheckByData[i]);
		for(var i=0; i<arrLiNotCheck.length; i++)
		{
			var ul = arrLiNotCheck[i];
			if(bExistDataCheck) ul.style.color = 'gray';
			ulNode.appendChild(ul);
		}
		var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_h_' + myFilterBoxId);
		if(divHeaderNode)
		{
			var inputCheckNode = Webcrea.FindNode(divHeaderNode, 'name', 'INPUT');
			inputCheckNode.checked = bAllChecked;
		}
	},
	SetValueMySelectBox : function(cell, cellValue, bOpen)
	{
		var cellId = this.GetCellId(cell);
		var objPage = _my_File.GetPageObjById(this.divPage);
		var mySelectBoxId = this.divPos + '.' + cellId;
		var rowId = '';
		if(this.IsGrid())
		{
			rowId = this.GetCurrRowIndex();
			rowId = this.GetRowDataNo(rowId);
			if(Webcrea.IsObject(cell))
			{
				var rowIdCell = this.GetRowNo(cell);
				rowIdCell = this.GetRowDataNo(rowIdCell, true);
				if(!Webcrea.IsNull(rowIdCell) && rowIdCell != rowId) rowId = rowIdCell;
			}
		}
		var dlNode = document.getElementById('_my_selectbox_groupDL_' + mySelectBoxId);
		var cellObj = this.GetObject(cellId);
		if(cellObj.bSetListEx && cellObj.arrListExNode && cellObj.arrListExNode.length>0)
		{
			var nRowNo = 0;
			if(!Webcrea.IsEmpty(rowId)) nRowNo = rowId;
			var ddNodeClone = cellObj.arrListExNode[nRowNo];
			if(ddNodeClone)
			{
				var ddNode = Webcrea.FindNode(dlNode, 'name', 'DD');
				dlNode.removeChild(ddNode);
				dlNode.appendChild(ddNodeClone);
			}
		}
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_items_' + mySelectBoxId);
		var sItems = '';
		if(itemsNode)
		{
			var bAllChecked = true;
			var arrValue = cellValue.split(',');
			for(var i=0; i<arrValue.length; i++) arrValue[i] = arrValue[i].trim();
			var bAllData = false;
			if(cellValue == '*') bAllData = true;
			var arrLi = [];
			Webcrea.FindNodeAll(itemsNode, 'name', 'input', arrLi);
			for(var i=0; i<arrLi.length; i++)
			{
				var liNode = arrLi[i];
				var sCode = liNode.getAttribute('code');
				if(arrValue.isearch(sCode)>=0 || bAllData)
				{
					if(sItems != '') sItems += ',';
					sItems += liNode.value;
					liNode.checked = true;
				}
				else
				{
					liNode.checked = false;
					bAllChecked = false;
				}
			}
			if(arrValue.length>0 && !bOpen) Webcrea.SetSelectBoxItem(cell, this);
			else
			{
				var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_h_' + mySelectBoxId);
				if(divHeaderNode)
				{
					var inputCheckNode = Webcrea.FindNode(divHeaderNode, 'name', 'INPUT');
					inputCheckNode.checked = bAllChecked;
				}
			}
		}
		return sItems;
	},
	SetValueByData : function(cellId, cellValue, rowId) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(cellValue == undefined) cellValue = '';
		if(this.IsGrid())
		{
			if(!this.arrRows) return;
			if(this.arrRows.length < 1) return;
		}
		if(cellId && cellId != '')
		{
			var cell = this.GetCellNode(cellId, rowId);
			if(!cell) return;
			if(this.IsColumn(cellId))
			{
				var fieldType = this.GetFieldType(cellId);
				if(fieldType==1)
				{
					var cellInfo = this.GetCellInfo(cellId);
					if(!cellInfo && this.IsCrossTab())
					{
						var sOrgId = this.GetCellId(cell);
						cellInfo = this.GetCellInfo(sOrgId);
					}
					if(cellInfo && !IsDigit(cellValue))
					{
						if(Webcrea.IsNull(cellValue)) cellValue = '';
						cellValue = Webcrea.GetNumberToStringData(cellValue);
					}
					else
					{
						var bInsertRow = this.IsInsertRow(rowId);
						if(nFileVersion<7020201203001)
						{
							if(cellInfo && cellInfo.realType == 'text' && cellValue == 0 && bInsertRow) cellValue = '';
							else cellValue = Webcrea.NumberReDef(cellValue);
						}
						else
						{
							let bCommandInsert = this.arrStackEvent.isearch('commandinsert')>=0;
							if(bCommandInsert && cellInfo && cellInfo.realType == 'text' && cellValue == 0 && bInsertRow) cellValue = '';
							else cellValue = Webcrea.NumberReDef(cellValue);
						}
					}
				}
			}
			var SetStatusImg = function(cell, cellValue)
			{
				var sStatImage = '';
				if(cellValue == '*' && !Webcrea.IsEmpty(WebcreaInfo.sStatMod)) sStatImage = WebcreaInfo.sStatMod;
				else if(cellValue == '+' && !Webcrea.IsEmpty(WebcreaInfo.sStatIns)) sStatImage = WebcreaInfo.sStatIns;
				else if(cellValue == '-' && !Webcrea.IsEmpty(WebcreaInfo.sStatDel)) sStatImage = WebcreaInfo.sStatDel;
				if(!Webcrea.IsEmpty(sStatImage))
				{
					var objParent = cell.parentNode;
					if(Webcrea.IsEditTd(cell))
					{
						objParent = cell;
						if(objParent && objParent.children.length==1) objParent.removeChild(objParent.children[0]);
					}
					else
					{
						var sId = cell.getAttribute('id');
						objParent.setAttribute('id', sId);
						var sOrgId = cell.getAttribute('orgid');
						objParent.setAttribute('orgid', sOrgId);
						objParent.setAttribute('role', 'edittd');
						objParent.removeChild(cell);
					}
					var divImage = document.createElement('div');
					var statImg = document.createElement('img');
					statImg.setAttribute('id', cell.id);
					statImg.setAttribute('orgid', cellId);
					statImg.setAttribute('src', Webcrea.GetImageLinkPath() + '/' + sStatImage);
					divImage.appendChild(statImg);
					objParent.appendChild(divImage);
					return true;
				}
				return false;
			};
			var bEditTd = Webcrea.IsEditTd(cell);
			var bBWZDisplay = false;
			var cellValueOrg = cellValue;
			if(bEditTd && this.IsBWZ(cellId) && Webcrea.IsEmptyByBWZ(cellValue))
			{
				bBWZDisplay = true;
				cellValue = '';
			}
			if(cell.nodeName == 'TD')
			{
				if(Webcrea.IsEditTd(cell))
				{
					var type = cell.getAttribute('realType');
					if(type == 'date' && !Webcrea.IsEmpty(cellValue)) cell.setAttribute('reverseDate', '');
					var bSetStatusImg = false;
					if(cellId == '_STATUS_') bSetStatusImg = SetStatusImg(cell, cellValue);
					if(!bSetStatusImg)
					{
						if((this.IsCalendar() && cell.getAttribute('value') != 0) || !this.IsCalendar())
						{
							if(!(this.IsGrid() && this.IsStatusCell(cell)) && !bBWZDisplay)
							{
								cellValue = Webcrea.FormatValue(cell, true, cellValue);
								if((type == 'digit' || type == 'number') && cellValue != 'undefined')
								{
									var cellValueChk = cellValue.toString();
									if(!WebcreaInfo.nNumberMode && cellValueChk.indexOf('.')>0)
									{
										var chkValue = cellValueOrg.toString();
										if(chkValue.indexOf('.')<1)
										{
											var cellValueTemp = Webcrea.FormatValue(cell, false, cellValue);
											if(cellValueTemp == cellValueOrg) cellValueOrg = cellValueTemp;
										}
									}
								}
							}
						}
						cell.setAttribute('value', cellValueOrg);
						cell.textContent = cellValue;
					}
				}
				else cell.textContent = cellValue;
			}
			else if(cell.nodeName == 'IMG')
			{
				var bSetStatusImg = false;
				if(cellId == '_STATUS_') bSetStatusImg = SetStatusImg(cell, cellValue);
				if(!bSetStatusImg)
				{
					var imgFile = cellValue;
					var n = cellValue.indexOf('data:image');
					if(n>=0) n = cellValue.indexOf('base64');
					if(n<0 && !Webcrea.IsEmpty(cellValue))
					{
						n = cellValue.lastIndexOf('/');
						n = cellValue.indexOf('http');
						if(n<0)
						{
							n = cellValue.lastIndexOf('www');
							if(n==0) cellValue = 'http://' + cellValue;
							else cellValue = Webcrea.GetImageLinkPath() + '/' + cellValue;
						}
					}
					cell.src =  cellValue;
					cell.value = imgFile;
					var style = cell.getAttribute('style');
					var orgstyle = cell.getAttribute('orgstyle');
					if(!Webcrea.IsEmpty(orgstyle) && Webcrea.IsEmpty(style) && Webcrea.IsChrome())
					{
						cell.setAttribute('style', orgstyle);
						cell.removeAttribute('orgstyle');
					}
					var nRowData = this.GetRowDataNo(rowId);
					if(this.IsForm() && Webcrea.IsNull(nRowData)) nRowData = 0;
					var nDataWidth = -1, nDataHeight = -1;
					var orgId = this.GetCellId(cell);
					var widthField = 'width_' + orgId;
					if(this.IsColumn(widthField)) nDataWidth = this.arrData[widthField][nRowData];
					else if(this.IsColumn('width')) nDataWidth = this.arrData['width'][nRowData];
					var heightField = 'height_' + orgId;
					if(this.IsColumn(heightField)) nDataHeight = this.arrData[heightField][nRowData];
					else if(this.IsColumn('height')) nDataHeight = this.arrData['height'][nRowData];
					if(nDataWidth>0) cell.style.width = nDataWidth + 'px';
					if(nDataHeight>0) cell.style.height = nDataHeight + 'px';
					if(Webcrea.IsEmpty(cellValue))
					{
						style = cell.getAttribute('style');
						cell.setAttribute('style', 'width:100%;height:100%');
						cell.setAttribute('orgstyle', style);
						cell.src = Webcrea.GetImageLinkPath() + '/frame/blank.png';
					}
				}
			}
			else if(cell.nodeName == 'INPUT' || cell.nodeName == 'BUTTON' || cell.nodeName == 'TEXTAREA' || cell.getAttribute('role') == 'multiline')
			{
				if(cell.type == 'checkbox' || cell.type == 'radio')
				{
					var orgId = this.GetCellId(cell);
					var obj = this.GetObject(orgId);
					if(!obj)
					{
						if(cellId.toLowerCase() == '_select_') cell.checked = cellValue;
						return;
					}
					obj.SetValue(cell, cellValue);
				}
				else if(cell.type == 'date' || cell.type == 'month') cell.value = Webcrea.FormatValue(cell, true, cellValue);
				else if(cell.getAttribute('role') == 'multiline')
				{
					var bTagDisplay = false;
					var cellInfo = this.GetCellInfo(cellId);
					if(nFileVersion<7020190215004) bTagDisplay = true;
					else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
					if(bTagDisplay)
					{
						var txt = cellValue.replace(new RegExp('\r?\n','g'), '<br>');
						if(!Webcrea.IsEmpty(txt))
						{
							txt = Webcrea.ReplaceAll(txt, '{+}', '<br>');
							cell.innerHTML=txt;
						}
						else cell.innerHTML='&nbsp;';
					}
					else
					{
						var cellValueTmp = cellValue;
						if(Webcrea.IsIE() && Webcrea.IsEmpty(cellValueTmp)) cellValueTmp = ' ';
						cell.innerText=cellValueTmp;
					}
				}
				else if(cell.nodeName == 'INPUT' && this.IsMySelectBox(cell))
				{
					var sItems = '';
					if(this.IsMulti(cellId)) sItems = this.SetValueMySelectBox(cell, cellValue, true);
					else sItems = this.CodeTextByCode(cellId, cellValue, rowId);
					if(Webcrea.IsEmpty(sItems) && !Webcrea.IsEmpty(cellValue)) sItems = cellValue;
					if(Webcrea.IsEmpty(sItems)) cellValue = '';
					cell.setAttribute('code', cellValue);
					cell.value = sItems;
				}
				else
				{
					if(cell.nodeName == 'TEXTAREA' && !Webcrea.IsEmpty(cellValue)) cellValue = Webcrea.ReplaceAll(cellValue, '{+}', '\r\n');
					var type = cell.getAttribute('realType');
					if(type == 'date' && !Webcrea.IsEmpty(cellValue)) cell.setAttribute('reverseDate', '');
					var bSetStatusImg = false;
					if(cellId == '_STATUS_') bSetStatusImg = SetStatusImg(cell, cellValue);
					if(!bSetStatusImg)
					{
						if(cell.nodeName == 'BUTTON') cell.innerText = cellValue;
						cell.value = cellValue;
						if((this.IsCalendar() && cell.value != 0) || !this.IsCalendar())
						{
							if(!(this.IsGrid() && this.IsStatusCell(cell)) && !bBWZDisplay) cell.value = Webcrea.FormatValue(cell, true);
						}
					}
				}
			}
			else if(cell.nodeName == 'SELECT')
			{
				cell.value = cellValue;
			}
			else if(cell.nodeName == 'DIV' && cell.getAttribute('role') == 'qrcode')
			{
				cell.setAttribute('value', cellValue);
				this.SetQRCode(cell, cellValue);
			}
			else if(cell.nodeName == 'DIV' && cell.getAttribute('role') == 'barcode')
			{
				cell.setAttribute('value', cellValue);
				this.SetBarCode(cell, cellValue);
			}
			var cellInfo = this.GetCellInfo(cellId);
			if(!cellInfo || !cellInfo.orgId) return;
			cellId = cellInfo.orgId;
			var sMasterCellId = cellId;
			if(this.IsCalendar())
			{
				sMasterCellId = cellId.substr(0, cellId.length-2);
				sMasterCellId += '00';
			}
			var bEnableEventByChange = false;
			if(window.event && window.event.type == 'change')
			{
				var eventObj = Webcrea.GetEventObject();
				if(eventObj != this) bEnableEventByChange = true;
				else if(cell)
				{
					var evtNode = Webcrea.GetEventNode();
					if(evtNode != cell) bEnableEventByChange = true;
				}
			}
			if(cell.type != 'checkbox' && (!window.event || (window.event && (window.event.type != 'change' || bEnableEventByChange))) && window[this.divPage][this.divPosOrg][sMasterCellId] && typeof window[this.divPage][this.divPosOrg][sMasterCellId].OnCHANGE != 'undefined' && this.objEvent.bChange)
			{
				Webcrea.currEventNode = cell;
				window[this.divPage][this.divPosOrg][sMasterCellId].OnCHANGE();
				Webcrea.currEventNode = null;
			}
			if(cell.type != 'checkbox' && this.bSearched && (!window.event || (window.event && (window.event.type != 'change' || bEnableEventByChange))) && window[this.divPage][this.divPosOrg][sMasterCellId] && typeof window[this.divPage][this.divPosOrg][sMasterCellId].OnMODIFY != 'undefined' && this.objEvent.bModify)
			{
				if(this.arrStackEvent.isearch('movecell')>=0) this.modifyEvented = cell;
				Webcrea.currEventNode = cell;
				window[this.divPage][this.divPosOrg][sMasterCellId].OnMODIFY();
				Webcrea.currEventNode = null;
			}
		}
		if(this.syncObj && this.objEvent.bModify) this.syncObj.SetModified(cellId, cellValue, true);
	},
	SetPanelSrc : function()
	{
		var sFile = arguments[0];
		var objFrm = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
		if(!objFrm) return;
		var bHttpCall = false;
		sFile = Webcrea.ReplaceAll(sFile, '.mvf', '.html');
		if(sFile.indexOf('http://') == 0 || sFile.indexOf('https://') == 0) bHttpCall = true;
		if(!bHttpCall)
		{
			var sHttp = Webcrea.Host();
			if(!Webcrea.IsEmpty(Webcrea.runFileSpecDir))
			{
				var n = sHttp.indexOf(Webcrea.runFileSpecDir);
				if(n>0) sHttp = sHttp.substr(0, n);
				Webcrea.runFileSpecDir=Webcrea.runFileSpecDir.toString();
				Webcrea.runFileSpecDir=Webcrea.runFileSpecDir.replaceAll('\\','/');
				if(Webcrea.runFileSpecDir == '/') sFile = Webcrea.runFileSpecDir + sFile;
				else sFile = Webcrea.runFileSpecDir + '/' + sFile;
				Webcrea.runFileSpecDir = '';
			}
			else if(!Webcrea.IsEmpty(Webcrea.runFileRoot))
			{
				var n = sHttp.indexOf(Webcrea.runFileRoot);
				if(n>0) sHttp = sHttp.substr(0, n);
				var sServerFileRoot = App.GetValue('ServerFileRoot');
				if(!Webcrea.IsEmpty(sServerFileRoot)) sFile = '/' + sServerFileRoot + '/' + sFile;
				else sFile = Webcrea.runFileRoot + '/' + sFile;
			}
			sFile = sHttp + sFile;
		}
		objFrm.src = sFile;
	},
	SetValue : function(cellId, cellValue, rowId) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if((typeof cellValue).toLowerCase() == 'number' && isNaN(cellValue)) cellValue = 0;
		if(this.IsGrid())
		{
			if(!this.arrRows)
			{
				var cellInfo = this.GetCellInfo(cellId);
				if(cellInfo && cellInfo.bSumRow) Webcrea.DynamicVal(cellId, cellValue);
				return;
			}
			if(this.arrRows.length < 1)
			{
				var cellInfo = this.GetCellInfo(cellId);
				if(cellInfo && cellInfo.bSumRow) Webcrea.DynamicVal(cellId, cellValue);
				return;
			}
		}
		if(cellId && cellId != '')
		{
			var cellValueOrg = this.GetValue(cellId);
			if(this.IsPanel() && cellId == 'FileName')
			{
				this.SetPanelSrc(cellValue);
				return;
			}
			if(this.IsViewControl())
			{
				if(cellId == 'FileName') this.URL(cellValue);
				else
				{
					var ifrm = Webcrea.FindNode(this.objDivPos, 'name', 'iframe');
					var obj = ifrm.contentWindow;
					if(!obj) return;
					Webcrea.SetViewControlValue(obj, cellId, cellValue);
				}
				return;
			}
			var cell = this.GetCellNode(cellId, rowId);
			if(!cell)
			{
				if(WebcreaInfo.nAutoValidate == 2)
				{
					if(this.IsColumn(cellId))
					{
						if(this.arrRows && this.arrRows.length>0)
						{
							var nRow = rowId;
							if(nRow == undefined) nRow = this.currRowIndex;
							var nRowData = this.GetRowDataNo(nRow);
							this.SetRowText(cellId, nRowData, cellValue);
							if(this.arrStackEvent.isearch('onchar')<0)
							{
								if(this.IsGrid()) this.RefreshRow(nRow, cellId);
							}
						}
						else Webcrea.DynamicVal(cellId, cellValue);
					}
				}
				var cellInfo = this.GetCellInfo(cellId);
				if(cellInfo && cellInfo.bSumRow) Webcrea.DynamicVal(cellId, cellValue);
				return;
			}
			var orgId = this.GetCellId(cell);
			var cellInfo = this.GetCellInfo(orgId);
			if(cell.nodeName == 'TD')
			{
				var bInputSet = false;
				var formatValue = cellValue;
				if(Webcrea.IsEditTd(cell))
				{
					var inputBox = Webcrea.GetEditTdInputBox(cell);
					if(inputBox)
					{
						if(nFileVersion>=7020190305006) bInputSet = true;
						inputBox.value = cellValue;
					}
					cell.setAttribute('value', cellValue);
					var bFormat = false;
					if(cellInfo && (cellInfo.realType == 'digit' || cellInfo.realType == 'number')) bFormat = true;
					else if(cellInfo && (cellInfo.realType == 'text' && !Webcrea.IsEmpty(cellInfo.mask))) bFormat = true;
					if(bFormat) formatValue = Webcrea.FormatValue(cell, true, cellValue);
					else
					{
						var nMaxLength = cell.getAttribute('maxlength');
						if(nMaxLength) formatValue = Webcrea.FormatValue(cell, false, cellValue);
					}
				}
				if(!bInputSet) cell.textContent = formatValue;
			}
			else if(cell.nodeName == 'INPUT' || cell.nodeName == 'BUTTON' || cell.nodeName == 'TEXTAREA' || cell.getAttribute('role') == 'multiline')
			{
				if(cell.type == 'checkbox' || cell.type == 'radio')
				{
					var obj = this.GetObject(orgId);
					if(!obj) return;
					if(cell.type == 'checkbox')
					{
						if(this.arrRows && this.arrRows.length>0 && this.IsColumn(cellId))
						{
							var nRow = rowId;
							if(nRow == undefined) nRow = this.currRowIndex;
							var nRowData = this.GetRowDataNo(nRow);
							this.SetRowText(cellId, nRowData, cellValue);
							if(this.arrStackEvent.isearch('onchar')<0)
							{
								if(this.IsGrid()) this.RefreshRow(nRow, cellId);
							}
						}
						else Webcrea.DynamicVal(cellId, cellValue);
					}
					obj.SetValue(cell, cellValue);
				}
				else if(cell.type == 'date' || cell.type == 'month') cell.value = Webcrea.FormatValue(cell, true, cellValue);
				else if(cell.getAttribute('role') == 'multiline')
				{
					var bTagDisplay = false;
					if(nFileVersion<7020190215004) bTagDisplay = true;
					else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
					if(bTagDisplay)
					{
						var txt = cellValue.replace(new RegExp('\r?\n','g'), '<br>');
						if(!Webcrea.IsEmpty(txt))
						{
							txt = Webcrea.ReplaceAll(txt, '{+}', '<br>');
							cell.innerHTML=txt;
						}
						else cell.innerHTML='&nbsp;';
					}
					else
					{
						var cellValueTmp = cellValue;
						if(Webcrea.IsIE() && Webcrea.IsEmpty(cellValueTmp)) cellValueTmp = ' ';
						cell.innerText=cellValueTmp;
					}
				}
				else if(cell.nodeName == 'INPUT' && this.IsMySelectBox(cell))
				{
					if(this.IsMulti(cellId)) this.SetValueMySelectBox(cell, cellValue);
					else
					{
						var sItems = this.CodeTextByCode(cellId, cellValue, rowId);
						if(Webcrea.IsEmpty(sItems)) cellValue = '';
						cell.setAttribute('code', cellValue);
						cell.value = sItems;
					}
				}
				else
				{
					if(cell.nodeName == 'TEXTAREA' && !Webcrea.IsEmpty(cellValue)) cellValue = Webcrea.ReplaceAll(cellValue, '{+}', '\r\n');
					if(Webcrea.IsEmpty(cellValue)) this.RemoveFile(cellId, cell.value);
					var type = cell.getAttribute('realType');
					if(type == 'date' && !Webcrea.IsEmpty(cellValue)) cell.setAttribute('reverseDate', '');
					if(cell.nodeName == 'BUTTON') cell.innerText = cellValue;
					cell.value = cellValue;
					cell.value = Webcrea.FormatValue(cell, true);
					if(cellInfo.realType == 'month' && cellValue.length>4) cellValue = Webcrea.FormatValue(cell, false, cell.value);
				}
			}
			else if(cell.nodeName == 'SELECT')
			{
				cell.value = cellValue;
			}
			else if(cell.nodeName == 'DIV' && cell.getAttribute('role') == 'qrcode')
			{
				cell.setAttribute('value', cellValue);
				this.SetQRCode(cell, cellValue);
			}
			else if(cell.nodeName == 'DIV' && cell.getAttribute('role') == 'barcode')
			{
				cell.setAttribute('value', cellValue);
				this.SetBarCode(cell, cellValue);
			}
			if(cell.type != 'checkbox')
			{
				if(this.arrRows && this.arrRows.length>0 && this.IsColumn(cellId) && this.bApplyRecordSet)
				{
					var nRow = rowId;
					if(nRow == undefined) nRow = this.currRowIndex;
					var nRowData = this.GetRowDataNo(nRow);
					this.SetRowText(cellId, nRowData, cellValue);
					if(this.arrStackEvent.isearch('onchar')<0)
					{
						if(this.IsGrid()) this.RefreshRow(nRow, cellId);
					}
				}
				else Webcrea.DynamicVal(cellId, cellValue);
			}
			if(!cellInfo || !cellInfo.orgId) return;
			cellId = cellInfo.orgId;
			var sMasterCellId = cellId;
			if(this.IsCalendar())
			{
				sMasterCellId = cellId.substr(0, cellId.length-2);
				sMasterCellId += '00';
			}
			var bEnableEventByChange = false;
			if(window.event && window.event.type == 'change')
			{
				var eventObj = Webcrea.GetEventObject();
				if(eventObj != this) bEnableEventByChange = true;
				else if(cell)
				{
					var evtNode = Webcrea.GetEventNode();
					if(evtNode != cell) bEnableEventByChange = true;
				}
			}
			let bSameValue = false;
			if(cellValue == cellValueOrg) bSameValue = true;
			if(cell.type != 'checkbox' && (!window.event || (window.event && (window.event.type != 'change' || bEnableEventByChange))) && window[this.divPage][this.divPosOrg][sMasterCellId] && typeof window[this.divPage][this.divPosOrg][sMasterCellId].OnCHANGE != 'undefined' && this.objEvent.bChange)
			{
				Webcrea.currEventNode = cell;
				window[this.divPage][this.divPosOrg][sMasterCellId].OnCHANGE();
				Webcrea.currEventNode = null;
			}
			if(cell.type != 'checkbox' && this.bSearched && (!window.event || (window.event && (window.event.type != 'change' || bEnableEventByChange))) && window[this.divPage][this.divPosOrg][sMasterCellId] && typeof window[this.divPage][this.divPosOrg][sMasterCellId].OnMODIFY != 'undefined' && this.objEvent.bModify)
			{
				if(this.arrStackEvent.isearch('movecell')>=0) this.modifyEvented = cell;
				Webcrea.currEventNode = cell;
				if(!bSameValue || (bSameValue && !WebcreaInfo.ModifyEventMode)) window[this.divPage][this.divPosOrg][sMasterCellId].OnMODIFY();
				Webcrea.currEventNode = null;
			}
			if(Win.bLoaded && this.bSearched && cell.type != 'checkbox' && (!window.event || (window.event && (window.event.type != 'change' || bEnableEventByChange))) && window[this.divPage][this.divPosOrg][cellId] && typeof window[this.divPage][this.divPosOrg].OnITEMMODIFIED != 'undefined' && (this.objEvent.bChange || this.objEvent.bModify))
			{
				if(this.arrStackEvent.isearch('movecell')>=0) this.itemModifiedEvented = cell;
				_MODID_ = cellId;
				if(!bSameValue) window[this.divPage][this.divPosOrg].OnITEMMODIFIED();
			}
			if(this.syncObj && this.objEvent.bModify) this.syncObj.SetModified(cellId, cellValue, true);
			this.OnCALCULATE();
		}
	},
	SetQRCode : function()
	{
		var cell = arguments[0];
		var value = arguments[1];
		var obj = {};
		obj.cell = cell;
		obj.value = value;
		if(!this.arrQRCode) this.arrQRCode = [];
		this.arrQRCode[this.arrQRCode.length] = obj;
		this.LoadJsLib('qrcode');
	},
	ShowQRCode : function()
	{
		for(var i=this.arrQRCode.length-1; i>=0; i--)
		{
			var obj = this.arrQRCode[i];
			var qrNode = obj.cell;
			var qrValue = obj.value;
			this.arrQRCode.splice(i,1);
			if(qrNode.lastChild) qrNode.removeChild(qrNode.lastChild);
			if(Webcrea.IsEmpty(qrValue)) continue;
			var nWidth = Webcrea.GetWidth(qrNode);
			var nHeight = Webcrea.GetHeight(qrNode);
			if(nWidth>nHeight) nWidth=nHeight;
			else nHeight=nWidth;
			var divNode = document.createElement('div');
			divNode.style.height = nHeight + 'px';
			divNode.style.width = nWidth + 'px';
			divNode.style.margin = '0 auto';
			var qrcode = new QRCode(divNode, {width:nWidth, height:nHeight});
			qrcode.makeCode(qrValue);
			qrNode.appendChild(divNode);
		}
	},
	SetBarCode : function()
	{
		var cell = arguments[0];
		var value = arguments[1];
		var obj = {};
		obj.cell = cell;
		obj.value = value;
		if(!this.arrBarCode) this.arrBarCode = [];
		this.arrBarCode[this.arrBarCode.length] = obj;
		this.LoadJsLib('barcode');
	},
	ShowBarCode : function()
	{
		for(var i=this.arrBarCode.length-1; i>=0; i--)
		{
			var obj = this.arrBarCode[i];
			if(!obj) continue;
			var barNode = obj.cell;
			var barValue = obj.value;
			var bDisplayValue =true;
			if(barNode.getAttribute('hidetext')) bDisplayValue=false;
			var sFormat = barNode.getAttribute('barcode');
			this.arrBarCode.splice(i,1);
			if(barNode.lastChild) barNode.removeChild(barNode.lastChild);
			if(Webcrea.IsEmpty(barValue)) continue;

			if(!barNode) continue;
			var rgbTo = function(cellColor)
			{
				if(cellColor.indexOf('rgb')>=0)
				{
					var sVal=right(left(cellColor,')'),'(');
					var sArr=split(sVal,',');
					cellColor='#'+pad(Int2Hex(sArr[0]),2,'0',1)+pad(Int2Hex(sArr[1]),2,'0',1)+pad(Int2Hex(sArr[2]),2,'0',1);
				}
				return cellColor;
			};

			var cName='';
			for(var i=0; i<barNode.classList.length; i++)
			{
				var clNm=barNode.classList[i];
				if(clNm.indexOf('mi')==0) cName=clNm;
			}
			var css =Webcrea.GetCSS('.'+cName);

			var sFontOptions='';
			if(bDisplayValue && barNode.style.fontWeight) sFontOptions='bold';
			else if(bDisplayValue && css && css.style.fontWeight) sFontOptions='bold';

			var sFont = '' ;
			if(bDisplayValue && barNode.style.font) sFont=barNode.style.font;
			else if(bDisplayValue && barNode.style.fontFamily)
			{
				sFont=barNode.style.fontFamily;
				sFont=left(sFont,',');
			}
			else if(bDisplayValue && css && css.style.font) sFont=css.style.font;
			else if(bDisplayValue && css && css.style.fontFamily)
			{
				sFont=css.style.fontFamily;
				sFont=left(sFont,',');
			}

			var nFontSize = 9;
			if(bDisplayValue && barNode.style.fontSize)
			{
				nFontSize=barNode.style.fontSize;
				nFontSize=Number(left(nFontSize,'pt'));
			}
			else if(bDisplayValue && css && css.style.fontSize)
			{
				nFontSize=css.style.fontSize;
				nFontSize=Number(left(nFontSize,'pt'));
			} 

			var sBackground = '#FFF';
			if(barNode.style.backgroundColor) sBackground=rgbTo(barNode.style.backgroundColor);
			else if(css && css.style.backgroundColor) sBackground=rgbTo(css.style.backgroundColor);

			var sLineColor ='#000';
			if(barNode.style.color) sLineColor=rgbTo(barNode.style.color);
			else if(css && css.style.color) sLineColor=rgbTo(css.style.color);

			var nMargin =4;
			var barID=barNode.id+'_b';
			var barObj=document.createElement('canvas');
			barObj.setAttribute('id',barID);

			var nWidth = Webcrea.GetWidth(barNode);
			var nHeight = Webcrea.GetHeight(barNode);
			barNode.appendChild(barObj);
			JsBarcode(barObj, barValue, {
				format: sFormat,
				width : 1,
				height : nHeight,
				displayValue : bDisplayValue,
				fontOptions : sFontOptions,
				font : sFont,
				fontSize : nFontSize,
				background : sBackground,
				lineColor : sLineColor,
				margin : nMargin
			});

			var width=Math.floor(nWidth/barObj.offsetWidth);
			if(width<1) width=1;
			var height = nHeight;
			if((nHeight-barObj.offsetHeight)<0) height=height+height-barObj.offsetHeight;
			if(width>1 && nHeight != height)
			{
				JsBarcode(barObj, barValue, {
					format: sFormat,
					width : width,
					height : height,
					displayValue : bDisplayValue,
					fontOptions : sFontOptions,
					font : sFont,
					fontSize : nFontSize,
					background : sBackground,
					lineColor : sLineColor,
					margin : nMargin
				});
			}

			barObj.style.display='block';
			if(barNode.style.textAlign == 'center'  || (css && css.style.textAlign  == 'center')) barObj.style.margin = '0 auto';
			else if(barNode.style.textAlign == 'right'  || (css && css.style.textAlign  == 'right' ))
			{
				barNode.style.position='relative';
				barObj.style.position='absolute';
				barObj.style.top='0px';
				barObj.style.right='0px';
			}
		}
	},
	ShowSignPad : function()
	{
		var currNode = this;
		var currObj=currNode.objDivPos;
		if(!currObj) return;
		var signId = currObj.id + Webcrea.divId + currObj.id;
		var messagObj = Webcrea.FindNodePublic(currObj,'id',currObj.id+'_message');
		if(!messagObj)
		{
			currObj.style.display='table';
			messagObj=document.createElement('div');
			messagObj.style.display='table-cell';
			messagObj.style.textAlign='center';
			messagObj.style.width=Webcrea.GetWidth(currObj);
			messagObj.style.height=Webcrea.GetHeight(currObj);
			messagObj.innerHTML=currNode.message;
			currObj.appendChild(messagObj);
			currNode.messagObj=messagObj;
		}
		var signObj = Webcrea.FindNodePublic(currObj,'id',signId);
		if(!signObj)
		{
			signObj=document.createElement('canvas');
			signObj.setAttribute('id',signId);
			signObj.setAttribute('pId',currObj.id);
			signObj.setAttribute('role','signpad');
			signObj.style.position='absolute';
			signObj.style.top='0px';
			signObj.style.left='0px';
			signObj.width=Webcrea.GetWidth(currObj);
			signObj.height=Webcrea.GetHeight(currObj);
			currObj.appendChild(signObj);
			var Signature = new SignaturePad(signObj);
			currNode.SignaturePad=Signature;
			currNode.signpad=signObj;
			signObj.onmousedown = function(e) {
				Webcrea.OnGOTFOCUS(this);
			};
		}
	},
	SetImage : function(cellId, imgPath, imgWidth, imgHeight, imgData, nRow) {
		if(this.IsGrid())
		{
			if(!this.arrRows) return;
			if(this.arrRows.length < 1) return;
		}
		if(cellId && cellId != '')
		{
			var cell = this.GetCellNode(cellId, nRow);
			if(cell && cell.nodeName == 'IMG') 
			{
				var nFileVersion = Webcrea.GetCurrFileVersion();
				var bFixImg = cell.getAttribute('fix')=='fix'?true:false;
				if(imgWidth) cell.style.width = imgWidth;
				else
				{
					if(nFileVersion>=7020180718002)
					{
						if(!bFixImg)
						{
							var styleWidth = cell.style.width;
							if(!Webcrea.IsEmpty(styleWidth)) styleWidth = Extract(styleWidth, '[0-9]');
							if(styleWidth != 100)
							{
								imgwidth = Webcrea.GetWidth(cell, true);
								if(imgwidth>0) cell.style.width = imgwidth + 'px';
							}
						}
					}
					else
					{
						imgwidth = Webcrea.GetWidth(cell, true);
						if(imgwidth>0) cell.style.width = imgwidth + 'px';
					}
				}
				if(imgHeight) cell.style.height = imgHeight;
				else
				{
					if(nFileVersion>=7020180718002)
					{
						if(!bFixImg)
						{
							var styleHeight = cell.style.height;
							if(!Webcrea.IsEmpty(styleHeight)) styleHeight = Extract(styleHeight, '[0-9]');
							if(styleHeight != 100)
							{
								imgHeight = Webcrea.GetHeight(cell, true);
								if(imgHeight>0) cell.style.height = imgHeight + 'px';
							}
						}
					}
					else
					{
						imgHeight = Webcrea.GetHeight(cell, true);
						if(imgHeight>0) cell.style.height = imgHeight + 'px';
					}
				}
				if(Webcrea.IsEmpty(imgPath)) this.RemoveFile(cellId);
				var imgFile = imgPath;
				if(imgData) cell.src = imgData;
				else
				{
					var n = imgPath.indexOf('data:image');
					if(n>=0) n = imgPath.indexOf('base64');
					if(n>0) cell.src = imgPath;
					else if(!Webcrea.IsEmpty(imgPath))
					{
						n = imgPath.lastIndexOf('/');
						n = imgPath.indexOf('http');
						if(n<0)
						{
							n = imgPath.lastIndexOf('www');
							if(n==0) imgPath = 'http://' + imgPath;
							else imgPath = Webcrea.GetImageLinkPath() + '/' + imgPath;
						}
					}
					else imgPath = Webcrea.GetImageLinkPath() + '/frame/blank.png';
					cell.src =  imgPath;
				}
				cell.value = imgFile;
				this.SetValue(cellId, imgFile, nRow);
			}
		}
	},
	PutValue : function(cellId, cellValue, rowId)
	{
		if((typeof cellValue).toLowerCase() == 'number' && isNaN(cellValue)) cellValue = 0;
		var cell = this.GetCellNode(cellId, rowId);
		if(cell) this.SetValue(cellId, cellValue, rowId);
		else
		{
			if(this.IsColumn(cellId))
			{
				if(this.arrRows && this.arrRows.length>0)
				{
					var nRow = rowId;
					if(nRow == undefined) nRow = this.currRowIndex;
					var nRowData = this.GetRowDataNo(nRow);
					this.SetRowText(cellId, nRowData, cellValue);
					if(this.arrStackEvent.isearch('onchar')<0)
					{
						if(this.IsGrid()) this.RefreshRow(nRow, cellId);
					}
				}
				else Webcrea.DynamicVal(cellId, cellValue);
			}
			var cellInfo = this.GetCellInfo(cellId);
			if(cellInfo && cellInfo.bSumRow) Webcrea.DynamicVal(cellId, cellValue);
		}
	},
	GetCalculationByCol : function(mode, cellId, nRow)
	{
		var sRet = '';
		if(!Webcrea.IsCatOper(mode)) return sRet;
		if(Webcrea.IsEmpty(cellId)) return sRet;

		var arrCellId = [];
		var nConnCell = cellId.indexOf('..');
		if(nConnCell>0)
		{
			var arr = cellId.split('..');
			var bEnd = false;
			if(arr.length>1 && !Webcrea.IsEmpty(arr[1])) bEnd = true;
			var item='', start='', end='';
			if(bEnd)
			{
				cellId = arr[0];
				for(var i=cellId.length-1; i>=0; i--)
				{
					if(!IsDigit(cellId[i]))
					{
						item = cellId.substr(0, i+1);
						start = cellId.substr(i+1);
						end = arr[1].replace(item, '');
						break;
					}
				}
				if(Webcrea.IsEmpty(item)) return;
				if(Webcrea.IsEmpty(start)) return;
				if(Webcrea.IsEmpty(end)) return;
			}
			else item = arr[0];
		}
		else arrCellId = cellId.split(',');
		if(nConnCell<0 && arrCellId.length==1) return this.GetCalculation(mode, cellId, nRow);
		var arrData = [];
		for(var i=0; i<this.arrField.length; i++)
		{
			var sField = this.arrField[i];
			if(nConnCell>0)
			{
				var n = sField.indexOf(item);
				if(n<0) continue;
				var check = sField.replace(item, '');
				if(!IsDigit(check)) continue;
				if(bEnd && (Number(check)<Number(start) || Number(check)>Number(end))) continue;
			}
			else if(arrCellId.search(sField)<0) continue;
			var value = this.arrData[sField][nRow];
			if(!value) value = 0;
			else if(Webcrea.IsNumber(value)) value = Webcrea.NumberReDef(value);
			if(Webcrea.IsEmpty(sRet))
			{
				if(mode == 'min') sRet=value;
				else sRet=0;
			}
			var bRetBigNumber = false;
			if(WebcreaInfo.bBigNumber && sRet.length>15) bRetBigNumber = true;
			if(mode=='sum' || mode=='avg' || mode=='avg0' || mode=='stddev' || mode=='stddev0' || mode=='tot')
			{
				if((mode == 'avg0' || mode == 'stddev0') && value==0) continue;
				if(bRetBigNumber || (WebcreaInfo.bBigNumber && value.length>15)) sRet = Webcrea.BigNumberPlus(sRet, value);
				else
				{
					sRet = Webcrea.SumAdjust(sRet, value);
				}
			}
			else if(mode == 'count') sRet += 1;
			else if(mode == 'count0' && value!=0) sRet += 1;
			else if(mode == 'min' && sRet > value) sRet = value;
			else if(mode == 'min0' && value!=0 && (sRet==0 || sRet > value)) sRet = value;
			else if(mode == 'max' && sRet < value) sRet = value;
			arrData[arrData.length] = value;
		}
		if(mode == 'avg' || mode == 'avg0')
		{
			if(arrData.length==0) sRet = 0;
			else
			{
				if(bRetBigNumber) sRet = Webcrea.BigNumberDiv(sRet, arrData.length);
				else sRet = sRet/arrData.length;
			}
		}
		else if(mode == 'stddev' || mode == 'stddev0')
		{
			var nCnt = arrData.length;
			var avg = bRetBigNumber?Webcrea.BigNumberDiv(sRet, nCnt):sRet/nCnt;
			var total=0;
			for(var i=0; i<nCnt; i++)
			{
				var deviation = arrData[i] - avg;
				total += deviation * deviation;
			}
			sRet = nCnt==0?0:Math.sqrt(total/nCnt);
		}
		return sRet;
	},
	GetCalculation : function(mode, cellId, nAppendRow) {
		var sRet = '';
		if(!Webcrea.IsCatOper(mode)) return sRet;
		if(Webcrea.IsEmpty(cellId)) return sRet;
		var iField = this.GetColumn(cellId);
		if(iField<0) return sRet;
		if(this.IsForm() && !nAppendRow) nAppendRow = null;
		cellId = this.arrField[iField];
		var arrData = [];
		for(var i=0; i<this.arrRows.length; i++)
		{
			if(this.arrRowInfo[i] && (this.arrRowInfo[i].mode=='total' || this.arrRowInfo[i].mode=='sum')) continue;
			if(!Webcrea.IsNull(nAppendRow) && i == nAppendRow) continue;
			var value = this.arrData[cellId][i];
			if(!value) value = 0;
			else if(Webcrea.IsNumber(value)) value = Webcrea.NumberReDef(value);
			if(Webcrea.IsEmpty(sRet))
			{
				if(mode == 'min') sRet=value;
				else sRet=0;
			}
			var bRetBigNumber = false;
			if(WebcreaInfo.bBigNumber && sRet.length>15) bRetBigNumber = true;
			if(mode=='sum' || mode=='avg' || mode=='avg0' || mode=='stddev' || mode=='stddev0' || mode=='tot')
			{
				if((mode == 'avg0' || mode == 'stddev0') && value==0) continue;
				if(bRetBigNumber || (WebcreaInfo.bBigNumber && value.length>15)) sRet = Webcrea.BigNumberPlus(sRet, value);
				else
				{
					sRet = Webcrea.SumAdjust(sRet, value);
				}
			}
			else if(mode == 'count') sRet += 1;
			else if(mode == 'count0' && value!=0) sRet += 1;
			else if(mode == 'min' && sRet > value) sRet = value;
			else if(mode == 'min0' && value!=0 && (sRet==0 || sRet > value)) sRet = value;
			else if(mode == 'max' && sRet < value) sRet = value;
			arrData[arrData.length] = value;
		}
		if(mode == 'avg' || mode == 'avg0')
		{
			if(arrData.length==0) sRet = 0;
			else
			{
				if(bRetBigNumber) sRet = Webcrea.BigNumberDiv(sRet, arrData.length);
				else sRet = sRet/arrData.length;
			}
		}
		else if(mode == 'stddev' || mode == 'stddev0')
		{
			var nCnt = arrData.length;
			var avg = bRetBigNumber?Webcrea.BigNumberDiv(sRet, nCnt):sRet/nCnt;
			var total=0;
			for(var i=0; i<nCnt; i++)
			{
				var deviation = arrData[i] - avg;
				total += deviation * deviation;
			}
			sRet = nCnt==0?0:Math.sqrt(total/nCnt);
		}
		return sRet;
	},
	GetExpressionData : function()
	{
		var param = arguments[0];
		var nRowData = arguments[1];
		var arrParam = Webcrea.MakeToken(param);
		var value = '';
		var sRule = '';
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			if(this.IsColumn(sParam)) sRule += this.arrData[sParam][nRowData];
			else sRule += sParam;
		}
		if(!Webcrea.IsEmpty(sRule))
		{
			try{ value = eval(sRule); }catch(e){}
		}
		return value;
	},
	GetColumn : function(col)
	{
		return this.arrField.isearch(col);
	},
	GetGridRowNode : function()
	{
		var bLast = arguments[0];
		var findNode;
		if(!this.objTable) return;
		if(this.IsList())
		{
			if(bLast)
			{
				var nSeq = this.objTable.rows.length-1;
				for(var i=nSeq; i>=0; i--)
				{
					findNode = this.objTable.rows[i];
					var nChk = findNode.getAttribute('rowno');
					if(this.IsDummyRow(nChk, true)) continue;
					else break;
				}
			}
			else
			{
				var nSeq = this.nHeader;
				for(var i=nSeq; i<this.objTable.rows.length; i++)
				{
					findNode = this.objTable.rows[i];
					var nChk = findNode.getAttribute('rowno');
					if(this.IsDummyRow(nChk, true)) continue;
					else break;
				}
			}
		}
		else
		{
			if(bLast) findNode = this.objTable.rows[this.objTable.rows.length-1];
			else findNode = this.objTable.rows[this.nHeader];
		}
		return findNode;
	},
	GetGroupInfo : function()
	{
		var cellId = arguments[0];
		var rowDataNo = arguments[1];
		var data = arguments[2];
		var findGroupInfo = null;
		if(this.arrGroupCell.search(cellId)<0) return;
		var bDataCom = false;
		if(!Webcrea.IsNull(data)) bDataCom = true;
		for(let i=0; i<this.arrGroupInfo[cellId].length; i++)
		{
			var groupInfo = this.arrGroupInfo[cellId][i];
			var bFind = this.arrGroupInfo[cellId][i].rowDataNo <= rowDataNo;
			if(bDataCom && bFind && this.arrGroupInfo[cellId][i].data != data) bFind = false;
			if(bFind) findGroupInfo = groupInfo;
			if((bFind && bDataCom) || (!bFind && !bDataCom)) break;
		}
		return findGroupInfo;
	},
	GetSignPad : function()
	{
		var currObj = this.SignaturePad;
		if(!this.IsSignPad() && !currObj) return;
		var result;
		if(this.ext == 'jpg' || this.ext == 'jpeg') result = currObj.toDataURL('image/jpeg');
		else result=currObj.toDataURL();
		return result;
	},
	GetText : function()
	{
		if(!this.IsText() && !this.IsHtml()) return;
		return this.objDivPos.innerText;
	},
	GetValue : function(cellId, rowIndex) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var nRow = rowIndex;
		if(this.IsGrid())
		{
			if(!this.arrRows) return '';
			if(this.arrRows.length < 1) return '';
			if(this.bMyGrid) nRow = this.GetRowNo(rowIndex);
			if(nRow<0) nRow = this.GetCurrRowIndex();
		}
		var value = '';
		if(cellId && cellId != '')
		{
			var bGetDisplayValue = false;
			var cell = this.GetCellNode(cellId, nRow);
			var iField = this.GetColumn(cellId);
			var objCell = this.GetCellInfo(cellId);
			var bNumberCell = false;
			var bDigitCell = false;
			var bBWZ = false;
			if(objCell) bBWZ = objCell.bBWZ;
			if(!cell && iField>=0)
			{
				if(this.IsGroup(cellId))
				{
					var nRowData = this.GetRowDataNo(nRow, true);
					if(Webcrea.IsNull(nRowData)) nRowData = nRow;
					sValue = this.GetGroupData(cellId, nRowData);
					return sValue;
				}
			}
			if(this.IsCalendar() && this.IsCalendarCell(cell))
			{
				value = cell.getAttribute('date');
				return value;
			}
			else if(this.IsViewControl())
			{
				var ifrm = Webcrea.FindNode(this.objDivPos, 'name', 'iframe');
				var obj = ifrm.contentWindow;
				if(!obj) return value;
				return Webcrea.GetViewControlValue(obj, cellId);
			}
			if(objCell && (objCell.realType == 'digit' || objCell.realType == 'number'))
			{
				if(objCell.realType == 'number') bNumberCell = true;
				else bDigitCell = true;
			}
			if(rowIndex == undefined || iField < 0
			|| (cell && (cell.nodeName == 'IMG' || (cell.nodeName == 'TD' && !Webcrea.IsEditTd(cell)) || cell.nodeName == 'SELECT'
			|| (cell.nodeName == 'INPUT' && (cell.type == 'checkbox' || cell.type == 'radio'))
			|| this.IsMySelectBox(cell))))
			{
				if(this.IsGrid())
				{
					if(this.bThreadDisplay && !this.bSearched && rowIndex == undefined && this.arrStackEvent.isearch('ondataquery')>=0) rowIndex = this.GetCurrRowIndexing();
					if(!this.bSearched && !this.bDisplayStart && rowIndex == undefined && this.arrRows.length>0) rowIndex = 0;
				}
				var bDisplaySelectRow = false;
				if(this.IsGrid() && rowIndex != undefined) bDisplaySelectRow = this.IsDisplaySelectRow(rowIndex, true);
				else bDisplaySelectRow = true;
				if(bDisplaySelectRow)
				{
					bGetDisplayValue = true;
					var nDisplayRowNo = rowIndex;
					if(this.IsGrid())
					{
						if(rowIndex != undefined) nDisplayRowNo = this.GetRowNo(rowIndex);
					}
					value = this.GetValueByDisplay(cellId, nDisplayRowNo);
					if(cell)
					{
						var type = cell.getAttribute('realType');
						if(type == 'date')
						{
							var reverseDate = cell.getAttribute('reverseDate');
							if(!Webcrea.IsEmpty(reverseDate))
							{
								var d = value.substr(0, 2);
								var m = value.substr(2, 2);
								var y = value.substr(4, 4);
								value = y+m+d;
							}
						}
						var role = cell.getAttribute('role');
						if(role == 'multiline')
						{
							 var obj = document.getElementById(cell.id+'_my_multiline');
							if(obj) value = obj.value;
						}
						if(Webcrea.IsAsteriskMask(cell))
						{
							value = cell.getAttribute('value');
							var nMaxLen = cell.getAttribute('maxlength');
							var nZero = nMaxLen - value.length;
							if(nZero>0)
							{
								for(var i=0; i<nZero; i++) value += '0';
							}
						}
					}
					if(bNumberCell && !this.IsSumRow(nRow, true))
					{
						if(value != '' || nFileVersion<7020180927002) value = Webcrea.NumberReDef(value);
					}
					else if(bDigitCell && !this.IsSumRow(nRow, true))
					{
						if(Webcrea.IsEmpty(value)) value = '';
					}
				}
			}
			if(cell && (cell.nodeName == 'SELECT' || (cell.nodeName == 'INPUT' && (cell.type == 'checkbox' || cell.type == 'radio'))) && iField>=0 && bGetDisplayValue && Webcrea.IsEmpty(value))
			{
				var obj = this.GetObject(cellId);
				if(obj && !obj.bSearched) bGetDisplayValue = false;
			}
			if(nFileVersion<7020180927002 && Webcrea.IsEmpty(value) && bGetDisplayValue) bGetDisplayValue = false;
			if(iField>=0 && this.arrRows && Webcrea.IsEmpty(value) && (!objCell || !bGetDisplayValue))
			{
				if(rowIndex == undefined) rowIndex = this.GetRowDataNo(this.currRowIndex);
				if(Webcrea.IsNull(rowIndex)) rowIndex = 0;
				value = this.arrData[this.arrField[iField]][rowIndex];
				if(Webcrea.IsNull(value)) value = '';
				if(!bNumberCell && this.arrFieldType[iField] && !objCell) bNumberCell = true;
				if(bNumberCell && !this.IsSumRow(nRow, true))
				{
					if(this.arrFieldType[iField] && !IsDigit(value) && !Webcrea.IsEmpty(value)) value = Webcrea.GetNumberToStringData(value);
					else
					{
						if(value != '' || nFileVersion<7020180927002) value = Webcrea.NumberReDef(value);
					}
				}
				else if(bDigitCell && !this.IsSumRow(nRow, true))
				{
					if(Webcrea.IsEmpty(value)) value = '';
				}
			}
			else if(!this.arrRows && Webcrea.IsEmpty(value))
			{
				var s = window[this.objName][cellId];
				if(!Webcrea.IsNull(s)) value = s;
			}
		}
		if(Webcrea.IsNull(value)) value = '';
		return value;
	},
	GetNumber : function(cellId, rowIndex) {
		let bNullable = false;
		if(!Webcrea.IsEmpty(cellId))
		{
			let cellInfo = this.GetCellInfo(cellId);
			if(cellInfo && cellInfo.realType == 'number') bNullable = WebcreaInfo.Nullable;
		}
		let ret = this.GetValue(cellId, rowIndex);
		if(!bNullable) ret = Webcrea.NumberReDef(ret);
		return ret;
	},
	GetGroupData : function(cellId, rowIndex) {
		var sValue = '';
		if(Webcrea.IsNull(rowIndex)) rowIndex = this.GetRowDataNo(this.currRowIndex);
		var nField = this.GetColumn(cellId);
		if(nField>=0) sValue = this.arrData[this.arrField[nField]][rowIndex];
		return sValue;
	},
	GetValueByData : function(cellId, rowIndex)
	{
		if(this.IsGrid())
		{
			if(!this.arrRows) return '';
			if(this.arrRows.length < 1) return '';
		}
		var sValue = '';
		if(cellId && cellId != '')
		{
			if(Webcrea.IsNull(rowIndex)) rowIndex = this.GetRowDataNo(this.GetCurrRowIndex());
			var iField = this.GetColumn(cellId);
			if(iField>=0) sValue = this.arrData[this.arrField[iField]][rowIndex];
		}
		return sValue;
	},
	GetValueByDisplay : function(cellId, rowIndex) {
		if(this.IsGrid())
		{
			if(!this.arrRows) return '';
			if(this.arrRows.length < 1) return '';
		}
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var sValue = '';
		if(cellId && cellId != '')
		{
			var cell = this.GetCellNode(cellId, rowIndex);
			if(!cell)
			{
				return sValue;
			}
			if(cell.nodeName == 'IMG') 
			{
				sValue = (cell.value)?cell.value:'';
			}
			else if(cell.nodeName == 'TD')
			{
				if(Webcrea.IsEditTd(cell))
				{
					var inputBox = Webcrea.GetEditTdInputBox(cell);
					if(inputBox) cell.setAttribute('value', inputBox.value);
					if(this.IsGroup(cellId)) sValue = this.GetGroupData(cellId, rowIndex);
					else
					{
						var cellId = this.GetCellId(cell);
						var cellInfo = this.GetCellInfo(cellId);
						var bBWZ = false;
						if(cellInfo) bBWZ = cellInfo.bBWZ;
						if(cellInfo && cellInfo.realType == 'text' && Webcrea.IsEmpty(cellInfo.mask))
						{
							sValue = cell.getAttribute('value');
							if(sValue != '' && cellInfo.nInitMode == 1 && cellInfo.defaultValue == sValue) sValue='';
						}
						else
						{
							sValue = Webcrea.FormatValue(cell, false);
						}
					}
				}
				else sValue = cell.innerText;
			}
			else if(cell.nodeName == 'SELECT')
			{
				sValue = cell.value;
				if(this.IsGroup(cellId) && Webcrea.IsEmpty(sValue))
				{
					sValue = this.GetGroupData(cellId, rowIndex);
				}
			}
			else if(cell.nodeName == 'TEXTAREA')
			{
				if(this.IsGroup(cellId))
				{
					sValue = this.GetGroupData(cellId, rowIndex);
				}
				else
				{
					if(Webcrea.IsIE69()) sValue = cell.text;
					else sValue = cell.value;
				}
			}
			else if(cell.nodeName == 'DIV' && (cell.getAttribute('role') == 'qrcode' || cell.getAttribute('role') == 'barcode'))
			{
				if(this.IsGroup(cellId)) sValue = this.GetGroupData(cellId, rowIndex);
				else sValue = cell.getAttribute('value');
			}
			else if(cell.getAttribute('role') == 'multiline')
			{
				if(this.IsGroup(cellId))
				{
					sValue = this.GetGroupData(cellId, rowIndex);
				}
				else
				{
					var bTagDisplay = false;
					var cellId = this.GetCellId(cell);
					var cellInfo = this.GetCellInfo(cellId);
					if(nFileVersion<7020190215004) bTagDisplay = true;
					else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
					if(bTagDisplay)
					{
						sValue = cell.innerHTML;
						sValue=sValue.replaceAll('&nbsp;', '');
						sValue = sValue.replaceAll('<br>', '\r\n');
					}
					else
					{
						sValue = cell.innerText;
						if(Webcrea.IsChrome() && Webcrea.IsEmpty(sValue))
						{
							var objPage = _my_File.GetPageObj();
							if(objPage && objPage.divPage != this.divPage)	sValue = cell.innerHTML;
						}
						if(Webcrea.IsIE() && sValue == ' ') sValue = '';
					}
				}
			}
			else if(cell.nodeName == 'INPUT')
			{
				if(cell.type == 'checkbox' || cell.type == 'radio')
				{
					var chkId = cellId;
					if(this.IsCrossTab()) chkId = this.GetCellId(cell);
					if(this.IsMulti(chkId))
					{
						var objParent = cell.parentNode;
						if(objParent.nodeName == 'LABEL')
						{
							var findId = objParent.getAttribute('for');
							cell = Webcrea.FindNode(objParent, 'id', findId);
							if(cell.checked) sValue = cell.value;
							while(objParent)
							{
								objParent = objParent.nextElementSibling;
								if(!objParent) break;
								if(objParent && objParent.nodeName != '#text' && objParent.nodeName != 'BR')
								{
									findId = objParent.getAttribute('for');
									cell = Webcrea.FindNode(objParent, 'id', findId);
									if(cell.checked)
									{
										if(sValue == '') sValue = cell.value;
										else sValue = sValue + ',' + cell.value;
									}
								}
							}
						}
						else
						{
							var objNext = cell.nextElementSibling;
							if(cell.checked) sValue = cell.value;
							while(objNext)
							{
								objNext = objNext.nextElementSibling;
								if(!objNext) break;
								if(objNext && objNext.nodeName == 'INPUT')
								{
									cell = objNext;
									if(cell.checked)
									{
										if(sValue == '') sValue = cell.value;
										else sValue = sValue + ',' + cell.value;
									}
								}
							}
						}
					}
					else
					{
						if(cell.type == 'radio')
						{
							var radios = [];
							var targetNode = Webcrea.FindParentNode(cell, 'name', 'TR');
							if(this.IsForm()) targetNode = this.objTable;
							Webcrea.FindNodeAll(targetNode, 'name', cell.name, radios);
							for(var i=0; i<radios.length; i++)
							{
								var radio = radios[i];
								if(radio.checked)
								{
									sValue = radio.value;
									break;
								}
							}
						}
						else if(cell.type == 'checkbox')
						{
							var obj = this.GetObject(cellId);
							if(obj && this.IsColumn(cellId)) sValue = cell.value;
							else
							{
								sValue = cell.value;
								if(!obj || (obj && (!obj.arrRows || obj.arrRows.length==0))) sValue = cell.checked?1:0;
							}
						}
						else sValue = cell.value;
					}
				}
				else if(this.IsMySelectBox(cell))
				{
					var sCode = cell.getAttribute('code');
					if(!this.IsMulti(cellId))
					{
						if(Webcrea.IsNull(sCode)) sValue = cell.value;
						else
						{
							var s1 = cell.value;
							var s2 = this.CodeTextByCode(cellId, sCode);
							if(s1 == s2) sValue = sCode;
							else sValue = s1;
						}
					}
					else
					{
						if(sCode == '*')
						{
							this.SetValueMySelectBox(cell, sCode);
							sCode = cell.getAttribute('code');
						}
						sValue = sCode;
					}
				}
				else
				{
					if(this.IsGroup(cellId))
					{
						sValue = this.GetGroupData(cellId, rowIndex);
					}
					else
					{
						var cellId = this.GetCellId(cell);
						var cellInfo = this.GetCellInfo(cellId);
						if(cellInfo && cellInfo.realType == 'text' && Webcrea.IsEmpty(cellInfo.mask)) sValue = cell.value;
						else sValue = Webcrea.FormatValue(cell, false);
					}
				}
			}
		}
		return sValue;
	},
	GetValueByDisplay1 : function(cellId, rowIndex)
	{
		var sValue = '';
		if(Webcrea.IsNull(cellId)) return sValue;
		var cell = this.GetCellNode(cellId, rowIndex);
		sValue = this.GetValue(cellId, rowIndex);
		if(cell && !Webcrea.IsEmpty(sValue))
		{
			var cellInfo = this.GetCellInfo(cellId);
			if(cellInfo && cellInfo.realType == 'text') sValue = Webcrea.FormatValue(cell, true, sValue);
		}
		return sValue;
	},
	RemoveFile : function(cellId, filename) {
		Remove = function(objCell, filename)
		{
			for(var j=0; j<objCell.arrFiles.length; j++)
			{
				var file = objCell.arrFiles[j];
				var n = filename.lastIndexOf('(');
				if(n>1)	filename = filename.substr(0, n-1);
				if(filename == file.name)
				{
					objCell.arrFiles.splice(j,1);
					break;
				}
			}
		};
		if(!cellId)
		{
			for(var i=0; i<this.arrCellId.length; i++)
			{
				var id = this.arrCellId[i];
				var objCell = this.GetCellInfo(id);
				if(!objCell) continue;
				if(objCell.forId) continue;
				if(!filename) objCell.arrFiles = [];
				else Remove(objCell, filename);
			}
		}
		else
		{
			var objCell = this.GetCellInfo(cellId);
			if(!objCell) return;
			if(!filename) objCell.arrFiles = [];
			else Remove(objCell, filename);
		}
	},
	ClearInit : function(cellId) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(cellId && cellId != '')
		{
			var cell = this.GetCellNode(cellId);
			if(!cell) return;
			if(cell.nodeName == 'TD')
			{
				cell.innerText = '';
				if(Webcrea.IsEditTd(cell)) cell.setAttribute('value', '');
			}
			else if(cell.getAttribute('role') == 'multiline')
			{
				var cellInfo = this.GetCellInfo(cellId);
				var bTagDisplay = false;
				if(nFileVersion<7020190215004) bTagDisplay = true;
				else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
				if(bTagDisplay) cell.innerHTML='&nbsp;';
				else
				{
					if(Webcrea.IsIE()) cell.innerText=' ';
					else cell.innerText='';
				}
			}
			else if((cell.nodeName == 'INPUT' && cell.type != 'button') || cell.nodeName == 'TEXTAREA')
			{
				if(cell.type == 'checkbox' || cell.type == 'radio')
				{
					var obj = this.GetObject(cellId);
					if(obj) obj.Clear(cell);
				}
				else
				{
					if(this.IsMySelectBox(cell)) cell.setAttribute('code', '');
					cell.value = '';
				}
			}
			else if(cell.nodeName == 'IMG')
			{
				cell.src = Webcrea.GetImageLinkPath() + '/frame/blank.png';
				cell.value = '';
			}
			else if(cell.nodeName == 'SELECT')
			{
				if(cell.options.length > 0)
					cell.options[0].selected = true;
			}
			return;
		}
		var currObj = this;
		var ClearChild = function(cell)
		{
			if((cell.nodeName == 'INPUT' && cell.type != 'button') || cell.nodeName == 'TEXTAREA')
			{
				if(cell.type == 'checkbox' || cell.type == 'radio')
				{
					var obj = currObj.GetObject(cell.id);
					if(obj) obj.Clear(cell);
				}
				else cell.value = '';
			}
			else if(cell.getAttribute('role') == 'pMultiline')
			{
				cell = cell.childElements()[0].childElements()[0];
				if(cell.getAttribute('role') == 'multiline')
				{
					var sId = currObj.GetCellId(cell);
					var cellInfo = currObj.GetCellInfo(sId);
					var bTagDisplay = false;
					if(nFileVersion<7020190215004) bTagDisplay = true;
					else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
					if(bTagDisplay) cell.innerHTML='&nbsp;';
					else
					{
						if(Webcrea.IsIE()) cell.innerText=' ';
						else cell.innerText='';
					}
				}
			}
			else if(cell.nodeName == 'SELECT')
			{
				var obj = currObj.GetObject(cell.id);
				if(obj) obj.Clear(cell);
			}
			else if(cell.nodeName == 'DIV')
			{
				var childs = cell.childNodes;
				for(var i=0; i<childs.length; i++)
				{
					var child = childs[i];
					if((child.nodeName == 'DIV' && !currObj.IsBulletDiv(child)) || child.nodeName == 'INPUT') return ClearChild(child);
					else if(child.nodeName == 'IMG')
					{
						var id = currObj.GetCellId(child);
						{
							child.src = Webcrea.GetImageLinkPath() + '/frame/blank.png';
							child.value = '';
						}
					}
					else if(child.nodeName == 'LABEL')
					{
						var cellSubChild = child.firstChild;
						while(cellSubChild)
						{
							if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
							{
								var obj = currObj.GetObject(cellSubChild.id);
								if(obj) obj.Clear(cellSubChild);
							}
							cellSubChild = cellSubChild.nextElementSibling;
						}
					}
				}
			}
		};
		var targetTable = this.objTable;
		if(this.IsGrid())
		{
			this.DeleteAll();
			targetTable = this.objFTable;
		}
		if(!targetTable) return;
		for(var i=0; i<targetTable.rows.length; i++)
		{
			var tr = targetTable.rows[i];
			var trChildNodes = tr.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					if(Webcrea.IsEditTd(td))
					{
						td.setAttribute('value', '');
						td.innerText = '';
					}
					else
					{
						var colChildNodes = td.childNodes;
						for(var k=0; k<td.childNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							if (cell.nodeName == '#text') continue;
							ClearChild(cell);
						}
					}
				}
			}
		}
	},
	ClearEdit : function(currNode, bNotFocus) {
		this.bEditing = false;
		var color = '';
		var rowObj, colObj;
		{
			rowObj = this.objSelRow;
			colObj = this.objSelCol;
		}
		if(!colObj) return;
		if(this.IsForm() && Webcrea.IsIE() && currNode && currNode != colObj) colObj = currNode;
		if(currNode && (Webcrea.IsReadOnly(currNode) || !Webcrea.IsEnable(currNode))) return;
		this.SetBWZDisplay(currNode, true);
		if(this.IsGrid() && rowObj)
		{
			var nSelRow = this.objSelInfo.dataRowNo;
			var nRow = currNode.getAttribute('rowno');
			if(nRow != 'undefined' && nRow == nSelRow) color = this.colorFocus;
		}
		else if(this.IsForm())
		{
			color = currNode.getAttribute('colorCell');
			if(!color) color='';
		}
		if(!Webcrea.IsEditTd(colObj))
		{
			if(this.IsForm())
			{
				color = colObj.getAttribute('colorCell');
				if(!color) color='';
			}
			colObj.style.backgroundColor = color;
		}
		var currObj = this;
		var ClearEdit = function(colObj)
		{
			var colChildNodes = colObj.childNodes;
			for(var j=0; j<colChildNodes.length; j++)
			{
				var colChild = colChildNodes[j];
				if(currObj.IsBulletDiv(colChild) || currObj.IsCodeButtonDiv(colChild)) ClearEdit(colChild);
				else if(Webcrea.IsMultilineMainDiv(colChild))
				{
					colChild = colChild.firstChild;
					colChild.style.backgroundColor = color;
					ClearEdit(colChild);
				}
				else
				{
					while(colChild)
					{
						if (colChild.nodeName != '#text' && !currObj.IsBulletDiv(colChild) && !currObj.IsSpinButton(colChild))
						{
							if(currNode && currNode.id != colChild.id) break;
							colChild.style.backgroundColor = color;
						}
						colChild = colChild.nextElementSibling;
					}
				}
			}
		};
		ClearEdit(colObj);
		if(bNotFocus && this.objDivPos) this.objDivPos.focus();
	},
	ClearRecordSet : function()
	{
		var ___bAll = arguments[0];
		if(this.arrRows) this.arrRows = new Array();
		else this.arrRows = null;
		this.arrStatus = new Array();
		this.arrRowInfo = new Array();
		if(this.bMulti) this.arrMulti = new Array();
		if(___bAll)
		{
			this.arrField = new Array();
			this.arrFieldType = new Array();
			this.arrData = new Array();
			this.arrStatus = new Array();
		}
		else
		{
			if(!this.arrField) return;
			for(var i=0; i<this.arrField.length; i++)
			{
				var field = this.arrField[i];
				this.arrData[field] = new Array();
				this.arrStatus[field] = new Array();
			}
		}
	},
	ClearSelect : function(rowObj) {
		var currObj = this;
		var colorText = this.colorText;
		var colorDisable = this.colorDisable;
		var colorDisableText = this.colorDisableText;
		var colorReadOnly = this.colorReadOnly;
		var colorReadOnlyText = this.colorReadOnlyText;
		var color = '', status = '';
		var bColorRow = false;
		var nSumRow = false;
		var nRow = -1;
		var bModifyRow = false;
		var bEvenRow = false;
		Clear = function(rowObj)
		{
			if((rowObj.rowIndex-currObj.nHeader)%2) bEvenRow = true;
			else bEvenRow = false;
			var bSumKeyExist = false;
			var colCnt = rowObj.cells.length;
			var bUseCellColur = false;
			for(var i=0; i<colCnt; i++)
			{
				var colObj = rowObj.cells[i];
				if(currObj.IsMultiSelectCell(colObj) && colObj.getAttribute('colorCell'))
				{
					color = colObj.getAttribute('colorCell');
					bUseCellColur = true;
				}
				else if(colObj.getAttribute('tdColorCell'))
				{
					color = colObj.getAttribute('tdColorCell');
					bUseCellColur = true;
				}
				if(!nSumRow && !bColorRow) colObj.style.backgroundColor = color;
				else colObj.style.backgroundColor = '';
				{
					var colChild = colObj.firstChild;
					var bEditTd = Webcrea.IsEditTd(colObj);
					if(bEditTd) colChild = colObj;
					else if(currObj.IsMultiSelectCell(colObj)) colChild = colObj;
					if(currObj.IsBulletDiv(colChild) || currObj.IsCodeButtonDiv(colChild))
					{
						colObj.style.backgroundColor = color;
						var children = colChild.children;
						for(var j=0; j<children.length; j++)
						{
							var subChild = children[j];
							if(subChild.tagName != 'DIV')
							{
								colChild = subChild;
								break;
							}
						}
					}
					var	bFindChildChg = false;
					while(colChild)
					{
						var bMultiline = false;
						if(Webcrea.IsMultilineMainDiv(colChild)) bMultiline = true;
						if (colChild.nodeName != '#text' && !currObj.IsBulletDiv(colChild) && !currObj.IsSpinButton(colChild))
						{
							bFindChildChg = true;
							var bPublicCol = false;
							var bStatusCol = false;
							var bDisabled = false;
							var bReadOnly = false;
							var bSumCell = colChild.getAttribute('sumcell');
							if(bSumCell) color = currObj.colorSum;
							else if(!nSumRow && !bColorRow && Webcrea.IsEmpty(status)) color = '';
							if(nSumRow || bSumCell) colChild.readOnly = true;
							var colorText = colChild.getAttribute('colorText');
							if(!colorText) colorText = '';
							var colorCell = colChild.getAttribute('colorCell');
							if(!colorCell) colorCell = '';
							var colorEven = '';
							if(bEvenRow && !nSumRow && !bSumCell && !bColorRow)
							{
								var classEven = colChild.getAttribute('classEven');
								if(classEven)
								{
									var arrEven = classEven.split(' ');
									if(arrEven.length>1) sClassEven = arrEven[1];
									else sClassEven = arrEven[0];
									var cssObj = Webcrea.GetCSS('.' + sClassEven);
									if(cssObj) colorEven = cssObj.style.backgroundColor;
								}
							}
							var id = colChild.id;
							if(id)
							{
								id = currObj.GetCellId(colChild);
								if(!Webcrea.IsEmpty(id) && id.toUpperCase() == '_STATUS_') bStatusCol = true;
								var cellInfo = currObj.GetCellInfo(id);
								if(cellInfo)
								{
									var sEnable = colChild.getAttribute('enable_status');
									if(sEnable && sEnable == 'false') bDisabled = true;
									else if(!sEnable) bDisabled = !cellInfo.bEnable;
									else bDisabled = false;
									bReadOnly = cellInfo.bReadOnly;
									if(nSumRow)
									{
										if(nSumRow == 1 && cellInfo.bSumKey)
										{
											bSumKeyExist = true;
											var nSumObj = currObj.arrSumInfo.searchId(nRow);
											var objSumInfo = currObj.arrSumInfo[nSumObj];
											if(objSumInfo && objSumInfo.arrSumKey.isearch(id)>=0) bPublicCol = true;
										}
										else if(nSumRow == 1 && currObj.nDataRow>1 && !bSumKeyExist && cellInfo.bSumCell) bSumKeyExist = true;
										if(nSumRow == 1 && !bSumKeyExist && cellInfo.bSumKeyDisplay)
										{
											var nSumObj = currObj.arrSumInfo.searchId(nRow);
											if(nSumObj>=0)
											{
												var objSumInfo = currObj.arrSumInfo[nSumObj];
												for(var j=i; j<colCnt; j++)
												{
													var colChkObj = rowObj.cells[j];
													var colChkChild = colChkObj.firstChild;
													if(!colChkChild || (colChkChild && colChkChild.nodeName == '#text')) colChkChild = colChkObj;
													if(colChkChild)
													{
														var idChk = currObj.GetCellId(colChkChild);
														if(objSumInfo.arrSumKey.isearch(idChk)>=0)
														{
															bPublicCol = true;
															break;
														}
													}
												}
											}
											else bPublicCol = true;
										}
										var value = currObj.GetValue(id, nRow);
										if(!Webcrea.IsEmpty(value))
										{
											if(value[0] == '>')
											{
												value = value.substr(1);
												colChild.style.textAlign = 'center';
												if(colChild.tagName == 'TD') colChild.innerText = value;
												else colChild.value = value;
											}
											else
											{
												var align = colChild.getAttribute('cellAlign');
												if(align) colChild.style.textAlign = align;
												else colChild.style.textAlign = '';
											}
										}
									}
								}
							}
							var b = Webcrea.IsEmpty(status) || (!Webcrea.IsEmpty(status) && Webcrea.IsEmpty(color));
							if(bPublicCol || bStatusCol)
							{
								colChild.style.backgroundColor = colorCell;
								colChild.style.color = colorText;
								currObj.SetMultiLineColor(colChild, color);
							}
							else
							{
								var orgColor = colChild.getAttribute('colorCell');
								var applyColor = (orgColor && (!bModifyRow || (bModifyRow && b)))?orgColor:color;
								if(applyColor=='' && colChild.nodeName == 'DIV' && colChild.style.backgroundColor == 'transparent') applyColor = 'transparent';
								colChild.style.backgroundColor = applyColor;
								if(!Webcrea.IsMultilineText(colObj)) colChild.style.color = colorText;
								if(orgColor && !bModifyRow) colorEven = '';
								currObj.SetMultiLineColor(colChild, (orgColor && (!bModifyRow || (bModifyRow && b)))?orgColor:color);
							}
							if(b && !Webcrea.IsEmpty(colorEven))
							{
								colChild.style.backgroundColor = colorEven;
							}
							else if(bDisabled)
							{
								if(b && !Webcrea.IsEmpty(colorDisable))
								{
									colChild.style.backgroundColor = colorDisable;
									currObj.SetMultiLineColor(colChild, colorDisable);
								}
								if(!Webcrea.IsEmpty(colorDisableText)) colChild.style.color = colorDisableText;
							}
							else if(bReadOnly)
							{
								if(b && !Webcrea.IsEmpty(colorReadOnly))
								{
									colChild.style.backgroundColor = colorReadOnly;
									currObj.SetMultiLineColor(colChild, colorReadOnly);
								}
								if(!Webcrea.IsEmpty(colorReadOnlyText)) colChild.style.color = colorReadOnlyText;
							}
						}
						if(!bFindChildChg && colObj.nodeName == 'TD')
						{
							if(nSumRow) colObj.style.backgroundColor = color;
							else colObj.style.backgroundColor = '';
							currObj.SetMultiLineColor(colObj, nSumRow?color:'');
						}
						if(bMultiline)
						{
							if(colChild.firstChild) colChild = colChild.firstChild;
							if(colChild.firstChild) colChild = colChild.firstChild;
						}
						else colChild = colChild.nextElementSibling;
						if(bEditTd) colChild = null;
					}
				}
				if(bUseCellColur) color = '';
			}
		};

		if(!rowObj && (this.IsForm() || this.bMyGrid))
		{
			var rowCnt = this.objTable.rows.length;
			for(var i=0; i<rowCnt; i++)
			{
				bColorRow = false;
				color='';
				rowObj = this.objTable.rows[i];
				if(this.IsGrid())
				{
					nRow = rowObj.getAttribute('rowno');
					if(this.IsDummyRow(i-this.nHeader)) continue;
					status = this.arrStatus[nRow];
					if(!Webcrea.IsEmpty(status)) bModifyRow = true;
					else bModifyRow = false;
					nSumRow = this.IsSumRow(i-this.nHeader, true);
					if(status == '+') color = this.colorInsert;
					else if(status == '-') color = this.colorDelete;
					else if(status == '*') color = this.colorModify;
					else
					{
						if(nSumRow && !this.IsSetTree()) color = this.colorSum;
					}
					if(this.IsColumn('(sel)') && this.arrData['(sel)'][nRow] == 'Y')
					{
						bColorRow = true;
						color = this.colorFocus;
					}
					if(this.bMulti && this.IsSelected(nRow))
					{
						bColorRow = true;
						var bExistMultiCheckBox = this.IsMultiSelectCell();
						if(!bExistMultiCheckBox && Webcrea.IsEmpty(this.colorSelect)) color = this.colorFocus;
						else color = this.colorSelect;
					}
				}
				Clear(rowObj);
			}
		}
		else
		{
			if(!rowObj) return;
			if(this.IsGrid())
			{
				nRow = rowObj.getAttribute('rowno');
				status = this.arrStatus[nRow];
				if(!Webcrea.IsEmpty(status)) bModifyRow = true;
				else bModifyRow = false;
				if(status == '+') color = this.colorInsert;
				else if(status == '-') color = this.colorDelete;
				else if(status == '*') color = this.colorModify;
				else
				{
					nSumRow = this.IsSumRow(rowObj.rowIndex-this.nHeader, true);
					if(nSumRow && !this.IsSetTree()) color = this.colorSum;
				}
				if(this.IsColumn('(sel)') && this.arrData['(sel)'][nRow] == 'Y')
				{
					bColorRow = true;
					color = this.colorFocus;
				}
				if(this.bMulti && this.IsSelected(nRow))
				{
					bColorRow = true;
					var bExistMultiCheckBox = this.IsMultiSelectCell();
					if(!bExistMultiCheckBox && Webcrea.IsEmpty(this.colorSelect)) color = this.colorFocus;
					else color = this.colorSelect;
				}
			}
			Clear(rowObj);
		}
	},
	CellColor : function(param)
	{
		var ___color = arguments[0];
		var ___param = arguments[1];
		var ___arr = ___param.split(',');
		var nSysIndex = Webcrea.GetPaletteColorIndex(___color);
		if(nSysIndex>=0) ___color = Webcrea.GetPaletteColor(this, nSysIndex+1);
		for(var ___i=0; ___i<___arr.length; ___i++)
		{
			var ___cellId = ___arr[___i];
			___cellId = ___cellId.trim();
			if(___arr.length==1 && this.IsCalendar() && Webcrea.currEventNode) ___cellId = this.GetCellId(Webcrea.currEventNode);
			this._Set_CellColor(___color, ___cellId);
		}
	},
	Clear : function(cellId)
	{
		if(Webcrea.IsEmpty(cellId))
		{
			if(this.IsSignPad() && this.SignaturePad)
			{
				this.SignaturePad.clear();
				this.messagObj.style.display='table-cell';
				return;
			}
			this.RemoveFile();
			this.objSelRow_B = null;
			this.objSelRow = null;
			this.currRowIndex = 0;
			this.currColIndex = 0;
			this.objSelCol_B = null;
			this.objSelCol = null;
		}
		this.ClearInit(cellId);
		if(Webcrea.IsEmpty(cellId)) this.ClearRecordSet();
		if(Webcrea.IsEmpty(cellId) && !this.IsProc()) this.Enable('', false);
	},
	ClearSelectInfo : function()
	{
		this.objSelRow_B = null;
		this.objSelRow = null;
		this.currRowIndex = 0;
		this.currColIndex = 0;
		this.objSelCol_B = null;
		this.objSelCol = null;
		this.currRowIndex_B = -1;
		this.objSelInfo = {};
	},
	CopyData : function(param)
	{
		return Webcrea.CopyData(this, param);
	},
	CopySelect : function(param)
	{
		return Webcrea.CopyData(this, param, true);
	},
	CrossTab : function(param)
	{
		this.bCrossTab = true;
		Webcrea.CrossTab(this, param);
	},
	DefaultColumn : function()
	{
		var param = arguments[0];
		if(Webcrea.IsEmpty(param)) return;
		var currObj = this;
		var CreateDesignColumn = function()
		{
			param = 'select ? from _DUMMY_';
			Webcrea.CreateRecordSet(currObj, param);
		};
		var arr = param.split(',');
		if(param.indexOf('?')>=0)
		{
			for(var i=0; i<arr.length; i++)
			{
				var sField = arr[i].trim();
				if(sField == '?')
				{
					arr.splice(i, 1);
					CreateDesignColumn();
					break;
				}
			}
		}
		for(var i=0; i<arr.length; i++)
		{
			var sField = arr[i].trim();
			Webcrea.MakeRecordSet(this, 'column', sField + '=');
		}
	},
	Disable : function(cellId, b)
	{
		if(b == undefined) b = true;
		this.Enable(cellId, !b);
	},
	Enable : function(cellId, b, target, bInit)
	{
		if(cellId == undefined) cellId = '';
		if(b == undefined) b = true;
		if(target == undefined) target = this.objTable;
		if(!target)
		{
			if(this.IsTab())
			{
				var currObj = this;
				var SetChildAttr = function(cell)
				{
					var childNodes = cell.childNodes;
					for(var i=0; i<childNodes.length; i++)
					{
						var cellChild = childNodes[i];
						if(cellChild.nodeName != 'INPUT')
						{
							if(cellChild.nodeName == 'DIV') SetChildAttr(cellChild);
							continue;
						}
						if(cellId && cellId != '')
						{
							var sCellId = currObj.GetCellId(cellChild);
							if(cellId == sCellId)
							{
								cellChild.disabled = !b;
								break;
							}
						}
						else cellChild.disabled = !b;
					}
				};
				SetChildAttr(this.objDivPos);
			}
			else if(this.IsSignPad() && this.SignaturePad)
			{
				var currObj = this.SignaturePad;
				if(b) currObj.on();
				else currObj.off();
			}
			return;
		}
		var currTr;
		var currObj = this;
		SetChildAttr = function(cell, bEditTd)
		{
			if(bEditTd || cell.nodeName == 'INPUT' || cell.nodeName == 'BUTTON' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT')
			{
				var type = cell.getAttribute('type');
				if(cellId && cellId != '')
				{
					var sCellId = currObj.GetCellId(cell);
					if(cellId == sCellId)
					{
						if(bEditTd && !b)
						{
							if(Webcrea.IsEditTdOpen(cell)) Webcrea.DisplayInputBox(cell, true);
						}
						cell.setAttribute('enable_status', b);
						var cellInfo = currObj.GetCellInfo(sCellId);
						if(currObj.IsMySelectBox(cell))
						{
							if(!currObj.IsMulti(cellId) && !currObj.IsMySelectBoxPublic(cell)) cell.readOnly = !b;
							cellInfo.bReadOnly = !b;
							currObj.ClearSelect(currTr);
							if(cellInfo.bCode) currObj.DisableCodeButton(cell);
							else if(cellInfo.bSpin) currObj.DisableSpinButton(cell);
							return;
						}
						if(cellInfo && cellInfo.bReadOnly)
						{
							currObj.ClearSelect(currTr);
							return;
						}
						if(cell.type == 'checkbox' || cell.type == 'radio')
						{
							cell.disabled = !b;
							if(currObj.IsMulti(cellId))
							{
								var objNext = cell.nextElementSibling;
								while(objNext)
								{
									if(objNext && objNext.nodeName == 'INPUT') objNext.disabled = !b;
									objNext = objNext.nextElementSibling;
								}
							}
							cell.disabled = !b;
						}
						else if(cell.type == 'button') cell.disabled = !b;
						else
						{
							cell.readOnly = !b;
							if(bEditTd)
							{
								cell.setAttribute('enable_status', b);
							}
						}
						if(cell.nodeName == 'SELECT')
						{
							var children = cell.children;
							for(var i=0; i<children.length; i++)
							{
								children[i].disabled = !b;
							}
						}
						var cellInfo = currObj.GetCellInfo(sCellId);
						cellInfo.bEnable = b;
						currObj.ClearSelect(currTr);
						if(cellInfo.bCode) currObj.DisableCodeButton(cell);
						else if(cellInfo.bSpin) currObj.DisableSpinButton(cell);
						return;
					}
				}
				else
				{
					var id = currObj.GetCellId(cell);
					var cellInfo = currObj.GetCellInfo(id);
					if(cellInfo && (cellInfo.bReadOnly || !cellInfo.bEnable)) return;
					if(currObj.IsMySelectBox(cell))
					{
						if(!currObj.IsMulti(cellId) && !currObj.IsMySelectBoxPublic(cell)) cell.readOnly = !b;
						currObj.ClearSelect(currTr);
						if(cellInfo.bCode) currObj.DisableCodeButton(cell);
						else if(cellInfo.bSpin) currObj.DisableSpinButton(cell);
						return;
					}
					if(cell.type == 'checkbox' || cell.type == 'radio')
					{
						if(currObj.IsMulti(cell.id))
						{
							var objNext = cell.nextElementSibling;
							while(objNext)
							{
								if(objNext && objNext.nodeName == 'INPUT') objNext.disabled = !b;
								objNext = objNext.nextElementSibling;
							}
						}
						cell.disabled = !b;
					}
					else if(cell.type == 'button')
					{
						if(!b && bInit && currObj.IsCrossTab()) return;
						cell.disabled = !b;
					}
					else
					{
						cell.readOnly = !b;
						if(bEditTd)
						{
							cell.setAttribute('enable_status', b);
						}
					}
					if(cell.nodeName == 'SELECT')
					{
						var children = cell.children;
						for(var i=0; i<children.length; i++)
						{
							children[i].disabled = !b;
						}
					}
				}
			}
			else if(cell.nodeName == 'IFRAME') Webcrea.DisableDiv(currObj.objDivPos, !b);
			if(cell.nodeName == 'DIV' &&(cell.getAttribute('role') == 'pMultiline' || cell.getAttribute('role') == 'multiline'))
			{
				var pDiv;
				var role= cell.getAttribute('role');
				if(role == 'pMultiline')
				{
					pDiv=cell;
					cell=cell.childNodes[0].childNodes[0];
				}
				var type = cell.getAttribute('type');
				if(cellId && cellId != '')
				{
					var sCellId = currObj.GetCellId(cell);
					if(cellId == sCellId)
					{
						cell.setAttribute('enable_status', b);
						var cellInfo = currObj.GetCellInfo(sCellId);
						if(cellInfo && cellInfo.bReadOnly)
						{
							currObj.ClearSelect(currTr);
							return;
						}
						else cell.readOnly = !b;
						var cellInfo = currObj.GetCellInfo(sCellId);
						cellInfo.bEnable = b;
						currObj.ClearSelect(currTr);
						return;
					}
				}
			}
			else if(cell.nodeName == 'DIV')
			{
				var childs = cell.childNodes;
				for(var i=0; i<childs.length; i++)
				{
					var child = childs[i];
					if((child.nodeName == 'DIV' && !currObj.IsBulletDiv(child)) || child.nodeName == 'INPUT') return SetChildAttr(child);
					else if(child.nodeName == 'LABEL')
					{
						var cellSubChild = child.firstChild;
						while(cellSubChild)
						{
							if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
							{
								if(cellId && cellId != '')
								{
									var sCellId = currObj.GetCellId(cellSubChild);
									if(cellId == sCellId)
									{
										cellSubChild.setAttribute('enable_status', b);
										cellSubChild.disabled = !b;
										var cellInfo = currObj.GetCellInfo(sCellId);
										cellInfo.bEnable = b;
										if(target == currObj.objTable) currObj.ClearSelect(currTr);
										return;
									}
								}
								else
								{
									var id = currObj.GetCellId(cellSubChild);
									var cellInfo = currObj.GetCellInfo(id);
									if(cellInfo && (cellInfo.bReadOnly || !cellInfo.bEnable)) return;
									cellSubChild.disabled = !b;
								}
							}
							cellSubChild = cellSubChild.nextElementSibling;
						}
					}
				}
			}
			else if(cell.nodeName == 'LABEL')
			{
				var cellSubChild = cell.firstChild;
				while(cellSubChild)
				{
					if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
					{
						if(cellId && cellId != '')
						{
							var sCellId = currObj.GetCellId(cellSubChild);
							if(cellId == sCellId)
							{
								cellSubChild.setAttribute('enable_status', b);
								cellSubChild.disabled = !b;
								var cellInfo = currObj.GetCellInfo(sCellId);
								cellInfo.bEnable = b;
								if(target == currObj.objTable) currObj.ClearSelect(currTr);
								return;
							}
						}
						else
						{
							var id = currObj.GetCellId(cellSubChild);
							var cellInfo = currObj.GetCellInfo(id);
							if(cellInfo && (cellInfo.bReadOnly || !cellInfo.bEnable)) return;
							cellSubChild.disabled = !b;
						}
					}
					cellSubChild = cellSubChild.nextElementSibling;
				}
			}
		};
		var EnableRow = function(trNode)
		{
			var trChildNodes = trNode.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					if(Webcrea.IsEditTd(td)) SetChildAttr(td, true);
					else
					{
						var colChildNodes = td.childNodes;
						for(var k=0; k<td.childNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							if (cell.nodeName == '#text') continue;
							SetChildAttr(cell);
						}
					}
				}
			}
		};
		if(Webcrea.IsEmpty(cellId) && b && this.bReadOnly)
		{
			this.bEnable = b;
			return;
		}
		if(this.IsGrid() && !Webcrea.IsEmpty(cellId))
		{
			if(cellId == '_SELECT_H')
			{
				target = this.objHTable;
				currTr = target.rows[0];
			}
			else currTr = target.rows[this.currRowIndex + this.nHeader];
			if(this.nDataRow>1)
			{
				var findTr = currTr;
				var findNode = Webcrea.FindNode(findTr, 'orgId', cellId);
				if(!findNode)
				{
					currTr = null;
					var seq = this.currRowIndex%this.nDataRow;
					var nCnt = 0;
					for(var i=seq; i<this.nDataRow; i++)
					{
						findTr = target.rows[this.currRowIndex + this.nHeader + nCnt];
						findNode = Webcrea.FindNode(findTr, 'orgId', cellId);
						if(findNode)
						{
							currTr = findTr;
							break;
						}
						nCnt++;
					}
				}
			}
			if(currTr) EnableRow(currTr);
		}
		else
		{
			for(var i=this.nHeader; i<target.rows.length; i++)
			{
				currTr = target.rows[i];
				EnableRow(currTr);
			}
		}
		if(Webcrea.IsEmpty(cellId))
		{
			this.bEnable = b;
			this.DisplayCodeButton();
		}
		else if(b && (this.IsForm() || this.bMyGrid))
		{
			this.DisplayCodeButton(cellId);
		}
	},
	FilteringRecordBackup : function()
	{
		var bRecovery = arguments[0];
		if(!bRecovery && this.arrRows_Filter) return;
		if(bRecovery)
		{
			this.arrRows = this.arrRows_Filter.slice();
			this.arrRowInfo = this.arrRowInfo_Filter.slice();
			if(this.bMulti) this.arrMulti = this.arrMulti_Filter.slice();
			this.arrStatus = this.arrStatus_Filter.slice();
			this.arrData = this.arrData_Filter.slice();
			for(var i=0; i<this.arrField.length; i++)
			{
				var field = this.arrField[i];
				if(this.arrData_Filter[field]) this.arrData[field] = this.arrData_Filter[field].slice();
				if(this.arrStatus_Filter[field]) this.arrStatus[field] = this.arrStatus_Filter[field].slice();
			}
		}
		else
		{
			this.arrRows_Filter = this.arrRows.slice();
			this.arrRowInfo_Filter = this.arrRowInfo.slice();
			if(this.bMulti) this.arrMulti_Filter = this.arrMulti.slice();
			this.arrStatus_Filter = this.arrStatus.slice();
			this.arrData_Filter = this.arrData.slice();
			for(var i=0; i<this.arrField.length; i++)
			{
				var field = this.arrField[i];
				if(this.arrData[field]) this.arrData_Filter[field] = this.arrData[field].slice();
				if(this.arrStatus[field]) this.arrStatus_Filter[field] = this.arrStatus[field].slice();
			}
		}
	},
	Filtering : function()
	{
		if(!this.IsGrid()) return;
		this.bFiltering = true;
		this.FilteringRecordBackup();
		var sWhere = '';
		for(var i=0; i<this.arrFilterObj.length; i++)
		{
			var dataObj = this.arrFilterObj[i];
			var arrChecked = dataObj.arrChecked;
			if(!arrChecked) continue;
			if(!dataObj.bColumn) continue;
			var sWherePer = '';
			var sField = dataObj.id;
			for(var j=0; j<arrChecked.length; j++)
			{
				if(!Webcrea.IsEmpty(sWherePer)) sWherePer += ' or ';
				var sCond = arrChecked[j];
				if(dataObj.bCode)
				{
					var n = sCond.lastIndexOf('(');
					if(n>=0)
					{
						sCond = sCond.substr(n+1);
						n = sCond.indexOf(')');
						if(n>0) sCond = sCond.substr(0, n);
					}
				}
				sWherePer = sWherePer + sField + "='" + sCond + "'";
			}
			if(!Webcrea.IsEmpty(sWherePer)) sWherePer = '(' + sWherePer + ')';
			if(!Webcrea.IsEmpty(sWhere)) sWhere = sWhere + ' and ';
			sWhere += sWherePer;
		}
		if(!Webcrea.IsEmpty(sWhere)) sWhere = ' where ' + sWhere;
		var sql = 'select * from ' + this.divPos + sWhere;

		this.FilteringRecordBackup(true);
		this.QueryParser(sql, this);
		this.OnSUM2();
		this.DisplayPublic();
		if(Webcrea.IsEmpty(sWhere)) this.bFiltering = false;
	},
	Find : function() {
		var param = arguments[0];
		if(!this.arrRows || this.arrRows.length<1) return;
		var bPrev = false;
		var bNext = false;
		var bFocus = false;
		var nLevel = -1;
		if(param.indexOf('next')>=0)
		{
			bNext = true;
			param.replace('next', '');
		}
		else if(param.indexOf('prev')>=0)
		{
			bPrev = true;
			param.replace('prev', '');
		}
		if(param.indexOf('focus')>=0)
		{
			bFocus = true;
			param.replace('focus', '');
		}
		var arrWhere;
		var n = param.indexOf('where');
		if(n>=0)
		{
			var sWhere = param.substr(n+5);
			sWhere = sWhere.trim();
			arrWhere = Webcrea.MakeToken(sWhere);
			param = param.substr(0, n);
			param = param.trim();
		}
		if(arrWhere.length<1) return;
		var bFind = false;
		var currObj = this;
		var Find = function(startNo, lastNo, bPrev)
		{
			var findDataRowNo = -1;
			if(bPrev)
			{
				for(var i=startNo; i>=lastNo; i--)
				{
					if(Webcrea.IsWhereData(currObj, i, arrWhere))
					{
						findDataRowNo = i;
						break;
					}
				}
				if(findDataRowNo<0 && startNo<currObj.arrRows.length-1)
				{
					lastNo = startNo+1;
					startNo = currObj.arrRows.length-1;
					findDataRowNo = Find(startNo, lastNo);
				}
			}
			else
			{
				for(var i=startNo; i<lastNo; i++)
				{
					if(Webcrea.IsWhereData(currObj, i, arrWhere))
					{
						findDataRowNo = i;
						break;
					}
				}
				if(findDataRowNo<0 && startNo>0)
				{
					lastNo = startNo;
					startNo = 0;
					findDataRowNo = Find(startNo, lastNo);
				}
			}
			return findDataRowNo;
		};
		var startNo = 0;
		var lastNo = this.arrRows.length;
		var currDataRowNo = this.GetRowDataNo();
		if(bNext)
		{
			startNo = Number(currDataRowNo) + 1;
			if(startNo == this.arrRows.length) startNo = 0;
		}
		else if(bPrev)
		{
			startNo = Number(currDataRowNo) - 1;
			if(startNo < 0) startNo = lastNo;
			lastNo = 0;
		}
		var findDataRowNo = Find(startNo, lastNo, bPrev);
		if(findDataRowNo>=0)
		{
			if(this.IsGrid()) this.SetRowNo(findDataRowNo);
		}
	},
	FocusColor : function()
	{
		var ___color = arguments[0];
		var ___param = arguments[1];
		var ___arr = ___param.split(',');
		for(var ___i=0; ___i<___arr.length; ___i++)
		{
			var ___cellId = ___arr[___i];
			___cellId = ___cellId.trim();
			this._Set_FocusColor(___color, ___cellId);
		}
	},
	FontSize : function()
	{
		var ___size = arguments[0];
		var ___param = arguments[1];
		var ___arr = ___param.split(',');
		for(var ___i=0; ___i<___arr.length; ___i++)
		{
			var ___cellId = ___arr[___i];
			___cellId = ___cellId.trim();
			this._Set_FontSize(___size, ___cellId);
		}
	},
	FontType : function()
	{
		var ___type = arguments[0];
		var ___param = arguments[1];
		var ___arr = ___param.split(',');
		for(var ___i=0; ___i<___arr.length; ___i++)
		{
			var ___cellId = ___arr[___i];
			___cellId = ___cellId.trim();
			this._Set_FontType(___type, ___cellId);
		}
	},
	InitializeObj : function() {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(this.objVSTHDivPos) this.objVSTHDivPos.style.top = this.initVScrlTHTop + 'px';
		if(nFileVersion<7020180927002)
		{
			this.objSelRow_B = null;
			this.objSelRow = null;
			this.objSelCol_B = null;
			this.objSelCol = null;
		}
		this.arrRecordSet = null;
		this.dataObj = null;
		this.objSelInfo = {};
		this.bMoveScrolling = false;
		this.arrGroupCell = null;
		this.arrGroupInfo = null;
		if(this.bReadAll && !this.bMore) this.pos = -1;
		else if(!this.bReadAll && !this.bMore) this.pos = 0;
		for(var i=0; i<this.arrObject.length; i++)
		{
			var obj = this.arrObject[i];
			if(!obj.arrRows) obj.OnINIT();
		}
		if(this.arrFilterObj && this.arrFilterObj.length>0)
		{
			this.bFiltering = false;
			this.arrRows_Filter = null;
			this.arrData_Filter = null;
			for(var i=0; i<this.arrFilterObj.length; i++)
			{
				var objFilter = this.arrFilterObj[i];
				objFilter.arrChecked = [];
				objFilter.arrData = [];
				var arrowImg = Webcrea.FindNode(objFilter.target, 'role', 'filterboxarrow');
				var imgOrg = arrowImg.getAttribute('imageorg');
				if(!Webcrea.IsEmpty(imgOrg))
				{
					arrowImg.setAttribute('imageout', imgOrg);
					arrowImg.src = Webcrea.GetImageLinkPath() + '/' + imgOrg;
				}
			}
		}
		this.DisplayMoreButton(false);
		if(this.bSortArraw) Webcrea.RemoveSortArraw(this);
	},
	InitializeOrg : function(cellId, bClear) {
		this.bApplyRecordSet = false;
		for(var i=0; i<this.arrObjAddInfo.length; i++)
		{
			var objAddInfo = this.arrObjAddInfo[i];
			var orgTableRow = objAddInfo.orgTableRow;
			objAddInfo.orgTableRow = orgTableRow;
			objAddInfo.strAddRow = Webcrea.MakeInnerHtml(orgTableRow);
			if(Webcrea.Browser.ie9)
			{
				var arrAddCol = [];
				var arrAddColAttr = [];
				if(orgTableRow)
				{
					var childNodes = orgTableRow.childNodes;
					for(var i=0; i < childNodes.length; i++)
					{
						arrAddColAttr[i] = [];
						var childNode = childNodes[i];
						if(childNode.nodeName == 'TD')
						{
							for(var j=0; j<childNode.attributes.length; j++)
							{
								var attr = childNode.attributes[j];
								var arr = [];
								arr[0] = attr.nodeName;
								arr[1] = attr.value;
								arrAddColAttr[i][arrAddColAttr[i].length] = arr;
							}
							var str = Webcrea.MakeInnerHtml(childNode);
							arrAddCol[arrAddCol.length] = str;
						}
					}
				}
				objAddInfo.arrAddCol = arrAddCol;
				objAddInfo.arrAddColAttr = arrAddColAttr;
			}
		}

		var orgPos = Webcrea.FindNode(this.orgPage, 'id', this.divPos);
		var orgTable = Webcrea.FindNode(orgPos, 'name', 'TABLE');
		if(cellId && cellId != '')
		{
			var cell = this.GetCellNode(cellId);
			var orgCell = Webcrea.FindNode(orgTable, 'id', this.divPos + '.' + cellId);
			if(cell.nodeName == 'TD')
			{
				if(Webcrea.IsEditTd(cell)) cell.innerText = orgCell.getAttribute('value');
				else cell.textContent = '';
			}
			else if(cell.nodeName == 'INPUT') cell.value = orgCell.getAttribute('value');
			else if(cell.nodeName == 'IMG')
			{
				cell.src = orgCell.getAttribute('src');
				cell.value = orgCell.getAttribute('value');
			}
			else if(cell.nodeName == 'SELECT')
			{
				cell.value = '';
				var orgValue = orgCell.getAttribute('value');
				cell.value = orgValue;
			}
			this.bApplyRecordSet = true;
			return;
		}

		if(this.IsGrid())
		{
			if(this.bMyGrid || this.statusMode == 0 || this.statusMode == 2) this.DeleteAll();
		}
		else
		{
			for(var i=0; i<this.objTable.rows.length; i++)
			{
				var tr = this.objTable.rows[i];
				var trChildNodes = tr.childNodes;
				for(var j=0; j<trChildNodes.length; j++)
				{
					var td = trChildNodes[j];
					if (td.nodeName == 'TD'){
						var colChildNodes = td.childNodes;
						if(Webcrea.IsEditTd(td))
						{
							colChildNodes = [];
							colChildNodes[0] = td;
						}
						for(var k=0; k<colChildNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(cell.nodeName == '#text') continue;
							if(this.IsCalendar() && this.IsCalendarCell(cell)) continue;
							if(Webcrea.IsEmpty(cell.id)) continue;
							var orgCell = Webcrea.FindNode(orgTable, 'id', cell.id);
							var cellId = this.GetCellId(cell);
							if(this.IsCalendar()) cellId = cellId.substr(0, cellId.length-2);
							if(!bClear && !this.IsColumn(cellId)) continue;
							if(cell.nodeName == 'INPUT' || cell.nodeName == 'BUTTON')
							{
								if(cell.type == 'button')
								{
									var sTitle = orgCell.getAttribute('value');
									cell.value = sTitle;
									if(sTitle[0]==':' || sTitle[0]=='@')
									{
										var tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
										Webcrea.SetTitleCommon(tdNode, this);
									}
								}
								else
								{
									cell.value = '';
									if(!bClear) this.InitValueCell(cell);
								}
							}
							else if(cell.nodeName == 'IMG')
							{
								cell.src = '';
								cell.value = '';
								cell.src = orgCell.getAttribute('src');
								cell.value = orgCell.getAttribute('value');
							}
							else if(cell.nodeName == 'SELECT')
							{
								cell.value = '';
								var orgValue = orgCell.getAttribute('value');
								cell.value = orgValue;
							}
							else if(Webcrea.IsEditTd(cell))
							{
								cell.innerText = '';
								if(!bClear) this.InitValueCell(cell);
							}
						}
					}
				}
			}
		}
		this.bApplyRecordSet = true;
	},
	Initialize : function() {
		var cellId = arguments[0];
		if(!Webcrea.IsEmpty(cellId)) return;
		this.ClearRecordSet();
		if(this.IsGrid()) this.DeleteAll();
		else
		{
			var orgPos = Webcrea.FindNode(this.orgPage, 'id', this.divPos);
			var orgTable = Webcrea.FindNode(orgPos, 'name', 'TABLE');
			for(var i=0; i<this.objTable.rows.length; i++)
			{
				var tr = this.objTable.rows[i];
				var trChildNodes = tr.childNodes;
				for(var j=0; j<trChildNodes.length; j++)
				{
					var td = trChildNodes[j];
					if (td.nodeName == 'TD'){
						var colChildNodes = td.childNodes;
						if(Webcrea.IsEditTd(td))
						{
							colChildNodes = [];
							colChildNodes[0] = td;
						}
						for(var k=0; k<colChildNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(cell.nodeName == '#text') continue;
							if(this.IsCalendar() && this.IsCalendarCell(cell)) continue;
							if(Webcrea.IsEmpty(cell.id)) continue;
							var orgCell = Webcrea.FindNode(orgTable, 'id', cell.id);
							var cellId = this.GetCellId(cell);
							if(this.IsCalendar()) cellId = cellId.substr(0, cellId.length-2);
							if(cell.nodeName == 'INPUT' || cell.nodeName == 'BUTTON')
							{
								if(cell.type == 'button')
								{
									var sTitle = orgCell.getAttribute('value');
									cell.value = sTitle;
									if(sTitle[0]==':' || sTitle[0]=='@')
									{
										var tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
										Webcrea.SetTitleCommon(tdNode, this);
									}
								}
								else
								{
									cell.value = '';
									this.InitValueCell(cell);
								}
							}
							else if(cell.nodeName == 'IMG')
							{
								cell.src = '';
								cell.value = '';
								cell.src = orgCell.getAttribute('src');
								cell.value = orgCell.getAttribute('value');
							}
							else if(cell.nodeName == 'SELECT')
							{
								cell.value = '';
								var orgValue = orgCell.getAttribute('value');
								cell.value = orgValue;
							}
							else if(Webcrea.IsEditTd(cell))
							{
								cell.innerText = '';
								cell.setAttribute('value', '');
								this.InitValueCell(cell);
								if(Webcrea.IsIE())
								{
									if(cell.style.position=='relative') cell.style.position='';
									if(cell.style.visibility=='hidden') cell.style.visibility='';
								}
							}
						}
					}
				}
			}
		}
	},
	InsertPos : function(pos) {
		if ((typeof pos).toLowerCase() == 'string') pos = pos.toLowerCase();
		if(pos == 'next') this.nInsertPos = 0;
		else if(pos == 'top') this.nInsertPos = 1;
		else if(pos == 'bottom') this.nInsertPos = 2;
	},
	LineColor : function()
	{
		Webcrea.LineStyle(arguments[0], this, 0);
	},
	LineStyle : function()
	{
		Webcrea.LineStyle(arguments[0], this, 1);
	},
	LineWidth : function()
	{
		Webcrea.LineStyle(arguments[0], this, 2);
	},
	ModifyRecordSet : function() {
		var ___param = {};
		___param.param = arguments[0];
		___param.bSync = arguments[1];
		var ___nRow = Webcrea.ModifyRecordSet(this, ___param.param);
		return ___nRow; 
	},
	ReadOnly : function(cellId, b, target) {
		if(!this.objTable) return;
		if(cellId == undefined) cellId = '';
		if(b == undefined) b = true;
		if(target == undefined) target = this.objTable;
		var currTr;
		var currObj = this;
		SetChildAttr = function(cell, bEditTd)
		{
			if(bEditTd || cell.nodeName == 'INPUT' || cell.nodeName == 'TEXTAREA' || cell.nodeName == 'SELECT')
			{
				var type = cell.getAttribute('type');
				if(cellId && cellId != '')
				{
					var sCellId = currObj.GetCellId(cell);
					if(cellId == sCellId)
					{
						if(bEditTd && b)
						{
							if(Webcrea.IsEditTdOpen(cell)) Webcrea.DisplayInputBox(cell, true);
						}
						if(currObj.IsMySelectBox(cell))
						{
							cell.setAttribute('readonly_status', b);
							if(!currObj.IsMulti(cellId) && !currObj.IsMySelectBoxPublic(cell)) cell.readOnly = b;
							var cellInfo = currObj.GetCellInfo(sCellId);
							cellInfo.bReadOnly = b;
							if(this.bMyGrid) currObj.ClearSelect(currTr);
							if(cellInfo.bCode) currObj.DisableCodeButton(cell);
							else if(cellInfo.bSpin) currObj.DisableSpinButton(cell);
							return;
						}
						cell.readOnly = b;
						if(bEditTd)
						{
							if(b) cell.setAttribute('readonly', 'readOnly');
							else cell.setAttribute('readonly', '');
						}
						if(cell.nodeName == 'SELECT')
						{
							var children = cell.children;
							for(var i=0; i<children.length; i++)
							{
								children[i].disabled = b;
							}
						}
						if(cell.type == 'checkbox' || cell.type == 'radio')
						{
							cell.disabled = b;
							if(currObj.IsMulti(cellId))
							{
								var objNext = cell.nextElementSibling;
								while(objNext)
								{
									if(objNext && objNext.nodeName == 'INPUT') objNext.disabled = b;
									objNext = objNext.nextElementSibling;
								}
							}
							cell.disabled = b;
						}
						var cellInfo = currObj.GetCellInfo(sCellId);
						cellInfo.bReadOnly = b;
						if(this.bMyGrid) currObj.ClearSelect(currTr);
						if(cellInfo.bCode) currObj.DisableCodeButton(cell);
						else if(cellInfo.bSpin) currObj.DisableSpinButton(cell);
						return;
					}
				}
				else
				{
					var sId = currObj.GetCellId(cell);
					var cellInfo = currObj.GetCellInfo(sId);
					if(cellInfo && (cellInfo.bReadOnly || !cellInfo.bEnable)) return;
					cell.readOnly = b;
					if(bEditTd)
					{
						if(b) cell.setAttribute('readonly', 'readOnly');
						else cell.setAttribute('readonly', '');
					}
					if(cell.nodeName == 'SELECT')
					{
						var children = cell.children;
						for(var i=0; i<children.length; i++)
						{
							children[i].disabled = b;
						}
					}
					if(cell.type == 'checkbox' || cell.type == 'radio')
					{
						cell.disabled = b;
						if(currObj.IsMulti(cell.id))
						{
							var objNext = cell.nextElementSibling;
							while(objNext)
							{
								if(objNext && objNext.nodeName == 'INPUT') objNext.disabled = b;
								objNext = objNext.nextElementSibling;
							}
						}
					}
				}
			}
			if(cell.nodeName == 'DIV' &&(cell.getAttribute('role') == 'pMultiline' || cell.getAttribute('role') == 'multiline'))
			{
				var pDiv;
				var role= cell.getAttribute('role');
				if(role == 'pMultiline')
				{
					pDiv=cell;
					cell=cell.childNodes[0].childNodes[0];
				}
				var type = cell.getAttribute('type');
				var sCellId = currObj.GetCellId(cell);
				if(cellId == sCellId)
				{
					cell.readOnly = b;
					if(cell.readOnly) cell.setAttribute('readonly','readOnly');
					else cell.removeAttribute('readonly');
					var cellInfo = currObj.GetCellInfo(sCellId);
					cellInfo.bReadOnly = b;
					if(this.bMyGrid) currObj.ClearSelect(currTr);
					if(cellInfo.bCode) currObj.DisableCodeButton(cell);
					else if(cellInfo.bSpin) currObj.DisableSpinButton(cell);
					return;
				}
			}
			else if(cell.nodeName == 'DIV')
			{
				var childs = cell.childNodes;
				for(var i=0; i<childs.length; i++)
				{
					var child = childs[i];
					if((child.nodeName == 'DIV' && !currObj.IsBulletDiv(child)) || child.nodeName == 'INPUT') return SetChildAttr(child);
					else if(child.nodeName == 'LABEL')
					{
						var cellSubChild = child.firstChild;
						while(cellSubChild)
						{
							if(cellSubChild.nodeName == 'INPUT' && (cellSubChild.type == 'checkbox' || cellSubChild.type == 'radio'))
							{
								if(cellId && cellId != '')
								{
									var sCellId = currObj.GetCellId(cellSubChild);
									if(cellId == sCellId)
									{
										cellSubChild.readOnly = b;
										var cellInfo = currObj.GetCellInfo(sCellId);
										cellInfo.bReadOnly = b;
										if(target == currObj.objTable) currObj.ClearSelect(currTr);
										return;
									}
								}
								else
								{
									var sId = currObj.GetCellId(cellSubChild);
									var cellInfo = currObj.GetCellInfo(sId);
									if(cellInfo && (cellInfo.bReadOnly || !cellInfo.bEnable)) return;
									cellSubChild.readOnly = b;
								}
							}
							cellSubChild = cellSubChild.nextElementSibling;
						}
					}
				}
			}
		};
		var ReadOnlyRow = function(trNode)
		{
			var trChildNodes = trNode.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					if(Webcrea.IsEditTd(td)) SetChildAttr(td, true);
					else
					{
						var colChildNodes = td.childNodes;
						for(var k=0; k<td.childNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(!cell) continue;
							if (cell.nodeName == '#text') continue;
							SetChildAttr(cell);
						}
					}
				}
			}
		};
		if(this.IsGrid() && !Webcrea.IsEmpty(cellId))
		{
			currTr = target.rows[this.currRowIndex + this.nHeader];
			if(this.nDataRow>1)
			{
				var findTr = currTr;
				var findNode = Webcrea.FindNode(findTr, 'orgId', cellId);
				if(!findNode)
				{
					currTr = null;
					var seq = this.currRowIndex%this.nDataRow;
					var nCnt = 0;
					for(var i=seq; i<this.nDataRow; i++)
					{
						findTr = target.rows[this.currRowIndex + this.nHeader + nCnt];
						findNode = Webcrea.FindNode(findTr, 'orgId', cellId);
						if(findNode)
						{
							currTr = findTr;
							break;
						}
						nCnt++;
					}
				}
			}
			if(currTr) ReadOnlyRow(currTr);
		}
		else
		{
			for(var i=this.nHeader; i<target.rows.length; i++)
			{
				currTr = target.rows[i];
				ReadOnlyRow(currTr);
			}
		}
		if(Webcrea.IsEmpty(cellId))
		{
			this.bReadOnly = b;
			this.DisplayCodeButton();
		}
		else if(!b && (this.IsForm() || this.bMyGrid))
		{
			this.DisplayCodeButton(cellId);
		}
	},
	Refresh : function(cellId) {
		this.arrStackEvent[this.arrStackEvent.length] = 'Refresh';
		this.bSearched = false;
		var bModify_b = this.objEvent.bModify;
		this.objEvent.bModify = false;
		if(this.IsPageScroll())
		{
			if(this.pageScrollOpt.bScript)
			{
				if(typeof window[this.divPage][this.divPosOrg].OnSCROLL != 'undefined')
					window[this.divPage][this.divPosOrg].OnSCROLL();
			}
			else this.DisplayPageScroll();
			this.arrStackEvent.removeByValue('Refresh');
			return;
		}
		var bRefreshEnable = false;
		if(!this.bEnable)
		{
			bRefreshEnable = true;
			this.Enable('', true);
		}
		if(Webcrea.IsEmpty(cellId) && (this.IsForm() || this.IsGrid()))
		{
			for(var i=0; i<this.arrObject.length; i++)
			{
				var cellObj = this.arrObject[i];
				if(!cellObj.IsMulti() && cellObj.bConvWhere) cellObj.Refresh();
			}
		}
		if(cellId || this.bQuery || this.IsCalendar())
		{
			if(Webcrea.IsEmpty(cellId))
			{
				this.bAddData = false;
				if(this.bMore)
				{
					this.pos = 0;
					this.bMore = false;
				}
				else this.pos = -1;
				this.pos_B = -1;
				this.statusMode = 0;
			}
			if(!Webcrea.IsEmpty(cellId))
			{
				this.OnQUERY(cellId);
				this.OnBUTTON(cellId);
				this.RefreshClose(bRefreshEnable);
			}
			else if(this.bQuery)
			{
				var func = this.objName + ".RefreshClose(" + bRefreshEnable + ");";
				var funcObj = {};
				funcObj.obj = this;
				funcObj.func = func;
				Webcrea.arrQueryCloseEvent[Webcrea.arrQueryCloseEvent.length] = funcObj;
				this.OnQUERY(cellId);
			}
			else
			{
				this.OnQUERY(cellId);
				this.RefreshClose(bRefreshEnable);
			}
		}
		else if(this.IsText()) this.InitDisplay();
		else
		{
			this.InitializeObj();
			this.InitializeOrg();
			var currObj = this;
			var SetValue = function(currNode)
			{
				var colChildNodes = currNode.childNodes;
				for(var k=0; k<currNode.childNodes.length; k++)
				{
					var cell = colChildNodes[k];
					if(cell.nodeName == 'DIV') SetValue(cell);
					else if(cell.attributes && cell.getAttribute('id'))
					{
						var sCellId = cell.getAttribute('id');
						sCellId	= currObj.GetCellId(sCellId);
						var cellInfo = currObj.GetCellInfo(sCellId);
						if(cellInfo && cellInfo.nInitMode == 0 && cellInfo.bRunTime) currObj.InitValueCell(cell);
						else if(typeof window[sCellId] != 'undefined') currObj.SetValueByData(sCellId, window[sCellId]);
					}
				}
			};
			for(var i=0; i<this.objTable.rows.length; i++)
			{
				var tr = this.objTable.rows[i];
				var trChildNodes = tr.childNodes;
				for(var j=0; j<trChildNodes.length; j++)
				{
					var td = trChildNodes[j];
					if (td.nodeName == 'TD'){
						var colChildNodes = td.childNodes;
						if(Webcrea.IsEditTd(td))
						{
							colChildNodes = [];
							colChildNodes[0] = td;
						}
						for(var k=0; k<colChildNodes.length; k++)
						{
							var cell = colChildNodes[k];
							if(cell.nodeName == 'DIV' && cell.getAttribute('role') !='pMultiline') SetValue(cell);
							else if((cell.attributes && cell.getAttribute('id')) || Webcrea.IsMultilineMainDiv(cell))
							{
								if(Webcrea.IsMultilineMainDiv(cell)) cell=cell.childNodes[0].childNodes[0];
								var sCellId = cell.getAttribute('id');
								sCellId	= this.GetCellId(sCellId);
								var cellInfo = this.GetCellInfo(sCellId);
								if(cellInfo && cellInfo.nInitMode == 0 && cellInfo.bRunTime) this.InitValueCell(cell);
								else if(typeof window[sCellId] != 'undefined') this.SetValueByData(sCellId, window[sCellId]);
							}
						}
					}
				}
			}
			this.RefreshClose(bRefreshEnable);
		}
	},
	RefreshClose : function(bRefreshEnable)
	{
		if(this.IsGrid())
		{
			this.RefreshHeader(false);
			var dataRowNo = this.objSelInfo.dataRowNo;
			if(dataRowNo>=0 && this.objTable.rows.length>this.nHeader)
			{
				var rowNo = this.GetRowNo(dataRowNo);
				if(rowNo<0) rowNo = 0;
				this.Select(rowNo);
			}
			if(this.IsList() && this.bAutoHeight)
			{
				var winHeight = Webcrea.GetHeight(document.documentElement, true);
				var divHeight = Webcrea.GetHeight(this.objDivPos, true);
				if(divHeight>winHeight) _my_File.OnResize();
			}
		}
		this.bSearched = true;
		this.objEvent.bModify = true;
		if(bRefreshEnable && this.IsForm())
		{
			this.objEvent.bChange = true;
			this.objEvent.bModify = true;
		}
		this.arrStackEvent.removeByValue('Refresh');
		if(!Webcrea.arrRefreshCloseEvent) return;
		for(var i=0; i<Webcrea.arrRefreshCloseEvent.length; i++)
		{
			var funcObj = Webcrea.arrRefreshCloseEvent[i];
			if(funcObj.obj != this) continue;
			try{setTimeout(function(){eval(funcObj.func)(funcObj.param);});}catch(e){}
			Webcrea.arrRefreshCloseEvent.splice(i);
		}
	},
	RunForm : function()
	{
		this.bRunForm = true;
		this.Refresh();
	},
	SelectRow : function() {
		var ___param = arguments[0];
		if(Webcrea.IsNull(___param)) return;
		var ___arr = ___param.split(' ');
		if(___arr.length<1) return;
		if(!this.bMulti) return;
		var ___bAll = true;
		var ___bTrue = true;
		var ___bToggle = false;
		var ___sWhere = '';
		var ___nRow = '';
		if(___arr[0].toLowerCase() == 'false') ___bTrue = false;
		else if(___arr[0].toLowerCase() == 'toggle') ___bToggle = true;
		if(___arr.length>1)
		{
			if(___arr[1].toLowerCase() == 'where')
			{
				for(var i=1; i<___arr.length; i++)
				{
					if(!Webcrea.IsEmpty(___sWhere)) ___sWhere += ' ';
					___sWhere += ___arr[i];
				}
			}
			else
			{
				if(Webcrea.IsFuncInnerVal(___arr[1])) ___nRow = Webcrea.GetFuncInnerVal(___arr[1]);
				else if(Webcrea.IsWebcreaObject(___arr[1])) ___nRow = Webcrea.GetWebcreaObjectData(___arr[1]);
				else ___nRow = ___arr[1];
			}
		}
		if(Webcrea.IsEmpty(___nRow))
		{
			if(this.arrMulti)
			{
				for(var ___i=0; ___i<this.arrMulti.length; ___i++)
				{
					var rowInfo = this.arrRowInfo[___i];
					if(rowInfo.bLock || rowInfo.bMultiSelectDisabled) continue;
					var ___b = false;
					if(!Webcrea.IsEmpty(___sWhere))
					{
						___b = this.IsWhere(___sWhere, ___i);
						if(___b)
						{
							___b = (___bToggle)?!this.arrMulti[___i]:___bTrue;
							this.arrMulti[___i] = ___b;
						}
					}
					else
					{
						___b = (___bToggle)?!this.arrMulti[___i]:___bTrue;
						this.arrMulti[___i] = ___b;
					}
					if(this.IsSetTree())
					{
						var treeInfo = this.arrTreeInfo[___i];
						treeInfo.bChecked = ___b;
					}
					if(___bAll) ___bAll = ___b;
				}
			}
		}
		else
		{
			if(!IsDigit(___nRow)) ___nRow = eval(___nRow);
			var ___b = (___bToggle)?!this.arrMulti[___nRow]:___bTrue;
			this.arrMulti[___nRow] = ___b;
			___bAll = ___b;
			if(___b)
			{
				for(var ___i=0; ___i<this.arrMulti.length; ___i++)
				{
					if(!this.arrMulti[___i])
					{
						___bAll = false;
						break;
					}
				}
			}
		}
		if(this.arrMulti)
		{
			if(___bAll && this.arrMulti.length<0) ___bAll = false;
			this.RefreshHeader(___bAll);
		}
		this.DisableEvent('SetModified');
		if(this.IsGrid())
		{
			if(this.arrMulti && this.arrMulti.length>0)
			{
				if(Webcrea.IsEmpty(___nRow) || this.objDrag)
				{
					for(var i=0; i<this.arrRows.length; i++)
					{
						if(!this.IsDisplaySelectRow(i, true)) continue;
						var rowInfo = this.arrRowInfo[i];
						if(rowInfo.bLock || rowInfo.bMultiSelectDisabled) continue;

						var value = this.arrMulti[i];
						if(this.objDrag)
						{
							var trNode = this.objTable.rows[this.nHeader + Number(i)];
							if(value) this.objDrag.arrDragRowNo[this.objDrag.arrDragRowNo.length] = i;
							else this.objDrag.arrDragRowNo = [];
						}
						var nCheckRow = this.GetRowNo(i);
						this.SetValueByData('_SELECT_', value, nCheckRow);
					}
				}
				else
				{
					var value = this.arrMulti[___nRow];
					var rowNo = this.GetRowNo(___nRow);
					this.SetValueByData('_SELECT_', value, rowNo);
				}
			}
		}
		else this.SyncData();
		this.RemoveEvent('SetModified');
	},
	SetAdding : function(mode) {
		mode ? this.runMode = 2 : this.runMode = 1;
	},
	SetDrag : function() {
		this.bDrag = arguments[0];
	},
	SetDrop : function() {
		var param = arguments[0];
		if(Webcrea.IsEmpty(param)) return;
		this.objDrop = {};
		this.objDrop.bNoDrop = false;
		this.objDrop.bMove = false;
		this.objDrop.bCopy = false;
		this.objDrop.bTop = false;
		this.objDrop.bBottom = false;
		this.objDrop.bSelect = false;
		this.objDrop.bStatus = false;
		this.objDrop.bFocus = false;
		var arrParam = Webcrea.MakeToken(param);
		for(var i=0; i<arrParam.length; i++)
		{
			if(i==0) this.objDrop.id = arrParam[0];
			else
			{
				if(arrParam[i] == 'NoDrop') this.objDrop.bNoDrop = true;
				if(arrParam[i] == 'move') this.objDrop.bMove = true;
				if(arrParam[i] == 'copy') this.objDrop.bCopy = true;
				else if(arrParam[i] == 'top') this.objDrop.bTop = true;
				else if(arrParam[i] == 'bottom') this.objDrop.bBottom = true;
				if(arrParam[i] == 'select') this.objDrop.bSelect = true;
				if(arrParam[i] == 'status') this.objDrop.bStatus = true;
				if(arrParam[i] == 'focus') this.objDrop.bFocus = true;
			}
		}
	},
	SetEnable : function()
	{
		var bEnable = arguments[0];
		var sParam = arguments[1];
		var arrItem;
		if(Webcrea.IsEmpty(sParam)) arrItem = this.arrCellId.slice();
		else arrItem = sParam.split(',');
		for(var i=0; i<arrItem.length; i++)
		{
			var sItem = arrItem[i].trim();
			if(sItem.indexOf('.')>0) sItem = this.GetCellId(sItem, true);
			if(Webcrea.IsEmpty(sItem)) continue;
			var cellInfo = this.GetCellInfo(sItem);
			if(cellInfo && (!cellInfo.bDataRow || cellInfo.tagName == 'TR')) continue;
			this.Enable(sItem, bEnable);
		}
	},
	SetFocus : function(cellId, bNotSelect) {
		Webcrea.SetStackEvent(this.divPos, 'setfocus', this);
		if(this.DisplayThreading)
		{
			var func = this.objName + ".SetFocus('" + cellId + "'," + bNotSelect + ")";
			setTimeout(func);
		}
		else this.SetFocusThread(cellId, bNotSelect);
	},
	SetFocusThread : function(cellId, bNotSelect) {
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var rowId = '';
		var tagetPos = this.objTable;
		this.SetCurrObjInfo();
		var bMenuButton = false;
		var evtNode = Webcrea.GetEventNode();
		if(evtNode && evtNode.tagName)
		{
			if(evtNode.tagName.toLowerCase() == 'button' || (evtNode.tagName.toLowerCase() == 'input' && evtNode.type && (evtNode.type.toLowerCase() == 'button' || evtNode.type.toLowerCase() == 'image')))
			{
				if(evtNode.getAttribute('menu') == 'menu') bMenuButton = true;
			}
		}
		if(window.event && window.event.type == 'keydown' && window.event.keyCode == 13) this.bEnterSetfocus = true;
		if(!this.bEnable && !bMenuButton) this.Enable('', true);
		if(this.IsGrid())
		{
			var nRow = 0;
			var dataRowNo = this._Get_RowNo();
			if(this.objSelRow && !this.IsDisplaySelectRow(dataRowNo, true)) return;
			if(dataRowNo>=0) nRow = this.GetRowNo(dataRowNo);
			if(nRow<0) nRow = 0;
			var nAll = this.objTable.rows.length-1;
			nAll -= this.nHeader;
			if(nAll<0) return;
			if(nAll < nRow) nRow = nAll;
			if(nRow == '') nRow = 0;
			if(nRow < 0) return;
			var bDisplay = true;
			if(Webcrea.focusObj != this)
			{
				bDisplay = false;
				this.objSelRow = null;
			}
			if(!bNotSelect) this.Select(nRow, bDisplay);
			tagetPos = this.objTable.rows[nRow+this.nHeader];
			rowId = this.objSelInfo.dataRowNo;
		}
		Webcrea.HideSelectBox();
		if(!tagetPos) return;
		var cellObj = null;
		if(cellId && cellId != '')
		{
			cellObj = Webcrea.FindNode(tagetPos, 'id', this.divPos + '.' + cellId + rowId);
			if(!cellObj) return;
			this.SetCurrObjInfo(cellObj);
			var bReadOnly = cellObj.readOnly;
			if(bReadOnly && cellObj.type == 'button') bReadOnly = false;
			if((cellObj.nodeName == 'INPUT' || cellObj.nodeName == 'BUTTON' || cellObj.nodeName == 'SELECT' || cellObj.nodeName == 'TEXTAREA') && !bReadOnly)
			{
				var bEventSkip = false;
				if(event && this.arrStackEvent.isearch('movecell')>=0) bEventSkip = true;
				if(bEventSkip) event.preventDefault?event.preventDefault():event.returnValue=false;
				cellObj.focus();
				if(cellObj.type != 'button')
				{
					cellObj.select();
					if(nFileVersion>=7020170510003 && !this.IsGrid()) Webcrea.OnGOTFOCUS(cellObj);
					if(nFileVersion>=7020200326001 && this.IsGrid()) Webcrea.OnGOTFOCUS(cellObj);
				}
			}
			else if(cellObj.nodeName == 'DIV' && cellObj.getAttribute('role') == 'multiline')
			{
				if(nFileVersion>=7020200306001 && !this.IsGrid()) Webcrea.OnGOTFOCUS(cellObj);
				if(nFileVersion>=7020200326001 && this.IsGrid()) Webcrea.OnGOTFOCUS(cellObj);
				Webcrea.DisplayMultiLine(cellObj);
			}
			else if(cellObj.nodeName == 'DIV' && this.IsBulletDiv(cellObj))
			{
				cellObj = Webcrea.FindNode(cellObj, 'id', this.divPos + '.' + cellId + rowId);
				var bEventSkip = false;
				if(event && this.arrStackEvent.isearch('movecell')>=0) bEventSkip = true;
				if(bEventSkip) event.preventDefault?event.preventDefault():event.returnValue=false;
				cellObj.focus();
				if(cellObj.type != 'button')
				{
					cellObj.select();
					if(nFileVersion>=7020170510003 && !this.IsGrid()) Webcrea.OnGOTFOCUS(cellObj);
					if(nFileVersion>=7020200326001 && this.IsGrid()) Webcrea.OnGOTFOCUS(cellObj);
				}
			}
			else if(Webcrea.IsEditTd(cellObj))
			{
				var focusCell = Webcrea.DisplayInputBox(cellObj);
				if(!focusCell) return;
				focusCell.select();
				if(this.IsForm() || this.IsGrid()) setTimeout(function(){var focusCell = Webcrea.DisplayInputBox(cellObj);focusCell.select();});
				if(nFileVersion>=7020170510003 && !this.IsGrid()) Webcrea.OnGOTFOCUS(focusCell);
				if(nFileVersion>=7020200326001 && this.IsGrid()) Webcrea.OnGOTFOCUS(focusCell);
			}
			else if(this.IsMySelectBox(cellObj))
			{
				if(bReadOnly) bReadOnly = Webcrea.IsReadOnly(cellObj);
				if(!bReadOnly)
				{
					Webcrea.DisplaySelectBox(cellObj, this);
					cellObj.focus();
				}
			}
			return;
		}

		var bFind = false;
		if(this.IsGrid())
		{
			var firstCell;
			var trChildNodes = tagetPos.childNodes;
			for(var j=0; j<trChildNodes.length; j++)
			{
				var td = trChildNodes[j];
				if (td.nodeName == 'TD'){
					var colChildNodes = td.childNodes;
					for(var k=0; k<td.childNodes.length; k++)
					{
						var cell = colChildNodes[k];
						if(cell.nodeName == 'INPUT') 
						{
							if(!firstCell) firstCell = cell;
							if(!cell.readOnly)
							{
								var currCellId = this.GetCellId(cell);
								var bHide = this.IsHideColumn(currCellId);
								if(bHide) continue;
								cell.focus();
								bFind = true;
								break;
							}
						}
					}
				}
				if(bFind) break;
			}
			if(!bFind && firstCell && !firstCell.readOnly)
			{
				var currCellId = this.GetCellId(firstCell);
				var bHide = this.IsHideColumn(currCellId);
				if(!bHide)
				{
					firstCell.focus();
				}
			}
			else if(this.objDivPos) this.objDivPos.focus();
		}
		else
		{
			for(var i=0; i<tagetPos.rows.length; i++)
			{
				var tr = tagetPos.rows[i];
				var trChildNodes = tr.childNodes;
				for(var j=0; j<trChildNodes.length; j++)
				{
					var td = trChildNodes[j];
					if(td.nodeName == '#text') continue;
					if (td.nodeName == 'TD'){
						if(Webcrea.IsEditTd(td))
						{
							if(!Webcrea.IsReadOnly(td))
							{
								var currCellId = this.GetCellId(td);
								var bHide = this.IsHideColumn(currCellId);
								if(bHide) continue;
								var cell = Webcrea.DisplayInputBox(td);
								if(!cell) continue;
								if(nFileVersion<7020191010001) cell.focus();
								else
								{
									cell.select();
									if(this.IsGrid()) setTimeout(function(){var cell = Webcrea.DisplayInputBox(td);cell.select();});
									if(nFileVersion>=7020170510003 && !this.IsGrid()) Webcrea.OnGOTFOCUS(cell);
									if(nFileVersion>=7020200326001 && this.IsGrid()) Webcrea.OnGOTFOCUS(cell);
								}
								bFind = true;
								break;
							}
						}
						else
						{
							var colChildNodes = td.childNodes;
							for(var k=0; k<td.childNodes.length; k++)
							{
								var cell = colChildNodes[k];
								if(cell.nodeName == 'INPUT' || cell.nodeName == 'SELECT' || this.IsMySelectBoxPublic(cell)) 
								{
									var currCellId = this.GetCellId(cell);
									var bReadOnly = this.IsReadOnly(currCellId);
									if(!bReadOnly)
									{
										var currCellId = this.GetCellId(cell);
										var bHide = this.IsHideColumn(currCellId);
										if(bHide) continue;
										cell.focus();
										bFind = true;
										break;
									}
								}
							}
						}
					}
					if(bFind) break;
				}
				if(bFind) break;
			}
		}
		if(this.IsGrid() && this.objTable.rows.length>this.nHeader) Webcrea.focusObj = this;
		else if(!this.IsGrid() && (this.IsEnable() || !this.IsReadOnly())) Webcrea.focusObj = this;
		this.SetCurrObjInfo(cellObj);
	},
	SetIme : function()
	{
		if(!Webcrea.IsIE()) return;
		var cellId = arguments[0];
		var bIme = arguments[1];
		var rowId = '';
		if(this.IsGrid()) rowId = this.currRowIndex;
		var currNode = Webcrea.FindNodePublic(this.objTable, 'id', this.divPos + '.' + cellId + rowId);
		if(!currNode) return;
		if(currNode.tagName == 'TD' || currNode.tagName == 'INPUT'
		 || (currNode.tagName == 'DIV' && currNode.getAttribute('role') == 'multiline'))
		{
			if(bIme) currNode.setAttribute('ime', 'true');
			else currNode.setAttribute('ime', 'false');
			if(currNode.tagName == 'TD')
			{
				var inputBox = Webcrea.FindNodePublic(currNode, 'name', 'INPUT');
				if(inputBox)
				{
					if(bIme) inputBox.style.imeMode = 'active';
					else inputBox.style.imeMode = 'inactive';
					if(!Win.bLoaded) inputBox.focus();
				}
			}
			if(currNode.tagName == 'INPUT')
			{
				if(bIme) currNode.style.imeMode = 'active';
				else currNode.style.imeMode = 'inactive';
				currNode.focus();
			}
		}
	},
	SetMoveCol : function()
	{
		if(!this.IsGrid()) return;
		if(!this.IsEnable() || this._Get_ReadOnly()) return;
		var currNode = arguments[0];
		var mode = arguments[1];
		if(currNode == this.objDivPos) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var findNodeFunc = function(node, findColno){
			var childNode;
			var childNodes = node.childNodes;
			for(var i=0; i < childNodes.length; i++)
			{
				var node = childNodes[i];
				if(node.nodeName == '#text') continue;
				var tabIndex = node.tabIndex;
				var colno = node.getAttribute('colno');
				var bFindColNo = true;
				if(!Webcrea.IsNull(findColno)) bFindColNo = findColno == colno?true:false;
				if(tabIndex>=0 && !Webcrea.IsReadOnly(node) && Webcrea.IsEnable(node) && bFindColNo)
				{
					childNode = node;
					break;
				}
				else if(node.childNodes.length>0)
				{
					var nodeT = findNodeFunc(node);
					if(nodeT)
					{
						childNode = nodeT;
						break;
					}
				}
			}
			return childNode;
		};
		var bSetFocus = false;
		var currColNo = currNode.getAttribute('colno');
		if(Webcrea.IsNull(currColNo)) currNode = findNodeFunc(currNode);
		if(!currNode) return;
		var nDataRow = this.GetRowDataNo(this.GetRowNo(currNode));
		if(nDataRow ==0 && mode == 6) return;
		currColNo = currNode.getAttribute('colno');
		if(Webcrea.IsNull(currColNo)) return;
		var currCellIdOrg = this.GetCellId(currNode);
		var currCellId = '';
		if(this.IsCrossTab()) currCellId = this.GetCellIdByNode(currNode);
		else currCellId = currCellIdOrg;
		if(Webcrea.IsEmpty(currCellId)) return;
		var currObj = this;
		var nNext=0;
		if(mode==5 || mode==6) nNext++;
		var findNextTrNodeFunc = function(trNode)
		{
			var findNode;
			currColNo = Number(currColNo);
			var findColNo = currColNo;
			if(mode==1) findColNo++;
			else if(mode==2) findColNo--;
			if(findColNo<0) return;
			var nTrDataRow = currObj.GetRowDataNo(currObj.GetRowNo(trNode));
			var arrNode = [];
			Webcrea.FindNodeAll(trNode, 'colno', findColNo.toString(), arrNode);
			for(var i=0; i<arrNode.length; i++)
			{
				var node = arrNode[i];
				var tabIndex = node.tabIndex;
				if(tabIndex>=0 && !currObj.IsSumRow(nTrDataRow) && !Webcrea.IsReadOnly(node) && Webcrea.IsEnable(node)) findNode = node;
				else findNode = findNodeFunc(node, findColNo);
				if(findNode) break;
			}
			if(findNode)
			{
				if(mode==5 || mode==6)
				{
					if((window[currObj.divPage][currObj.divPosOrg][currCellIdOrg] && typeof window[currObj.divPage][currObj.divPosOrg][currCellIdOrg].OnMODIFY != 'undefined' && currObj.objEvent.bModify)
						|| (window[currObj.divPage][currObj.divPosOrg][currCellIdOrg] && typeof window[currObj.divPage][currObj.divPosOrg][currCellIdOrg].OnCHANGE != 'undefined' && currObj.objEvent.bChange))
					{
						var seq = currObj.currRowIndex%currObj.nDataRow;
						var currRowIndex = currObj.currRowIndex;
						var objSelRow = currObj.objSelRow;
						var objSelInfo = {};
						objSelInfo.rowNo = currObj.objSelInfo.rowNo;
						objSelInfo.rowNo_B = currObj.objSelInfo.rowNo_B;
						objSelInfo.dataRowNo = currObj.objSelInfo.dataRowNo;
						objSelInfo.dataRowNo_B = currObj.objSelInfo.dataRowNo_B
						var nRow_b = currRowIndex-seq;
						if(mode==5) nRow_b=nRow_b-(nNext*currObj.nDataRow);
						else nRow_b=nRow_b+(nNext*currObj.nDataRow);
						currObj.Select(nRow_b);
						if(currNode && currNode.nodeName == 'INPUT')
						{
							if(Webcrea.IsEditTd(findNode) && Webcrea.IsIE())
							{
								Webcrea.DisplayInputBox(currNode, true);
							}
							else if(!Webcrea.IsEditTd(findNode))
							{
								currNode.focus();
								currNode.select();
								if(window[currObj.divPage][currObj.divPosOrg][currCellIdOrg] && typeof window[currObj.divPage][currObj.divPosOrg][currCellIdOrg].OnCHANGE != 'undefined' && currObj.objEvent.bChange)
									window[currObj.divPage][currObj.divPosOrg][currCellIdOrg].OnCHANGE(currNode);
								if(window[currObj.divPage][currObj.divPosOrg][currCellIdOrg] && typeof window[currObj.divPage][currObj.divPosOrg][currCellIdOrg].OnMODIFY != 'undefined' && currObj.objEvent.bModify)
									window[currObj.divPage][currObj.divPosOrg][currCellIdOrg].OnMODIFY(currNode);
							}
						}
						var nClearRow = currObj.objSelInfo.rowNo;
						nClearRow -= (nClearRow%currObj.nDataRow>0)?(nClearRow%currObj.nDataRow):0;
						currObj.objSelRow = objSelRow;
						currObj.objSelInfo = objSelInfo;
						if(nFileVersion >= 7020200326001) currObj.SetFocus(currCellId);
						else currObj.SetFocus(currCellId, true);
						for(var i=0; i<currObj.nDataRow; i++)
						{
							var n = nClearRow + i;
							var clearRow = currObj.objTable.rows[n+currObj.nHeader];
							currObj.ClearSelect(clearRow);
						}
					}
					else currObj.SetFocus(currCellId);
					bSetFocus = true;
				}
			}
			else
			{
				var bHeader=false;
				if(mode == 5)
				{
					for(var i=0; i<currObj.nDataRow; i++)
					{
						trNode = trNode.nextElementSibling;
						if(!trNode) break;
					}
				}
				else if(mode == 6)
				{
					var trNode_b = trNode;
					for(var i=0; i<currObj.nDataRow; i++)
					{
						trNode = trNode.previousElementSibling;
						if(!trNode) break;
						else
						{
							var trId = trNode.id;
							if(trId == currObj.divPos + '.' + 'Header')
							{
								bHeader=true;
								currObj.MoveScroll(mode);
								trNode = trNode_b;
								for(var i=0; i<currObj.nDataRow; i++)
								{
									trNode = trNode.previousElementSibling;
									if(!trNode) break;
								}
								break;
							}
						}
					}
				}
				if(!trNode)
				{
					if(mode == 5 || mode == 6)
					{
						if(mode==5) mode=6;
						else mode=5;
						for(var i=0; i<nNext-1; i++) currObj.MoveScroll(mode);
						if(!bSetFocus && nNext==1) currObj.MoveScroll(mode);
					}
					return;
				}
				if(!bHeader)
				{
					currObj.MoveScroll(mode);
					nNext++;
				}
				findNextTrNodeFunc(trNode);
			}
		};
		var trNode = Webcrea.FindParentNode(currNode, 'name', 'TR');
		if(trNode)
		{
			if(mode == 5)
			{
				for(var i=0; i<this.nDataRow; i++)
				{
					var nRow = this.GetRowNo(currNode);
					if(this.IsDummyRow(nRow+1))
					{
						trNode = null;
						break;
					}
					trNode = trNode.nextElementSibling;
					if(!trNode) break;
				}
			}
			else if(mode == 6)
			{
				for(var i=0; i<this.nDataRow; i++)
				{
					trNode = trNode.previousElementSibling;
					if(!trNode) break;
				}
			}
			if(trNode)
			{
				findNextTrNodeFunc(trNode);
			}
		}
	},
	Hide : function() {
		if(this.objDivPos.style.display == 'none') return;
		if(arguments[0])
		{
			this._Set_Visible(false, arguments[0]);
			return;
		}
		var bPanelAutoHide = arguments[1];
		if(this.IsPanel())
		{
			var panelOpt = this.GetPanelOpt();
			if(panelOpt.type == 0 && bPanelAutoHide) return;
			if(!this.panelInit)
			{
				Webcrea.Trace('PANEL LOADING...');
				var func = this.objName + '.Hide();';
				setTimeout(func, 300);
				return;
			}
			var objPos = Webcrea.FindNode(this.objDivPos, 'id', this.divPos);
			this.sliderOrgSize = 0;
			if(panelOpt.handler == 0 || panelOpt.handler == 3 || panelOpt.handler == 4) this.sliderOrgSize = Webcrea.GetHeight(objPos);
			else this.sliderOrgSize = Webcrea.GetWidth(objPos);

			this.sliderAction = false;
			this.sliderHandler = panelOpt.handler;
			Webcrea.SliderRun(this);
		}
		else (this.objGDivPos)?this.objGDivPos.style.display = 'none':this.objDivPos.style.display = 'none';
		if(this.IsGroupBox() && this.objTDivPos) this.objTDivPos.style.display = 'none';
	},
	Show : function() {
		if(arguments[0])
		{
			this._Set_Visible(true, arguments[0]);
			return;
		}
		if(this.objType == 3)
		{
			if(!this.panelInit)
			{
				Webcrea.Trace('PANEL LOADING...');
				var func = this.objName + '.Show();';
				setTimeout(func, 300);
				return;
			}
			var opacity = this.objDivPos.style.opacity;
			if(opacity==0)
			{
				this.objDivPos.style.opacity = 100;
				var objFrm = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
				if(objFrm) objFrm.style.opacity = 100;
			}
			var objPos = Webcrea.FindNode(this.objDivPos, 'id', this.divPos);
			var panelOpt = this.GetPanelOpt();
			this.objDivPos.style.display = 'block';
			this.sliderOrgSize = 0;
			if(panelOpt.handler == 0 || panelOpt.handler == 3 || panelOpt.handler == 4) this.sliderOrgSize = Webcrea.GetHeight(objPos);
			else this.sliderOrgSize = Webcrea.GetWidth(objPos);

			this.sliderAction = true;
			this.sliderHandler = panelOpt.handler;
			Webcrea.SliderRun(this);
		}
		else
		{
			(this.objGDivPos)?this.objGDivPos.style.display = 'block':this.objDivPos.style.display = 'block';
			if(this.bMyGrid)
			{
				this.SetRowPageCount();
				if(!this.IsCrossTab() && this.layoutOpt.bHorz != undefined && this.layoutOpt.bHorz) this.DisplayColSize();
				this.DisplayScroll('', 2);
				this.DisplayScrlArrow();
			}
			else if(this.IsList())
			{
				var nGWidth = Webcrea.GetWidth(this.objGDivPos, true);
				if(nGWidth==0 && this.initGDivWidth>0) this.OnAdjustGrid(1);
			}
		}
		if(this.IsGroupBox() && this.objTDivPos) this.objTDivPos.style.display = 'block';
		else if(this.IsCrossTab()) Webcrea.CrossTabColSize(this);
		else if(this.IsGrid()) this.DisplaySumRow();
	},
	HideRow : function()
	{
		if(!this.IsForm()) return;
		var param = arguments[0];
		var arrParam = [];
		if(param) arrParam = param.split(',');
		var currObj = this;

		var HideRow = function(cellId)
		{
			var trNode;
			if(Webcrea.IsNumber(cellId)) trNode = currObj.objTable.rows[cellId];
			else if(Webcrea.IsObject(cellId)) trNode = cellId;
			else
			{
				var cell = Webcrea.FindNodePublic(currObj.objDivPos, 'orgId', cellId);
				if(!cell) return;
				trNode = Webcrea.FindParentNode(cell, 'name', 'TR');
			}
			if(!trNode) return;
			trNode.style.display = 'none';
		};
		for(var i=0; i<arrParam.length; i++) HideRow(arrParam[i]);
	},
	HideColumn : function(param) {
		var arrParam = param.split(',');
		if(arrParam.length<1) return;
		var currObj = this;

		var HideColumn = function(cellId, bRight)
		{
			var orgPos = Webcrea.FindNode(currObj.orgPage, 'id', currObj.divPos);
			var orgTable = Webcrea.FindNode(orgPos, 'name', 'TABLE');
			if(!orgTable) return;
			var cell = Webcrea.FindNode(orgTable, 'orgId', cellId);
			if(!cell) return;
			var seq = cell.getAttribute('colno');
			if(seq == undefined) return;
			var cellInfo = currObj.GetCellInfo(cellId);
			if(!cellInfo) return;
			if(currObj.IsGrid() && (cellInfo.realType == 'radio' || cellInfo.realType == 'checkbox'))
			{
				Webcrea.MsgBox(Webcrea.LoadString('msgWarnHideColumn'));
				return;
			}
			var arrRel = [];
			if(currObj.IsGrid()) Webcrea.FindNodeAll(currObj.objHTable, 'colno', seq, arrRel);
			else Webcrea.FindNodeAll(currObj.objTable, 'colno', seq, arrRel);

			var arrH = [], arr = [], arrF = [];
			if(currObj.IsGrid())
			{
				var colGroupH = Webcrea.FindNode(currObj.objHDivPos, 'name', 'COLGROUP');
				Webcrea.FindNodeAll(colGroupH, 'name', 'COL', arrH);
				if(currObj.objFDivPos)
				{
					var colGroupF = Webcrea.FindNode(currObj.objFDivPos, 'name', 'COLGROUP');
					Webcrea.FindNodeAll(colGroupF, 'name', 'COL', arrF);
				}
			}
			var colGroup = Webcrea.FindNode(currObj.objDivPos, 'name', 'COLGROUP');
			Webcrea.FindNodeAll(colGroup, 'name', 'COL', arr);

			if(arr[seq].getAttribute('display') == '0')
			{
				cellInfo.bDisplay = true;
				return;
			}
			else cellInfo.bDisplay = false;
			var sAttrWidth = 'orgWidth';
			if(arr[seq].getAttribute('designWidth')) sAttrWidth = 'designWidth';
			if(currObj.IsForm())
			{
				var calWidth = Number(arr[seq].getAttribute(sAttrWidth));
				arr[seq].style.width = 0 + 'px';
				arr[seq].setAttribute('display', '0');
				if(!currObj.layoutOpt.bHorz) arr[seq].setAttribute('style', 'visibility:hidden');

				var divWidth = Number(Webcrea.GetWidth(currObj.objDivPos, true));
				var divLeft = Number(Webcrea.GetLeft(currObj.objDivPos));
				currObj.objTable.style.width = divWidth-calWidth + 'px';
				currObj.objDivPos.style.width = divWidth-calWidth + 'px';
				if(bRight)
				{
					currObj.objDivPos.style.left = divLeft+calWidth + 'px';
					currObj.initLeft = divLeft+calWidth;
				}
			}
			else
			{
				var cnt=0;
				var calWidth=0;
				for(var i=0; i<arr.length; i++)
				{
					if(i==seq || arr[i].getAttribute('display') == '0' || arr[i].getAttribute('fixWidth') == 'fixWidth')
					{
						var sAttrWidth_r = sAttrWidth;
						if(arr[i].getAttribute('fixWidth') != 'fixWidth' && arr[i].getAttribute('resizewidth')) sAttrWidth_r = 'resizewidth';
						calWidth += Number(arr[i].getAttribute(sAttrWidth_r));
						cnt++;
					}
				}

				var per=0, per1=0;
				if(cnt>0) 
				{
					per = Math.floor(calWidth/(arr.length-cnt));
					per1 = calWidth - per*(arr.length-cnt);
				}
				var nLast = arr.length-1;
				if(nLast == seq) nLast--;
				for(var i=arr.length-1; i>=0; i--)
				{
					var chgWidth = 0;
					var sAttrWidth_r = sAttrWidth;
					if(arr[i].getAttribute('fixWidth') != 'fixWidth' && arr[i].getAttribute('resizewidth')) sAttrWidth_r = 'resizewidth';
					var width = arr[i].getAttribute(sAttrWidth_r);
					width = Number(width);
					if(arr[i].getAttribute('display') == '0' || (i != seq && arr[i].getAttribute('fixWidth') == 'fixWidth'))
					{
						nLast--;
						continue;
					}
					if(seq != i)
					{
						chgWidth = width + per;
						if(i == nLast)
						{
							chgWidth += per1;
							nLast = -1;
						}
					}
					arr[i].style.width = chgWidth + 'px';
					if(currObj.IsGrid())
					{
						arrH[i].style.width = chgWidth + 'px';
						if(arrF[i]) arrF[i].style.width = chgWidth + 'px';
					}
				}
				if(currObj.IsGrid())
				{
					arrH[seq].setAttribute('display', '0');
					if(arrF[seq]) arrF[seq].setAttribute('display', '0');
					if(!currObj.layoutOpt.bHorz)
					{
						arrH[seq].setAttribute('style', 'visibility:hidden');
						if(arrF[seq]) arrF[seq].setAttribute('style', 'visibility:hidden');
					}
					if(!currObj.bHScroll)
					{
						var nWidth = 0;
						if(currObj.IsList()) nWidth = Webcrea.GetWidth(currObj.objDivPos);
						else nWidth = Webcrea.GetWidth(currObj.objDivPos, true);
						currObj.objDivPos.style.width = nWidth + 'px';
					}
				}
				arr[seq].setAttribute('display', '0');
				if(!currObj.layoutOpt.bHorz) arr[seq].setAttribute('style', 'visibility:hidden');
			}
			for(var i=0; i<arrRel.length; i++)
			{
				var relNode = arrRel[i];
				if(relNode.tagName == 'COL') continue;
				var tdNode;
				if(relNode.tagName == 'TD')
				{
					var classId = relNode.getAttribute('class');
					relNode.setAttribute('orgClass', classId);
					relNode.setAttribute('class', '');
					tdNode = relNode;
				}
				else tdNode = Webcrea.FindParentNode(relNode, 'name', 'TD');
				if(!tdNode) continue;
				tdNode.setAttribute('orgColNo', seq);
				tdNode.setAttribute('orgId', cellId);
				tdNode.setAttribute('orgText', tdNode.innerHTML);
				tdNode.innerHTML = '';
			}
			var objHideColumnInfo = {};
			objHideColumnInfo.id = cellId;
			objHideColumnInfo.colNo = seq;
			if(!currObj.arrHideColumnInfo) currObj.arrHideColumnInfo = [];
			currObj.arrHideColumnInfo[currObj.arrHideColumnInfo.length] = objHideColumnInfo;
		};

		var arrHide = [];
		var bRight = false;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i].trim();
			if(sParam.toLowerCase() == 'right')
			{
				bRight = true;
				continue;
			}
			var cellInfo = this.GetCellInfo(sParam);
			if(!cellInfo) continue;
			arrHide[arrHide.length] = sParam;
		}
		for(var i=0; i<arrHide.length; i++) HideColumn(arrHide[i], bRight);
		if(this.IsForm() || this.bMyGrid || (this.IsList() && this.bEnableList)) this.DisplayCodeButton();
	},
	IsHideCol : function(colNo) {
		var bRet = false;
		if(!this.arrColHGroup) return bRet;
		if(this.arrColHGroup.length<1) return bRet;
		var node = this.arrColHGroup[colNo];
		if(!node) return bRet;
		if(node.style.visibility == 'hidden' || node.getAttribute('orgwidth')=='0' || node.getAttribute('display')=='0') bRet = true;
		return bRet;
	},
	IsHideColumn : function(cellId) {
		var bRet = this.GetHideColumn(cellId)>=0?true:false;
		if(!bRet)
		{
			var cellInfo = this.GetCellInfo(cellId);
			if(cellInfo) bRet = !cellInfo.bDisplay;
		}
		return bRet;
	},
	GetHideColumn : function(cellId) {
		var seq = -1;
		if(!this.arrHideColumnInfo) return seq;
		var n = this.arrHideColumnInfo.searchId(cellId);
		if(n>=0) seq = this.arrHideColumnInfo[n].colNo;
		return seq;
	},
	ShowRow : function()
	{
		if(!this.IsForm()) return;
		var param = arguments[0];
		var arrParam = [];
		if(param) arrParam = param.split(',');
		var currObj = this;

		var ShowRow = function(cellId)
		{
			var trNode;
			if(Webcrea.IsNumber(cellId)) trNode = currObj.objTable.rows[cellId];
			else if(Webcrea.IsObject(cellId)) trNode = cellId;
			else
			{
				var cell = Webcrea.FindNodePublic(currObj.objDivPos, 'orgId', cellId);
				if(!cell) return;
				trNode = Webcrea.FindParentNode(cell, 'name', 'TR');
			}
			if(!trNode) return;
			trNode.style.display = '';
		};
		for(var i=0; i<arrParam.length; i++) ShowRow(arrParam[i]);
	},
	ShowColumn : function(param) {
		var arrParam = [];
		if(param) arrParam = param.split(',');
		var currObj = this;

		var ShowColumn = function(cellId, bRight)
		{
			var cell = Webcrea.FindNode(currObj.objTable, 'orgId', cellId);
			if(!cell) return;
			if(!currObj.arrHideColumnInfo) return;
			var seq = currObj.GetHideColumn(cellId);
			if(seq<0) return;

			var arrRel = [];
			if(currObj.IsGrid()) Webcrea.FindNodeAll(currObj.objHTable, 'orgColNo', seq, arrRel);
			else Webcrea.FindNodeAll(currObj.objTable, 'orgColNo', seq, arrRel);

			var arrH = [], arr = [];
			if(currObj.IsGrid())
			{
				var colGroupH = Webcrea.FindNode(currObj.objHDivPos, 'name', 'COLGROUP');
				Webcrea.FindNodeAll(colGroupH, 'name', 'COL', arrH);
			}
			var colGroup = Webcrea.FindNode(currObj.objDivPos, 'name', 'COLGROUP');
			Webcrea.FindNodeAll(colGroup, 'name', 'COL', arr);

			if(arr[seq].getAttribute('display') == '1') return;
			var cellInfo = currObj.GetCellInfo(cellId);
			if(cellInfo && !cellInfo.bDisplay) cellInfo.bDisplay = true;
			var sAttrWidth = 'orgWidth';
			if(arr[seq].getAttribute('designWidth')) sAttrWidth = 'designWidth';
			if(currObj.IsForm())
			{
				var calWidth = Number(arr[seq].getAttribute(sAttrWidth));
				var divWidth = Number(Webcrea.GetWidth(currObj.objDivPos, true));
				var divLeft = Number(Webcrea.GetLeft(currObj.objDivPos));
				currObj.objTable.style.width = divWidth+calWidth + 'px';
				currObj.objDivPos.style.width = divWidth+calWidth + 'px';
				if(bRight) currObj.objDivPos.style.left = divLeft-calWidth + 'px';

				arr[seq].style.width = calWidth + 'px';
				arr[seq].setAttribute('display', '1');
				if(!currObj.layoutOpt.bHorz) arr[seq].style.visibility='';
			}
			else
			{
				var cnt=0;
				var calWidth=0;
				for(var i=0; i<arr.length; i++)
				{
					if(i!=seq && arr[i].getAttribute('display') == '0')
					{
						calWidth += Number(arr[i].getAttribute(sAttrWidth));
						cnt++;
					}
				}

				var per=0, per1=0;
				if(cnt>0)
				{
					per = Math.floor(calWidth/(arr.length-cnt));
					per1 = calWidth - per*(arr.length-cnt);
				}
				var nLast = arr.length-1;
				if(nLast == seq) nLast--;
				for(var i=0; i<arr.length; i++)
				{
					var chgWidth = 0;
					var width = arr[i].getAttribute(sAttrWidth);
					width = Number(width);
					if(seq != i && arr[i].getAttribute('display') == '0') continue;
					chgWidth = width + per;
					if(i == nLast) chgWidth += per1;
					arr[i].style.width = chgWidth + 'px';
					if(currObj.IsGrid()) arrH[i].style.width = chgWidth + 'px';
				}
				if(currObj.IsGrid())
				{
					arrH[seq].setAttribute('display', '1');
					if(!currObj.layoutOpt.bHorz) arrH[seq].style.visibility='';
				}
				arr[seq].setAttribute('display', '1');
				if(!currObj.layoutOpt.bHorz) arr[seq].style.visibility='';
			}
			for(var i=0; i<arrRel.length; i++)
			{
				var tdNode = arrRel[i];
				if(tdNode.tagName == 'COL') continue;

				var text = tdNode.getAttribute('orgText');
				if(text)
				{
					tdNode.innerHTML = text;
					tdNode.removeAttribute('orgText');
					tdNode.removeAttribute('orgColNo');
					var classId = tdNode.getAttribute('orgClass');
					if(classId) tdNode.setAttribute('class', classId);
					tdNode.setAttribute('orgClass', '');
					tdNode.setAttribute('orgId', '');
				}
			}
			currObj.arrHideColumnInfo.removeById(cellId);
			if(!currObj.IsGrid()) currObj.RefreshCol(cellId);
		};

		var arrShow = [];
		var bRight = false;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i].trim();
			if(sParam.toLowerCase() == 'right')
			{
				bRight = true;
				continue;
			}
			var cellInfo = this.GetCellInfo(sParam);
			if(!cellInfo) continue;
			arrShow[arrShow.length] = sParam;
		}
		if(arrShow.length>0)
		{
			for(var i=0; i<arrShow.length; i++) ShowColumn(arrShow[i], bRight);
		}
		else
		{
			for(var i=0; i<this.arrCellId.length; i++)
			{
				var cellId = this.GetCellId(this.arrCellId[i]);
				ShowColumn(cellId, bRight);
			}
		}
		if(this.IsGrid() && this.layoutOpt && this.layoutOpt.bHorz) this.DisplayColSize();
		if(this.IsForm() || this.bMyGrid || (this.IsList() && this.bEnableList)) this.DisplayCodeButton();
	},
	Sort : function() {
		var ___sOpt = arguments[0];
		var ___bRefresh = arguments[1];
		var currNode = Webcrea.GetEventNode();
		var bSortBtn = this.IsSortBtnCell(currNode);
		if(bSortBtn && currNode.tagName == 'DIV')
		{
			var pTd = Webcrea.FindParentNode(currNode, 'name', 'TD');
			currNode = Webcrea.FindNodePublic(pTd, 'name', 'INPUT');
			if(!currNode) return;
		}
		if(Webcrea.IsEmpty(___sOpt))
		{
			if(___bRefresh)
			{
				this.sortField = '';
				this.bSort = false;
				bSortBtn = true;
			}
			else return;
		}
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var aField = [];
		var aSortOpt = [];
		var ___arrOpt = ___sOpt.split(',');
		if(!___bRefresh)
		{
			for(var i=0; i<___arrOpt.length; i++)
			{
				var s = ___arrOpt[i].trim();
				var arr = s.split(' ');
				aField[aField.length] = arr[0].trim();
				var sortOpt = false;
				if(arr.length>1)
				{
					sortOpt = arr[1].trim();
					if(sortOpt.toLowerCase() == 'desc') sortOpt = true;
					else if(sortOpt.toLowerCase() == 'asc') sortOpt = false;
				}
				aSortOpt[aSortOpt.length] = sortOpt;
			}
		}
		if(bSortBtn)
		{
			var ___cellId = aField[0];
			if(___cellId == this.sortField) this.bSort = !this.bSort;
			else this.bSort = false;
			aSortOpt[0] = this.bSort;
			this.sortField = ___cellId;
			if(this.nSortHistory>0 || (this.nSortHistory<0 && WebcreaInfo.nSortHistory>0))
			{
				if(Webcrea.bCtrlKey) this.bSort = false;
				else if(this.arrSortHistory)
				{
					for(var i=0; i<this.arrSortHistory.length; i++)
					{
						var obj = this.arrSortHistory[i];
						if(obj.id == ___cellId && !Webcrea.IsEmpty(___cellId))
						{
							this.bSort = !obj.bSort;
							break;
						}
					}
				}
			}
			if(this.bSortArraw && !___bRefresh) Webcrea.DisplaySortArraw(currNode, this.bSort, this);
			if(this.nSortHistory>0 || (this.nSortHistory<0 && WebcreaInfo.nSortHistory>0))
			{
				var bExist = false;
				if(!this.arrSortHistory || Webcrea.bCtrlKey)
				{
					this.arrSortHistory = [];
					aSortOpt = [];
				}
				for(var i=0; i<this.arrSortHistory.length; i++)
				{
					var obj = this.arrSortHistory[i];
					aField[i] = obj.id;
					if(obj.id == ___cellId && !Webcrea.IsEmpty(___cellId))
					{
						bExist = true;
						aSortOpt[i] = !obj.bSort;
						obj.bSort = aSortOpt[i];
					}
					else aSortOpt[i] = obj.bSort;
				}
				if(!bExist && !Webcrea.IsEmpty(___cellId))
				{
					aField[aField.length] = ___cellId;
					aSortOpt[aSortOpt.length] = this.bSort;
					var currObj = {};
					currObj.id = ___cellId;
					currObj.bSort = this.bSort;
					currObj.node = currNode;
					this.arrSortHistory[this.arrSortHistory.length] = currObj;
				}
			}
		}
		else
		{
			if(aField.length>0) this.sortField = aField[0];
			if(aSortOpt.length>0) this.bSort = aSortOpt[0];
		}
		if(this.IsColumn(this.dataSeqField) && aField.search(this.dataSeqField)<0)
		{
			aField[aField.length] = this.dataSeqField;
			aSortOpt[aSortOpt.length] = false;
		}
		Webcrea.DataSort(aField, this, aSortOpt);
		if(nFileVersion>=7020201014001 && !this.bSearched) return;
		this.pos_B = -1;
		this.statusMode = 0;
		if(!this.arrStackEvent || (this.arrStackEvent && this.arrStackEvent.isearch('onsum2')<0)) this.OnSUM2();
		this.DisplayPublic(true);
		if(this.IsGrid() && bSortBtn)
		{
			var nRow = this._Get_RowNo();
			if(nRow<0) nRow = 0;
			this.Select(nRow, true);
			if(window[this.divPage][this.divPosOrg].Data && typeof window[this.divPage][this.divPosOrg].Data.OnCLICK != 'undefined')
			{
				window[this.divPage][this.divPosOrg].Data.OnCLICK();
			}
		}
		else if(this.IsGrid() && this.bSortArraw && !bSortBtn)
		{
			var arrSort=[];
			Webcrea.FindNodeAll(document.getElementById(this.divPos), 'role', 'sort',arrSort);
			if(arrSort.length<1) return;
			var objId='';
			for(var i=0; i<arrSort.length; i++)
			{
				if(arrSort[i].getAttribute('relid') == ___arrOpt[0] && !Webcrea.IsEmpty(___arrOpt[0]))
				{
					objId=arrSort[i].id;
					break;
				}
			}
			var obj=document.getElementById(objId);
			Webcrea.DisplaySortArraw(obj, sortOpt, this);
		}
	},
	SyncDataNotThread : function()
	{
		var bThreadDisplayOrg = this.bThreadDisplay;
		this.SyncData();
		this.bThreadDisplay = bThreadDisplayOrg;
	},
	SyncData : function() {
		this.pos_B = -1;
		this.statusMode = 0;
		var dataRowNo = Number(this.objSelInfo.dataRowNo);
		var currRowNo = this.GetRowNo(dataRowNo);
		if(this.IsListTreeGrid())
		{
			var nDataRows = this.arrRows.length;
			if(nDataRows<this.nRowsPage)
			{
				this.DisplayPublic(true, 0, true);
				currRowNo = this.GetRowNo(dataRowNo);
			}
			else this.DisplayPublic(true);
		}
		else this.DisplayPublic(true);
		if(this.IsDisplayDataRow(dataRowNo))
		{
			if(this.IsList() && !this.IsListTreeGrid()) this._Set_RowNo(dataRowNo);
			else this.Select(currRowNo, true);
		}
	},
	TextColor : function(param) {
		var arrParam = param.split(' ');
		if(arrParam.length<1) return;
		var color = arrParam[0];
		var sObjs = '';
		if(arrParam.length>1)
		{
			for(var i=1; i<arrParam.length; i++)
			{
				if(!Webcrea.IsEmpty(sObjs)) sObjs += ' ';
				sObjs += arrParam[i];
			}
		}
		var arrObj = sObjs.split(',');
		for(var i=0; i<arrObj.length; i++)
		{
			var cellId = arrObj[i];
			cellId = cellId.trim();
			if(arrObj.length==1 && this.IsCalendar() && Webcrea.currEventNode) cellId = this.GetCellId(Webcrea.currEventNode);
			this._Set_TextColor(color, cellId);
		}
	},
	avg : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('avg', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	avg0 : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('avg0', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	CodeTextByCode : function()
	{
		var cellId = arguments[0];
		var sCode = arguments[1];
		var nRow = arguments[2];
		if(Webcrea.IsNull(nRow)) nRow = this.GetCurrRowIndex();
		var nRowData = this.GetRowDataNo(nRow);
		var obj = this.GetObject(cellId);
		return obj.CodeText(sCode, nRowData);
	},
	CodeText : function(cellId)
	{
		var sValue = '';
		if(this.IsGrid())
		{
			if(!this.arrRows) return sValue;
			if(this.arrRows.length < 1) return sValue;
		}
		if(cellId && cellId != '')
		{
			var cell = this.GetCellNode(cellId);
			if(!cell) return sValue;
			if(cell.nodeName == 'SELECT')
			{
				if(cell.selectedIndex < 0) sValue = '';
				else sValue = cell.options[cell.selectedIndex].textContent;
			}
			else if(cell.nodeName == 'INPUT' && this.IsMySelectBox(cell)) sValue = cell.value;
			else if(cell.nodeName == 'INPUT' && (cell.type == 'checkbox' || cell.type == 'radio'))
			{
				if(this.IsMulti(cellId))
				{
					var objParent = cell.parentNode;
					if(objParent.nodeName == 'LABEL')
					{
						var findId = objParent.getAttribute('for');
						cell = Webcrea.FindNode(objParent, 'id', findId);
						if(cell.checked) sValue = objParent.textContent;
						while(objParent)
						{
							objParent = objParent.nextElementSibling;
							if(!objParent) break;
							if(objParent && objParent.nodeName != '#text' && objParent.nodeName != 'BR')
							{
								findId = objParent.getAttribute('for');
								cell = Webcrea.FindNode(objParent, 'id', findId);
								if(cell.checked)
								{
									if(sValue == '') sValue = objParent.textContent;
									else sValue = sValue + ',' + objParent.textContent;
								}
							}
						}
					}
					else
					{
						var objNext = cell.nextElementSibling;
						if(cell.checked) sValue = objNext.textContent;
						while(objNext)
						{
							objNext = objNext.nextElementSibling;
							if(!objNext) break;
							if(objNext && objNext.nodeName == 'INPUT')
							{
								var objLabel = objNext.nextElementSibling;
								if(objNext.checked)
								{
									if(sValue == '') sValue = objLabel.textContent;
									else sValue = sValue + ',' + objLabel.textContent;
								}
							}
						}
					}
				}
				else
				{
					if(cell.type == 'radio')
					{
						var radios = [];
						var targetNode = Webcrea.FindParentNode(cell, 'name', 'TR');
						if(this.IsForm()) targetNode = this.objTable;
						Webcrea.FindNodeAll(targetNode, 'name', cell.name, radios);
						for(var i=0; i<radios.length; i++)
						{
							var radio = radios[i];
							if(radio.checked)
							{
								if(Webcrea.IsIE69()) sValue = radio.text;
								else sValue = radio.textContent;
								break;
							}
						}
					}
					else sValue = cell.parentNode.textContent;
				}
			}
		}
		return sValue;
	},
	count : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('count', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	count0 : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('count0', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	CurRowNo : function()
	{
		return this._Get_RowNo();
	},
	IsBWZ : function(cellId)
	{
		var ___cellId = arguments[0];
		if(Webcrea.IsEmpty(___cellId)) return false;
		var ___cellInfo = this.GetCellInfo(___cellId);
		if(!___cellInfo) return false;
		return ___cellInfo.bBWZ;
	},
	IsEnable : function(cellId, rowNo)
	{
		if(Webcrea.IsObject(cellId))
		{
			var sEnable = cellId.getAttribute('enable_status');
			var bEnable = true;
			if(sEnable && sEnable == 'false') bEnable = false;
			else if(!sEnable) bEnable = !cellId.disabled;
			return bEnable;
		}
		return this._Get_Enable(cellId, rowNo);
	},
	IsReadOnly : function(cellId, rowNo)
	{
		return this._Get_ReadOnly(cellId, rowNo);
	},
	IsVisible : function()
	{
		var ___bRet=1;
		if(this.objGDivPos) ___bRet = this.objGDivPos.style.display == 'none'?0:1;
		else ___bRet = this.objDivPos.style.display == 'none'?0:1;
		return ___bRet;
	},
	max : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('max', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	min : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('min', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	min0 : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('min0', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	RowText : function(colId, nRow)
	{
		var sRet = this.GetValueByDisplay1(colId, nRow);
		if(!this.IsColumnNumber(colId)) sRet = sRet.toString();
		return sRet;
	},
	RowValue : function(colId, nRow)
	{
		return this.RowText(colId, nRow);
	},
	RowNumber : function(colId, nRow)
	{
		var ret = this.RowValue(colId, nRow);
		return Webcrea.NumberReDef(ret);
	},
	SelectCount : function()
	{
		return this._Get_SelectCount();
	},
	stddev : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('stddev', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	stddev0 : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('stddev0', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	sum : function()
	{
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('sum', ___cellId);
		else
		{
			var data = this.GetValue(___cellId);
			if(WebcreaInfo.bBigNumber && data.length>15) ___ret = data;
			else ___ret = Webcrea.NumberReDef(data);
		}
		return ___ret;
	},
	tot : function() {
		var ___cellId = arguments[0];
		var ___ret = 0;
		if(this.IsGrid() || this.IsProc()) ___ret = this.GetCalculation('tot', ___cellId);
		else ___ret = Webcrea.NumberReDef(this.GetValue(___cellId));
		return ___ret;
	},
	OnBUTTON : function()
	{
		var ___cellId = arguments[0];
		if(___cellId && ___cellId != '')
		{
			var ___cellInfo = this.GetCellInfo(___cellId);
			if(!___cellInfo) return;
			var ___id = ___cellInfo.id;
			var ___currNode = Webcrea.FindNode(this.objDivPos, 'id', ___id);
			if(window[this.divPage][this.divPosOrg][___cellId] && typeof window[this.divPage][this.divPosOrg][___cellId].OnHBUTTON != 'undefined')
				window[this.divPage][this.divPosOrg][___cellId].OnHBUTTON(___currNode);
			if(window[this.divPage][this.divPosOrg][___cellId] && typeof window[this.divPage][this.divPosOrg][___cellId].OnBUTTON != 'undefined')
				window[this.divPage][this.divPosOrg][___cellId].OnBUTTON(___currNode);
		}
		else
		{
			for(var ___i=0; ___i<this.arrCellId.length; ___i++)
			{
				___cellId = this.arrCellId[___i];
				var ___cellInfo = this.GetCellInfo(___cellId);
				if(!___cellInfo) return;
				var ___sOrgId = ___cellInfo.orgId;
				if(!Webcrea.IsEmpty(___sOrgId)) this.OnBUTTON(___sOrgId);
			}
		}
	},
	OnCALCULATE : function()
	{
		if(this.bSearched && this.bAutoCalc && typeof window[this.divPage][this.divPosOrg].OnCALCULATE != 'undefined')
		{
			this.bAutoCalc = false;
			window[this.divPage][this.divPosOrg].OnCALCULATE();
			this.bAutoCalc = true;
			if(typeof window[this.divPage][this.divPosOrg].OnSUM2 != 'undefined')
			{
				this.OnSUM2();
				var currObj = this;
					setTimeout(function(){
					currObj.DisplayPublic(true);
				});
			}
		}
	},
	OnCLICK : function(cellId)
	{
		if(cellId && cellId != '')
		{
			if(typeof window[this.divPage][this.divPosOrg][cellId].OnCLICK != 'undefined')
				window[this.divPage][this.divPosOrg][cellId].OnCLICK();
		}
	},
	OnDATA : function()
	{
		this.arrStackEvent[this.arrStackEvent.length] = 'ondata';
		if(window[this.divPage][this.divPosOrg] && typeof window[this.divPage][this.divPosOrg].OnDATA != 'undefined' && this.objEvent.bOnData)
			window[this.divPage][this.divPosOrg].OnDATA();
		this.arrStackEvent.removeByValue('ondata');
	},
	OnDBLCLK : function(obj)
	{
		let funcData = 'Data';
		if(this.IsList())
		{
			let trNode = obj;
			if(trNode.tagName != 'TR') trNode = Webcrea.FindParentNode(obj, 'name', 'TR');
			if(trNode)
			{
				let currRowNo = trNode.getAttribute('seq');
				if(currRowNo && currRowNo>0) funcData += currRowNo;
			}
		}
		if(typeof window[this.divPage][this.divPosOrg][funcData].OnDBLCLK != 'undefined')
		{
			window[this.divPage][this.divPosOrg][funcData].OnDBLCLK();
		}
		else if(this.IsSetTree())
		{
			var opt = {};
			opt.bSelectOnly = true;
			opt.bSelf = true;
			var currNode = Webcrea.GetEventNode();
			this.ExpandTreeGrid(currNode, opt);
			var func = 'Data';
			let currRowNo = currNode.getAttribute('seq');
			if(currNode.tagName == 'TR' && currRowNo && currRowNo>0) func += currRowNo;
			if(typeof window[this.divPage][this.divPosOrg][func].OnEXPAND != 'undefined') window[this.divPage][this.divPosOrg][func].OnEXPAND();
		}
	},
	OnDELETE : function()
	{
		if(this.IsGrid()) window[this.divPage][this.divPosOrg].Data.OnDELETE();
	},
	OnFILEOPEN : function()
	{
		if(typeof window[this.divPage][this.divPosOrg].OnFILEOPEN != 'undefined')
			window[this.divPage][this.divPosOrg].OnFILEOPEN();
	},
	OnSCROLL : function()
	{
		this.bSearched = false;
		this.InitializeObj();
		if(typeof window[this.divPage][this.divPosOrg].OnSCROLL != 'undefined')
			window[this.divPage][this.divPosOrg].OnSCROLL();
	},
	OnQUERY : function(cellId)
	{
		this.bSearched = false;
		this.bBaseFormRecord = false;
		if(cellId && cellId != '')
		{
			if(!window[this.divPage][this.divPosOrg][cellId])
			{
				Webcrea.Trace('OnQUERY : ' + Webcrea.LoadString('msgErrObject') + '(' + cellId + ')');
			}
			if(window[this.divPage][this.divPosOrg][cellId] && typeof window[this.divPage][this.divPosOrg][cellId].OnQUERY != 'undefined')
				window[this.divPage][this.divPosOrg][cellId].OnQUERY();
		}
		else
		{
			this.arrStackEvent[this.arrStackEvent.length] = 'onquery';
			this.InitializeObj();
			var bPreQuery = !this.bMore;
			if(window[this.divPage][this.divPosOrg] && typeof window[this.divPage][this.divPosOrg].OnQUERY != 'undefined')
				window[this.divPage][this.divPosOrg].OnQUERY(bPreQuery, this);
			this.arrStackEvent.removeByValue('onquery');
		}
	},
	OnPARTIAL : function()
	{
		if(this.bReadAll) return;
		this.arrStackEvent[this.arrStackEvent.length] = 'onpartial';
		if(typeof window[this.divPage][this.divPosOrg].OnPARTIAL != 'undefined')
			window[this.divPage][this.divPosOrg].OnPARTIAL();
		this.arrStackEvent.removeByValue('onpartial');
	},
	OnRECORDSET : function()
	{
		if(typeof window[this.divPage][this.divPosOrg].OnRECORDSET != 'undefined')
		{
			this.arrStackEvent[this.arrStackEvent.length] = 'onrecordset';
			window[this.divPage][this.divPosOrg].OnRECORDSET(this);
			this.arrStackEvent.removeByValue('onrecordset');
		}
		if(!this.bBaseFormRecordApply && !Webcrea.IsEmpty(_my_sqlStatus) && _my_sqlStatus.indexOf('[DATA BLANK]')==0) this.bBaseFormRecordApply = true;
		if(this.bBaseFormRecordApply)
		{
			this.bBaseFormRecordApply = false;
			this.SetBaseFormRecord();
		}
	},
	OnSUM2 : function()
	{
		this.arrStackEvent[this.arrStackEvent.length] = 'onsum2';
		if(typeof window[this.divPage][this.divPosOrg].OnSUM2 != 'undefined')
		{
			this.RemoveSum();
			window[this.divPage][this.divPosOrg].OnSUM2();
		}
		this.arrStackEvent.removeByValue('onsum2');
	},
	OnLOADED : function()
	{
		window[this.divPage][this.divPosOrg].OnLOADED();
	},
	OnLOSTFOCUS : function()
	{
		if(!this.objSelRow) return;
		var evt = window.event;
		if(!evt) return;
		var obj = Webcrea.GetEventNode(evt);
		var rowId = this.GetRowNo(obj);
		var currRowId = this.GetCurrRowIndex();
		if(rowId == currRowId) return;
		if(this.rowLostFocusEvent)
		{
			eval(this.rowLostFocusEvent)();
			this.rowLostFocusEvent = null;
		}
	},
	OnAdjustMainDiv : function()
	{
		this.pageObj.OnAdjustMainDiv(this);
	},
	OnAdjustHScroll : function()
	{
		if(this.objHDivPos) this.objHDivPos.scrollLeft = this.objDivPos.scrollLeft;
		if(this.objFDivPos) this.objFDivPos.scrollLeft = this.objDivPos.scrollLeft;
		if(this.hscrollIntervalId) clearInterval(this.hscrollIntervalId);
	},
	OnAdjustGrid : function(mode)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(this.IsGrid() && this.objGDivPos)
		{
			if(mode == 1)
			{
				var bAdjustLine = false;
				if(this.layoutOpt && this.layoutOpt.bHorz && this.objGDivInfo.rLineWidth>0)
				{
					var nRight = Webcrea.GetRight(this.objGDivPos);
					var winW = window.innerWidth;
					if(nRight>=winW) bAdjustLine = true;
				}
				if(bAdjustLine) this.objGDivPos.style.width = Webcrea.GetWidth(this.objGDivPos) - (this.objGDivInfo.rLineWidth*2) + 'px';
				else this.objGDivPos.style.width = Webcrea.GetWidth(this.objGDivPos) + 'px';
			}
			else if(mode == 2)
			{
				this.objGDivPos.style.height = Webcrea.GetHeight(this.objGDivPos) + 'px';
				if(this.nAutoScroll && this.bVScroll) this.DisplayScroll('', 1);
			}
			else
			{
				this.objGDivPos.style.width = Webcrea.GetWidth(this.objGDivPos, true) + 'px';
				var nGHeight = Webcrea.GetHeight(this.objGDivPos, true);
				var nHeight = Webcrea.GetHeight(this.objDivPos, true);
				if(nGHeight<nHeight) nGHeight = nHeight;
				nGHeight += this.objGDivInfo.bLineWidth*2;
				if((this.IsHScroll() || this.bInitHScroll) && !this.bMyHScroll) nGHeight += this.objGDivInfo.bLineWidth*2;
				this.objGDivPos.style.height = nGHeight + 'px';
			}
			if(nFileVersion>=7020210202001 && this.IsList() && this.objHDivPos)
			{
				let nBaseWidth = Webcrea.GetWidth(this.objGDivPos, true);
				if(!Webcrea.IsMobile() && this.IsVScroll()) nBaseWidth -= 17;
				this.objHDivPos.style.width = nBaseWidth + 'px';
			}
		}
	},
	OnResizeLeft : function(nExpand)
	{
		var nLineWidth = 0;
		if(this.IsGrid())
		{
			nLineWidth = this.objGDivInfo.rLineWidth;
			nLineWidth += 1;
		}
		else
		{
			nLineWidth = this.objTableInfo.rLineWidth;
			if((this.IsHtml() || this.IsPanel()) && nLineWidth==1) nLineWidth = nLineWidth*2;
		}
		nExpand -= nLineWidth;
		if(this.IsGrid() || this.IsTab())
		{
			if(this.objGDivPos) this.objGDivPos.style.left = this.initLeft + nExpand + 'px';
			else if(this.objHTable) this.objHDivPos.style.left = this.initLeft + nExpand + 'px';
		}
		else if(this.IsHtml() || this.IsPanel())
		{
			var objHtml = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
			if(objHtml) objHtml.style.left = this.initLeft + nExpand + 'px';
		}
		if(!this.objGDivPos) this.objDivPos.style.left = this.initLeft + nExpand + 'px';
		if(this.objTDivPos) this.objTDivPos.style.left = this.initTDivLeft + nExpand + 'px';
	},
	OnResizeEtc : function()
	{
		if(this.IsGrid()) this.DisplayRuler();
	},
	OnResizeHorz : function(nExpand, bForce)
	{
		var bRet = false;
		if(Win.nCenter == 1) return false;
		if(this.layoutOpt == undefined) return false;
		if(this.IsPanel() && !this.panelInit) return false;
		var nExpandOrg = nExpand;
		var layoutHorz = this.layoutOpt.bHorz;
		var layoutRight = this.layoutOpt.bRight;
		var objHgap = this.layoutOpt.objHgap;
		if(objHgap && objHgap.layoutOpt.bHorz)
		{
			nExpand = nExpand/objHgap.layoutOpt.nHgap;
			objHgap.layoutOpt.bHorzing = true;
			objHgap.OnResizeHorz(nExpand);
			this.OnResizeLeft(nExpand);
		}
		if(layoutHorz != undefined && layoutHorz)
		{
			var nLineWidth = this.objGDivInfo.rLineWidth*2;
			if(this.IsGrid() && !bForce)
			{
				if(nLineWidth>0) nExpand -= 1;
				nExpand -= nLineWidth;
			}
			var nAdd=0, nGDivWidth = 0, nHDivWidth=0, nDivWidth=0, nHWidth=0, nWidth=0;
			var objWidth = this.layoutOpt.objWidth;
			var objRight = this.layoutOpt.objRight;
			if(objWidth)
			{
				var nScrlWidth = 0;
				var nObjScrlWidth = 0;
				if(this.bVScroll) nScrlWidth = this.nScrlWidth;
				if(objWidth.bVScroll) nObjScrlWidth = objWidth.nScrlWidth;
				objWidth.layoutOpt.bHorzing = true;
				objWidth.OnResizeHorz(nExpandOrg);
				nAdd = Webcrea.GetWidth(objWidth.objDivPos, true) + nObjScrlWidth + Webcrea.GetScrollWidth(objWidth.objDivPos) - this.initDivWidth - nScrlWidth;
			}
			else if(objRight)
			{
				objRight.layoutOpt.bHorzing = true;
				objRight.OnResizeHorz(nExpandOrg);
				var nObjLeft = (objRight.objGDivPos) ? Webcrea.GetLeft(objRight.objGDivPos) : Webcrea.GetLeft(objRight.objDivPos);
				var nLeft = (this.objGDivPos) ? Webcrea.GetLeft(this.objGDivPos) : Webcrea.GetLeft(this.objDivPos);
				var nRightPos = nObjLeft + Webcrea.GetWidth(objRight.objDivPos, true) + Webcrea.GetScrollWidth(objRight.objDivPos);
				if(this.initLeft<nRightPos) nAdd = nRightPos - nLeft - this.initDivWidth;
			}
			else nAdd = nExpand;

			if(this.IsList() && !this.bHScroll && !this.bVScroll) nAdd -= this.nScrlWidth;
			if(this.IsGrid() && this.objGDivPos && !this.bHScroll && !this.bVScroll && this.initDivWidth>this.initGDivWidth) this.initGDivWidth = this.initDivWidth;
			var diff = this.initDivWidth - this.initWidth;
			if(this.divScrollWidth>0) diff -= this.nScrlWidth;
			nHDivWidth = this.initHDivWidth + nAdd;
			if(diff>=0) nHWidth = this.initHWidth + nAdd;
			else nHWidth = this.initHWidth + diff + nAdd;
			nDivWidth = this.initDivWidth + nAdd;
			nGDivWidth = this.initGDivWidth + nAdd;
			if(diff>=0 && this.objTable) nWidth = this.initWidth + nAdd;
			else if(this.objTable) nWidth = this.initWidth + nAdd + diff;

			if(this.IsGrid())
			{
				if(!this.IsList() && !this.bVScroll) nDivWidth = nGDivWidth;
				if(this.objGDivPos) this.objGDivPos.style.width = nGDivWidth + 'px';
				if(this.objHTable)
				{
					this.objHDivPos.style.width = nHDivWidth + 'px';
					this.objHTable.style.width = nHWidth + 'px';
				}
				if(this.objFTable)
				{
					this.objFDivPos.style.width = nHDivWidth + 'px';
					this.objFTable.style.width = nHWidth + 'px';
				}
			}
			else if(this.IsHtml() || this.IsPanel() || this.IsChart())
			{
				var objHtml = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
				if(objHtml) objHtml.style.width = '100%';
			}
			else if(this.IsTab())
			{
				if(this.tabPos == 0 || this.tabPos == 1)
				{
					if(this.objGDivPos) this.objGDivPos.style.width = nGDivWidth + 'px';
					var objTabB = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'B');
					if(objTabB) objTabB.style.width = nDivWidth + 'px';

					var nTabItemGroupLeft = Webcrea.GetLeft(this.objTabItemGroup, true);
					this.objTabItemGroup.style.width = nGDivWidth - nTabItemGroupLeft + 'px';
					this.DisplayTabArraw();
				}
				else if(this.tabPos == 3)
				{
					var nTabItemGroupWidth = Webcrea.GetWidth(this.objTabItemGroup);
					nGDivWidth -= nTabItemGroupWidth;
					if(this.objGDivPos) this.objGDivPos.style.width = nGDivWidth + 'px';
					var objTabB = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'B');
					if(objTabB) objTabB.style.width = nGDivWidth + 'px';

					var nItemGroupLeft = nGDivWidth - 1;
					this.objTabItemGroup.style.left = nItemGroupLeft + 'px';
				}
			}
			else if(this.IsForm())
			{
				var arrImg = [];
				Webcrea.FindNodeAll(this.objDivPos, 'name', 'IMG', arrImg);
				for(var i=0; i<arrImg.length; i++)
				{
					var imgNode = arrImg[i];
					var imgDiv = Webcrea.FindParentDiv(imgNode, 2);
					if(imgDiv)
					{
						var divWidth =	Webcrea.Number(imgDiv.style.width);
						if(imgDiv && divWidth > 0 && divWidth != 100) imgDiv.style.width = '100%';
					}
				}
			}
			this.objDivPos.style.width = nDivWidth + 'px';
			if(this.objTable) this.objTable.style.width = nWidth + 'px';
			if(this.IsChart()) this.DisplayPublic();
			bRet = true;
		}
		if((window.event && window.event.type != 'resize') || (layoutHorz != undefined && layoutHorz)) this.DisplayColSize();
		else if(!window.event && this.IsGrid() && !this.bMyGird) this.DisplayColSize();
		if(layoutHorz != undefined && layoutHorz && this.bMyGrid)
		{
			var nHeight = Webcrea.GetHeight(this.objDivPos, true);
			var nWidth = Webcrea.GetWidth(this.objDivPos, true);
			if(this.objVSGDivPos) this.objVSGDivPos.style.left = nWidth + this.nScrlLeftAdjust + 'px';
			if(this.bInitHScroll && this.bMyHScroll && this.objHSGDivPos)
			{
				this.objHSGDivPos.style.width = nWidth + 'px';
				this.objHSRGDivPos.style.left = nWidth - this.nBaseScrlSize + 'px';
				if(this.objDivPos.scrollWidth > this.objDivPos.clientWidth) this.objHSGDivPos.style.display = 'block';
				else this.objHSGDivPos.style.display = 'none';
			}

			if(!this.layoutOpt.bVert)
			{
				var nDWTopOrg = Webcrea.GetTop(this.objVSDWDivPos, true);
				var nVSHeight = nHeight;
				if(this.objVSGDivPos) this.objVSGDivPos.style.height = nVSHeight + 'px';

				var nDWTop = nVSHeight - this.nBaseScrlSize;
				if(this.objVSDWDivPos) this.objVSDWDivPos.style.top = nDWTop + 'px';
				if(this.IsVisible())
				{
					var nTHTop = Webcrea.GetTop(this.objVSTHDivPos, true);
					var nTHHeight = Webcrea.GetHeight(this.objVSTHDivPos, true);
					var nTHPos = nTHTop + nTHHeight;
					var nTHPosLimit = nVSHeight - this.nBaseScrlSize - 2;
					var diff = nTHPosLimit - nTHPos;
					if(diff<0) this.objVSTHDivPos.style.top = nTHTop + diff + 'px';
					else if(nDWTop - nDWTopOrg > 0 && nDWTopOrg - nTHPos < 5) this.objVSTHDivPos.style.top = nTHTop + nDWTop - nDWTopOrg + 'px';
				}
			}
			this.DisplaySumRow();
		}
		if(layoutRight != undefined && layoutRight)
		{
			var objLeft = this.layoutOpt.objLeft;
			if(objLeft)
			{
				objLeft.layoutOpt.bHorzing = true;
				objLeft.OnResizeHorz(nExpand);
				var nLeft = (objLeft.objGDivPos) ? Webcrea.GetLeft(objLeft.objGDivPos) : Webcrea.GetLeft(objLeft.objDivPos);
				var nDiff = nLeft - this.initLeft;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeLeft(nExpand);
			bRet = true;
		}
		if(bRet)
		{
			var id = this.divPos + 'More';
			var obj = Webcrea.FindNode(this.objDivPage, 'id', id);
			if(obj)	Webcrea.MoveObject(8, obj, this);
			this.DisplayCodeButton();
			if(this.IsGrid()) this.DisplayRuler();
		}
		if(this.IsGrid() && !Webcrea.IsEmpty(Webcrea.sInitFitColumn))
		{
			this.HideColumn(Webcrea.sInitFitColumn);
			Webcrea.sInitFitColumn = '';
		}
		this.DisplayMobile();
		this.OnAdjustGrid(1);
		if(this.bMyGrid && this.bMyHScroll && this.objHSGDivPos)
		{
			this.DisplayScrollAdjust(1);
			this.DisplayScrollThumbSize(true, true);
			this.DisplayHScrlArrow();
		}
		return bRet;
	},
	OnResizeTop : function(nExpand)
	{
		var nLineWidth = 0;
		if(this.IsGrid())
		{
			nLineWidth = this.objGDivInfo.bLineWidth;
			nLineWidth += 1;
		}
		else
		{
			nLineWidth = this.objTableInfo.bLineWidth;
			if((this.IsHtml() || this.IsPanel()) && nLineWidth==1) nLineWidth = nLineWidth*2;
		}
		nExpand -= nLineWidth;
		if(this.IsGrid() || this.IsTab())
		{
			if(this.objGDivPos) this.objGDivPos.style.top = this.initTop + nExpand + 'px';
			else if(this.objHTable) this.objHDivPos.style.top = this.initTop + nExpand + 'px';
		}
		else if(this.IsHtml() || this.IsPanel())
		{
			var objHtml = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
			if(objHtml) objHtml.style.top = this.initTop + nExpand + 'px';
		}
		if(!this.objGDivPos) this.objDivPos.style.top = this.initTop + nExpand + 'px';
		if(this.objTDivPos) this.objTDivPos.style.top = this.initTDivTop + nExpand + 'px';
	},
	OnResizeVert : function(nExpand, bForce, bAutoHeight)
	{
		var bRet = false;
		if(Win.nCenter == 1) return false;
		if(this.layoutOpt == undefined) return false;
		if(this.IsPanel() && !this.panelInit) return false;
		var nExpandOrg = nExpand;
		var layoutVert = this.layoutOpt.bVert;
		var layoutBottom = this.layoutOpt.bBottom;
		var objVgap = this.layoutOpt.objVgap;
		if(objVgap && objVgap.layoutOpt.bVert)
		{
			nExpand = nExpand/objVgap.layoutOpt.nVgap;
			objVgap.layoutOpt.bVerting = true;
			objVgap.OnResizeVert(nExpand);
			this.OnResizeTop(nExpand);
			if(objVgap.layoutOpt.objRelHeight) objVgap.layoutOpt.objRelHeight.OnResizeVert();
		}
		if(layoutVert != undefined && layoutVert)
		{
			var nLineWidth = 0;
			if(this.IsGrid() && !bForce)
			{
				if(this.objGDivInfo && this.objGDivInfo.bLineWidth>0) nLineWidth = this.objGDivInfo.bLineWidth*2;
			}
			var nAdd=0, nDivHeight=0, nHeight=0;
			var objHeight = this.layoutOpt.objHeight;
			var objBottom = this.layoutOpt.objBottom;
			if(objHeight)
			{
				objHeight.layoutOpt.bVerting = true;
				objHeight.OnResizeVert(nExpandOrg);
				nAdd = Webcrea.GetHeight(objHeight.objDivPos, true) - this.initDivHeight;
			}
			else if(objBottom)
			{
				objBottom.layoutOpt.bVerting = true;
				objBottom.OnResizeVert(nExpandOrg);
				var nObjTop = (objBottom.objGDivPos) ? Webcrea.GetTop(objBottom.objGDivPos) : Webcrea.GetTop(objBottom.objDivPos);
				var nTop = (this.objGDivPos) ? Webcrea.GetTop(this.objGDivPos) : Webcrea.GetTop(this.objDivPos);
				var nBottomPos = nObjTop + Webcrea.GetHeight(objBottom.objDivPos, true);
				if(this.initTop<nBottomPos) nAdd = nBottomPos - nTop - this.initDivHeight;
			}
			else nAdd = nExpand;

			if(!bAutoHeight)
			{
				nDivHeight = this.initDivHeightByAuto?this.initDivHeightByAuto:this.initDivHeight + nAdd;
				nHeight = this.initHeightByAuto?this.initHeightByAuto:this.initHeight + nAdd;
			}
			else
			{
				nDivHeight = this.initDivHeight + nAdd;
				nHeight = this.initHeight + nAdd;
				if(this.bAutoHeight)
				{
					this.initDivHeightByAuto = nDivHeight;
					this.initHeightByAuto = nHeight;
				}
				else
				{
					this.initDivHeightByAuto = 0;
					this.initHeightByAuto = 0;
				}
			}

			if(this.IsHtml() || this.IsPanel() || this.IsChart())
			{
				var objHtml = Webcrea.FindNode(this.objDivPos, 'name', 'IFRAME');
				if(objHtml) objHtml.style.height = '100%';
			}
			else if(this.IsTab())
			{
				if(this.objGDivPos)
				{
					if(!this.initGDivHeight) this.initGDivHeight = Webcrea.GetHeight(this.objGDivPos);
					this.objGDivPos.style.height = this.initGDivHeight + nAdd + 'px';
				}
				var objTabB = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'B');
				if(objTabB)
				{
					if(!this.initHeight_TabB) this.initHeight_TabB = Webcrea.GetHeight(objTabB);
					objTabB.style.height = this.initHeight_TabB + nAdd + 'px';
					if(this.tabPos == 1)
					{
						this.objTabItemGroup.style.height = this.initGDivHeight + nAdd + 'px';
						this.objTabItemRoot.style.top = this.initHeight_TabB + nAdd - 1 + 'px';
						this.DisplayTabArraw();
					}
				}
			}
			else if(this.IsGrid())
			{
				if(this.IsCrossTab())
				{
					if(this.IsHScroll() && this.IsVScroll()) nDivHeight -= this.nBaseScrlSize;
				}
				else if(this.IsHScroll() && !this.bMyHScroll) nDivHeight += this.nBaseScrlSize;
				else if(!this.IsHScroll() && this.layoutOpt.bHorz && this.bInitHScroll)
				{
					if(!this.bMyHScroll && this.objDivPos.style.overflowX != 'scroll') nDivHeight += this.nBaseScrlSize;
				}
				this.objDivPos.style.height = nDivHeight - nLineWidth + 'px';
				if(this.objGDivPos) this.objGDivPos.style.height = nDivHeight + 'px';
				if(this.bMyGrid)
				{
					var nVSHeight = nDivHeight;
					var nVSHeight1 = this.objDivPos.scrollWidth;
					var nVSHeight2 = this.objDivPos.clientWidth;
					if(nVSHeight1>nVSHeight2) nVSHeight -= this.nHScrlHeight;
					if(this.objVSGDivPos) this.objVSGDivPos.style.height = nVSHeight + 'px';
					var nAdjust = 0;
					var bHScroll = this.IsHScroll();
					if(bHScroll) nAdjust = this.nBaseScrlSize;
					if(this.objVSDWDivPos) this.objVSDWDivPos.style.top = nVSHeight - nAdjust - this.nBaseScrlSize + 'px';
					if(this.bInitHScroll && this.bMyHScroll && this.objHSGDivPos) this.objHSGDivPos.style.top = nVSHeight - nAdjust + 'px';
					this.DisplayPublic(true, null, true);
				}
				this.OnAdjustGrid(2);
			}
			else if(this.IsForm())
			{
				var arrImg = [];
				Webcrea.FindNodeAll(this.objDivPos, 'name', 'IMG', arrImg);
				for(var i=0; i<arrImg.length; i++)
				{
					var imgNode = arrImg[i];
					var imgDiv = Webcrea.FindParentDiv(imgNode, 2);
					if(imgDiv)
					{
						var divHeight =	Webcrea.Number(imgDiv.style.height);
						if(imgDiv && divHeight > 0 && divHeight != 100) imgDiv.style.height = '100%';
					}
				}
			}
			if(!this.IsGrid()) this.objDivPos.style.height = nDivHeight + 'px';
			if(this.objTable && !this.IsGrid()) this.objTable.style.height = nHeight + 'px';
			if(this.IsChart()) this.DisplayPublic();
			if(this.IsForm())
			{
				var arrMultiLine = [];
				Webcrea.FindNodeAll(this.objDivPos, 'role', 'multiline', arrMultiLine, true);
				for(var i=0; i<arrMultiLine.length; i++)
				{
					var multiLineDiv = arrMultiLine[i];
					var parentDiv = multiLineDiv.parentElement;
					var rootDiv = parentDiv.parentElement;
					var divMinHeight = rootDiv.style.minHeight;
					var bSkip = false;
					var autoExpand = multiLineDiv.getAttribute('autoexpand');
					if(autoExpand && autoExpand == 'height') bSkip = true;
					if(!bSkip && divMinHeight)
					{
						divMinHeight = Extract(divMinHeight, '[0-9].');
						multiLineDiv.style.maxHeight = divMinHeight + 'px';
						var divHeight = Webcrea.GetHeight(parentDiv, true);
						var multiLineheight = multiLineDiv.style.maxHeight;
						multiLineheight = Extract(multiLineheight, '[0-9].');
						if(divHeight>multiLineheight)
						{
							multiLineDiv.style.maxHeight = divHeight + 'px';
						}
					}
				}
			}
			bRet = true;
		}
		if(layoutBottom != undefined && layoutBottom)
		{
			var objTop = this.layoutOpt.objTop;
			if(objTop)
			{
				objTop.layoutOpt.bVerting = true;
				objTop.OnResizeVert(nExpand);
				var nTop = (objTop.objGDivPos) ? Webcrea.GetTop(objTop.objGDivPos) : Webcrea.GetTop(objTop.objDivPos);
				var nDiff = nTop - this.initTop;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeTop(nExpand);
			bRet = true;
		}
		if(bRet)
		{
			var id = this.divPos + 'More';
			var obj = Webcrea.FindNode(this.objDivPage, 'id', id);
			if(obj)	Webcrea.MoveObject(8, obj, this);
			this.DisplaySumRow();
		}
		return bRet;
	},
	OnUpdateCommandButton : function()
	{
		for(var i=0; i<this.arrCellId.length; i++)
		{
			var id = this.arrCellId[i];
			if(!Webcrea.IsEmpty(id)) id = id.toLowerCase();
			var cellInfo = this.arrCellInfo[id];
			if(!cellInfo) continue;
			if(this.IsGrid() && cellInfo.orgId != '_SELECT_H') continue;
			if(Webcrea.IsEmpty(cellInfo.activeCond)) continue;
			var con = cellInfo.activeCond;
			if(eval(con)) this.Enable(cellInfo.orgId, true);
			else this.Enable(cellInfo.orgId, false);
		}
	}
});
var CellObject = Class.create({
	initialize : function(divPage, divPos, cellId){
		this.divPage = divPage;
		this.divPos = divPos;
		this.divPosOrg = divPos;
		this.cellId = cellId;
		this.realId = this.divPos + '.' + cellId;
		this.objDivPage = document.getElementById(this.divPage);
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);
		this.objCell = Webcrea.FindNode(this.objDivPos, 'id', this.realId);

		this.objCellLabel = Webcrea.FindNode(this.objDivPos, 'for', this.realId);
		this.opt = '';

		this.bSearched = false;
		this.pos = -1;

		this.sDBID = '';
		this.sParam = '';
		this.sSql = '';
		this.dataObj = null;
		this.bConvWhere = false;

		this.bAddData = false;
		this.msvData = null;
		this.arrRows = null;
		this.arrField = null;
		this.arrFieldType = null;/*0:Text, 1:Number(#)*/
		this.arrData = null;
		this.arrStatus = null;

		this.arrListExNode = [];

		this.parentObj = _my_File.GetObject(this.objDivPos);
		this.parentObj.AddObject(this);
		this.pageObj = _my_File.GetPageObjById(this.divPage);
	},
	DataHandler : function(bRefresh, sParam, ReturnFunc, bAsync, sUrl, ThreadId, ThreadResult)
	{
		if(ToUpper(this.sDBID).indexOf('TEXT') > 0 || ToUpper(this.sDBID).indexOf('MEMORY') > 0 || ToUpper(this.sDBID).indexOf('OBJECT') > 0) Webcrea.bFileDB=true;
		else Webcrea.bFileDB=false;
		if(!this.dataObj && !Webcrea.IsEmpty(this.sSql) && Webcrea.bFileDB) Webcrea.CreateRecordSet(this);
		if(!this.dataObj) DataHandler(sParam, ReturnFunc, bAsync, sUrl, this, ThreadId, ThreadResult);
		else if(!Webcrea.IsEmpty(ReturnFunc)) eval(ReturnFunc)();
		if(bRefresh) this.Refresh();
	},
	MSVDataParser : function(msvData) {
		var bTextDB = false;
		var n = this.sDBID.indexOf('dbid=TEXT');
		var n1 = this.sParam.indexOf('url=');
		var n2 = this.sSql.indexOf('urlIndex=');
		if(n>=0 && n1<0 && n2<0) bTextDB = true;
		if(!Webcrea.IsNull(msvData))
		{
			msvData = msvData.ltrim();
		}
		this.msvData = msvData;

		var arrRows_B = null;
		var arrField_B = null;
		var arrData_B = null;
		if(this.bAddData && this.arrRows)
		{
			arrRows_B = this.arrRows;
			arrField_B = this.arrField;
			arrData_B = this.arrData;
		}
		var msvSpRowType = Webcrea.msvSpRowType;
		if(bTextDB)
		{
			msvSpRowType = '\r\n';
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 2 && this.arrRows[this.arrRows.length-1]=='') this.arrRows.splice(this.arrRows.length-1, 1);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\n';
				this.arrRows = msvData.split(msvSpRowType);
			}
			var nRowCheck = this.arrRows.length-1;
			while(true)
			{
				if(nRowCheck<0) break;
				var sRowCheck = this.arrRows[nRowCheck];
				if(Webcrea.IsNull(sRowCheck)) sRowCheck = '';
				if(sRowCheck.trim() == '') this.arrRows.splice(nRowCheck, 1);
				else break;
				nRowCheck--;
			}
		}
		else
		{
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\r\n';
				this.arrRows = msvData.split(msvSpRowType);
				if(this.arrRows.length == 1)
				{
					msvSpRowType = '\n';
					this.arrRows = msvData.split(msvSpRowType);
				}
			}
		}
		this.arrField = new Array();
		this.arrFieldType = new Array();
		this.arrData = new Array();
		this.arrStatus = new Array();

		var spType = Webcrea.msvSpColType;
		if(this.arrRows.length > 0)
		{
			if(Webcrea.IsSqlStatusError(this.arrRows[0])) 
			{
				this.arrRows = null;
				return;
			}
			else Webcrea.SetSqlStatus('');
			var n = this.arrRows[0].indexOf('\r\n');
			while(n==0)
			{
				this.arrRows[0] = this.arrRows[0].replace('\r\n', '');
				n = this.arrRows[0].indexOf('\r\n');
			}
			if(this.arrRows[0].split(spType).length < 2)
			{
				var spType1 = '\t';
				if(this.arrRows[0].split(spType1).length < 2)
				{
					var spType2 = ',';
					if(this.arrRows[0].split(spType2).length > 1) spType = spType2;
				}
				else spType = spType1;
			}
			for(var i=0; i<2; i++)
			{
				var n = this.arrRows[this.arrRows.length-1].lastIndexOf('\n');
				if(n>=0)
				{
					var n1 = this.arrRows[this.arrRows.length-1].lastIndexOf('\r\n');
					if(n1>=0 && n1+2 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n1);
					}
					else if(n1<0 && n+1 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n);
					}
					else break;
				}
				else break;
			}
		}
		else return;

		var arrColData = this.arrRows[0].split(spType);
		for(var i=0; i<arrColData.length; i++)
		{
			var strCol = arrColData[i];
			var nColType = 0;
			var n = strCol.lastIndexOf('#');
			if(n > 0)
			{
				strCol = strCol.replace('#', '');
				nColType = 1;
			}
			this.arrField[i] = strCol;
			this.arrFieldType[i] = nColType;
			this.arrData[this.arrField[i]] = new Array();
			this.arrStatus[this.arrField[i]] = new Array();
		}
		this.arrRows.splice(0, 1);
		if(!this.bOrderBy)
		{
			if(WebcreaInfo.nSortList) this.arrRows.sort();
		}

		/*필드 별 레코드 셋*/
		for(var i=0; i<this.arrRows.length; i++)
		{
			var bLast = (i+1==this.arrRows.length)?true:false;
			var bCRLF = (this.arrRows[i].indexOf('\r\n')<0)?false:true;
			var sRow = this.arrRows[i].replace('\r\n', '');
			var bSkip = false;
			if(sRow.length<1)
			{
				if(!bLast) bSkip = true;
				else if(!bCRLF) bSkip = true;
			}
			if(bSkip)
			{
				this.arrRows.splice(i, 1);
				i--;
				continue;
			}

			var arrColData = this.arrRows[i].split(spType);
			for(var j=0; j<arrColData.length; j++)
			{
				if(j>=this.arrField.length) break;
				this.arrData[this.arrField[j]][i] = arrColData[j];
			}
		}
		if(this.arrField.length<2)
		{
			var sError = Webcrea.LoadString('msgErrData');
			if(Webcrea.bAlert) Webcrea.MsgBox(sError, true);
			return;
		}
		if(this.bAddData && arrRows_B)
		{
			for(var i=0; i<arrRows_B.length; i++)
			{
				this.arrRows.splice(i, 0, arrRows_B[i]);
				for(var j=0; j<arrField_B.length; j++)
					this.arrData[this.arrField[j]].splice(i, 0, arrData_B[arrField_B[j]][i]);
			}
			this.bAddData = false;
		}
	},
	QueryParser : function() {
		var ___param = {};
		___param.sql = arguments[0];
		___param.dataObj = arguments[1];
		if(___param.dataObj == undefined) ___param.dataObj = this.dataObj;
		if(___param.sql == undefined) ___param.sql = this.sSql;
		if(!___param.dataObj.arrRows) return false;

		var obj = QueryParser(___param.sql, ___param.dataObj);
		var arrRows_B = null;
		var arrField_B = null;
		var arrData_B = null;
		if(this.bAddData && this.arrRows && this.arrRows.length>0)
		{
			arrRows_B = this.arrRows;
			arrField_B = this.arrField;
			arrData_B = this.arrData;
		}

		if(obj.arrRows.length<1) return false;
		this.arrRows = obj.arrRows;
		this.arrField = obj.arrField;
		this.arrFieldType = obj.arrFieldType;
		this.arrData = obj.arrData;
		this.arrStatus = obj.arrStatus;

		if(this.bAddData && arrRows_B)
		{
			for(var i=0; i<arrRows_B.length; i++)
			{
				this.arrRows.splice(i, 0, arrRows_B[i]);
				for(var j=0; j<arrField_B.length; j++)
					this.arrData[this.arrField[j]].splice(i, 0, arrData_B[arrField_B[j]][i]);
			}
			this.bAddData = false;
		}
	},
	IsMulti : function() {
		return (this.opt == 'multi');
	},
	SetCheck : function(cell) {
		if(cell.nodeName == 'INPUT' && cell.type == 'checkbox')
		{
			if(cell.disabled || cell.readonly) return;
			if(this.opt == 'multi')
			{
				var objParent = cell.parentNode;
				if(objParent.nodeName == 'LABEL')
				{
					var sValue = '';
					var findId = objParent.getAttribute('for');
					cell = Webcrea.FindNode(objParent, 'id', findId);
					this.objCell = cell;
					if(cell.checked) sValue = cell.value;
					while(objParent)
					{
						objParent = objParent.nextElementSibling;
						if(!objParent) break;
						if(objParent && objParent.nodeName != '#text' && objParent.nodeName != 'BR')
						{
							findId = objParent.getAttribute('for');
							cell = Webcrea.FindNode(objParent, 'id', findId);
							if(cell.checked)
							{
								if(sValue == '') sValue = cell.value;
								else sValue = sValue + ',' + cell.value;
							}
						}
					}
					this.SetValue(this.objCell, sValue);
				}
				else
				{
					var sValue = '';
					var objNext = cell.nextElementSibling;
					this.objCell = cell;
					if(cell.checked) sValue = cell.value;
					while(objNext)
					{
						objNext = objNext.nextElementSibling;
						if(!objNext) break;
						if(objNext && objNext.nodeName == 'INPUT')
						{
							if(objNext.checked)
							{
								if(sValue == '') sValue = objNext.value;
								else sValue = sValue + ',' + objNext.value;
							}
						}
					}
					this.parentObj.SetModified(this.cellId, sValue);
					this.SetValue(this.objCell, sValue, false, true);
				}
			}
			else
			{
				if(!this.arrData)
				{
					Webcrea.OnMODIFY(this.objCell);
					Webcrea.OnCHANGE(this.objCell);
					return;
				}
				var bFind = false;
				var bSameData = true;
				for(var i=0; i<this.arrData[this.arrField[0]].length; i++)
				{
					var cellParent = cell.parentNode;
					var chkValue = '';
					if(cellParent.nodeName == 'LABEL')
					{
						chkValue = cellParent.innerText;
					}
					else
					{
						var cellLabel = cell.nextElementSibling;
						chkValue = cellLabel.textContent;
					}
					if(this.arrData[this.arrField[0]].length==1) bSameData = false;
					else if(i>0 && this.arrData[this.arrField[1]][i-1] != this.arrData[this.arrField[1]][i]) bSameData = false;
					if(chkValue != this.arrData[this.arrField[1]][i])
					{
						if(!this.parentObj.IsCrossTab()) this.parentObj.SetModified(this.cellId, this.arrData[this.arrField[0]][i]);
						this.SetValue(cell, this.arrData[this.arrField[0]][i]);
						bFind = true;
						break;
					}
				}
				if(bFind) return;
				var bSameDataCrossTab = false;
				if(this.parentObj && this.parentObj.IsCrossTab() && bSameData && this.arrData[this.arrField[0]].length>0) bSameDataCrossTab = true;
				for(var i=0; i<this.arrData[this.arrField[0]].length; i++)
				{
					if(cell.value != this.arrData[this.arrField[0]][i])
					{
						if(!bSameDataCrossTab) this.parentObj.SetModified(this.cellId, this.arrData[this.arrField[0]][i]);
						this.SetValue(cell, this.arrData[this.arrField[0]][i], false, true);
						break;
					}
				}
			}
		}
	},
	AddData : function(str) {
		var n = str.indexOf('=');
		if(n<1) return;
		var sCode = str.substr(0, n);
		sCode = Webcrea.RemoveQuote(sCode.trim());
		var sData = str.substr(n+1);
		sData = Webcrea.RemoveQuote(sData.trim());

		if(!this.arrRows) this.RemoveData();
		var n = this.arrRows.length;
		this.arrRows[n] = sCode + Webcrea.msvSpColType + sData;
		this.arrData[this.arrField[0]][n] = sCode;
		this.arrData[this.arrField[1]][n] = sData;
	},
	RemoveData : function() {
		this.bSearched = false;
		this.arrRows = new Array();
		this.arrField = new Array();
		this.arrData = new Array();

		this.arrField[0] = 'CODE';
		this.arrField[1] = 'DATA';

		this.arrData[this.arrField[0]] = new Array();
		this.arrData[this.arrField[1]] = new Array();
		this.dataObj = null;
	},
	RemoveAll : function() {
		if(this.objCell && this.objCell.nodeName == 'SELECT')
		{
			var n = this.objCell.options.length;
			for(var i=n; i>0; i--) this.objCell.options[i] = null;
		}
	},
	Clear : function(cell)
	{
		var bClear = false;
		if(this.opt != 'multi' && !this.arrRows)
		{
			var type = this.objCell.getAttribute('type');
			if(this.objCell && this.objCell.nodeName == 'INPUT' && type == 'radio')
			{
				var ctrlParent = Webcrea.GetObject(this.objCell);
				if(this.objCell && (!ctrlParent || !ctrlParent.IsGrid()))
				{
					var radios = [];
					var targetNode = Webcrea.FindParentNode(this.objCell, 'name', 'TR');
					if(ctrlParent.IsForm()) targetNode = ctrlParent.objTable;
					Webcrea.FindNodeAll(targetNode, 'name', this.objCell.name, radios);
					for(var i=0; i<radios.length; i++)
					{
						var radio = radios[i];
						radio.checked = false;
						radio.value = '';
					}
					bClear = true;
				}
			}
		}
		if(!bClear) this.Display(true);
	},
	Display : function(bClear) {
		if(!this.arrRows) return;
		if(_my_sqlStatus != '') return;
		if(this.arrRows.length < 1 && !bClear)
		{
			this.Clear();
			return;
		}
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var orgPage = Webcrea.FindNode(Webcrea.layoutXml, 'id', this.divPage);
		var orgCell = Webcrea.FindNode(orgPage, 'id', this.realId);
		var orgCellLabel = orgCell.parentNode;
		var bLabelRoot = false;
		if(orgCellLabel && orgCellLabel.nodeName == 'LABEL') bLabelRoot = true;
		if(!bLabelRoot) orgCellLabel = Webcrea.FindNode(orgPage, 'for', this.realId);
		var type = orgCell.getAttribute('type');
		var ctrlParent = Webcrea.GetObject(orgCell);
		var orgValue = ctrlParent?ctrlParent.GetValue(this.cellId):'';
		this.RemoveAll();
		var bMySelectBox = false;
		if(orgCell.nodeName == 'INPUT' && (orgCell.getAttribute('role') == 'selectboxinput' || orgCell.getAttribute('role') == 'selectbox')) bMySelectBox = true;
		if(orgCell.nodeName == 'SELECT' || bMySelectBox)
		{
			var objPage = _my_File.GetPageObjById(this.divPage);
			var orgPage = Webcrea.FindNode(Webcrea.layoutXml, 'id', this.divPage);
			var orgCellLabel = Webcrea.FindNode(orgPage, 'for', this.realId);
			var orgCell = Webcrea.FindNode(orgPage, 'id', this.realId);
			var sReadOnly = orgCell.getAttribute('readonly');
			var sDisabled = orgCell.getAttribute('disabled');
			var bDisabled = false;
			if(this.parentObj.IsForm() && ((!Webcrea.IsEmpty(sDisabled) && sDisabled.iEquals('disabled')) || !this.parentObj.bEnable)) bDisabled = true;
			if(!bDisabled)
			{
				if((sReadOnly != undefined && sReadOnly.toLowerCase()=='readonly') || this.parentObj.bReadOnly) sReadOnly = "disabled='disabled'";
				else if(Webcrea.IsNull(sReadOnly)) sReadOnly = '';
			}
			else sReadOnly = "disabled='disabled'";
			if(Webcrea.IsEmpty(orgValue)) orgValue = orgCell.getAttribute('value');
			var orgParent = orgCell.parentNode;
			var str = '';
			for(var i=0; i<this.arrRows.length; i++)
			{
				var sCode = i;
				var sData = this.arrData[this.arrField[0]][i];
				if(this.arrField.length > 1)
				{
					sCode = this.arrData[this.arrField[0]][i];
					sData = this.arrData[this.arrField[1]][i];
				}
				var strOption = '';
				if(bMySelectBox)
				{
					var hoverEvent = "Webcrea.OnMouseOver('" + this.parentObj.divPos + "')";
					var outEvent = "Webcrea.OnMouseOut('" + this.parentObj.divPos + "')";
					var mouseEvent = "onmouseover=" + hoverEvent + " onmouseout=" + outEvent;

					var sMulti = '';
					if(this.IsMulti())
					{
						sMulti = "<INPUT role='selectboxitem' type='checkbox' onclick='Webcrea.SetSelectBoxItem(\"\",\"\",2);' code='" + sCode + "' value='" + sData + "'/>";
						strOption = "<LI role='selectboxitem'" + mouseEvent + ">" + sMulti + sData + "</LI>";
					}
					else
					{
						var sStyle = '';
						if(Webcrea.IsEmpty(sData)) sStyle = " style='height:15px;'";
						strOption = "<LI role='selectboxitem'" + sStyle + mouseEvent + " onclick='Webcrea.SetSelectBoxItem(\"\",\"\",2);' code='" + sCode + "' sValue='" + sData + "'>" + sData + "</LI>";
					}
				}
				else strOption = "<option " + sReadOnly + " value='" + sCode + "'>" + sData + "</option>";
				str += strOption;
			}
			if(bMySelectBox)
			{
				var mySelectBoxId = this.divPos + '.' + this.cellId;
				var ulNodeOrg, ulNode;
				var nHeight = this.arrRows.length * 23;
				if(nHeight>138) nHeight = 138;
				var dlNode = document.getElementById('_my_selectbox_groupDL_' + mySelectBoxId);
				var ddNode;
				if(!dlNode)
				{
					dlNode = document.createElement('DL');
					dlNode.setAttribute('pid', this.divPos);
					dlNode.setAttribute('orgid', this.cellId);
					dlNode.setAttribute('id', '_my_selectbox_groupDL_' + mySelectBoxId);
					dlNode.setAttribute('class', '_my_selectbox');
					dlNode.setAttribute('style', 'margin:0px;');
				}
				else
				{
					ddNode = Webcrea.FindNode(dlNode, 'name', 'DD');
					if(this.bSetListEx)
					{
						dlNode.removeChild(ddNode);
						ddNode = null;
					}
					else ulNode = Webcrea.FindNode(ddNode, 'name', 'UL');
				}
				if(!ddNode)
				{
					ddNode = document.createElement('DD');
					ddNode.setAttribute('id', '_my_selectbox_items_' + mySelectBoxId);
					ddNode.setAttribute('style', 'position:absolute;display:none;height:'+ nHeight +'px;background-color:#fff;color:#000;z-index:9002;');
					var divNode = document.createElement('DIV');
					ulNode = document.createElement('UL');
					if(this.IsMulti()) ulNode.setAttribute('style', 'border:solid;border-top:dotted;border-width:1px;height:100%;background-color:#fff;');
					else ulNode.setAttribute('style', 'top:2px;height:100%;background-color:#fff;');
					divNode.appendChild(ulNode);
					ddNode.appendChild(divNode);
					if(this.IsMulti())
					{
						var divHeaderNode = document.createElement('DIV');
						divHeaderNode.setAttribute('id', '_my_selectbox_h_' + mySelectBoxId);
						divHeaderNode.setAttribute('style', 'position:absolute;display:none;border:solid;border-width:1px 1px 0px 1px;padding:6px 1px 6px 7px;z-index:9002;background-color:#fdfcfc;');
						divHeaderNode.setAttribute('role', 'selectboxheader');

						var inputCheckNode = document.createElement('INPUT');
						inputCheckNode.setAttribute('role', 'selectboxheader');
						inputCheckNode.setAttribute('type', 'checkbox');
						inputCheckNode.setAttribute('onclick', "Webcrea.SetSelectBoxItem('','',1)");
						divHeaderNode.appendChild(inputCheckNode);

						var labelCheckNode = document.createElement('LABEL');
						labelCheckNode.setAttribute('role', 'selectboxheader');
						labelCheckNode.setAttribute('style', 'display:inline-block');
						labelCheckNode.innerText = Webcrea.LoadString('idsRangeAll');
						divHeaderNode.appendChild(labelCheckNode);
						var aImageGroupNode = document.createElement('A');
						aImageGroupNode.setAttribute('style', 'text-align:left;vertical-align:middle;display:block;');
						var imgSelectAllNode = document.createElement('IMG');
						imgSelectAllNode.setAttribute('role', 'selectboxselectall');
						imgSelectAllNode.setAttribute('style', 'position:absolute;height:14px;top:9px;right:24px;');
						imgSelectAllNode.setAttribute('src', Webcrea.GetImageLinkPath() + '/frame/code/combo_selectall.gif');
						imgSelectAllNode.setAttribute('onclick', 'Webcrea.HideSelectBox()');
						aImageGroupNode.appendChild(imgSelectAllNode);

						var imgCloseNode = document.createElement('IMG');
						imgCloseNode.setAttribute('role', 'selectboxclose');
						imgCloseNode.setAttribute('style', 'position:absolute;height:14px;top:9px;right:6px;');
						imgCloseNode.setAttribute('src', Webcrea.GetImageLinkPath() + '/frame/code/combo_close.gif');
						imgCloseNode.setAttribute('onclick', "Webcrea.HideSelectBox('', '', '', true)");
						aImageGroupNode.appendChild(imgCloseNode);
						divHeaderNode.appendChild(aImageGroupNode);
						dlNode.appendChild(divHeaderNode);
					}
					dlNode.appendChild(ddNode);
					objPage.objDivPage.appendChild(dlNode);
				}
				ulNode.innerHTML = str;
				if(this.bSetListEx && bMySelectBox)
				{
					var nRow = ctrlParent.GetCurrRowIndex();
					var nDataRow = ctrlParent.GetRowDataNo(nRow);
					this.arrListExNode[nDataRow] = ddNode.cloneNode(true);
					if(ctrlParent && ctrlParent.IsGrid() && this.bSetListEx)
					{
						var currTrNode = this.parentObj.objTable.rows[nRow+this.parentObj.nHeader];
						var currNode = Webcrea.FindNode(currTrNode, 'orgid', this.cellId);
						if(currNode)
						{
							var cellValue = this.parentObj.GetValue(this.cellId);
							var sItems = '';
							if(this.IsMulti()) sItems = this.parentObj.SetValueMySelectBox(currNode, cellValue, true);
							else sItems = this.parentObj.CodeTextByCode(this.cellId, cellValue);
							currNode.value = sItems;
						}
					}
				}
			}
			else
			{
				if(Webcrea.IsIE69()) orgCell.text = str;
				else orgCell.textContent = str;
				if(ctrlParent && !ctrlParent.IsGrid())
				{
					var bDisabled = this.objCell.disabled;
					var objParent = this.objCell.parentNode;
					if(orgCellLabel) objParent.innerHTML = Webcrea.MakeOuterHtml(orgCellLabel) + Webcrea.MakeOuterHtml(orgCell);
					else objParent.innerHTML = Webcrea.MakeOuterHtml(orgCell);
					this.objCell = Webcrea.FindNode(objParent, 'id', this.realId);
					this.objCell.disabled = bDisabled;
					this.SetValue(this.objCell, '', true);
					var bChange_b = ctrlParent.objEvent.bChange;
					var bModify_b = ctrlParent.objEvent.bModify;
					ctrlParent.objEvent.bChange=false;
					ctrlParent.objEvent.bModify=false;
					if(!bClear) ctrlParent.SetValueByData(this.cellId, orgValue);
					ctrlParent.objEvent.bChange=bChange_b;
					ctrlParent.objEvent.bModify=bModify_b;
				}
				else if(ctrlParent && ctrlParent.IsGrid() && this.bSetListEx)
				{
					var nRow = this.parentObj.GetCurrRowIndex();
					var currTrNode = this.parentObj.objTable.rows[nRow+this.parentObj.nHeader];
					var currNode = Webcrea.FindNode(currTrNode, 'orgid', this.cellId);
					if(currNode)
					{
						var value = this.parentObj.GetValue(this.cellId);
						currNode.innerHTML = str;
						currNode.value = value;
					}
				}
				if(this.objCell && Webcrea.IE())
				{
					if(!Webcrea.IsEmpty(orgValue))
					{
						ctrlParent.SetValue(this.cellId, orgValue);
						if(Webcrea.IsEmpty(this.objCell.value)) this.objCell.selectedIndex = -1;
					}
					else this.objCell.selectedIndex = -1;
				}
			}
		}
		else if(orgCell.nodeName == 'INPUT' && (type == 'checkbox' || type == 'radio'))
		{
			if(bClear) this.objCell = Webcrea.FindNode(this.objDivPos, 'id', this.realId);
			if(!this.objCell)
			{
				this.objCell = orgCell.cloneNode(true);
				var arrDiv = this.objDivPos.getElementsByTagName('DIV');
				if(arrDiv && arrDiv.length>0)
				{
					var lastDiv = arrDiv[arrDiv.length-1];
					if(lastDiv) lastDiv.appendChild(this.objCell);
				}
			}
			var bCellDisable = false;
			if(this.objCell) bCellDisable = !Webcrea.IsEnable(this.objCell) || Webcrea.IsReadOnly(this.objCell);
			var copyCellLabel = orgCellLabel.cloneNode(true);
			var copyCell = orgCell.cloneNode(true);
			if(bLabelRoot) copyCell = Webcrea.FindNode(copyCellLabel, 'id', this.realId);
			if(Webcrea.IsEmpty(orgValue)) orgValue = orgCell.getAttribute('value');
			var nInitMode = orgCell.getAttribute('initmode');
			if(!Webcrea.IsEmpty(nInitMode) && nInitMode==1) orgValue = Webcrea.Calculation(orgValue);
			var orgParent = orgCellLabel.parentNode;
			if(this.opt == 'multi')
			{
				var nPer = 0;
				var str = '';
				var nField = this.arrField.length-1;
				if(nField>1) nField=1;
				var nObjAllWidth = 0;
				var nObjPerWidth = (this.objCell)?Webcrea.GetWidth(this.objCell):13;
				if(Webcrea.IsNaN(nObjPerWidth)) nObjPerWidth = 0;
				var initWidth = 0;
				var fontSize = 10;
				var cellInfo = ctrlParent.GetCellInfo(this.realId);
				if(cellInfo)
				{
					fontSize = cellInfo.fontsize;
					if(!Webcrea.IsEmpty(fontSize)) fontSize = Extract(fontSize, '[0-9]');
					if(fontSize<10) fontSize=10;
					initWidth = cellInfo.initWidth;
				}
				var tdNode;
				if(this.objCell) tdNode = Webcrea.FindParentNode(this.objCell, 'name', 'TD');
				else if(ctrlParent.IsGrid() && ctrlParent.objHTable) tdNode = Webcrea.FindNode(ctrlParent.objHTable, 'relId', ctrlParent.GetCellId(this.realId));
				var nTdWidth = tdNode?Webcrea.GetWidth(tdNode):100;
				if(nTdWidth<initWidth) nTdWidth = initWidth;
				var nMaxDataWidth = 0;
				var arrDataWidth = [];
				for(var i=0; i<this.arrData[this.arrField[nField]].length; i++)
				{
					var sData = this.arrData[this.arrField[nField]][i];
					var nDataWidth = Webcrea.GetDataWidth(sData, fontSize);
					if(nDataWidth>nMaxDataWidth) nMaxDataWidth=nDataWidth;
					arrDataWidth[i] = nDataWidth;
				}
				var bMaxWidth = false;
				var nAllDataWidth = 0;
				for(var i=0; i<arrDataWidth.length; i++)
				{
					nAllDataWidth += arrDataWidth[i];
					nAllDataWidth += nObjPerWidth;
					nAllDataWidth += 8;
				}
				if(nTdWidth<nAllDataWidth || this.nHorz>0) bMaxWidth = true;
				for(var i=0; i<arrDataWidth.length; i++)
				{
					var nDataWidth = arrDataWidth[i];
					if(bMaxWidth) nDataWidth= nMaxDataWidth;
					nObjAllWidth += nDataWidth;
					nObjAllWidth += nObjPerWidth;
					nObjAllWidth += 8;
					if(nTdWidth>nObjAllWidth) nPer++;
				}
				if(nPer==0) nPer = 1;
				var newCopyCell, newCopyCellLabel;
				var newTdNode = document.createElement('TD');
				for(var i=0; i<this.arrData[this.arrField[0]].length; i++)
				{
					var sCode = this.arrData[this.arrField[0]][i];
					var sData = sCode;
					if(this.arrField.length > 1) sData = this.arrData[this.arrField[1]][i];

					var setId = '';
					if(i>0) setId = '.m' + i;

					copyCellLabel.setAttribute('id', this.realId + '.label' + setId);
					copyCellLabel.setAttribute('for', this.realId + setId);
					copyCell.setAttribute('id', this.realId + setId);
					copyCell.setAttribute('value', sCode);

					if(bLabelRoot)
					{
						var spanNode = document.createElement('SPAN');
						spanNode.textContent = sData;
						var removeSpan = Webcrea.FindNode(copyCellLabel, 'name', 'SPAN');
						if(removeSpan) copyCellLabel.removeChild(removeSpan);
						copyCellLabel.appendChild(spanNode);
						newCopyCellLabel = copyCellLabel.cloneNode(true);
						if(bMaxWidth)
						{
							newCopyCellLabel.style.width = nMaxDataWidth + 'px';
							newCopyCellLabel.style.display = 'inline-block';
						}
						newTdNode.appendChild(newCopyCellLabel);
					}
					else
					{
						newCopyCell = document.createElement('INPUT');
						var arrAttr = copyCell.attributes;
						for(var j=0; j<arrAttr.length; j++)
						{
							var attrObj = arrAttr[j];
							newCopyCell.setAttribute(attrObj.name, attrObj.value);
						}
						newCopyCell.disabled = bCellDisable;
						newCopyCellLabel = document.createElement('LABEL');
						newCopyCellLabel.textContent = sData;
						if(bMaxWidth)
						{
							newCopyCellLabel.style.width = nMaxDataWidth + 'px';
							newCopyCellLabel.style.display = 'inline-block';
						}
						var arrAttrLabel = copyCellLabel.attributes;
						for(var j=0; j<arrAttrLabel.length; j++)
						{
							var attrObj = arrAttrLabel[j];
							newCopyCellLabel.setAttribute(attrObj.name, attrObj.value);
						}
						newTdNode.appendChild(newCopyCell);
						newTdNode.appendChild(newCopyCellLabel);
						if(i==0)
						{
							newCopyCellOrg = newCopyCell;
							newCopyCellLabelOrg = newCopyCellLabel;
						}
					}
					if(i==0)
					{
						if(this.nHorz && nPer>this.nHorz) nPer=this.nHorz;
					}
					if(!Webcrea.IsEmpty(str) && nPer!=0 && i%nPer==0)
					{
						str += '</br>';
						if(bLabelRoot)
						{
							var brNode = document.createElement('BR');
							newTdNode.insertBefore(brNode, newCopyCellLabel);
						}
						else
						{
							var brNode = document.createElement('BR');
							newTdNode.insertBefore(brNode, newCopyCell);
						}
					}
					str += Webcrea.MakeOuterHtml(copyCellLabel);
				}
				if(bLabelRoot)
				{
					if(ctrlParent && ctrlParent.IsGrid())
					{
						orgParent.removeChild(orgCellLabel);
						var childNodes = newTdNode.childNodes;
						for(var i=0; i<childNodes.length; i++)
						{
							var cloneChild = childNodes[i].cloneNode(true);
							orgParent.appendChild(cloneChild);
						}
					}
					else
					{
						var objParent = this.objCellLabel.parentNode;
						if(Webcrea.IsIE69()) objParent.text = str;
						else objParent.textContent = str;
						objParent.innerHTML = str;
						this.objCell = Webcrea.FindNode(objParent, 'id', this.realId);
						this.objCellLabel = this.objCell.parentNode;
						if(!bClear) this.SetValue(this.objCell, orgValue, true);
					}
				}
				else
				{
					var newParent;
					if(ctrlParent && ctrlParent.IsGrid())
					{
						if(ctrlParent && ctrlParent.IsGrid() && this.bSetListEx)
						{
							var nRow = this.parentObj.GetCurrRowIndex();
							var currTrNode = this.parentObj.objTable.rows[nRow+this.parentObj.nHeader];
							if(!currTrNode) return;
							var cell = Webcrea.FindNode(currTrNode, 'orgid', this.cellId);
							if(!cell) return;
							newParent = Webcrea.FindParentNode(cell, 'name', 'TD');
							if(!newParent) return;
							var objCell = Webcrea.FindNode(newParent, 'orgid', this.cellId);
							var objCellLabel = Webcrea.FindNode(newParent, 'for', objCell.id);
							newParent.removeChild(objCell);
							newParent.removeChild(objCellLabel);
						}
						else
						{
							newParent = orgParent;
							newParent.removeChild(orgCell);
							newParent.removeChild(orgCellLabel);
						}
					}
					else
					{
						newParent = this.objCell.parentNode;
						if(newParent)
						{
							var currNode = newParent.lastChild;
							while(currNode)
							{
								var prevNode = currNode.previousElementSibling;
								newParent.removeChild(currNode);
								currNode = prevNode;
							}
						}
					}
					var childNodes = newTdNode.childNodes;
					for(var i=0; i<childNodes.length; i++)
					{
						var cloneChild = childNodes[i].cloneNode(true);
						if(ctrlParent && ctrlParent.IsGrid() && this.bSetListEx)
						{
							var nRow = this.parentObj.GetCurrRowIndex();
							var nDataRow = this.parentObj.GetRowDataNo(nRow);
							var nCol = cloneChild.getAttribute('colno');
							var id = cloneChild.id;
							var name = cloneChild.name;
							var forId = cloneChild.getAttribute('for');
							if(!Webcrea.IsEmpty(id))
							{
								id = id + nDataRow.toString();
								cloneChild.id = id;
							}
							if(!Webcrea.IsEmpty(name))
							{
								name = name + nCol + nDataRow.toString();
								cloneChild.setAttribute('name', name);
							}
							if(!Webcrea.IsEmpty(forId))
							{
								forId = forId + nDataRow.toString();
								cloneChild.setAttribute('for', forId);
							}
						}
						newParent.appendChild(cloneChild);
					}
					if(ctrlParent && ctrlParent.IsGrid() && this.bSetListEx)
					{
						var value = this.parentObj.GetValue(this.cellId);
						this.parentObj.SetValue(this.cellId, value);
					}
					else this.objCell = Webcrea.FindNode(this.objDivPos, 'id', this.realId);
				}
			}
			else
			{
				if(type == 'checkbox' && bLabelRoot)
				{
					var sCode = this.arrData[this.arrField[0]][0];
					var sData = sCode;
					if(this.arrField.length > 1) sData = this.arrData[this.arrField[1]][0];

					copyCell.setAttribute('value', sCode);
					var str = Webcrea.MakeInnerHtml(copyCellLabel);
					if(Webcrea.IsIE69()) copyCellLabel.text = str + sData;
					else copyCellLabel.textContent = str + sData;
					str = Webcrea.MakeOuterHtml(copyCellLabel);

					if(ctrlParent && ctrlParent.IsGrid())
					{
						if(Webcrea.IsIE69()) orgParent.text = str;
						else orgParent.textContent = str;
					}
					else
					{
						var objParent = this.objCellLabel.parentNode;
						if(Webcrea.IsIE69()) objParent.text = str;
						else objParent.textContent = str;
						objParent.innerHTML = str;

						this.objCell = Webcrea.FindNode(objParent, 'id', this.realId);
						this.objCellLabel = this.objCell.parentNode;
						if(!bClear) this.SetValue(this.objCell, orgValue, true);
					}
				}
				else if(type == 'checkbox' && !bLabelRoot)
				{
					this.objCellLabel = Webcrea.FindNode(this.objDivPos, 'for', this.realId);
					var sCode = this.arrData[this.arrField[0]][0];
					var sData = sCode;
					if(this.arrField.length > 1) sData = this.arrData[this.arrField[1]][0];
					if(!ctrlParent || !ctrlParent.IsGrid())
					{
						this.objCell.setAttribute('value', sCode);
						if(bClear) this.objCell.checked = false;
						this.objCellLabel.textContent = sData;
						if(bCellDisable) this.objCell.disabled = bCellDisable;
					}
				}
				else if(type == 'radio')
				{
					if(this.objCell && (!ctrlParent || !ctrlParent.IsGrid()))
					{
						var radios = [];
						var targetNode = Webcrea.FindParentNode(this.objCell, 'name', 'TR');
						if(ctrlParent.IsForm()) targetNode = ctrlParent.objTable;
						Webcrea.FindNodeAll(targetNode, 'name', this.objCell.name, radios);
						for(var i=0; i<radios.length; i++)
						{
							var radio = radios[i];
							radio.checked = false;
							radio.value = '';
							radio.value = this.arrData[this.arrField[0]][i];
							if(Webcrea.IsIE69()) radio.text = this.arrData[this.arrField[1]][i];
							else radio.textContent = this.arrData[this.arrField[1]][i];
							if(orgValue == radio.value && !bClear) radio.checked = true;
							else if(bClear) radio.checked = false;
						}
					}
				}
			}
			if(this.opt == 'multi' && ctrlParent.IsForm()) ctrlParent.DisplayCodeButton();
			if(type == 'radio' && !bClear)
			{
				if(nFileVersion>=7020200103002 && ctrlParent.arrStackEvent.isearch('refresh')>=0)
				{
					var func = 'Webcrea.OnCHANGE';
					var funcObj = {};
					funcObj.obj = ctrlParent;
					funcObj.param = this.objCell;
					funcObj.func = func;
					Webcrea.arrRefreshCloseEvent[Webcrea.arrRefreshCloseEvent.length] = funcObj;
				}
				else Webcrea.OnCHANGE(this.objCell);
			}
		}
		this.bSearched = true;
	},
	FirstItem : function()
	{
		var sRet = '';
		var nRow = 0;
		if(this.bSetListEx && this.arrListExNode && this.arrListExNode.length>nRow)
		{
			var dlNode = this.arrListExNode[nRow];
			if(!dlNode) return sRet;
			var arrLi = dlNode.getElementsByTagName('LI');
			if(arrLi.length<1) return sRet;
			var liNode = arrLi[nRow];
			return sRet = liNode.getAttribute('code');
		}
		if(!this.arrRows) return '';
		return this.arrData[this.arrField[0]][nRow];
	},
	LastItem : function()
	{
		var sRet = '';
		var nRow = 0;
		if(this.bSetListEx && this.arrListExNode && this.arrListExNode.length>nRow)
		{
			nRow = this.arrListExNode.length-1;
			var dlNode = this.arrListExNode[nRow];
			if(!dlNode) return sRet;
			var arrLi = dlNode.getElementsByTagName('LI');
			if(arrLi.length<1) return sRet;
			var liNode = arrLi[nRow];
			return sRet = liNode.getAttribute('code');
		}
		if(!this.arrRows) return '';
		nRow = this.arrData[this.arrField[0]].length-1;
		return this.arrData[this.arrField[0]][nRow];
	},
	CodeText : function()
	{
		var sRet = '';
		var sCode = arguments[0];
		var nRow = arguments[1];
		if(Webcrea.IsNull(nRow)) nRow = 0;
		if(this.bSetListEx && this.arrListExNode && this.arrListExNode.length>0)
		{
			if(this.arrListExNode.length<=nRow) return sRet;
			var dlNode = this.arrListExNode[nRow];
			if(!dlNode) return sRet;
			var arrLi = dlNode.getElementsByTagName('LI');
			for(var i=0; i<arrLi.length; i++)
			{
				var liNode = arrLi[i];
				var role = liNode.getAttribute('role');
				var code = liNode.getAttribute('code');
				var value = liNode.getAttribute('value');
				if(role == 'selectboxitem') value = liNode.getAttribute('sValue');
				if(sCode == code)
				{
					sRet = value;
					break;
				}
			}
			return sRet;
		}
		if(!this.arrRows) return sRet;
		if(this.arrRows.length < 1) return sRet;
		if(Webcrea.IsNumberType(sCode)) sCode = sCode.toString();
		var n = this.arrData[this.arrField[0]].isearch(sCode);
		if(n>=0) sRet = this.arrData[this.arrField[1]][n];
		return sRet;
	},
	SetValue : function(cell, cellValue, bDisplay, bCheck) {
		var bModifyEvent = true;
		if(Webcrea.IsNumber(cellValue)) cellValue = cellValue.toString();
		var arrValue = cellValue.split(',');
		if(cell.nodeName == 'SELECT')
		{
			cell.value = cellValue;
		}
		else if(cell.nodeName == 'INPUT' && (cell.type == 'checkbox' || cell.type == 'radio'))
		{
			var bLabelRoot = false;
			var objParent = cell.parentNode;
			if(objParent && objParent.nodeName == 'LABEL') bLabelRoot = true;
			if(this.opt == 'multi')
			{
				var bFind = false;
				this.objCell = cell;
				if(bLabelRoot)
				{
					while(objParent)
					{
						if(!objParent) break;
						if(objParent.nodeName == 'LABEL')
						{
							var findId = objParent.getAttribute('for');
							cell = Webcrea.FindNode(objParent, 'id', findId);
							cell.checked = false;
							for(var i=0; i<arrValue.length; i++)
							{
								if(cell.value == arrValue[i].trim())
								{
									cell.checked = true;
									arrValue.splice(i, 1);
									break;
								}
							}
						}
						objParent = objParent.nextElementSibling;
					}
				}
				else
				{
					var bChangeCheck = bCheck;
					var objNext = cell;
					while(objNext)
					{
						if(objNext && objNext.nodeName == 'INPUT')
						{
							cell = objNext;
							var bOrgCheck = cell.checked;
							var bFind = false;
							cell.checked = false;
							for(var i=0; i<arrValue.length; i++)
							{
								if(cell.value == arrValue[i].trim())
								{
									if(!bChangeCheck && !bOrgCheck) bChangeCheck = true;
									bFind = true;
									cell.checked = true;
									arrValue.splice(i, 1);
									break;
								}
							}
							if(!bChangeCheck && !bFind && bOrgCheck) bChangeCheck = true;
						}
						objNext = objNext.nextElementSibling;
					}
					bModifyEvent = bChangeCheck;
				}
			}
			else
			{
				if(cell.type == 'checkbox')
				{
					var objParent = cell.parentNode;
					var sCode = '';
					var sData = '';
					var bChecked = false;
					if(arrValue[0]=='false') arrValue[0]=0;
					else if(arrValue[0]=='true') arrValue[0]=1;
					if(!this.arrData || this.bDataNone)
					{
						if(!Webcrea.IsEmpty(arrValue[0]) && Webcrea.IsString(arrValue[0]))
						{
							if(arrValue[0] == '0') arrValue[0] = 0;
							else arrValue[0] = 1;
						}
					}
					if(!this.arrData)
					{
						this.bDataNone = true;
						if(arrValue[0]==0 || arrValue[0]==1)
						{
							this.AddData("0=''");
							this.AddData("1=''");
						}
					}
					for(var i=0; i<this.arrData[this.arrField[0]].length; i++)
					{
						if(this.arrData[this.arrField[0]][i] == arrValue[0])
						{
							sCode = this.arrData[this.arrField[0]][i];
							sData = sCode;
							if(this.arrField.length > 1) sData = this.arrData[this.arrField[1]][i];
							bChecked = i;
							break;
						}
					}

					if(sCode == '')
					{
						if(this.arrData[this.arrField[0]].length>0)
						{
							sCode = this.arrData[this.arrField[0]][0];
							sData = sCode;
							if(this.arrField.length > 1) sData = this.arrData[this.arrField[1]][0];
						}
					}

					var orgValue = cell.value;
					if(sCode == '0' && orgValue == '') orgValue = '0';
					if(orgValue == sCode && WebcreaInfo.ModifyEventMode == 1) bModifyEvent = false;
					cell.value = sCode;
					if(bLabelRoot)
					{
						var cellParent = cell.parentNode;
						if(Webcrea.IE() && cellParent.childNodes.length>2) cellParent.childNodes[2].textContent = sData;
						else cellParent.innerHTML = cell.outerHTML + sData;

						this.objCell = Webcrea.FindNode(objParent, 'id', cell.id);
						this.objCellLabel = this.objCell.parentNode;

						var findId = cellParent.getAttribute('for');
						cell = Webcrea.FindNode(cellParent, 'id', findId);
						cell.checked = bChecked;

						if(this.parentObj.IsGrid())
						{
							if (Webcrea.IsIE69()) cell.attachEvent('onclick', Webcrea.OnONECLK);
							else cell.addEventListener('click', Webcrea.OnONECLK, false);
							if (Webcrea.IsIE69()) cell.attachEvent('ondblclick', Webcrea.OnDBLCLK);
							else cell.addEventListener('dblclick', Webcrea.OnDBLCLK, false);
						}
					}
					else
					{
						cell.checked = bChecked;
						var cellLabel = cell.nextElementSibling;
						cellLabel.textContent = sData;
						var cellParent = cell.parentNode;
						this.objCell = Webcrea.FindNode(objParent, 'id', cell.id);
						this.objCellLabel = this.objCell.parentNode;
					}
				}
				else if(cell.type == 'radio')
				{
					if(!this.arrData) return;
					var radios = [];
					var trNode = '';
					if(this.parentObj && this.parentObj.IsForm()) trNode = Webcrea.FindParentNode(cell, 'name', 'TABLE');
					else trNode = Webcrea.FindParentNode(cell, 'name', 'TR');
					Webcrea.FindNodeAll(trNode, 'name', cell.name, radios);
					for(var i=0; i<radios.length; i++)
					{
						var radio = radios[i];
						radio.checked = false;
						radio.value = this.arrData[this.arrField[0]][i];
						if(Webcrea.IsIE69()) radio.text = this.arrData[this.arrField[1]][i];
						else radio.textContent = this.arrData[this.arrField[1]][i];
						if(cellValue == radio.value) radio.checked = true;
					}
				}
			}
			if(cell.type == 'checkbox')
			{
				if(!bDisplay && this.parentObj.bSearched && bModifyEvent) Webcrea.OnMODIFY(this.objCell);
				Webcrea.OnCHANGE(this.objCell);
			}
		}
	},
	Refresh : function() {
		this.bSearched = false;
		this.RemoveData();
		this.OnQUERY();
	},
	OnINIT : function()
	{
		if((!this.arrRows || (this.arrRows && this.arrRows.length<1)) && typeof window[this.divPage][this.divPosOrg][this.cellId].OnINIT != 'undefined')
			window[this.divPage][this.divPosOrg][this.cellId].OnINIT();
		else if(this.bSetListEx) eval(this.objName).Clear();
	},
	OnQUERY : function()
	{
		if(window[this.divPage][this.divPosOrg][this.cellId] && typeof window[this.divPage][this.divPosOrg][this.cellId].OnINIT != 'undefined')
			window[this.divPage][this.divPosOrg][this.cellId].OnINIT();
	}
});
var TreeObject = Class.create({
	initialize : function(divPage, divPos, cellId, level){
		this.divPage = divPage;
		this.divPos = divPos;
		this.divPosOrg = divPos;
		this.cellId = cellId;
		this.level = level;
		this.dataSeqField = '_my_data_seq_';
		this.objDivPage = document.getElementById(this.divPage);
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);

		this.SetLayout();
		this.divScrollWidth = Webcrea.GetScrollWidth(this.objDivPos);
		this.initDivWidth = Webcrea.GetWidth(this.objDivPos, true) + this.divScrollWidth;
		this.initDivHeight = Webcrea.GetHeight(this.objDivPos);
		this.initLeft = Webcrea.GetLeft(this.objDivPos);
		this.initTop = Webcrea.GetTop(this.objDivPos);

		this.arrMobileLayout = [];

		this.pos = -1;/*데이타 전체(-1), 가져올 순번(seq)*/

		this.sDBID = '';
		this.sParam = '';
		this.sSql = '';
		this.dataObj = null;/*다른 개체에서 데이타를 가져오는 경우*/

		this.bAddData = false;
		this.msvData = null;
		this.arrRows = null;
		this.arrField = null;
		this.arrFieldType = null;
		this.arrData = null;
		this.arrStatus = null;
		this.arrRows_Org = null;
		this.arrField_Org = null;
		this.arrFieldType_Org = null;
		this.arrData_Org = null;

		this.arrObject = new Array();

		this.bInit = false;
		this.bEnable = true;/*비활성*/
		this.bVScroll = true;
		this.palette = '';

		this.bSort = false;
		this.sortField = '';

		this.arrStackEvent = [];

		this.bInitDisplay = true;
		if(this.objDivPos && this.objDivPos.getAttribute('initDisplay') == 'none') this.bInitDisplay = false;

		this.rootObj = null;
		this.childObj = null;
		this.imgFolder = Webcrea.GetImageLinkPath() + '/frame/tree/';
		this.config = {
			target			: null,
			folderLinks		: true,
			useSelection	: true,
			useCookies		: false,
			useLines		: false,
			useIcons		: true,
			useStatusText	: false,
			closeSameLevel	: false,
			inOrder			: false
		};
		this.icon = {
			root		: this.imgFolder + 'base.gif',
			folder		: this.imgFolder + 'folder.gif',
			folderOpen	: this.imgFolder + 'folderopen.gif',
			node		: this.imgFolder + 'page.gif',
			empty		: this.imgFolder + 'empty.gif',
			line		: this.imgFolder + 'line.gif',
			join		: this.imgFolder + 'line_join.gif',
			joinBottom	: this.imgFolder + 'line_joinbottom.gif',
			joinRoot	: this.imgFolder + 'line_joinroot.gif',
			plus		: this.imgFolder + 'line_plus.gif',
			plusBottom	: this.imgFolder + 'line_plusbottom.gif',
			plusRoot	: this.imgFolder + 'line_plusroot.gif',
			minus		: this.imgFolder + 'line_minus.gif',
			minusBottom	: this.imgFolder + 'line_minusbottom.gif',
			minusRoot	: this.imgFolder + 'line_minusroot.gif',
			nlPlus		: this.imgFolder + 'noline_plus.gif',
			nlMinus		: this.imgFolder + 'noline_minus.gif'
		};
		this.treeNode = function Node(id, pid, name, value, url, title, target, icon, iconOpen, open) {
			this.id = id;
			this.pid = pid;
			this.value = value;
			this.name = name;
			this.url = url;
			this.title = title;
			this.target = target;
			this.icon = icon;
			this.iconOpen = iconOpen;
			this.iconWidth = 16;
			this.iconHeight = 16;
			this.userIcon = false;
			this._io = open || false;
			this._is = false;
			this._ls = false;
			this._hc = false;
			this._ai = 0;
			this._p;
			this.seq = 0;
			this.expand = 1;
			this.bChildSearch = false;
			this.bChildExist = false;
			this.fontSize = '';
			this.fontColor = '';
			this.treeIcon = '';
			this.treeIconOpen = '';

			if(url != undefined) this.bUrl = url.indexOf('htm')>=0;
			else this.bUrl = false;
		};
		this.aNodes = [];
		this.aIndent = [];
		this.root = new this.treeNode(-1);
		this.selectedNode = null;
		this.selectedFound = false;
		this.completed = false;
		this.nodeGap = 0;

		var parentObj;
		if(this.level) parentObj = _my_File.GetObject(this.objDivPos);
		else parentObj = _my_File.GetPageObjById(this.divPage);
		parentObj.AddObject(this);
		this.pageObj = _my_File.GetPageObjById(this.divPage);
	},
	CopyInfo : function()
	{
		let orgObj = arguments[0];
	},
	Init : function()
	{
		this.divClass = this.objDivPos.getAttribute('class');
		if(!this.divClass) this.divClass = '';
		this.DisplayScroll();
		this.DisplayDummy();
		if(!this.bInitDisplay) this.Hide();
		this.bInit = true;
	},
	InitializeObj : function()
	{
		this.dataObj = null;
	},
	ClearInit : function(cellId)
	{
		this.objDivPos.innerHTML = '';
		this.aNodes = [];
		this.aIndent = [];
		this.root = new this.treeNode(-1);
		this.selectedNode = null;
		this.selectedFound = false;
		this.completed = false;
		this.Init();
	},
	Clear : function(cellId)
	{
		this.ClearInit(cellId);
		this.ClearRecordSet();
	},
	ClearRecordSet : function()
	{
		var ___bAll = arguments[0];
		if(this.arrRows) this.arrRows = new Array();
		else this.arrRows = null;
		this.arrStatus = new Array();
		this.arrRowInfo = new Array();
		if(this.bMulti) this.arrMulti = new Array();
		if(___bAll)
		{
			this.arrField = new Array();
			this.arrFieldType = new Array();
			this.arrData = new Array();
			this.arrStatus = new Array();
		}
		else
		{
			if(!this.arrField) return;
			for(var i=0; i<this.arrField.length; i++)
			{
				var field = this.arrField[i];
				this.arrData[field] = new Array();
				this.arrStatus[field] = new Array();
			}
		}
	},
	SetInitRecord : function()
	{
		var bClear = arguments[0];
		Webcrea.SetInitRecord(this, bClear);
	},
	/*가로크기 변경, 세로크기 변경, 오른쪽 맞추기, 아래쪽 맞추기*/
	SetLayout : function(bHorzExpand, bVertExpand, bRight, bBottom)
	{
		if(bHorzExpand == undefined) bHorzExpand = false;
		if(bVertExpand == undefined) bVertExpand = false;
		if(bRight == undefined) bRight = false;
		if(bBottom == undefined) bBottom = false;
		this.layoutOpt = {
			bHorz : bHorzExpand,
			bVert : bVertExpand,
			bRight : bRight,
			bBottom : bBottom
		};
	},
	SetPalette : function(bForm, bLayout, sID, crFillIndex, crHatchIndex, bTrans, bEven, grade, crLLineIndex, crRLineIndex, crTLineIndex, crBLineIndex, crFontIndex)
	{
		if(bTrans) return;
		var currObj = this;
		var SetColor = function(css)
		{
			if(crFillIndex>=0)
			{
				if(grade>0)
				{
					var sBackground = css.style.background;
					var arrToken = Webcrea.MakeToken(sBackground, '', true);
					var arrBackground = [];
					var sAdd = '';
					for(var i=0; i<arrToken.length; i++)
					{
						var s = arrToken[i];
						var sNext = '';
						if(i+1<arrToken.length) sNext = arrToken[i+1];
						if(s.iEquals('rgb') && sNext == '(')
						{
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
							for(var j=i; j<arrToken.length; j++)
							{
								var s1 = arrToken[j];
								sAdd += s1;
								if(s1 == ')') break;
							}
							i=j;
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
						}
						else sAdd += s;
					}
					var bgFill = Webcrea.GetPaletteColor(currObj, crFillIndex);
					arrBackground[1] = bgFill;
					if(crHatchIndex>=0) 
					{
						var bgHatch = Webcrea.GetPaletteColor(currObj, crFillIndex);
						arrBackground[2] = bgHatch;
					}
					if(grade>3) arrBackground[3] = bgFill;
					var bgColor = '';
					for(var i=0; i<arrBackground.length; i++) bgColor += arrBackground[i];
					css.style.background = bgColor;
				}
				else
				{
					var bgColor = Webcrea.GetPaletteColor(currObj, crFillIndex);
					css.style.background = bgColor;
				}
			}
			if(crLLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crLLineIndex);
				css.style.borderLeftColor = lineColor;
			}
			if(crRLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crRLineIndex);
				css.style.borderRightColor = lineColor;
			}
			if(crTLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crTLineIndex);
				css.style.borderTopColor = lineColor;
			}
			if(crBLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crBLineIndex);
				css.style.borderBottomColor = lineColor;
			}
			if(crFontIndex>=0)
			{
				var fontColor = Webcrea.GetPaletteColor(currObj, crFontIndex);
				css.style.color = fontColor;
			}
		};
		if(bForm)
		{
			var classIds = this.objDivPos.getAttribute('class');
			if(!classIds) return;
			var arrClassId = classIds.split(' ');
			for(var i=0; i<arrClassId.length; i++)
			{
				var classId = arrClassId[i];
				if(classId.indexOf('_my_')>=0) continue;
				var css = Webcrea.GetCSS('.'+classId);
				if(css) SetColor(css);
			}
			return;
		}
	},
	SetMobileLayout : function()
	{
		var params = '';
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(Webcrea.IsString(param)) param = "'" + param + "'";
			if(!Webcrea.IsEmpty(params)) params += ',';
			params += param;
		}
		var func = 'Webcrea.SetMobileLayout(' + params + ', this);';
		eval(func);
	},
	DataHandler : function(bRefresh, sParam, ReturnFunc, bAsync, sUrl, ThreadId, ThreadResult, bForceService)
	{
		if(ToUpper(this.sDBID).indexOf('TEXT') > 0 || ToUpper(this.sDBID).indexOf('MEMORY') > 0 || ToUpper(this.sDBID).indexOf('OBJECT') > 0) Webcrea.bFileDB=true;
		else Webcrea.bFileDB=false;
		if(!this.dataObj && !Webcrea.IsEmpty(this.sSql) && Webcrea.bFileDB) Webcrea.CreateRecordSet(this);
		if(!this.dataObj || bForceService) DataHandler(sParam, ReturnFunc, bAsync, sUrl, this, ThreadId, ThreadResult);
		else if(!Webcrea.IsEmpty(ReturnFunc)) eval(ReturnFunc)();
		if(bRefresh) this.Refresh();
	},
	MSVDataParser : function(msvData) {
		var bTextDB = false;
		var n = this.sDBID.indexOf('dbid=TEXT');
		var n1 = this.sParam.indexOf('url=');
		var n2 = this.sSql.indexOf('urlIndex=');
		if(n>=0 && n1<0 && n2<0) bTextDB = true;
		if(!Webcrea.IsNull(msvData))
		{
			msvData = msvData.ltrim();
		}
		this.msvData = msvData;

		var arrRows_B = null;
		var arrField_B = null;
		var arrData_B = null;
		if(this.bAddData && this.arrRows)
		{
			arrRows_B = this.arrRows;
			arrField_B = this.arrField;
			arrData_B = this.arrData;
		}
		var msvSpRowType = Webcrea.msvSpRowType;
		if(bTextDB)
		{
			msvSpRowType = '\r\n';
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 2 && this.arrRows[this.arrRows.length-1]=='') this.arrRows.splice(this.arrRows.length-1, 1);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\n';
				this.arrRows = msvData.split(msvSpRowType);
			}
			var nRowCheck = this.arrRows.length-1;
			while(true)
			{
				if(nRowCheck<0) break;
				var sRowCheck = this.arrRows[nRowCheck];
				if(Webcrea.IsNull(sRowCheck)) sRowCheck = '';
				if(sRowCheck.trim() == '') this.arrRows.splice(nRowCheck, 1);
				else break;
				nRowCheck--;
			}
		}
		else
		{
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\r\n';
				this.arrRows = msvData.split(msvSpRowType);
				if(this.arrRows.length == 1)
				{
					msvSpRowType = '\n';
					this.arrRows = msvData.split(msvSpRowType);
				}
			}
		}
		this.arrField = new Array();
		this.arrFieldType = new Array();
		this.arrData = new Array();
		this.arrStatus = new Array();
		this.SetInitRecord(true);

		var spType = Webcrea.msvSpColType;
		if(this.arrRows.length > 0)
		{
			if(Webcrea.IsSqlStatusError(this.arrRows[0])) 
			{
				this.arrRows = null;
				return;
			}
			else Webcrea.SetSqlStatus('');
			var n = this.arrRows[0].indexOf('\r\n');
			while(n==0)
			{
				this.arrRows[0] = this.arrRows[0].replace('\r\n', '');
				n = this.arrRows[0].indexOf('\r\n');
			}
			if(this.arrRows[0].split(spType).length < 2)
			{
				var spType1 = '\t';
				if(this.arrRows[0].split(spType1).length < 2)
				{
					var spType2 = ',';
					if(this.arrRows[0].split(spType2).length > 1) spType = spType2;
				}
				else spType = spType1;
			}
			for(var i=0; i<2; i++)
			{
				var n = this.arrRows[this.arrRows.length-1].lastIndexOf('\n');
				if(n>=0)
				{
					var n1 = this.arrRows[this.arrRows.length-1].lastIndexOf('\r\n');
					if(n1>=0 && n1+2 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n1);
					}
					else if(n1<0 && n+1 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n);
					}
					else break;
				}
				else break;
			}
		}
		else return;

		var arrColData = this.arrRows[0].split(spType);
		for(var i=0; i<arrColData.length; i++)
		{
			var strCol = arrColData[i];
			var nColType = 0;
			var n = strCol.lastIndexOf('#');
			if(n > 0)
			{
				strCol = strCol.replace('#', '');
				nColType = 1;
			}
			this.arrField[i] = strCol;
			this.arrFieldType[i] = nColType;
			this.arrData[this.arrField[i]] = new Array();
			this.arrStatus[this.arrField[i]] = new Array();
		}
		if(this.arrField.length>0)
		{
			this.arrField[this.arrField.length] = this.dataSeqField;
			this.arrFieldType[this.arrFieldType.length] = 1;
			this.arrData[this.dataSeqField] = new Array();
			this.arrStatus[this.dataSeqField] = new Array();
		}
		this.arrRows.splice(0, 1);

		/*필드 별 레코드 셋*/
		for(var i=0; i<this.arrRows.length; i++)
		{
			var bLast = (i+1==this.arrRows.length)?true:false;
			var bCRLF = (this.arrRows[i].indexOf('\r\n')<0)?false:true;
			var sRow = this.arrRows[i].replace('\r\n', '');
			var bSkip = false;
			if(sRow.length<1)
			{
				if(!bLast) bSkip = true;
				else if(!bCRLF) bSkip = true;
			}
			if(bSkip)
			{
				this.arrRows.splice(i, 1);
				i--;
				continue;
			}

			var arrColData = this.arrRows[i].split(spType);
			for(var j=0; j<arrColData.length; j++)
			{
				if(j>=this.arrField.length) break;
				this.arrData[this.arrField[j]][i] = arrColData[j];
				if(j==0)
				{
					this.arrData[this.dataSeqField][i] = i;
					this.arrStatus[this.dataSeqField][i] = '';
				}
			}
		}

		if(this.bAddData && arrRows_B)
		{
			for(var i=0; i<arrRows_B.length; i++)
			{
				this.arrRows.splice(i, 0, arrRows_B[i]);
				for(var j=0; j<arrField_B.length; j++)
					this.arrData[this.arrField[j]].splice(i, 0, arrData_B[arrField_B[j]][i]);
			}
			this.bAddData = false;
		}
		this.SetInitRecord();
		if(this.arrField.length>0 && this.arrRows.length==0) _my_sqlStatus = '[DATA BLANK]';
	},
	QueryParser : function() {
		var ___param = {};
		___param.sql = arguments[0];
		___param.dataObj = arguments[1];
		if(___param.dataObj == undefined) ___param.dataObj = this.dataObj;
		if(___param.sql == undefined) ___param.sql = this.sSql;
		if(!___param.dataObj.arrRows) return false;

		var obj = QueryParser(___param.sql, ___param.dataObj);
		this.arrRows = obj.arrRows;
		this.arrField = obj.arrField;
		this.arrFieldType = obj.arrFieldType;
		this.arrData = obj.arrData;
		this.arrStatus = obj.arrStatus;
		this.SetInitRecord();
	},
	AddObject : function(obj) {
		this.arrObject[this.arrObject.length] = obj;
	},
	GetObject : function(nodeId, bCell) {
		var findObj = null;
		for(var i=0; i<this.arrObject.length; i++)
		{
			var id = this.arrObject[i].divPos;
			if(bCell) id = this.arrObject[i].cellId;
			if(id == nodeId)
			{
				findObj = this.arrObject[i];
				break;
			}
		}
		return findObj;
	},
	SetCurrRecord : function(obj, selNode) {
		if(!obj.arrField) return;
		var objName = '';
		if(!this.IsRoot()) objName = this.rootObj.objName;
		else objName = this.objName;
		for(var i=0; i<obj.arrField.length; i++)
		{
			var sField = obj.arrField[i];
			var sValue = '';
			if(selNode) sValue = selNode.arrData[i];
			Webcrea.DynamicVal(sField, sValue, objName);
			Webcrea.DynamicVal(sField, sValue);
		}
	},
	SetFocus : function() {
		if(this.objDivPos) this.objDivPos.focus();
	},
	ToNumber : function()
	{
		Webcrea.ToNumber(this, arguments[0]);
	},
	ToString : function()
	{
		Webcrea.ToString(this, arguments[0]);
	},
	_Get_Enable : function() {
		return this.bEnable;
	},
	_Set_Enable : function(b) {
		this.Enable(b);
	},
	_Get_FocusColor : function() {
		var css = Webcrea.GetCSS('._my_tree a.nodeSel');
		if(css) return css.style.backgroundColor;
	},
	_Set_FocusColor : function() {
		var css = Webcrea.GetCSS('._my_tree a.nodeSel');
		if(css) css.style.backgroundColor = arguments[0];
	},
	_Get_FontSize : function() {
		return 0;
	},
	_Set_FontSize : function() {
		var ___size = arguments[0];
		var nodeInfo = this.aNodes[this.selectedNode];
		if(nodeInfo) nodeInfo.fontSize = ___size;
		var selNode = Webcrea.FindNode(this.objDivPos, 'id', 's' + this.objName + this.selectedNode);
		if(selNode) Webcrea.FontSize(___size, selNode);
	},
	_Get_FontType : function() {
		return 0;
	},
	_Set_FontType : function() {
		var ___type = arguments[0];
		___type = ___type.toLowerCase();
		var selNode = Webcrea.FindNode(this.objDivPos, 'id', 's' + this.objName + this.selectedNode);
		if(selNode) Webcrea.FontType(___type, selNode);
	},
	_Get_IsCollapsed : function()
	{
		var bRet = false;
		var nodeInfo = this.aNodes[this.selectedNode];
		if(nodeInfo) bRet = !nodeInfo._io;
		return bRet;
	},
	_Get_IsExpanded : function()
	{
		var bRet = false;
		var nodeInfo = this.aNodes[this.selectedNode];
		if(nodeInfo) bRet = nodeInfo._io;
		return bRet;
	},
	_Get_Left : function() {
		return Webcrea.GetLeft(this.objDivPos, true);
	},
	_Set_Left : function(pos) {
		var org = Webcrea.GetLeft(this.objDivPos);
		var diff = pos-org;
		this.objDivPos.style.left = pos + 'px';
	},
	_Get_NodeGap : function() {
		return this.nodeGap;
	},
	_Set_NodeGap : function() {
		this.nodeGap = arguments[0];
	},
	_Get_NodeLine : function() {
		return this.config.useLines?1:0;
	},
	_Set_NodeLine : function() {
		var bNodeLine = arguments[0];
		this.config.useLines = bNodeLine;
	},
	_Get_NoPrint : function()
	{
		return this.bNoPrint;
	},
	_Set_NoPrint : function()
	{
		this.bNoPrint = arguments[0];
		Webcrea.NoPrint(this, arguments[0]);
	},
	_Get_OnlyPrint : function()
	{
		return this.bOnlyPrint;
	},
	_Set_OnlyPrint : function()
	{
		this.bOnlyPrint = arguments[0];
		Webcrea.OnlyPrint(this, arguments[0]);
	},
	_Get_RecordCount : function() {
		return this.RecordCount();
	},
	_Get_TextColor : function() {
		var ___bRet='';
		var selNode = Webcrea.FindNode(this.objDivPos, 'id', 's' + this.objName + this.selectedNode);
		if(selNode) bRet = selNode.style.color;
		if(!bRet)
		{
			var css = Webcrea.GetCSS('._my_tree a');
			if(css) bRet = css.style.color;
		}
		return bRet;
	},
	_Set_TextColor : function() {
		var ___color = arguments[0];
		var nodeInfo = this.aNodes[this.selectedNode];
		if(nodeInfo) nodeInfo.fontColor = ___color;
		var selNode = Webcrea.FindNode(this.objDivPos, 'id', 's' + this.objName + this.selectedNode);
		if(selNode) Webcrea.TextColor(___color, selNode);
	},
	_Get_Top : function() {
		return Webcrea.GetTop(this.objDivPos);
	},
	_Set_Top : function(pos) {
		var org = Webcrea.GetTop(this.objDivPos);
		var diff = pos-org;
		this.objDivPos.style.top = pos + 'px';
	},
	_Get_Visible : function() {
		var bVisible=true;
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(obj.style.display=='')
		{
			var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos);
			bVisible = css.style.display == 'none' ? false : true;
		}
		else bVisible = obj.style.display == 'none' ? false : true;
		return bVisible;
	},
	_Set_Visible : function(b) {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(b) obj.style.display = 'block';
		else obj.style.display = 'none';
	},
	_Get_Width : function() {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetWidth(obj);
	},
	_Set_Width : function(width) {
		if(this.objGDivPos) this.objGDivPos.style.width = width + 'px';
		this.objDivPos.style.width = width + 'px';
	},
	_Get_Height : function() {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetHeight(obj);
	},
	_Set_Height : function(height) {
		if(this.objGDivPos) this.objGDivPos.style.height = height + 'px';
		this.objDivPos.style.height = height + 'px';
	},
	Enable : function(b) {
		if(b == undefined) b = true;
		Webcrea.Disable(this.objDivPos, !b);
		this.bEnable = b;
	},
	Find : function() {
		var param = arguments[0];
		var bPrev = false;
		var bNext = false;
		var bFocus = false;
		var nLevel = -1;
		if(param.indexOf('next')>=0)
		{
			bNext = true;
			param.replace('next', '');
		}
		else if(param.indexOf('prev')>=0)
		{
			bPrev = true;
			param.replace('prev', '');
		}
		if(param.indexOf('focus')>=0)
		{
			bFocus = true;
			param.replace('focus', '');
		}
		var arrWhere;
		var n = param.indexOf('where');
		if(n>=0)
		{
			var sWhere = param.substr(n+5);
			sWhere = sWhere.trim();
			arrWhere = Webcrea.MakeToken(sWhere);
			if(sWhere.indexOf('_LEVEL_')>0)
			{
				for(var i=0; i<arrWhere.length; i++)
				{
					if(arrWhere[i] == '_LEVEL_')
					{
						nLevel = arrWhere[i+2];
						arrWhere.splice(i-1, arrWhere.length-i);
						break;
					}
				}
			}
			param = param.substr(0, n);
			param = param.trim();
		}
		var bFind = false;
		var currObj = this;
		var ExpandNode = function(node)
		{
			currObj.NodeOpen(node.id, true);
			if(node._p && node.pid) ExpandNode(node._p);
		};
		if(arrWhere.length>0)
		{
			var currNodeId = this.selectedNode;
			if(!currNodeId) currNodeId = 1;
			else
			{
				if(bPrev) currNodeId--;
				else currNodeId++;
			}
			if(currNodeId >= this.aNodes.length) currNodeId = this.aNodes.length-1;
			var firstNodeId = currNodeId;
			while(currNodeId)
			{
				var nodeInfo = this.aNodes[currNodeId];
				if(!nodeInfo.obj) continue;
				if(nLevel>=0 && nodeInfo.level != nLevel) continue;
				if(Webcrea.IsWhereData(nodeInfo.obj, nodeInfo.id-1, arrWhere))
				{
					ExpandNode(nodeInfo);
					this.SelNode(nodeInfo.id);
					bFind = true;
					break;
				}
				if(!bPrev) currNodeId++;
				else currNodeId--;
				if(currNodeId >= this.aNodes.length || currNodeId < 1) currNodeId = 1;
				if(currNodeId == firstNodeId) break;
			}
		}
		if(bFind) this.OnCLICK();
	},
	FontSize : function()
	{
		var ___size = arguments[0];
		var ___param = arguments[1];
		var ___arr = ___param.split(',');
		for(var ___i=0; ___i<___arr.length; ___i++)
		{
			var ___cellId = ___arr[___i];
			___cellId = ___cellId.trim();
			this._Set_FontSize(___size, ___cellId);
		}
	},
	TextColor : function()
	{
		var param = arguments[0];
		var arrParam = param.split(' ');
		if(arrParam.length<1) return;
		var color = arrParam[0];
		var sObjs = '';
		if(arrParam.length>1)
		{
			for(var i=1; i<arrParam.length; i++)
			{
				if(!Webcrea.IsEmpty(sObjs)) sObjs += ' ';
				sObjs += arrParam[i];
			}
		}
		var arrObj = sObjs.split(',');
		for(var i=0; i<arrObj.length; i++)
		{
			var cellId = arrObj[i];
			cellId = cellId.trim();
			this._Set_TextColor(color, cellId);
		}
	},
	IsWhere : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		if(Webcrea.IsEmpty(___param.sql)) return true;
		___param.rowIndex = arguments[1];
		var bVal = arguments[2];
		var aWhere = Webcrea.MakeToken(___param.sql);
		return Webcrea.IsWhereData(this, ___param.rowIndex, aWhere, null, false, bVal);
	},
	IsVisible : function()
	{
		var ___bRet=1;
		if(this.objGDivPos) ___bRet = this.objGDivPos.style.display == 'none'?0:1;
		else ___bRet = this.objDivPos.style.display == 'none'?0:1;
		return ___bRet;
	},
	Hide : function() {
		if(this.objDivPos.style.display == 'none') return;
		(this.objGDivPos)?this.objGDivPos.style.display = 'none':this.objDivPos.style.display = 'none';
	},
	Show : function() {
		(this.objGDivPos)?this.objGDivPos.style.display = 'block':this.objDivPos.style.display = 'block';
	},
	GetFieldType : function(sField) {
		var n = this.arrField.isearch(sField);
		return n<0?0:this.arrFieldType[n];
	},
	GetColumn : function(col) {
		return this.arrField.isearch(col);
	},
	RecordCount : function() {
		var nRet = 0;
		var selSeq = this.selectedNode;
		var selNode = this.aNodes[this.selectedNode];
		if(selNode)
		{
			var selLevel = selNode.level;
			for(var i=selSeq+1; i<this.aNodes.length; i++)
			{
				var node = this.aNodes[i];
				if(node.level == selLevel) nRet++;
				else break;
			}
			for(var i=selSeq-1; i>0; i--)
			{
				var node = this.aNodes[i];
				if(node.level == selLevel) nRet++;
				else break;
			}
			nRet++;
		}
		return nRet;
	},
	Refresh : function()
	{
		this.Clear();
		this.OnQUERY();
	},
	RowNo : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowNo', param);
	},
	RowSize : function()
	{
		if(arguments.length<1) return;
		Webcrea.RowSize(this, arguments[0]);
	},
	OnQUERY : function(cellId)
	{
		if(cellId && cellId != '')
		{
			if(!window[this.divPage][this.divPosOrg][cellId])
			{
				Webcrea.Trace('OnQUERY : ' + Webcrea.LoadString('msgErrObject') + '(' + cellId + ')');
			}
			if(window[this.divPage][this.divPosOrg][cellId] && typeof window[this.divPage][this.divPosOrg][cellId].OnQUERY != 'undefined')
				window[this.divPage][this.divPosOrg][cellId].OnQUERY();
		}
		else
		{
			this.arrStackEvent[this.arrStackEvent.length] = 'onquery';
			this.InitializeObj();
			if(typeof window[this.divPage][this.divPosOrg].OnQUERY != 'undefined')
				window[this.divPage][this.divPosOrg].OnQUERY(true);
			this.arrStackEvent.removeByValue('onquery');
		}
	},
	OnRECORDSET : function()
	{
		if(!Webcrea.IsEmpty(this.cellId))
		{
			if(typeof window[this.divPage][this.divPosOrg][this.cellId].OnRECORDSET != 'undefined')
			{
				this.arrStackEvent[this.arrStackEvent.length] = 'onrecordset';
				window[this.divPage][this.divPosOrg][this.cellId].OnRECORDSET();
				this.arrStackEvent.removeByValue('onrecordset');
			}
		}
		else
		{
			if(typeof window[this.divPage][this.divPosOrg].OnRECORDSET != 'undefined')
			{
				this.arrStackEvent[this.arrStackEvent.length] = 'onrecordset';
				window[this.divPage][this.divPosOrg].OnRECORDSET(this);
				this.arrStackEvent.removeByValue('onrecordset');
			}
		}
	},
	OnSUM2 : function()
	{
		this.arrStackEvent[this.arrStackEvent.length] = 'onsum2';
		if(typeof window[this.divPage][this.divPosOrg].OnSUM2 != 'undefined')
			window[this.divPage][this.divPosOrg].OnSUM2();
		this.arrStackEvent.removeByValue('onsum2');
	},
	OnLOADED : function()
	{
		window[this.divPage][this.divPosOrg].OnLOADED();
	},
	OnCLICK : function()
	{
		var objName = '';
		var selNode = null;
		var selectedNode = '';
		if(this.IsRoot())
		{
			selectedNode = this.selectedNode;
			selNode = this.aNodes[selectedNode];
			objName = this.objName;
		}
		else
		{
			selectedNode = this.rootObj.selectedNode;
			selNode = this.rootObj.aNodes[selectedNode];
			objName = this.rootObj.objName;
		}
		if(!selNode) return;
		_LEVEL_ = selNode.level-1;
		this.SetCurrRecord(selNode.obj, selNode);
		var childObj = this.childObj;
		if(!this.bQuery)
		{
			while(childObj)
			{
				childObj = childObj.childObj;
				if(childObj) this.SetCurrRecord(childObj);
			}
			var selNodeP = selNode._p;
			while(selNodeP)
			{
				if(selNodeP.name != undefined && selNodeP.name != 'ROOT') this.SetCurrRecord(selNodeP.obj, selNodeP);
				selNodeP = selNodeP._p;
			}
			if(selNode.obj && selNode.obj.bNodeRecursive)
			{
				var sNodeName = selNode.obj.cellId;
				if(!selNode.bChildSearch && selNode.expand && sNodeName && typeof window[this.divPage][this.divPosOrg][sNodeName].OnQUERY != 'undefined')
					window[this.divPage][this.divPosOrg][sNodeName].OnQUERY(true);
			}
			else
			{
				if(!selNode.bChildSearch && selNode.expand && selNode.name && typeof window[this.divPage][this.divPosOrg][selNode.name].OnQUERY != 'undefined')
				{
					window[this.divPage][this.divPosOrg][selNode.name].OnQUERY(true);
				}
			}
		}
		this.SetCurrRecord(selNode.obj, selNode);
		if(selNode.name && typeof window[this.divPage][this.divPosOrg][selNode.name].OnCLICK != 'undefined')
			window[this.divPage][this.divPosOrg][selNode.name].OnCLICK();
		this.OnDivExpand();
	},
	OnDblCLK : function(id)
	{
		this.NodeOpen(id);
	},
	OnDivExpand : function()
	{
		if(!this.bVScroll)
		{
			var realDiv = Webcrea.FindNode(this.objDivPos, 'name', 'div');
			if(realDiv)
			{
				var height = Webcrea.GetHeight(realDiv);
				var heightCom = 0;
				if(this.layoutOpt.bVert) heightCom = Webcrea.GetHeight(this.objDivPos);
				else heightCom = this.initDivHeight;
				if(heightCom>height) height = heightCom;
				this.objDivPos.style.height = height + 'px';
			}
		}
	},
	OnResizeLeft : function(nExpand)
	{
		this.objDivPos.style.left = this.initLeft + nExpand + 'px';
	},
	OnResizeHorz : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		var nExpandOrg = nExpand;
		var layoutHorz = this.layoutOpt.bHorz;
		var layoutRight = this.layoutOpt.bRight;
		var objHgap = this.layoutOpt.objHgap;
		if(objHgap && objHgap.layoutOpt.bHorz)
		{
			nExpand = nExpand/objHgap.layoutOpt.nHgap;
			objHgap.layoutOpt.bHorzing = true;
			objHgap.OnResizeHorz(nExpand);
			this.OnResizeLeft(nExpand);
		}
		if(layoutHorz != undefined && layoutHorz)
		{
			var nAdd=0;
			var objWidth = this.layoutOpt.objWidth;
			var objRight = this.layoutOpt.objRight;
			if(objWidth)
			{
				objWidth.layoutOpt.bHorzing = true;
				objWidth.OnResizeHorz(nExpandOrg);
				nAdd = Webcrea.GetWidth(objWidth.objDivPos, true) + Webcrea.GetScrollWidth(objWidth.objDivPos) - this.initDivWidth;
			}
			else if(objRight)
			{
				objRight.layoutOpt.bHorzing = true;
				objRight.OnResizeHorz(nExpandOrg);
				var nObjLeft = (objRight.objGDivPos) ? Webcrea.GetLeft(objRight.objGDivPos) : Webcrea.GetLeft(objRight.objDivPos);
				var nLeft = Webcrea.GetLeft(this.objDivPos);
				var nRightPos = nObjLeft + Webcrea.GetWidth(objRight.objDivPos, true) + Webcrea.GetScrollWidth(objRight.objDivPos);
				if(this.initLeft<nRightPos) nAdd = nRightPos - nLeft - this.initDivWidth;
			}
			else nAdd = nExpand;

			this.objDivPos.style.width = this.initDivWidth + nAdd + 'px';
			bRet = true;
		}
		if(layoutRight != undefined && layoutRight)
		{
			var objLeft = this.layoutOpt.objLeft;
			if(objLeft)
			{
				objLeft.layoutOpt.bHorzing = true;
				objLeft.OnResizeHorz(nExpand);
				var nLeft = (objLeft.objGDivPos) ? Webcrea.GetLeft(objLeft.objGDivPos) : Webcrea.GetLeft(objLeft.objDivPos);
				var nDiff = nLeft - this.initLeft;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeLeft(nExpand);
			bRet = true;
		}
		return bRet;
	},
	OnResizeTop : function(nExpand)
	{
		this.objDivPos.style.top = this.initTop + nExpand + 'px';
	},
	OnResizeVert : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		var nExpandOrg = nExpand;
		var layoutVert = this.layoutOpt.bVert;
		var layoutBottom = this.layoutOpt.bBottom;
		var objVgap = this.layoutOpt.objVgap;
		if(objVgap && objVgap.layoutOpt.bVert)
		{
			nExpand = nExpand/objVgap.layoutOpt.nVgap;
			objVgap.layoutOpt.bVerting = true;
			objVgap.OnResizeVert(nExpand);
			this.OnResizeTop(nExpand);
			if(objVgap.layoutOpt.objRelHeight) objVgap.layoutOpt.objRelHeight.OnResizeVert();
		}
		if(layoutVert != undefined && layoutVert)
		{
			var nAdd=0;
			var objHeight = this.layoutOpt.objHeight;
			var objBottom = this.layoutOpt.objBottom;
			if(objHeight)
			{
				objHeight.layoutOpt.bVerting = true;
				objHeight.OnResizeVert(nExpandOrg);
				nAdd = Webcrea.GetHeight(objHeight.objDivPos, true) - this.initDivHeight;
			}
			else if(objBottom)
			{
				objBottom.layoutOpt.bVerting = true;
				objBottom.OnResizeVert(nExpandOrg);
				var nObjTop = (objBottom.objGDivPos) ? Webcrea.GetTop(objBottom.objGDivPos) : Webcrea.GetTop(objBottom.objDivPos);
				var nTop = Webcrea.GetTop(this.objDivPos);
				var nBottomPos = nObjTop + Webcrea.GetHeight(objBottom.objDivPos, true);
				if(this.initTop<nBottomPos) nAdd = nBottomPos - nTop - this.initDivHeight;
			}
			else nAdd = nExpand;

			this.objDivPos.style.height = this.initDivHeight + nAdd + 'px';
			bRet = true;
		}
		if(layoutBottom != undefined && layoutBottom)
		{
			var objTop = this.layoutOpt.objTop;
			if(objTop)
			{
				objTop.layoutOpt.bVerting = true;
				objTop.OnResizeVert(nExpand);
				var nTop = (objTop.objGDivPos) ? Webcrea.GetTop(objTop.objGDivPos) : Webcrea.GetTop(objTop.objDivPos);
				var nDiff = nTop - this.initTop;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeTop(nExpand);
			bRet = true;
		}
		return bRet;
	},
	IsColumn : function(sField)
	{
		return this.GetColumn(sField)>=0?true:false;
	},
	IsColumnNumber : function(sField)
	{
		var n = this.GetColumn(sField);
		return this.arrFieldType[n]==1?true:false;
	},
	IsRoot : function()
	{
		return (this.cellId == undefined || this.cellId == '');
	},
	IsSetTree : function()
	{
		return this.levelField?1:0;
	},
	SetTree : function(id, openLevel)
	{
		this.levelField = id;
		this.openLevel = openLevel;
	},
	SetTreeIcon : function()
	{
		var currNode = arguments[0];
		var param = arguments[1];
		if(!currNode || !param) return;
		var arr = param.split('=');
		if(arr.length<2) return;
		var mode = arr[0].trim();
		mode = mode.toLowerCase();
		var image = arr[1].trim();
		image = Webcrea.RemoveQuote(image);
		if(mode.toLowerCase() != 'icon') return;
		var orgId = currNode.getAttribute('orgId');
		var objNode;
		if(this.IsRoot()) objNode = this.aNodes[orgId];
		else objNode = this.rootObj.aNodes[orgId];
		var rootNode = Webcrea.FindParentDiv(currNode, 2);
		if(rootNode)
		{
			var arrNodes = [];
			Webcrea.FindNodeAll(rootNode, 'name', 'img', arrNodes);
			for(var i=0; i<arrNodes.length; i++)
			{
				var imgNode = arrNodes[i];
				if(imgNode.getAttribute('kind') != 'icon') continue;
				imgNode.src = Webcrea.GetImageLinkPath() + '/' + image;
				objNode.icon = Webcrea.GetImageLinkPath() + '/' + image;
				objNode.iconOpen = Webcrea.GetImageLinkPath() + '/' + image;
				objNode.userIcon = true;
			}
			arrNodes = [];
			Webcrea.FindNodeAll(rootNode, 'name', 'i', arrNodes);
			for(var i=0; i<arrNodes.length; i++)
			{
				var imgNode = arrNodes[i];
				if(imgNode.getAttribute('kind') != 'icon') continue;
				if(Webcrea.IsNumber(image))
				{
					image=(image*16-16)*-1;
					imgNode.imgNode.style.backgroundPositionX=image+"px";
				}
				else
				{
					var iconObj=document.createElement('img');
					iconObj.setAttribute('kind','icon');
					iconObj.setAttribute('src',Webcrea.GetImageLinkPath() + '/' + image);
					iconObj.setAttribute('style','width:16px;height:16px');
					iconObj.id=imgNode.id;
					var parentDiv=imgNode.parentElement;
					parentDiv.appendChild(iconObj);
					parentDiv.insertBefore(iconObj,imgNode);
					parentDiv.removeChild(imgNode);
					objNode.icon = Webcrea.GetImageLinkPath() + '/' + image;
					objNode.iconOpen = Webcrea.GetImageLinkPath() + '/' + image;
					objNode.userIcon = true;
				}
			}
		}
	},
	Sort : function() {
		var ___sOpt = arguments[0];
		if(Webcrea.IsEmpty(___sOpt)) return;
		var currNode = Webcrea.GetEventNode();
		var bSortBtn = false;
		var aField = [];
		var aSortOpt = [];
		var ___arrOpt = ___sOpt.split(',');
		for(var i=0; i<___arrOpt.length; i++)
		{
			var s = ___arrOpt[i].trim();
			var arr = s.split(' ');
			aField[aField.length] = arr[0].trim();
			var sortOpt = false;
			if(arr.length>1)
			{
				sortOpt = arr[1].trim();
				if(sortOpt.toLowerCase() == 'desc') sortOpt = true;
				else if(sortOpt.toLowerCase() == 'asc') sortOpt = false;
			}
			aSortOpt[aSortOpt.length] = sortOpt;
		}
		if(bSortBtn)
		{
			var ___cellId = aField[0];
			if(___cellId == this.sortField) this.bSort = !this.bSort;
			else this.bSort = false;
			aSortOpt[0] = this.bSort;
			this.sortField = ___cellId;
		}
		if(this.IsColumn(this.dataSeqField) && aField.search(this.dataSeqField)<0) aField[aField.length] = this.dataSeqField;
		Webcrea.DataSort(aField, this, aSortOpt);
	},
	AddRecordSet : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		if(!this.arrRecordSet) this.arrRecordSet = [];
		this.arrRecordSet[this.arrRecordSet.length] = ___param.sql;
	},
	MakeRecordSet : function()
	{
		Webcrea.MakeRecordSet(this);
		this.arrRecordSet = [];
	},
	MakeData : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		___param.rowIndex = arguments[1];
		var sRet = '';
		var arr = Webcrea.MakeToken(___param.sql);
		var sValue = '';
		for(var i=0; i<arr.length; i++)
		{
			var str = arr[i];
			str = Webcrea.ReplaceAll(str, '"', '\\"');
			if(str == '||') str = '+';
			else
			{
				var iField = this.GetColumn(str);
				if(iField>=0)
				{
					var sField = this.arrField[iField];
					str = this.arrData[sField][___param.rowIndex];
					if(this.IsColumnNumber(sField))
					{
						if(!str) str = 0;
						str = str;
					}
					else
					{
						str = '"' + str + '"';
					}
				}
			}
			sValue += str;
		}
		sRet = eval(sValue);
		if(sRet == undefined) sRet = '';
		else if(Webcrea.IsNaN(sRet)) sRet = 0;
		return sRet;
	},
	DisplayDummy : function() {
		var clickEvent = this.objName + '.OnCLICK()';
		var id = 0;
		var pid = -1;
		var rootObj = null;
		var level = 1;
		if(this.IsRoot())
		{
			this.Add(id,pid++,'ROOT','ROOT');
			rootObj = this;
		}
		else
		{
			if(!this.bDummy) return;
			rootObj = this.rootObj;
			pid = this.id;
			level = rootObj.aNodes[pid].level + 1;
		}
		for(var i=0; i<rootObj.arrObject.length; i++)
		{
			var obj = rootObj.arrObject[i];
			if(obj.bDummy && this == obj.parentObj)
			{
				id = rootObj.aNodes.length;
				var sValue = obj.cellId;
				var arrData = [];
				arrData[arrData.length] = sValue;
				createNode = rootObj.Add(id, pid, obj.cellId, sValue, clickEvent);
				createNode.level = level;
				createNode.obj = rootObj;
				createNode.arrData = arrData;
				obj.id = id;
			}
		}
		rootObj.GetString(rootObj.objDivPos);
	},
	Display : function() {
		if(!this.arrRows) return;
		if(_my_sqlStatus != '')
		{
			if(_my_sqlStatus.indexOf('[DATA BLANK]')==0)
			{
				Webcrea.SetSqlStatus('');
				_my_lastStatus = 'QUERY FAILED';
			}
			else return;
		}
		var clickEvent = this.objName + '.OnCLICK()';
		var id = 0;
		var pid = -1;
		if(this.IsRoot())
		{
			pid++;
			var bFind = false;
			for(var i=0; i<this.arrObject.length; i++)
			{
				var obj = this.arrObject[i];
				if(this.IsColumn(obj.cellId))
				{
					this.childObj = obj;
					bFind = true;
					break;
				}
			}
			if(!bFind) this.childObj = this.arrObject[0];
		}
		else
		{
			pid = this.rootObj.selectedNode;
			this.childObj = this.rootObj.arrObject[this.level];
		}
		if(!this.bQuery)
		{
			for(var i=0; i<this.arrRows.length; i++)
			{
				if(this.IsRoot()) id = this.aNodes.length;
				else id = this.rootObj.aNodes.length;
				var sValue = '';
				var arrData = [];
				for(var j=0; j<this.arrField.length; j++)
				{
					if(!this.bNodeRecursive && this.arrField[j].toLowerCase() == 'expand') continue;
					var sField = this.arrField[j];
					var str = this.arrData[sField][i];
					arrData[arrData.length] = str;
					if(j==0) sValue = str;
					else sValue = sValue + ' ' + str;
				}
				var sFormat = this.childObj.format;
				if(this.bNodeRecursive) sFormat = this.format;
				if(sFormat != undefined && sFormat != '') sValue = this.MakeData(sFormat, i);
				var createNode = null;
				if(this.IsRoot())
				{
					createNode = this.Add(id, pid, this.childObj.cellId, sValue, clickEvent);
					createNode.level = 1;
				}
				else
				{
					createNode = this.rootObj.Add(id, pid, this.childObj.cellId, sValue, clickEvent);
					createNode.level = this.rootObj.aNodes[pid].level + 1;
				}
				if(this.IsColumn('_my_fontSize')) createNode.fontSize = this.arrData['_my_fontSize'][i];
				if(this.IsColumn('_my_fontColor')) createNode.fontColor = this.arrData['_my_fontColor'][i];
				if(this.IsColumn('_my_treeIcon'))
				{
					if(!Webcrea.IsEmpty(this.arrData['_my_treeIcon'][i]))
					{
						createNode.treeIcon = Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_treeIcon'][i];
						if(this.IsColumn('_my_treeIconOpen')) createNode.treeIconOpen = Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_treeIconOpen'][i];
						else createNode.treeIconOpen = Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_treeIcon'][i];
					}
				}
				if(this.IsColumn('_my_icon'))
				{
					if(!Webcrea.IsEmpty(this.arrData['_my_icon'][i]))
					{
						createNode.userIcon = true;
						if(this.arrData['_my_icon'][i].iEquals('none'))
						{
							createNode.icon = 'none';
							createNode.iconOpen = 'none';
						}
						else
						{
							createNode.iconNo='';
							createNode.icon=(!Webcrea.IsNumber(this.arrData['_my_icon'][i]))?Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_icon'][i]:this.arrData['_my_icon'][i];
							if(this.IsColumn('_my_iconOpen')) createNode.iconOpen=(!Webcrea.IsNumber(this.arrData['_my_iconOpen'][i]))?Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_iconOpen'][i]:this.arrData['_my_iconOpen'][i];
							else createNode.iconOpen=(!Webcrea.IsNumber(this.arrData['_my_icon'][i]))?Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_icon'][i]:this.arrData['_my_icon'][i];
						}
					}
				}
				createNode.obj = this;
				createNode.arrData = arrData;
			}
		}
		else
		{
			var createNode = null;
			var level = 0;
			var diffAdjust = 0;
			var realLevel = 1;
			for(var i=0; i<this.arrRows.length; i++)
			{
				var sValue = '';
				var arrData = [];
				for(var j=0; j<this.arrField.length; j++)
				{
					if(!this.bNodeRecursive && this.arrField[j].toLowerCase() == 'expand') continue;
					var sField = this.arrField[j];
					var str = this.arrData[sField][i];
					arrData[arrData.length] = str;
					if(j==0) sValue = str;
					else sValue = sValue + ' ' + str;
				}
				var sFormat = this.childObj.format;
				if(sFormat != undefined && sFormat != '')
				{
					var nFieldFormat = this.GetColumn(sFormat);
					sValue = this.arrData[this.arrField[nFieldFormat]][i];
				}
				var nField = this.GetColumn(this.levelField);
				var currLevel = Number(this.arrData[this.arrField[nField]][i]);
				if(i == 0 || currLevel == level)
				{
					createNode = this.Add(this.aNodes.length, pid, this.childObj.cellId, sValue, clickEvent);
					level = currLevel;
				}
				else if(currLevel > level)
				{
					diffAdjust = currLevel - level - 1;
					pid = createNode.id;
					createNode = this.Add(this.aNodes.length, pid, this.childObj.cellId, sValue, clickEvent);
					level = currLevel;
					realLevel++;
				}
				else
				{
					var diffLevel = level - currLevel - diffAdjust;
					for(var k=0; k<diffLevel; k++)
					{
						if(this.aNodes[createNode.pid].pid == -1) break;
						createNode = this.aNodes[createNode.pid];
						realLevel--;
					}
					pid = createNode.pid;
					createNode = this.Add(this.aNodes.length, pid, this.childObj.cellId, sValue, clickEvent);
					level = currLevel;
				}
				if(this.IsColumn('_my_fontSize')) createNode.fontSize = this.arrData['_my_fontSize'][i];
				if(this.IsColumn('_my_fontColor')) createNode.fontColor = this.arrData['_my_fontColor'][i];
				if(this.IsColumn('_my_treeIcon'))
				{
					if(!Webcrea.IsEmpty(this.arrData['_my_treeIcon'][i]))
					{
						createNode.treeIcon = Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_treeIcon'][i];
						if(this.IsColumn('_my_treeIconOpen')) createNode.treeIconOpen = Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_treeIconOpen'][i];
						else createNode.treeIconOpen = Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_treeIcon'][i];
					}
				}
				if(this.IsColumn('_my_icon'))
				{
					if(!Webcrea.IsEmpty(this.arrData['_my_icon'][i]))
					{
						createNode.userIcon = true;
						if(this.arrData['_my_icon'][i].iEquals('none'))
						{
							createNode.icon = 'none';
							createNode.iconOpen = 'none';
						}
						else
						{
							createNode.iconNo='';
							createNode.icon=(!Webcrea.IsNumber(this.arrData['_my_icon'][i]))?Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_icon'][i]:this.arrData['_my_icon'][i];
							if(this.IsColumn('_my_iconOpen')) createNode.iconOpen=(!Webcrea.IsNumber(this.arrData['_my_iconOpen'][i]))?Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_iconOpen'][i]:this.arrData['_my_iconOpen'][i];
							else createNode.iconOpen=(!Webcrea.IsNumber(this.arrData['_my_icon'][i]))?Webcrea.GetImageLinkPath() + '/' + this.arrData['_my_icon'][i]:this.arrData['_my_icon'][i];
						}
					}
				}
				createNode.obj = this;
				createNode.arrData = arrData;
				createNode.level = realLevel;
			}
		}
		if(this.IsRoot())
		{
			this.GetString(this.objDivPos);
			if(this.bQuery && this.openLevel>1)	this.OpenByLevel(this.openLevel-1);
		}
		else
		{
			this.rootObj.GetString(this.objDivPos);
			var selNode = this.rootObj.aNodes[this.rootObj.selectedNode];
			selNode.bChildSearch = true;
		}
	},
	DisplayScroll : function(b) {
		if(b != undefined) this.bVScroll = b;
		if(!this.bVScroll) this.objDivPos.style.overflowY = 'hidden';
		else this.objDivPos.style.overflowY = 'auto';
	},
	Add : function(id, pid, name, value, url, title, target, icon, iconOpen, open)
	{
		if(icon != undefined && icon != '') icon = this.imgFolder + icon;
		if(iconOpen != undefined && iconOpen != '') iconOpen = this.imgFolder + iconOpen;
		var addNode = new this.treeNode(id, pid, name, value, url, title, target, icon, iconOpen, open);
		this.aNodes[this.aNodes.length] = addNode;
		return addNode;
	},
	OpenAll : function() {
		this.AllNodeOpen(true);
	},
	CloseAll : function() {
		this.AllNodeOpen(false);
	},
	OpenByLevel : function(level) {
		this.NodeOpenByLevel(level);
	},
	GetString : function(rootNode) {
		var childNodes = rootNode.childNodes;
		for(var i=childNodes.length-1; i>=0; i--)
		{
			var childNode = childNodes[i];
			rootNode.removeChild(childNode);
		}
		var divNode = document.createElement('div');
		divNode.setAttribute('class', '_my_tree');
		if (document.getElementById) {
			if (this.config.useCookies) this.selectedNode = this.GetSelected();
			this.AddNode(this.root, divNode);
		} else divNode.innerText = 'Browser not supported.';
		rootNode.appendChild(divNode);
		if (!this.selectedFound) this.selectedNode = null;
		this.completed = true;
	},
	AddNode : function(pNode, rootNode) {
		var n=0;
		var seq=0;
		if (this.config.inOrder) n = pNode._ai;
		for (n; n<this.aNodes.length; n++) {
			if (this.aNodes[n].pid == pNode.id) {
				pNode.bChildExist = true;
				var cn = this.aNodes[n];
				cn._p = pNode;
				cn._ai = n;
				this.SetCS(cn);
				seq++;
				if (!cn.target && this.config.target) cn.target = this.config.target;
				if (cn._hc && !cn._io && this.config.useCookies) cn._io = this.IsOpen(cn.id);
				if (!this.config.folderLinks && cn._hc) cn.url = null;
				if (this.config.useSelection && cn.id == this.selectedNode && !this.selectedFound) {
						cn._is = true;
						this.selectedNode = n;
						this.selectedFound = true;
				}
				var addNode = this.CreateNode(cn, n, rootNode);
				if(cn.arrData && typeof window[this.divPage][this.divPosOrg][cn.name].OnICON != 'undefined')
				{
					var currNode = Webcrea.FindNodePublic(addNode, 'id', 's' + this.objName + n);
					for(var j=0; j<cn.obj.arrField.length; j++)
					{
						var sField = cn.obj.arrField[j];
						var sData = cn.arrData[j];
						Webcrea.DynamicVal(sField, sData);
					}
					window[this.divPage][this.divPosOrg][cn.name].OnICON(currNode);
				}
			}
		}
	},
	CreateNode : function(node, nodeId, rootNode) {
		var style = '';
		var nodeObj=(node.name == 'ROOT')?window[this.objName]:window[this.objName+'_'+node.name];
		var nodeGap = 0;
		if(!this.IsRoot()) this.rootObj.this.nodeGap;
		else nodeGap = this.nodeGap;
		if(this.root.id == node.pid)
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion<7020180605004 && Webcrea.IsNull(this.bNodeHide)) this.bNodeHide = true;
			if(this.bNodeHide)	style = 'display:none';
			else
			{
				var sFormatOrg = nodeObj.format;
				if(Webcrea.IsNull(sFormatOrg)) sFormatOrg = '';
				var sFormat = Webcrea.MakeGetObject(sFormatOrg);
				if(sFormatOrg != sFormat)
				{
					var nObj = sFormatOrg.indexOf('.');
					if(nObj>0)
					{
						var sObj = sFormatOrg.substr(0, nObj);
						var obj = Webcrea.GetObjectById(sObj);
						if((obj && obj.bInit) || sObj == 'App')
						{
							try { var ___sTemp=eval(sFormat);sFormat=___sTemp; }catch (e){}
						}
						else sFormat = '';
					}
					else try { var ___sTemp=eval(sFormat);sFormat=___sTemp; }catch (e){}
				}
				else if(nFileVersion>=7020200305002)
				{
					if(Webcrea.IsQuote(sFormat)) sFormat = Webcrea.RemoveQuote(sFormat);
					else
					{
						try { var ___sTemp=eval(sFormat);sFormat=___sTemp; }catch (e){sFormat='';}
						if(Webcrea.IsEmpty(sFormat)) sFormat = this.divPos;
					}
				}
				node.value=sFormat;
			}
		}
		else
		{
			if(nodeGap>0 && !this.config.useLines) style = "'margin-bottom:" + nodeGap + "px;'";
		}
		if(nodeId == 0 || nodeId == 1) node.root = true;
		var divNode = document.createElement('div');
		divNode.setAttribute('style', style);
		divNode.setAttribute('class', '_my_treeNode');
		divNode.setAttribute('ondblclick', this.objName + '.OnDblCLK(' + nodeId + ')');
		var str = this.Indent(node, nodeId);
		if (this.config.useIcons) {
			if (this.root.id == node.pid) {
				node.icon = this.icon.root;
				node.iconOpen = this.icon.root;
			}
			var iconStyle = 'width:' + node.iconWidth + 'px;height:' + node.iconHeight + 'px';
			var imgSrc = (node._io) ? node.iconOpen : node.icon;
			if(!node.userIcon) node.iconNo=nodeObj.iconNo;
			if(!Webcrea.IsEmpty(node.iconNo) && node.iconNo != 'none' || node.userIcon && node.iconNo == '' && Webcrea.IsNumber(imgSrc))
			{
				if(!node.userIcon) imgSrc=node.iconNo;
				imgSrc=Number(imgSrc);
				imgSrc=(imgSrc*16-16)*-1;
				str +=  '<i kind="icon" class="_my_tree_icon" " id="i' + this.objName + nodeId + '" style="background-position-x:'+imgSrc+'px; background-position-y:0px;"></i>';
			}
			else if(imgSrc != 'none' && node.iconNo != 'none') str += '<img kind="icon" style="' + iconStyle +style+ '" id="i' + this.objName + nodeId + '" src="' + imgSrc + '" alt="" />';
		}
		if (node.url) {
			var aStyle = '';
			if(!Webcrea.IsEmpty(node.fontSize)) aStyle = 'font-size:' + node.fontSize + 'px;';
			if(!Webcrea.IsEmpty(node.fontColor)) aStyle += 'color:' + node.fontColor;
			str += '<a orgId="' + nodeId + '" id="s' + this.objName + nodeId + '" class="' + ((this.config.useSelection) ? ((node._is ? 'nodeSel ' + this.divClass : 'node ' + this.divClass)) : 'node ' + this.divClass) + '" href="' + (node.bUrl ? '' : 'javascript: ') + node.url + '"';
			if (node.title) str += ' title="' + node.title + '"';
			if (node.target) str += ' target="' + node.target + '"';
			if (this.config.useStatusText) str += ' onmouseover="window.status=\'' + node.value + '\';return true;" onmouseout="window.status=\'\';return true;" ';
			if (this.config.useSelection && ((node._hc && this.config.folderLinks) || !node._hc))
				str += ' onclick="javascript: ' + this.objName + '.SelNode(' + nodeId + ');"';
			str = str + ' style="' + aStyle + '"';
			str += '>';
		}
		else if ((!this.config.folderLinks || !node.url) && node._hc && node.pid != this.root.id || !this.bNodeHide && node.pid == this.root.id)
			str += '<a href="javascript: ' + this.objName + '.NodeOpen(' + nodeId + ');" class="node ' + this.divClass + '">';
		str += node.value;
		if (node.url || ((!this.config.folderLinks || !node.url) && node._hc) || !this.bNodeHide && node.pid == this.root.id) str += '</a>';
		divNode.innerHTML = str;
		rootNode.appendChild(divNode);
		if((this.root.id != node.pid && nodeGap>0 && this.config.useLines) || (this.root.id == node.pid &&!this.bNodeHide))
		{
			var divNode1 = document.createElement('div');
			divNode1.style.height = nodeGap + 'px';
			rootNode.appendChild(divNode1);
		}
		if (node._hc) {
			var divNode1 = document.createElement('div');
			divNode1.setAttribute('id', 'd' + this.objName + nodeId);
			divNode1.setAttribute('class', 'clip');
			divNode1.style.display = (this.root.id == node.pid || node._io) ? 'block' : 'none';
			this.AddNode(node, divNode1);
			rootNode.appendChild(divNode1);
		}
		this.aIndent.pop();
		return divNode;
	},
	Indent : function(node, nodeId) {
		var str = '';
		var nodeGap = 0;
		if(!this.IsRoot()) this.rootObj.this.nodeGap;
		else nodeGap = this.nodeGap;
		if (this.root.id != node.pid || !this.bNodeHide && node.pid == this.root.id) {
			for (var n=0; n<this.aIndent.length; n++)
				str += '<img kind="line" src="' + ( (this.aIndent[n] == 1 && this.config.useLines) ? this.icon.line : this.icon.empty ) + '" alt="line image" />';
			(node._ls) ? this.aIndent.push(0) : this.aIndent.push(1);
			if (node._hc) {
				str += '<a orgId="' + nodeId + '" href="javascript: ' + this.objName + '.NodeOpen(' + nodeId + ');"><img id="j' + this.objName + nodeId + '" src="';
				if((!this.bQuery && !node.bChildSearch) || (!this.bQuery && node.bChildSearch && node.bChildExist) || this.bQuery)
				{
					var treeIcon = (node._io) ? this.icon.nlMinus : this.icon.nlPlus;
					if(!node._io && !Webcrea.IsEmpty(node.treeIcon)) treeIcon = node.treeIcon;
					else if(node._io && !Webcrea.IsEmpty(node.treeIconOpen)) treeIcon = node.treeIconOpen;
					else if(!this.bNodeHide && node.pid == this.root.id) treeIcon = this.icon.nlMinus;
					if (!this.config.useLines || !this.bNodeHide && node.pid == this.root.id) str += treeIcon;
					else str += ( (node._io) ? ((node._ls && this.config.useLines) ? this.icon.minusBottom : (node.root ? this.icon.minusRoot : this.icon.minus)) : ((node._ls && this.config.useLines) ? this.icon.plusBottom : (node.root ? this.icon.plusRoot : this.icon.plus)));
				}
				else str += this.icon.empty;
				str += '" alt="line image" /></a>';
			}
			else
			{
				str += '<img src="' + ( (this.config.useLines) ? ((node._ls) ? this.icon.joinBottom : ((node.root && this.bNodeHide) ? this.icon.joinRoot : this.icon.join)) : this.icon.empty) + '" alt="line image" />';
			}
			if(this.config.useLines)
			{
				for (var n=0; n<this.aIndent.length; n++){
					var lvl=node.level;
					if(this.bNodeHide) lvl=lvl-1;
					var h='';
					if(nodeGap>0)
					{
						h=nodeGap-9;
						if(h>0) h=" + "+h+"px";
						else h=" - "+Math.abs(h)+"px";
						h="height:calc(50%"+h+");height:-webkit-calc(50%"+h+");height:-moz-calc(50%"+h+")";
					}
					var pleft=n*18;
					var left=pleft+18;
					if(!node._hc && !node._io && !node._is && !node._ls) left=n*18;

					if(node._hc && !node._is && node._ls && lvl != n ) continue;
					if(!node._hc && !node._io && !node._is && !node._ls && lvl != n) continue;
					if(!(node.root && this.bNodeHide) && lvl==n) str += '<i name="l' + this.objName + nodeId + '" class="_my_tree_nLine _my_tree_nLineP" style="left: ' + pleft +'px;top: 0px;"></i>';

					if(!this.arrRows) continue;
					if(node._ls && this.arrRows.length == node.id) continue;
					if(!node._hc && !node._io && !node._is && node._ls && node._p.level <= n) continue;

					var nodeIdN=nodeId;
					if(lvl<=n) nodeIdN=nodeIdN+1;
					str += '<i name="l' + this.objName + nodeIdN + '" class="_my_tree_nLine _my_tree_nLineP" style="left: '+ left +'px;' + h + ';"></i>';
				}
			}
		}
		return str;
	},
	SetCS : function(node) {
		var bChildNode = false;
		var sNodeName = node.name;
		if(node.obj && node.obj.bNodeRecursive) sNodeName = node.obj.cellId;
		if(node.name && node.expand && window[this.divPage][this.divPosOrg][sNodeName] && typeof window[this.divPage][this.divPosOrg][sNodeName].OnQUERY != 'undefined')
		{
			var obj = node.obj;
			if(obj && obj.IsColumn('expand'))
			{
				var id = node.id-1;
				var iField = obj.GetColumn('expand');
				var sField = obj.arrField[iField];
				if(node.obj && node.obj.bNodeRecursive) node.expand = Number(node.arrData[iField]);
				else node.expand = Number(obj.arrData[sField][id]);
				bChildNode = node.expand?true:false;
			}
			else bChildNode = true;
			if(!node.userIcon)
			{
				node.icon = this.icon.folder;
				node.iconOpen = this.icon.folderOpen;
			}
		}
		var lastId;
		for (var n=0; n<this.aNodes.length; n++) {
			if (this.aNodes[n].pid == node.id || bChildNode)
			{
				node._hc = true;
				if(this.bQuery && !node.userIcon)
				{
					node.icon = this.icon.folder;
					node.iconOpen = this.icon.folderOpen;
				}
			}
			if (this.aNodes[n].pid == node.pid) lastId = this.aNodes[n].id;
			if(!node._hc && this.bQuery && !node.userIcon)
			{
				node.icon = this.icon.node;
				node.iconOpen = this.icon.node;
			}
			if(!node.userIcon)
			{
				if(!node.icon) node.icon = this.icon.node;
				if(!node.iconOpen) node.iconOpen = this.icon.node;
			}
		}
		if (lastId==node.id) node._ls = true;
	},
	GetSelected : function() {
		var sn = this.GetCookie('cs' + this.objName);
		return (sn) ? sn : null;
	},
	SelNode : function(id) {
		if (!this.config.useSelection) return;
		var cn = this.aNodes[id];
		if (cn._hc && !this.config.folderLinks) return;
		if (this.selectedNode != id) {
			if (this.selectedNode || this.selectedNode==0) {
				eOld = document.getElementById("s" + this.objName + this.selectedNode);
				eOld.className = "node " + this.divClass;
				this.aNodes[this.selectedNode]._is = false;
			}
			eNew = document.getElementById("s" + this.objName + id);
			eNew.className = "nodeSel " + this.divClass;
			this.selectedNode = id;
			cn._is = true;
			if (this.config.useCookies) this.SetCookie('cs' + this.objName, cn.id);
		}
	},
	Expand : function()
	{
		var param = arguments[0];
		var bAll = false;
		var bSelectOnly = false;
		var bWhere = false;
		var arrWhere;
		var nodeId = '';
		if(!Webcrea.IsEmpty(param))
		{
			var n = param.indexOf('selectOnly');
			if(n>=0)
			{
				bSelectOnly = true;
				param = param.substr(0, n);
				param = param.replace(',', '');
			}
			else
			{
				n = param.indexOf('where');
				if(n>=0)
				{
					param = param.substr(n+6);
					arrWhere = Webcrea.MakeToken(param);
					bWhere = true;
				}
			}
			param = param.trim();
			n = param.indexOf('Node');
			if(n>=0)
			{
				param = param.substr(n+4);
				param = param.replace(',', '');
				var arr = param.split('=');
				if(arr.length>1) nodeId = arr[1].trim();
			}
		}
		if(Webcrea.IsEmpty(param)) bAll = true;
		if(bAll && !bSelectOnly)
		{
			this.AllNodeOpen(true);
			return;
		}
		else if(!bSelectOnly && !bWhere) this.AllNodeOpen(false);
		var bClose = false;
		var lvl = -1;
		if(!bAll) lvl = Number(param);
		if(lvl == 0) bClose = true;

		var bExpand = false;
		var selNode;
		var nStart = 0;
		if(bSelectOnly)
		{
			nStart = this.selectedNode;
			selNode = this.aNodes[this.selectedNode];
			if(!selNode) return;
			lvl += selNode.level;
		}
		if(lvl<2 && !bAll && !bClose) return;

		var currObj = this;
		var IsParentNode = function(node)
		{
			var bRet = false;
			if(!selNode) return false;
			if(node == selNode) return true;
			if(node._p && node.pid) bRet = IsParentNode(node._p);
			return bRet;
		};
		var CloseNode = function(node)
		{
			currObj.NodeOpen(node.id, false);
		};
		var ExpandNode = function(node)
		{
			currObj.NodeOpen(node.id, !bClose);
			if(node._p && node.pid && (!bSelectOnly || bSelectOnly && !bClose)) ExpandNode(node._p);
		};
		var ExpandParent = function(cellId)
		{
			if(Webcrea.IsEmpty(cellId))
			{
				for(var j=nStart; j<currObj.aNodes.length; j++)
				{
					var nodeInfo = currObj.aNodes[j];
					ExpandNode(nodeInfo);
				}
			}
			else
			{
				var obj = currObj.GetObject(cellId, true);
				if(!obj) return;
				if(!Webcrea.IsEmpty(obj.parentObj.cellId)) ExpandParent(obj.parentObj.cellId);
				for(var j=nStart; j<currObj.aNodes.length; j++)
				{
					var nodeInfo = currObj.aNodes[j];
					if(bSelectOnly && selNode != nodeInfo && selNode.level >= nodeInfo.level) break;
					if(nodeInfo.name == obj.parentObj.cellId) ExpandNode(nodeInfo);
				}
			}
		};
		if(!this.IsSetTree())
		{
			if(!Webcrea.IsEmpty(nodeId) || (!bSelectOnly && lvl>0))
			{
				if(bSelectOnly && !bClose) CloseNode(selNode);
				ExpandParent(nodeId);
				return;
			}
			if(selNode) ExpandNode(selNode);
		}
		for(var j=nStart; j<this.aNodes.length; j++)
		{
			var nodeInfo = this.aNodes[j];
			if(bWhere)
			{
				if(!nodeInfo.obj) continue;
				if(Webcrea.IsWhereData(nodeInfo.obj, nodeInfo.id-1, arrWhere)) ExpandNode(nodeInfo);
			}
			else if(bClose) ExpandNode(nodeInfo);
			else if(!Webcrea.IsEmpty(nodeId) && nodeInfo.name == nodeId)
			{
				if(bSelectOnly && !IsParentNode(nodeInfo)) continue;
				if(bSelectOnly && !bClose) CloseNode(nodeInfo);
				ExpandNode(nodeInfo._p);
			}
			else if(nodeInfo.level == lvl || bAll)
			{
				if(bSelectOnly && !IsParentNode(nodeInfo)) continue;
				if(bSelectOnly && !bClose) CloseNode(nodeInfo);
				ExpandNode(nodeInfo._p);
			}
			if(bSelectOnly && selNode != nodeInfo && selNode.level >= nodeInfo.level) break;
		}
	},
	NodeOpen : function(id, bOpen) {
		var cn = this.aNodes[id];
		if(!cn) return;
		var sNodeName = cn.name;
		if(cn.obj && cn.obj.bNodeRecursive) sNodeName = cn.obj.cellId;
		if(!cn.bChildSearch && cn.name && window[this.divPage][this.divPosOrg][sNodeName] && typeof window[this.divPage][this.divPosOrg][sNodeName].OnQUERY != 'undefined')
		{
			this.SelNode(id);
			this.OnCLICK();
		}
		if(Webcrea.IsNull(bOpen))
		{
			this.NodeStatus(!cn._io, id, cn._ls);
			cn._io = !cn._io;
		}
		else
		{
			this.NodeStatus(bOpen, id, cn._ls);
			cn._io = bOpen;
		}
		if (this.config.closeSameLevel) this.CloseLevel(cn);
		if (this.config.useCookies) this.UpdateCookie();
		this.OnDivExpand();
	},
	NodeOpenByLevel : function(level, status)
	{
		if(status == undefined) status = true;
		for (var n=0; n<this.aNodes.length; n++) {
			if (this.aNodes[n]._hc && this.aNodes[n].pid != this.root.id && this.aNodes[n].level <= level || !this.bNodeHide && n==0) {
				this.NodeStatus(status, n, this.aNodes[n]._ls);
				this.aNodes[n]._io = status;
			}
		}
		if (this.config.useCookies) this.UpdateCookie();
	},
	AllNodeOpen : function(status)
	{
		for (var n=0; n<this.aNodes.length; n++) {
			if (this.aNodes[n]._hc && this.aNodes[n].pid != this.root.id) {
				this.NodeStatus(status, n, this.aNodes[n]._ls);
				this.aNodes[n]._io = status;
			}
		}
		if (this.config.useCookies) this.UpdateCookie();
	},
	OpenTo : function(nId, bSelect, bFirst) {
		if (!bFirst) {
			for (var n=0; n<this.aNodes.length; n++) {
				if (this.aNodes[n].id == nId) {
					nId=n;
					break;
				}
			}
		}
		var cn=this.aNodes[nId];
		if (cn.pid==this.root.id || !cn._p) return;
		cn._io = true;
		cn._is = bSelect;
		if (this.completed && cn._hc) this.NodeStatus(true, cn._ai, cn._ls);
		if (this.completed && bSelect) this.SelNode(cn._ai);
		else if (bSelect) this._sn=cn._ai;
		this.OpenTo(cn._p._ai, false, true);
	},
	CloseLevel : function(node) {
		for (var n=0; n<this.aNodes.length; n++) {
			if (this.aNodes[n].pid == node.pid && this.aNodes[n].id != node.id && this.aNodes[n]._hc) {
				this.NodeStatus(false, n, this.aNodes[n]._ls);
				this.aNodes[n]._io = false;
				this.CloseAllChildren(this.aNodes[n]);
			}
		}
	},
	CloseAllChildren : function(node) {
		for (var n=0; n<this.aNodes.length; n++) {
			if (this.aNodes[n].pid == node.id && this.aNodes[n]._hc) {
				if (this.aNodes[n]._io) this.NodeStatus(false, n, this.aNodes[n]._ls);
				this.aNodes[n]._io = false;
				this.CloseAllChildren(this.aNodes[n]);
			}
		}
	},
	NodeStatus : function(status, id, bottom)
	{
		eDiv = Webcrea.FindNodePublic(this.objDivPos, 'id', 'd' + this.objName + id);
		eJoin = Webcrea.FindNodePublic(this.objDivPos, 'id', 'j' + this.objName + id);
		if(!eJoin) return;
		if (this.config.useIcons) {
			eIcon = Webcrea.FindNodePublic(this.objDivPos, 'id', 'i' + this.objName + id);
			if(eIcon && eIcon.tagName=='I')
			{
				if(status) eIcon.style.backgroundPositionY='-32px';
				else eIcon.style.backgroundPositionY='0px';
			}
			else
			{
				var imgSrc = (status) ? this.aNodes[id].iconOpen : this.aNodes[id].icon;
				if(eIcon && imgSrc != 'none' ) eIcon.src = imgSrc;
			}
			if(this.config.useLines)
			{
				var Nid=id+1;
				var NLObj = document.getElementsByName('l' + this.objName + Nid);
				for(var i=0;i<NLObj.length;i++)	NLObj[i].style.display=(status) ? 'block' : 'none';
			}
		}
		var treeIcon = (status) ? this.icon.nlMinus : this.icon.nlPlus;
		if(!status && !Webcrea.IsEmpty(this.aNodes[id].treeIcon)) treeIcon = this.aNodes[id].treeIcon;
		else if(status && !Webcrea.IsEmpty(this.aNodes[id].treeIconOpen)) treeIcon = this.aNodes[id].treeIconOpen;
		if(!this.bNodeHide && id==0) eJoin.src =(status) ? this.icon.nlMinus : this.icon.nlPlus;
		else eJoin.src = (this.config.useLines)?((status)?((bottom)?this.icon.minusBottom:(this.aNodes[id].root?this.icon.minusRoot:this.icon.minus)):((bottom)?this.icon.plusBottom:(this.aNodes[id].root?this.icon.plusRoot:this.icon.plus))):(treeIcon);
		eDiv.style.display = (status) ? 'block': 'none';
		if(!this.bQuery && this.aNodes[id].bChildSearch && !this.aNodes[id].bChildExist)
		{
			eJoin.src = this.icon.empty;
		}
	},
	ClearCookie : function() {
		var now = new Date();
		var yesterday = new Date(now.getTime() - 1000 * 60 * 60 * 24);
		this.SetCookie('co'+this.objName, 'cookieValue', yesterday);
		this.SetCookie('cs'+this.objName, 'cookieValue', yesterday);
	},
	SetCookie : function(cookieName, cookieValue, expires, path, domain, secure) {
		Webcrea.SetCookie(cookieName, cookieValue, expires, path, domain, secure);
	},
	GetCookie : function(cookieName) {
		return Webcrea.GetCookie(cookieName);
	},
	UpdateCookie : function() {
		var str = '';
		for (var n=0; n<this.aNodes.length; n++) {
			if (this.aNodes[n]._io && this.aNodes[n].pid != this.root.id) {
				if (str) str += '.';
				str += this.aNodes[n].id;
			}
		}
		this.SetCookie('co' + this.objName, str);
	},
	IsOpen : function(id) {
		var aOpen = this.GetCookie('co' + this.objName).split('.');
		for (var n=0; n<aOpen.length; n++)
			if (aOpen[n] == id) return true;
		return false;
	},
	GetValue : function(id) {
		var sRet = '';
		var selNode = this.aNodes[this.selectedNode];
		if(selNode)
		{
			if(id == undefined) sRet = selNode.value;
			else
			{
				var findNode = selNode;
				var obj = findNode.obj;
				var iField = -1;
				if(obj) iField = obj.GetColumn(id);
				while(iField<0)
				{
					findNode = findNode._p;
					if(!findNode) break;
					obj = findNode.obj;
					if(!obj) break;
					iField = obj.GetColumn(id);
				}
				if(iField>=0) sRet = findNode.arrData[iField];
				else if(this.bQuery)
				{
					try { sRet = eval(this.objName + '.' + id); }catch (e) {}
				}
				else
				{
					if(selNode.name == id) sRet = selNode.value;
					else
					{
						var selNodeP = selNode._p;
						while(selNodeP)
						{
							if(selNodeP.name == id) 
							{
								sRet = selNodeP.value;
								break;
							}
							selNodeP = selNodeP._p;
						}
					}
				}
			}
		}
		return sRet;
	}
});
var MenuObject = Class.create({
	initialize : function(divPage, divPos, cellId){
		this.divPage = divPage;
		this.divPos = divPos;
		this.divPosOrg = divPos;
		this.cellId = cellId;
		this.dataSeqField = '_my_data_seq_';
		this.objDivPage = document.getElementById(this.divPage);
		this.objGDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'Group');
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);
		this.objFirst = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'F');
		this.objLast = Webcrea.FindNode(this.objDivPage, 'id', this.divPos+'L');

		this.SetLayout();
		this.initGDivWidth = Webcrea.GetWidth(this.objGDivPos, true);
		this.initDivWidth = Webcrea.GetWidth(this.objDivPos, true);
		this.initDivHeight = Webcrea.GetHeight(this.objDivPos);
		this.initLeft = Webcrea.GetLeft(this.objDivPos);
		this.initTop = Webcrea.GetTop(this.objDivPos);
		if(this.objFirst)
		{
			this.initFirstLeft = Webcrea.GetLeft(this.objFirst);
			this.initFirstTop = Webcrea.GetTop(this.objFirst);
		}
		if(this.objLast)
		{
			this.initLastLeft = Webcrea.GetLeft(this.objLast);
			this.initLastTop = Webcrea.GetTop(this.objLast);
		}
		this.arrMobileLayout = [];

		this.pos = -1;

		this.sDBID = '';
		this.sParam = '';
		this.sSql = '';
		this.dataObj = null;
		this.bDummy = false;
		this.nInsertPos = 2;/*0(next), 1(top), 2(bottom)*/

		this.bAddData = false;
		this.msvData = null;
		this.arrRows = null;
		this.arrField = null;
		this.arrFieldType = null;
		this.arrData = null;
		this.arrStatus = null;
		this.arrRows_Org = null;
		this.arrField_Org = null;
		this.arrFieldType_Org = null;
		this.arrData_Org = null;

		this.bInit = false;
		this.bEnable = true;
		this.autoClickSec = 0;
		this.palette = '';
		this.bRepeat = false;
		this.animation = 0;
		this.bAccordion = false;
		this.bMulti = false;

		this.arrStackEvent = [];

		/*menu*/
		this.objMenu = null;
		this.currMenu = null;
		this.currRowIndex = -1;
		this.currRowIndex_B = -1;
		this.imgFolder = Webcrea.GetImageLinkPath() + '/';

		this.bInitDisplay = true;
		if(this.objDivPos && this.objDivPos.getAttribute('initDisplay') == 'none') this.bInitDisplay = false;
	},
	SetOpt : function(width, height, margin, bgImage, divLineStyle, divLineColor, divLineWidth, bFillImage, nDisplayCnt, bgHoverImage, bgDownImage, align, textMargin, bAccordion, bgImageSub, nHMain, nVMain, nHPos, nVPos)
	{
		if(!width) width = 100;
		this.width = width;
		this.height = height;
		this.margin = margin;
		this.bgImage = bgImage;
		this.bDivLine = (!divLineStyle ? false : true);
		this.bFillImage = (!bFillImage ? false : true);
		if(!nDisplayCnt) nDisplayCnt = 0;
		this.nDisplayCnt = nDisplayCnt;
		this.bgHoverImage = bgHoverImage;
		this.bgDownImage = bgDownImage;
		this.divLineOpt = {
			style : divLineStyle,
			color : divLineColor,
			width: divLineWidth
		};
		this.align = align;
		this.textMargin = textMargin;
		this.bAccordion = bAccordion;
		this.bgImageSub = bgImageSub;
		this.nHMain = nHMain;
		this.nVMain = nVMain;
		this.nHPos = nHPos;
		this.nVPos = nVPos;

		var parentObj = _my_File.GetPageObjById(this.divPage);
		parentObj.AddObject(this);
		this.pageObj = parentObj;
	},
	CopyInfo : function()
	{
		let orgObj = arguments[0];
	},
	Init : function()
	{
		if(!this.bInitDisplay) this.Hide();
		this.bInit = true;
	},
	InitializeObj : function()
	{
		this.dataObj = null;
	},
	SetInitRecord : function()
	{
		var bClear = arguments[0];
		Webcrea.SetInitRecord(this, bClear);
	},
	/*가로크기 변경, 세로크기 변경, 오른쪽 맞추기, 아래쪽 맞추기*/
	SetLayout : function(bHorzExpand, bVertExpand, bRight, bBottom)
	{
		if(bHorzExpand == undefined) bHorzExpand = false;
		if(bVertExpand == undefined) bVertExpand = false;
		if(bRight == undefined) bRight = false;
		if(bBottom == undefined) bBottom = false;
		this.layoutOpt = {
			bHorz : bHorzExpand,
			bVert : bVertExpand,
			bRight : bRight,
			bBottom : bBottom
		};
	},
	SetPalette : function(bForm, bLayout, sID, crFillIndex, crHatchIndex, bTrans, bEven, grade, crLLineIndex, crRLineIndex, crTLineIndex, crBLineIndex, crFontIndex, crDivLineIndex)
	{
		if(crDivLineIndex>=0)
		{
			var lineColor = Webcrea.GetPaletteColor(this, crDivLineIndex);
			this.divLineOpt.color = lineColor;
		}
		if(bTrans) return;
		var currObj = this;
		var SetColor = function(css)
		{
			if(crFillIndex>=0)
			{
				if(grade>0)
				{
					var sBackground = css.style.background;
					var arrToken = Webcrea.MakeToken(sBackground, '', true);
					var arrBackground = [];
					var sAdd = '';
					for(var i=0; i<arrToken.length; i++)
					{
						var s = arrToken[i];
						var sNext = '';
						if(i+1<arrToken.length) sNext = arrToken[i+1];
						if(s.iEquals('rgb') && sNext == '(')
						{
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
							for(var j=i; j<arrToken.length; j++)
							{
								var s1 = arrToken[j];
								sAdd += s1;
								if(s1 == ')') break;
							}
							i=j;
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
						}
						else sAdd += s;
					}
					var bgFill = Webcrea.GetPaletteColor(currObj, crFillIndex);
					arrBackground[1] = bgFill;
					if(crHatchIndex>=0) 
					{
						var bgHatch = Webcrea.GetPaletteColor(currObj, crFillIndex);
						arrBackground[2] = bgHatch;
					}
					if(grade>3) arrBackground[3] = bgFill;
					var bgColor = '';
					for(var i=0; i<arrBackground.length; i++) bgColor += arrBackground[i];
					css.style.background = bgColor;
				}
				else
				{
					var bgColor = Webcrea.GetPaletteColor(currObj, crFillIndex);
					css.style.background = bgColor;
				}
			}
			if(crLLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crLLineIndex);
				css.style.borderLeftColor = lineColor;
			}
			if(crRLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crRLineIndex);
				css.style.borderRightColor = lineColor;
			}
			if(crTLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crTLineIndex);
				css.style.borderTopColor = lineColor;
			}
			if(crBLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crBLineIndex);
				css.style.borderBottomColor = lineColor;
			}
		};
		if(bForm)
		{
			var classIds = this.objGDivPos.getAttribute('class');
			if(!classIds) return;
			var arrClassId = classIds.split(' ');
			for(var i=0; i<arrClassId.length; i++)
			{
				var classId = arrClassId[i];
				if(classId.indexOf('_my_')>=0) continue;
				var css = Webcrea.GetCSS('.'+classId);
				if(css) SetColor(css);
			}
			return;
		}
	},
	SetMobileLayout : function()
	{
		var params = '';
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(Webcrea.IsString(param)) param = "'" + param + "'";
			if(!Webcrea.IsEmpty(params)) params += ',';
			params += param;
		}
		var func = 'Webcrea.SetMobileLayout(' + params + ', this);';
		eval(func);
	},
	DataHandler : function(bRefresh, sParam, ReturnFunc, bAsync, sUrl, ThreadId, ThreadResult)
	{
		if(ToUpper(this.sDBID).indexOf('TEXT') > 0 || ToUpper(this.sDBID).indexOf('MEMORY') > 0 || ToUpper(this.sDBID).indexOf('OBJECT') > 0) Webcrea.bFileDB=true;
		else Webcrea.bFileDB=false;
		if(!this.dataObj && !Webcrea.IsEmpty(this.sSql) && Webcrea.bFileDB) Webcrea.CreateRecordSet(this);
		if(!this.dataObj && !this.bDummy) DataHandler(sParam, ReturnFunc, bAsync, sUrl, this, ThreadId, ThreadResult);
		else if(!Webcrea.IsEmpty(ReturnFunc)) eval(ReturnFunc)();
		if(bRefresh) this.Refresh();
	},
	MSVDataParser : function(msvData) {
		var bTextDB = false;
		var n = this.sDBID.indexOf('dbid=TEXT');
		var n1 = this.sParam.indexOf('url=');
		var n2 = this.sSql.indexOf('urlIndex=');
		if(n>=0 && n1<0 && n2<0) bTextDB = true;
		if(!Webcrea.IsNull(msvData))
		{
			msvData = msvData.ltrim();
		}
		this.msvData = msvData;

		var arrRows_B = null;
		var arrField_B = null;
		var arrData_B = null;
		if(this.bAddData && this.arrRows)
		{
			arrRows_B = this.arrRows;
			arrField_B = this.arrField;
			arrData_B = this.arrData;
		}
		var msvSpRowType = Webcrea.msvSpRowType;
		var n = this.sDBID.indexOf('dbid=TEXT');
		var n1 = this.sParam.indexOf('url=');
		var n2 = this.sSql.indexOf('urlIndex=');
		if(bTextDB)
		{
			msvSpRowType = '\r\n';
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 2 && this.arrRows[this.arrRows.length-1]=='') this.arrRows.splice(this.arrRows.length-1, 1);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\n';
				this.arrRows = msvData.split(msvSpRowType);
			}
			var nRowCheck = this.arrRows.length-1;
			while(true)
			{
				if(nRowCheck<0) break;
				var sRowCheck = this.arrRows[nRowCheck];
				if(Webcrea.IsNull(sRowCheck)) sRowCheck = '';
				if(sRowCheck.trim() == '') this.arrRows.splice(nRowCheck, 1);
				else break;
				nRowCheck--;
			}
		}
		else
		{
			this.arrRows = msvData.split(msvSpRowType);
			if(this.arrRows.length == 1)
			{
				msvSpRowType = '\r\n';
				this.arrRows = msvData.split(msvSpRowType);
				if(this.arrRows.length == 1)
				{
					msvSpRowType = '\n';
					this.arrRows = msvData.split(msvSpRowType);
				}
			}
		}
		this.arrField = new Array();
		this.arrFieldType = new Array();
		this.arrData = new Array();
		this.arrStatus = new Array();
		this.SetInitRecord(true);

		var spType = Webcrea.msvSpColType;
		if(this.arrRows.length > 0)
		{
			if(Webcrea.IsSqlStatusError(this.arrRows[0])) 
			{
				this.arrRows = null;
				return;
			}
			else Webcrea.SetSqlStatus('');
			var n = this.arrRows[0].indexOf('\r\n');
			while(n==0)
			{
				this.arrRows[0] = this.arrRows[0].replace('\r\n', '');
				n = this.arrRows[0].indexOf('\r\n');
			}
			if(this.arrRows[0].split(spType).length < 2)
			{
				var spType1 = '\t';
				if(this.arrRows[0].split(spType1).length < 2)
				{
					var spType2 = ',';
					if(this.arrRows[0].split(spType2).length > 1) spType = spType2;
				}
				else spType = spType1;
			}
			for(var i=0; i<2; i++)
			{
				var n = this.arrRows[this.arrRows.length-1].lastIndexOf('\n');
				if(n>=0)
				{
					var n1 = this.arrRows[this.arrRows.length-1].lastIndexOf('\r\n');
					if(n1>=0 && n1+2 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n1);
					}
					else if(n1<0 && n+1 == this.arrRows[this.arrRows.length-1].length)
					{
						this.arrRows[this.arrRows.length-1] = this.arrRows[this.arrRows.length-1].substr(0, n);
					}
					else break;
				}
				else break;
			}
		}
		else return;

		var arrColData = this.arrRows[0].split(spType);
		for(var i=0; i<arrColData.length; i++)
		{
			var strCol = arrColData[i];
			var nColType = 0;
			var n = strCol.lastIndexOf('#');
			if(n > 0)
			{
				strCol = strCol.replace('#', '');
				nColType = 1;
			}
			this.arrField[i] = strCol;
			this.arrFieldType[i] = nColType;
			this.arrData[this.arrField[i]] = new Array();
			this.arrStatus[this.arrField[i]] = new Array();
		}
		if(this.arrField.length>0)
		{
			this.arrField[this.arrField.length] = this.dataSeqField;
			this.arrFieldType[this.arrFieldType.length] = 1;
			this.arrData[this.dataSeqField] = new Array();
			this.arrStatus[this.dataSeqField] = new Array();
		}
		this.arrRows.splice(0, 1);

		/*필드 별 레코드 셋*/
		for(var i=0; i<this.arrRows.length; i++)
		{
			var bLast = (i+1==this.arrRows.length)?true:false;
			var bCRLF = (this.arrRows[i].indexOf('\r\n')<0)?false:true;
			var sRow = this.arrRows[i].replace('\r\n', '');
			var bSkip = false;
			if(sRow.length<1)
			{
				if(!bLast) bSkip = true;
				else if(!bCRLF) bSkip = true;
			}
			if(bSkip)
			{
				this.arrRows.splice(i, 1);
				i--;
				continue;
			}

			var arrColData = this.arrRows[i].split(spType);
			for(var j=0; j<arrColData.length; j++)
			{
				if(j>=this.arrField.length) break;
				this.arrData[this.arrField[j]][i] = arrColData[j];
				if(j==0)
				{
					this.arrData[this.dataSeqField][i] = i;
					this.arrStatus[this.dataSeqField][i] = '';
				}
			}
		}

		if(this.bAddData && arrRows_B)
		{
			for(var i=0; i<arrRows_B.length; i++)
			{
				this.arrRows.splice(i, 0, arrRows_B[i]);
				for(var j=0; j<arrField_B.length; j++)
					this.arrData[this.arrField[j]].splice(i, 0, arrData_B[arrField_B[j]][i]);
			}
			this.bAddData = false;
		}
		this.SetInitRecord();
		if(this.arrField.length>0 && this.arrRows.length==0) _my_sqlStatus = '[DATA BLANK]';
	},
	QueryParser : function() {
		var ___param = {};
		___param.sql = arguments[0];
		___param.dataObj = arguments[1];
		if(this.bDummy)
		{
			Webcrea.SetSqlStatus('');
			return;
		}
		if(___param.dataObj == undefined) ___param.dataObj = this.dataObj;
		if(___param.sql == undefined) ___param.sql = this.sSql;
		if(!___param.dataObj.arrRows) return false;

		var obj = QueryParser(___param.sql, ___param.dataObj);
		this.arrRows = obj.arrRows;
		this.arrField = obj.arrField;
		this.arrFieldType = obj.arrFieldType;
		this.arrData = obj.arrData;
		this.arrStatus = obj.arrStatus;
		this.SetInitRecord();
	},
	CreateMenu : function(id, name, value)
	{
		this.aNodes[this.aNodes.length] = new this.menuNode(id, name, value);
		return this.aNodes[this.aNodes.length-1];
	},
	SetCurrRecord : function(nRow, bDataRow, bBlankData) {
		for(var j=0; j<this.arrField.length; j++)
		{
			var sField = this.arrField[j];
			var sData = '';
			if(this.arrRows && this.arrRows.length>0) sData = this.arrData[sField][nRow];
			if(sData == undefined || bBlankData) sData = '';
			Webcrea.DynamicVal(sField, sData, this.objName);
			Webcrea.DynamicVal(sField, sData);
		}
	},
	Sort : function()
	{
		var sOpt = arguments[0];
		Webcrea.Sort(this, sOpt);
	},
	ToNumber : function()
	{
		Webcrea.ToNumber(this, arguments[0]);
	},
	ToString : function()
	{
		Webcrea.ToString(this, arguments[0]);
	},
	InsertPos : function(pos) {
		if ((typeof pos).toLowerCase() == 'string') pos = pos.toLowerCase();
		if(pos == 'next') this.nInsertPos = 0;
		else if(pos == 'top') this.nInsertPos = 1;
		else if(pos == 'bottom') this.nInsertPos = 2;
	},
	IsColumn : function(sField)
	{
		return this.GetColumn(sField)>=0?true:false;
	},
	IsColumnNumber : function(sField)
	{
		var n = this.GetColumn(sField);
		return this.arrFieldType[n]==1?true:false;
	},
	IsMenu : function() {
		return true;
	},
	ModifyRecordSet : function(param) {
		Webcrea.ModifyRecordSet(this, param);
	},
	_Get_Animation : function()
	{
		return this.animation;
	},
	_Set_Animation : function()
	{
		var sec = arguments[0];
		this.animation = sec;
	},
	_Get_AutoClick : function()
	{
		return this.autoClickSec;
	},
	_Set_AutoClick : function(sec)
	{
		this.autoClickSec = sec;
	},
	_Get_Left : function() {
		return Webcrea.GetLeft(this.objDivPos, true);
	},
	_Set_Left : function(pos) {
		var org = Webcrea.GetLeft(this.objDivPos);
		var diff = pos-org;
		if(this.objFirst)
		{
			this.objFirst.style.left = Webcrea.GetLeft(this.objFirst) + diff + 'px';
			this.objLast.style.left = Webcrea.GetLeft(this.objLast) + diff + 'px';
		}
		this.objGDivPos.style.left = pos + 'px';
	},
	_Get_NoPrint : function()
	{
		return this.bNoPrint;
	},
	_Set_NoPrint : function()
	{
		this.bNoPrint = arguments[0];
		Webcrea.NoPrint(this, arguments[0]);
	},
	_Get_OnlyPrint : function()
	{
		return this.bOnlyPrint;
	},
	_Set_OnlyPrint : function()
	{
		this.bOnlyPrint = arguments[0];
		Webcrea.OnlyPrint(this, arguments[0]);
	},
	_Get_RecordCount : function() {
		return this.RecordCount();
	},
	_Get_Top : function() {
		return Webcrea.GetTop(this.objDivPos);
	},
	_Set_Top : function(pos) {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(this.objGDivPos) this.objGDivPos.style.top = pos + 'px';
		else
		{
			var org = Webcrea.GetTop(this.objDivPos);
			var diff = pos-org;
			if(this.objFirst)
			{
				this.objFirst.style.top = Webcrea.GetTop(this.objFirst) + diff + 'px';
				this.objLast.style.top = Webcrea.GetTop(this.objLast) + diff + 'px';
			}
			this.objDivPos.style.top = pos + 'px';
		}
	},
	_Get_Repeat : function() {
		return this.bRepeat;
	},
	_Set_Repeat : function() {
		var param = arguments[0];
		this.bRepeat = param;
		if(this.bRepeat) this.nDisplayCnt = 0;
	},
	_Get_RowNo : function() {
		var ___nRow = arguments[0];
		if(Webcrea.IsNull(___nRow)) ___nRow = this.GetCurrRowIndex();
		return ___nRow;
	},
	_Set_RowNo : function(n) {
		if(!this.bRepeat)
		{
			this.SetCurrRowIndex(n);
			this.SetFocus();
		}
		else
		{
			this.SetFocus();
			var nCurrRow = this.GetCurrRowIndex();
			var nMove = n-nCurrRow;
			if(nMove>0)
			{
				for(var i=0; i<nMove; i++) this.NextPage();
			}
			else
			{
				nMove *= -1;
				for(var i=0; i<nMove; i++) this.PrevPage();
			}
		}
	},
	_Get_Visible : function() {
		var bVisible=true;
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(obj.style.display=='')
		{
			var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos);
			bVisible = css.style.display == 'none' ? false : true;
		}
		else bVisible = obj.style.display == 'none' ? false : true;
		return bVisible;
	},
	_Set_Visible : function(b) {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		var sVisible = 'block';
		if(!b) sVisible = 'none';
		obj.style.display = sVisible;
		if(this.objFirst)
		{
			this.objFirst.style.display = sVisible;
			this.objLast.style.display = sVisible;
		}
	},
	_Get_Width : function() {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetWidth(obj, true);
	},
	_Set_Width : function(width) {
		if(this.objGDivPos) this.objGDivPos.style.width = width + 'px';
		this.objDivPos.style.width = width + 'px';
	},
	_Get_Height : function() {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		return Webcrea.GetHeight(obj);
	},
	AutoClick : function(xPos, yPos)
	{
		if(_MENU_X_ == xPos && _MENU_Y_ == yPos && this.overMenu)
		{
			var node = this.overMenu.parentNode;
			if(node)
			{
				var id = node.getAttribute('seq');
				this.OnCLICK(id);
			}
		}
		this.bAutoClicking = false;
	},
	SetCurrRowIndex : function(nRow) {
		this.currRowIndex = nRow;
		this.SetCurrRecord(nRow);
	},
	GetCurrRowIndex : function() {
		return this.currRowIndex;
	},
	RecordCount : function() {
		return (this.arrRows)?this.arrRows.length:0;
	},
	SetFocus : function() {
		var currObj = this;
		var selId = this.GetCurrRowIndex();
		this.currMenu = Webcrea.FindNode(this.objDivPos, 'id', this.divPos + selId);
		if(this.currMenu)
		{
			this.currMenu.focus();
			var currNode = this.currMenu.parentNode;
			if(currNode)
			{
				this.ClearFocus();
				this.SetFocusImage(currNode);
				var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos + ' #scroller' + ' a:focus');
				this.currMenu.style.textDecoration = css.style.textDecoration;
				this.currMenu.style.fontWeight = css.style.fontWeight;
				this.currMenu.style.color = css.style.color;
				this.arrFocusNode[this.arrFocusNode.length] = this.currMenu;
			}
		}
	},
	SetFocusImage : function()
	{
		var currNode = arguments[0];
		var bOut = arguments[1];
		if(!currNode) return;
		if(bOut) currNode.removeAttribute('select');
		else currNode.setAttribute('select', 'select');
		var imgDown = currNode.getAttribute('imagedown');
		var imgOut = currNode.getAttribute('imageout');
		if(bOut && imgOut)
		{
			var bHttpPath = false;
			if(!Webcrea.IsEmpty(imgOut) && (imgOut.indexOf('http://') == 0 || imgOut.indexOf('https://') == 0)) bHttpPath = true;
			if(bHttpPath) currNode.style.backgroundImage = "url('" + imgOut + "')";
			else currNode.style.backgroundImage = "url('" + this.imgFolder + imgOut + "')";
			return;
		}
		if(!imgDown) imgDown = imgOut;
		if(imgDown)
		{
			var bHttpPath = false;
			if(!Webcrea.IsEmpty(imgDown) && (imgDown.indexOf('http://') == 0 || imgDown.indexOf('https://') == 0)) bHttpPath = true;
			if(bHttpPath) currNode.style.backgroundImage = "url('" + imgDown + "')";
			else currNode.style.backgroundImage = "url('" + this.imgFolder + imgDown + "')";
		}
	},
	ClearFocus : function()
	{
		var currObj = this;
		if(!this.arrFocusNode) this.arrFocusNode = [];
		for(var i=0; i<this.arrFocusNode.length; i++)
		{
			var menu = this.arrFocusNode[i];
			if(menu == this.currMenu) continue;
			menu.style.textDecoration = '';
			menu.style.fontWeight = '';
			menu.style.color = '';
			var currNode = menu.parentNode;
			this.SetFocusImage(currNode, true);
			this.arrFocusNode.splice(i, 1);
			i--;
		}
	},
	Find : function() {
		var param = arguments[0];
		if(!this.bAccordion) return;
		var arrWhere;
		var n = param.indexOf('where');
		if(n>=0)
		{
			var sWhere = param.substr(n+5);
			sWhere = sWhere.trim();
			arrWhere = Webcrea.MakeToken(sWhere);
			param = param.substr(0, n);
			param = param.trim();
		}
		if(arrWhere.length<=0) return;
		var nRow = this.arrRows.length;
		for(var i=0; i<nRow; i++)
		{
			var parentInfo;
			var menuInfo = this.arrAccMenuInfo[i];
			if(menuInfo.bTitle) parentInfo = menuInfo;
			if(Webcrea.IsWhereData(this, i, arrWhere))
			{
				if(menuInfo.bTitle) this.ToggleAccordion(menuInfo.node);
				else
				{
					if(parentInfo) this.ToggleAccordion(parentInfo.node);
					this.OnCLICK(i);
				}
				break;
			}
		}
	},
	Hide : function() {
		if(this.objDivPos.style.display == 'none') return;
		(this.objGDivPos)?this.objGDivPos.style.display = 'none':this.objDivPos.style.display = 'none';
	},
	Show : function() {
		(this.objGDivPos)?this.objGDivPos.style.display = 'block':this.objDivPos.style.display = 'block';
	},
	GetColumn : function(col) {
		return this.arrField.isearch(col);
	},
	GetFieldType : function(sField)
	{
		var n = this.arrField.isearch(sField);
		return n<0?0:this.arrFieldType[n];
	},
	GetValue : function(id)
	{
		var sRet = '';
		if(id == undefined)	sRet = this.currMenu.text;
		else
		{
			if(typeof window[this.objName][id] != 'undefined') sRet = window[this.objName][id];
		}
		return sRet;
	},
	OnQUERY : function(cellId)
	{
		this.arrStackEvent[this.arrStackEvent.length] = 'onquery';
		this.InitializeObj();
		if(typeof window[this.divPage][this.divPosOrg].OnQUERY != 'undefined')
			window[this.divPage][this.divPosOrg].OnQUERY(true);
		this.arrStackEvent.removeByValue('onquery');
	},
	OnLOADED : function()
	{
		window[this.divPage][this.divPosOrg].OnLOADED();
	},
	OnCLICK : function(selId)
	{
		this.currRowIndex_B = this.currRowIndex;
		this.SetCurrRowIndex(selId);
		this.SetFocus();
		if(typeof window[this.divPage][this.divPosOrg].OnCLICK != 'undefined')
			window[this.divPage][this.divPosOrg].OnCLICK();
	},
	ToggleAccordion : function(currNode)
	{
		var currObj = this;
		var SetFocus = function()
		{
			var node = arguments[0];
			var bFocus = arguments[1];
			var sRole = node.getAttribute('role');
			var aNode = Webcrea.FindNodePublic(node, 'name', 'a');
			if(bFocus)
			{
				var css = Webcrea.GetCSS('#'+currObj.divPage + ' #'+currObj.divPos + ' #scroller' + ' a:focus');
				aNode.style.textDecoration = css.style.textDecoration;
				aNode.style.fontWeight = css.style.fontWeight;
				aNode.style.color = css.style.color;
			}
			else
			{
				aNode.style.textDecoration = '';
				aNode.style.fontWeight = '';
				aNode.style.color = '';
				if(sRole == 'title') currObj.SetFocusImage(node, true);
				else
				{
					if(currObj.nHPos>0) node.style.paddingLeft = '';
					if(currObj.nVPos>0) node.style.paddingTop = '';
					var height = node.getAttribute('dataHeight');
					if(height) node.style.height = '0px';
				}
			}
		};
		if(!this.arrShowAccordion) this.arrShowAccordion = [];
		if(!this.bMulti)
		{
			for(var i=0; i<this.arrShowAccordion.length; i++)
			{
				var objInfo = this.arrShowAccordion[i];
				var titleDiv = objInfo.titleDiv;
				var textDiv = objInfo.textDiv;
				if(titleDiv == currNode) continue;
				if(!textDiv.classList.contains('show')) continue;
				textDiv.classList.remove('show');
				SetFocus(titleDiv, false);
				SetFocus(textDiv, false);
			}
		}
		this.currMenu = null;
		this.ClearFocus();
		this.SetFocusImage(currNode);
		var bFocus = false;
		this.arrShowAccordion = [];
		var nextNode = currNode.nextElementSibling;
		while(nextNode)
		{
			var targetText = nextNode.classList;
			if (targetText.contains('show'))
			{
				bFocus = false;
				targetText.remove('show');
				if(this.nHPos>0) nextNode.style.paddingLeft = '';
				if(this.nVPos>0) nextNode.style.paddingTop = '';
				var height = nextNode.getAttribute('dataHeight');
				if(height) nextNode.style.height = '0px';
			}
			else
			{
				bFocus = true;
				targetText.add('show');
				if(this.nHPos>0) nextNode.style.paddingLeft = this.nHPos + 'px';
				if(this.nVPos>0) nextNode.style.paddingTop = this.nVPos + 'px';
				var height = nextNode.getAttribute('dataHeight');
				if(height)
				{
					nextNode.style.height = height + 'px';
					var lineHeight = height;
					if(this.nVPos>0) lineHeight -= this.nVPos;
					nextNode.style.lineHeight = lineHeight + 'px';
				}
				var objInfo = {};
				objInfo.titleDiv = currNode;
				objInfo.textDiv = nextNode;
				this.arrShowAccordion[this.arrShowAccordion.length] = objInfo;
			}
			nextNode = nextNode.nextElementSibling;
		}
		SetFocus(currNode, bFocus);
	},
	DisplayAccordion : function()
	{
		if(this.scDiv) this.objDivPos.removeChild(this.scDiv);
		var sClass = this.objGDivPos.getAttribute('class');
		var css = Webcrea.GetCSS('.'+sClass);
		var fontSize = 10;
		if(css)
		{
			fontSize = css.style.fontSize;
			fontSize = Number(Extract(fontSize, '[0-9]'));
		}
		var bImage = true;
		if(!Webcrea.IsEmpty(this.bgImage))
		{
			var arr = this.bgImage.split('.');
			if(arr.length < 2) bImage = false;
		}
		var classList = this.objDivPos.classList;
		if (!classList.contains('_my_accordion')) this.objDivPos.classList.add('_my_accordion');
		var currObj = this;
		var CreateNode = function()
		{
			var parentNode = arguments[0];
			var value = arguments[1];
			var bItem = arguments[2];
			var seq = arguments[3];
			var sRole = 'title';
			if(bItem) sRole = 'text';
			var tDiv = document.createElement('div');
			tDiv.setAttribute('seq', seq);
			tDiv.setAttribute('role', sRole);
			var hoverEvent = "Webcrea.OnMouseOver('" + currObj.divPos + "')";
			var outEvent = "Webcrea.OnMouseOut('" + currObj.divPos + "')";
			tDiv.setAttribute('onmouseover', 'javascript:' + hoverEvent);
			tDiv.setAttribute('onmouseout', 'javascript:' + outEvent);
			parentNode.appendChild(tDiv);
			if(!bItem) tDiv.classList.add('title');
			else tDiv.classList.add('text');
			var a = document.createElement('a');
			a.setAttribute('id', currObj.divPos + seq);
			a.textContent = sValue;
			tDiv.appendChild(a);
			return tDiv;
		};

		this.arrAccMenuInfo = [];
		var parentLi;
		var rootLevel = 0;
		var scDiv = document.createElement('ul');
		var nRow = this.arrRows.length;
		for(var i=0; i<nRow; i++)
		{
			var menuInfo = {};
			var bgImage = this.bgImage;
			var bgImageSub = this.bgImageSub;
			var bgHoverImage = this.bgHoverImage;
			var bgDownImage = this.bgDownImage;
			if(!bImage)
			{
				if(this.IsColumn(this.bgImage)) bgImage = this.arrData[this.bgImage][i];
				else bgImage = '';
				if(this.IsColumn(this.bgImageSub)) bgImageSub = this.arrData[this.bgImageSub][i];
				else bgImageSub = '';
				if(this.IsColumn(this.bgHoverImage)) bgHoverImage = this.arrData[this.bgHoverImage][i];
				else bgHoverImage = '';
				if(this.IsColumn(this.bgDownImage)) bgDownImage = this.arrData[this.bgDownImage][i];
				else bgDownImage = '';
			}
			var width = 0;
			if(!this.layoutOpt.bHorz && this.IsColumn('width')) width = this.arrData['width'][i];
			var height = 0;
			if(this.IsColumn('height')) height = this.arrData['height'][i];
			var sValue = '';
			if(this.cellId != '') sValue = this.arrData[this.cellId][i];
			var level = this.arrData['level'][i];
			if(i==0) rootLevel = level;
			var level_b = 0;
			if(i>0) level_b = this.arrData['level'][i-1];
			if(level == rootLevel || rootLevel != 0)
			{
				var li = document.createElement('li');
				scDiv.appendChild(li);
				li.classList.add('item');
				var tDiv = CreateNode(li, sValue, false, i);
				if(height>0)
				{
					tDiv.style.height = height + 'px';
					var lineHeight = height;
					if(this.nVMain>0) lineHeight -= this.nVMain;
					tDiv.style.lineHeight = lineHeight + 'px';
				}
				if(width>0) tDiv.style.width = width + 'px';
				else width = this.width;
				var clickEvent = this.objName + '.ToggleAccordion(this);';
				tDiv.setAttribute('onclick', 'javascript:' + clickEvent);
				var nHMain = this.nHMain;
				if(this.align == 1 && nHMain==0 && this.nHPos>0)
				{
					var textWidth = Webcrea.GetDataWidth(sValue, fontSize);
					nHMain = (width - textWidth)/2;
				}
				if(nHMain>0) tDiv.style.paddingLeft = nHMain + 'px';
				if(this.nVMain>0) tDiv.style.paddingTop = this.nVMain + 'px';
				if(!bgImage.IsEmpty())
				{
					tDiv.style.background = "url('" + this.imgFolder + bgImage + "') no-repeat center /100% 100%";
					tDiv.setAttribute('imageover', bgHoverImage);
					tDiv.setAttribute('imageout', bgImage);
					tDiv.setAttribute('imagedown', bgDownImage);
				}
				parentLi = li;
				menuInfo.node = tDiv;
				menuInfo.bTitle = true;
			}
			else
			{
				if(!parentLi)
				{
					var li = document.createElement('li');
					scDiv.appendChild(li);
				}
				var tDiv = CreateNode(li, sValue, true, i);
				if(height>0) tDiv.setAttribute('dataHeight', height);
				if(width>0) tDiv.style.width = width + 'px';
				var clickEvent = this.objName + '.OnCLICK(' + i + ');';
				tDiv.setAttribute('onclick', 'javascript:' + clickEvent);
				if(!bgImageSub.IsEmpty())
				{
					tDiv.style.background = "url('" + this.imgFolder + bgImageSub + "') no-repeat center /100% 100%";
					tDiv.setAttribute('imageover', bgHoverImage);
					tDiv.setAttribute('imageout', bgImageSub);
					tDiv.setAttribute('imagedown', bgDownImage);
				}
				menuInfo.node = tDiv;
				menuInfo.bTitle = false;
			}
			this.arrAccMenuInfo[i] = menuInfo;
		}

		scDiv.setAttribute('id', 'scroller');
		this.objDivPos.appendChild(scDiv);
		this.scDiv = scDiv;
		this.objDivPos.style.overflowX = 'hidden';
		this.objDivPos.style.overflowY = 'auto';
		this.SetAlign();
	},
	Display : function() {
		if(!this.arrRows) return;
		if(_my_sqlStatus != '')
		{
			if(_my_sqlStatus.indexOf('[DATA BLANK]')==0)
			{
				Webcrea.SetSqlStatus('');
				_my_lastStatus = 'QUERY FAILED';
			}
			else return;
		}

		if(this.bAccordion)
		{
			this.DisplayAccordion();
			return;
		}
		if(this.scDiv) this.objDivPos.removeChild(this.scDiv);
		var sClass = this.objGDivPos.getAttribute('class');
		var css = Webcrea.GetCSS('.'+sClass);
		var fontSize = 10;
		if(css)
		{
			var borderTop = css.style.borderTopWidth;
			var borderBottom = css.style.borderBottomWidth;
			var borderLeft = css.style.borderLeftWidth;
			var borderRight = css.style.borderRightWidth;
			this.nBorderTop = Number(Extract(borderTop, '[DIGIT]'));
			this.nBorderBottom = Number(Extract(borderBottom, '[DIGIT]'));
			this.nBorderLeft = Number(Extract(borderLeft, '[DIGIT]'));
			this.nBorderRight = Number(Extract(borderRight, '[DIGIT]'));
			if(this.nBorderTop>0) this.height -= Math.floor(this.nBorderTop/2);
			if(this.nBorderBottom>0) this.height -= Math.floor(this.nBorderBottom/2);
			fontSize = css.style.fontSize;
			fontSize = Number(Extract(fontSize, '[0-9]'));
		}

		var nRow = this.arrRows.length;
		if(nRow>0)
		{
			if(this.objFirst) this.objFirst.style.display = 'block';
			if(this.objLast) this.objLast.style.display = 'block';
		}
		var nLineWidth = 0;
		var margin = this.margin;
		if(this.bDivLine)
		{
			margin = margin/2;
			nLineWidth = (nRow-1)*(margin+(this.divLineOpt.width*2));
		}
		var textMargin = 0;
		if(this.textMargin>0)
		{
			textMargin = this.textMargin*nRow*2;
		}
		var divWidth = ((nRow-1)*margin) + nLineWidth + textMargin;
		var allWidth = 0;

		var bImage = true;
		if(!Webcrea.IsEmpty(this.bgImage))
		{
			var arr = this.bgImage.split('.');
			if(arr.length < 2) bImage = false;
		}

		var bDataSize = false;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(nFileVersion>=7020180524002)
		{
			if(!this.bRepeat && this.nDisplayCnt==0) this.nDisplayCnt=nRow;
			if(nRow>0 && this.IsColumn('width'))
			{
				var sWidth = this.arrData['width'][0];
				if(Webcrea.IsString(sWidth) && sWidth.iEquals('auto')) bDataSize = true;
			}
		}

		var height = this.height;
		var nDivWidth = Webcrea.GetWidth(this.objDivPos, true);
		var nDivHeight = Webcrea.GetHeight(this.objDivPos, true);
		if(this.nDisplayCnt>0) height = nDivHeight;
		var style = '';
		var scDiv = document.createElement('div');
		var ul = document.createElement('ul');
		ul.setAttribute('style', 'margin:0px;padding:0px;height:' + height + 'px;');

		var scDivTop = Math.ceil((nDivHeight - height)/2);
		this.arrMenuLi = [];

		for(var i=0; i<nRow; i++)
		{
			var sValue = '';
			if(this.cellId != '') sValue = this.arrData[this.cellId][i];
			var width = this.width;
			if(this.nDisplayCnt>0)
			{
				width = nDivWidth;
				width = Math.floor(width/this.nDisplayCnt);
				width -= margin;
				if(Webcrea.IsEmpty(this.bgImage) || bDataSize)
				{
					var textWidth = 0;
					if(nFileVersion>=7020180524002) textWidth = Webcrea.GetTextWidthByStyle(sValue, '', sClass, true);
					else textWidth = Webcrea.GetDataWidth(sValue, fontSize);
					if(width<textWidth || bDataSize) width = textWidth;
				}
			}
			else if(width == 0 || Webcrea.IsEmpty(this.bgImage)) width = sValue.length * 20;
			var nDataWidth = -1, nDataHeight = -1;
			if(!this.bRepeat && !bDataSize)
			{
				if(this.IsColumn('width')) nDataWidth = this.arrData['width'][i];
				if(this.IsColumn('height')) nDataHeight = this.arrData['height'][i];
			}
			if(nDataWidth>0) width = Number(nDataWidth);
			if(nDataHeight>0) height = Number(nDataHeight);
			allWidth += width;

			var bgImage = this.bgImage;
			var bgHoverImage = this.bgHoverImage;
			var bgDownImage = this.bgDownImage;
			if(!bImage)
			{
				if(this.IsColumn(this.bgImage)) bgImage = this.arrData[this.bgImage][i];
				else bgImage = '';
				if(this.IsColumn(this.bgHoverImage)) bgHoverImage = this.arrData[this.bgHoverImage][i];
				else bgHoverImage = '';
				if(this.IsColumn(this.bgDownImage)) bgDownImage = this.arrData[this.bgDownImage][i];
				else bgDownImage = '';
			}

			style = 'display:block;cursor:pointer;list-style:none;float:left;text-align:center;width:' + width + 'px;height:100%;';
			if(!Webcrea.IsEmpty(bgImage)) style += 'background:url(' + this.imgFolder + bgImage + ') no-repeat center center;';
			if(this.textMargin>0) style = style + 'padding-left:' + this.textMargin + 'px;padding-right:' + this.textMargin + 'px;';
			if(this.bRepeat) style = 'position:absolute;' + style;
			if(this.bFillImage && nDataWidth!='auto' && nDataWidth<0) style += 'background-size:100% 100%;';
			if(i!=nRow-1) style = 'margin-right:' + margin + 'px;' + style;
			var clickEvent = this.objName + '.OnCLICK(' + i + ')';
			var li = document.createElement('li');
			li.setAttribute('seq', i);
			li.setAttribute('style', style);
			li.setAttribute('imageover', bgHoverImage);
			li.setAttribute('imageout', bgImage);
			li.setAttribute('imagedown', bgDownImage);
			li.setAttribute('onclick', 'javascript:' + clickEvent);

			var hoverEvent = "Webcrea.OnMouseOver('" + this.divPos + "')";
			var outEvent = "Webcrea.OnMouseOut('" + this.divPos + "')";
			li.setAttribute('onmouseover', 'javascript:' + hoverEvent);
			li.setAttribute('onmouseout', 'javascript:' + outEvent);

			var a = document.createElement('a');
			a.setAttribute('style', 'line-height:'+height+'px');
			a.setAttribute('id', this.divPos + i);
			a.textContent = sValue;
			li.appendChild(a);
			ul.appendChild(li);

			if(this.bDivLine && i!=nRow-1)
			{
				var lineStyle = 'solid';
				if(this.divLineOpt.style!=1) lineStyle = 'dotted';
				var height = Number(this.height) - 2;
				var liSub = document.createElement('li');
				liSub.setAttribute('style', 'display:block;list-style:none;float:left;height:' + height + 'px;border:'+this.divLineOpt.width+'px '+lineStyle+';border-color:'+this.divLineOpt.color+';margin-right:'+margin+'px;');
				ul.appendChild(liSub);
			}
			this.arrMenuLi[this.arrMenuLi.length] = li;
			if(i==0) li.style.left = '0px';
			else li.style.left = nDivWidth + 'px';
		}
		divWidth += allWidth;
		var currPageWidth = Webcrea.GetWidth(this.objDivPos, true);
		var scDivWidth = divWidth;
		if(this.bRepeat) scDivWidth = currPageWidth;
		scDiv.setAttribute('id', 'scroller');
		scDiv.setAttribute('style', 'position:absolute;overflow:hidden;top:' + scDivTop + 'px;width:' + scDivWidth + 'px');
		scDiv.appendChild(ul);
		this.objDivPos.appendChild(scDiv);
		this.scDiv = scDiv;

		this.SetAlign();

		var menuPageWidth = divWidth;
		this.menuPageWidth = menuPageWidth;
		this.divMaxPage = Math.ceil(menuPageWidth/currPageWidth);
		if(this.divMaxPage < 2)
		{
			if(!document.querySelector('#' + this.divPage + ' #'+this.divPos+'F')) return;
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'F').style.display = 'none';
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'L').style.display = 'none';
			return;
		}

		/*iscroll 생성*/
		this.meunScroll = new iScroll(this.divPos, {snap:true,momentum:false,hScrollbar:false,onScrollEnd:function(){window[this.relObj].ScrollEnd();}});
		this.meunScroll.relObj = this.objName;

		if(!document.querySelector('#' + this.divPage + ' #'+this.divPos+'F')) return;
		document.querySelector('#' + this.divPage + ' #'+this.divPos+'F > a').href = 'javascript:' + this.objName + '.PrevPage()';
		document.querySelector('#' + this.divPage + ' #'+this.divPos+'L > a').href = 'javascript:' + this.objName + '.NextPage()';
		if(this.bRepeat)
		{
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'F > a').className = 'active';
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'L > a').className = 'active';
		}
		this.SetCurrRowIndex(0);
	},
	SetAlign : function()
	{
		var currWidth = Webcrea.GetWidth(this.objDivPos, true);
		var scDiv = Webcrea.FindNode(this.objDivPos, 'id', 'scroller');
		if(!scDiv) return;
		if(this.bAccordion)
		{
			if(this.nHMain>0 || this.nHPos>0) return;
			var sAlign = 'left';
			if(this.align == 1) sAlign = 'center';
			else if(this.align == 2) sAlign = 'right';
			scDiv.style.float = 'left';
			scDiv.style.display = 'inline-block';
			scDiv.style.textAlign = sAlign;
			return;
		}
		var scWidth = Webcrea.GetWidth(scDiv, true);
		if(scWidth>=currWidth)
		{
			scDiv.style.left = '0px';
			return;
		}
		var alignPos = currWidth;
		alignPos -= scWidth;
		if(this.align == 1) alignPos = alignPos/2;
		else if(this.align != 2) alignPos = 0;
		scDiv.style.left = alignPos + 'px';
	},
	RowNo : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowNo', param);
	},
	RowSize : function()
	{
		if(arguments.length<1) return;
		Webcrea.RowSize(this, arguments[0]);
	},
	RowToCol : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowToCol', param);
	},
	Row2Col : function(param)
	{
		Webcrea.MakeRecordSet(this, 'RowToCol', param);
	},
	AddRecordSet : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		if(!this.arrRecordSet) this.arrRecordSet = [];
		this.arrRecordSet[this.arrRecordSet.length] = ___param.sql;
	},
	MakeRecordSet : function()
	{
		Webcrea.MakeRecordSet(this);
		this.arrRecordSet = [];
	},
	MakeData : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		___param.rowIndex = arguments[1];
		var sRet = '';
		var arr = Webcrea.MakeToken(___param.sql);
		var sValue = '';
		for(var i=0; i<arr.length; i++)
		{
			var str = arr[i];
			if(str.indexOf('.GetValue')>0 && i+3<arr.length && arr[i+1] == '(')
			{
				str = str + arr[i+1] + arr[i+2] + ',' + ___param.rowIndex + arr[i+3];
				str = "'" + eval(str) + "'";
				i=i+3;
			}
			else if(str == '&_ME_') str = Webcrea.GetMEData();
			else if(str.indexOf('sum')>=0 && i+3<arr.length && arr[i+1] == '(')
			{
				var sField = arr[i+2];
				if(this.GetColumn(sField)>=0) str = this.sum(sField.toString());
				i=i+3;
			}
			else if(str == 'Date' && i>0 && i<arr.length-2 && arr[i-1] != '.' && arr[i+1] == '(') str = 'Webcrea.' + str;
			else
			{
				var iField = this.GetColumn(str);
				if(iField>=0)
				{
					var sField = this.arrField[iField];
					str = this.arrData[sField][___param.rowIndex];
					str = Webcrea.ReplaceAll(str, '"', '\\"');
					str = '"' + str + '"';
				}
			}
			sValue += str;
		}
		sRet = eval(sValue);
		if(sRet == undefined) sRet = '';
		else if(Webcrea.IsNaN(sRet)) sRet = 0;
		return sRet;
	},
	Refresh : function()
	{
		this.OnQUERY();
	},
	OnRECORDSET : function()
	{
		if(typeof window[this.divPage][this.divPosOrg].OnRECORDSET != 'undefined')
		{
			this.arrStackEvent[this.arrStackEvent.length] = 'onrecordset';
			window[this.divPage][this.divPosOrg].OnRECORDSET(this);
			this.arrStackEvent.removeByValue('onrecordset');
		}
	},
	OnSUM2 : function()
	{
		this.arrStackEvent[this.arrStackEvent.length] = 'onsum2';
		if(typeof window[this.divPage][this.divPosOrg].OnSUM2 != 'undefined')
			window[this.divPage][this.divPosOrg].OnSUM2();
		this.arrStackEvent.removeByValue('onsum2');
	},
	OnResizeLeft : function(nExpand)
	{
		this.objDivPos.style.left = this.initLeft + nExpand + 'px';
		if(this.objFirst)
		{
			this.objFirst.style.left = this.initFirstLeft + nExpand + 'px';
			this.objLast.style.left = this.initLastLeft + nExpand + 'px';
		}
	},
	OnResizeHorz : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		if(!this.scDiv) return false;
		var nExpandOrg = nExpand;
		var layoutHorz = this.layoutOpt.bHorz;
		var layoutRight = this.layoutOpt.bRight;
		var objHgap = this.layoutOpt.objHgap;
		if(objHgap && objHgap.layoutOpt.bHorz)
		{
			nExpand = nExpand/objHgap.layoutOpt.nHgap;
			objHgap.layoutOpt.bHorzing = true;
			objHgap.OnResizeHorz(nExpand);
			this.OnResizeLeft(nExpand);
		}
		if(layoutHorz != undefined && layoutHorz)
		{
			var nAdd=0;
			var objWidth = this.layoutOpt.objWidth;
			var objRight = this.layoutOpt.objRight;
			if(objWidth)
			{
				objWidth.layoutOpt.bHorzing = true;
				objWidth.OnResizeHorz(nExpandOrg);
				nAdd = Webcrea.GetWidth(objWidth.objDivPos, true) + Webcrea.GetScrollWidth(objWidth.objDivPos) - this.initDivWidth;
			}
			else if(objRight)
			{
				objRight.layoutOpt.bHorzing = true;
				objRight.OnResizeHorz(nExpandOrg);
				var nObjLeft = (objRight.objGDivPos) ? Webcrea.GetLeft(objRight.objGDivPos) : Webcrea.GetLeft(objRight.objDivPos);
				var nLeft = Webcrea.GetLeft(this.objDivPos);
				var nRightPos = nObjLeft + Webcrea.GetWidth(objRight.objDivPos, true) + Webcrea.GetScrollWidth(objRight.objDivPos);
				if(this.initLeft<nRightPos) nAdd = nRightPos - nLeft - this.initDivWidth;
			}
			else nAdd = nExpand;

			var nLineWidth = 0;
			if(this.nBorderLeft && this.nBorderRight) nLineWidth = this.nBorderLeft + this.nBorderRight;
			this.objGDivPos.style.width = this.initGDivWidth + nAdd + nLineWidth + 'px';
			this.objDivPos.style.width = this.initDivWidth + nAdd + 'px';
			if(this.bAutoSize)
			{
				var scrollerW = 0;
				var arrLi = [];
				Webcrea.FindNodeAll(this.objDivPos, 'name', 'li', arrLi);
				for(var i=0; i<arrLi.length; i++)
				{
					var liW = this.initDivWidth + nAdd;
					if(this.nDisplayCnt>0) liW = Math.floor(liW/this.nDisplayCnt);
					var li = arrLi[i];
					li.style.width = liW + 'px';
					scrollerW += liW;
					if(this.bRepeat && i>0) li.style.left = liW + 'px';
				}
				var scroll = Webcrea.FindNode(this.objDivPos, 'id', 'scroller');
				if(arrLi.length>0 && scroll) scroll.style.width = scrollerW + (arrLi.length*this.margin) + 'px';
			}
			var menuWidth = Webcrea.GetWidth(this.scDiv) - this.initDivWidth;
			if(menuWidth > nAdd && this.objFirst)
			{
				this.objFirst.style.display = 'block';
				this.objLast.style.display = 'block';
				var diff = Webcrea.GetLeft(this.objDivPos) - this.initLeft;
				if(diff<0) diff=0;;
				menuWidth = nAdd;
				this.objLast.style.left = this.initLastLeft + menuWidth + diff + 'px';
			}
			else if(this.objFirst)
			{
				this.objFirst.style.display = 'none';
				this.objLast.style.display = 'none';
			}
			this.SetAlign();
			bRet = true;
		}
		if(layoutRight != undefined && layoutRight)
		{
			var objLeft = this.layoutOpt.objLeft;
			if(objLeft)
			{
				objLeft.layoutOpt.bHorzing = true;
				objLeft.OnResizeHorz(nExpand);
				var nLeft = (objLeft.objGDivPos) ? Webcrea.GetLeft(objLeft.objGDivPos) : Webcrea.GetLeft(objLeft.objDivPos);
				var nDiff = nLeft - this.initLeft;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeLeft(nExpand);
			bRet = true;
		}
		return bRet;
	},
	OnResizeTop : function(nExpand)
	{
		this.objDivPos.style.top = this.initTop + nExpand + 'px';
		this.objFirst.style.top = this.initFirstTop + nExpand + 'px';
		this.objLast.style.top = this.initLastTop + nExpand + 'px';
	},
	OnResizeVert : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		if(!this.scDiv) return false;
		var layoutVert = this.layoutOpt.bVert;
		var layoutBottom = this.layoutOpt.bBottom;
		var objVgap = this.layoutOpt.objVgap;
		if(objVgap && objVgap.layoutOpt.bVert)
		{
			nExpand = nExpand/objVgap.layoutOpt.nVgap;
			objVgap.layoutOpt.bVerting = true;
			objVgap.OnResizeVert(nExpand);
			this.OnResizeTop(nExpand);
			if(objVgap.layoutOpt.objRelHeight) objVgap.layoutOpt.objRelHeight.OnResizeVert();
		}
		if(layoutVert != undefined && layoutVert)
		{
			if(this.objGDivPos)
			{
				if(!this.initGDivHeight) this.initGDivHeight = Webcrea.GetHeight(this.objGDivPos);
				this.objGDivPos.style.height = this.initGDivHeight + nExpand + 'px';
			}
			this.objDivPos.style.height = this.initDivHeight + nExpand + 'px';
			if(this.objPos) this.objPos.style.height = this.initDivHeight + nExpand + 'px';

			if(this.bAutoSize)
			{
				var ulH = this.initDivHeight + nExpand;
				var ulNode = Webcrea.FindNode(this.objDivPos, 'name', 'ul');
				ulNode.style.height = ulH + 'px';

				var arrLi = [];
				Webcrea.FindNodeAll(this.objDivPos, 'name', 'li', arrLi);
				for(var i=0; i<arrLi.length; i++)
				{
					var liNode = arrLi[i];
					var aNode = Webcrea.FindNode(liNode, 'name', 'a');
					if(aNode) aNode.style.lineHeight = ulH + 'px';
				}
				var titleHeight = Webcrea.GetHeight(this.objFirst);
				var titleTop = Math.floor((ulH-titleHeight)/2);
				this.objFirst.style.top = titleTop + 'px';
				this.objLast.style.top = titleTop + 'px';
				bRet = true;
			}
		}
		if(layoutBottom != undefined && layoutBottom)
		{
			var objTop = this.layoutOpt.objTop;
			if(objTop)
			{
				objTop.layoutOpt.bVerting = true;
				objTop.OnResizeVert(nExpand);
				var nTop = (objTop.objGDivPos) ? Webcrea.GetTop(objTop.objGDivPos) : Webcrea.GetTop(objTop.objDivPos);
				var nDiff = nTop - this.initTop;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeTop(nExpand);
			bRet = true;
		}
		return bRet;
	},
	ScrollEnd : function()
	{
		if(!document.querySelector('#' + this.divPage + ' #'+this.divPos+'F > a')) return;
		if(this.IsFirst())
		{
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'F > a').className = '';
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'L > a').className = 'active';
		}
		else if(this.IsLast())
		{
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'F > a').className = 'active';
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'L > a').className = '';
		}
		else
		{
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'F > a').className = 'active';
			document.querySelector('#' + this.divPage + ' #'+this.divPos+'L > a').className = 'active';
		}
	},
	MovePage : function()
	{
		var bPrev = arguments[0];
		var currPageWidth = Webcrea.GetWidth(this.objDivPos, true);
		var nRow = this.GetCurrRowIndex();
		if(nRow<0)
		{
			this.SetCurrRowIndex(0);
			nRow = 0;
		}
		var nNext = nRow;
		if(!bPrev) nNext++;
		else
		{
			nNext--;
			if(nNext<0) nNext = this.arrMenuLi.length-1;
		}
		if(this.arrMenuLi.length == nNext) nNext = 0;
		var nPerMove = 10;
		var curX = parseInt(this.arrMenuLi[nRow].style.left, nPerMove);
		var nextX = parseInt(this.arrMenuLi[nNext].style.left, nPerMove);
		if(bPrev) nPerMove*=-1;
		var newCurX = curX - nPerMove;
		var newNextX = nextX - nPerMove;
		if(bPrev)
		{
			if (newCurX >= currPageWidth)
			{
				this.arrMenuLi[nRow].style.left = -currPageWidth + 'px';
				this.arrMenuLi[nNext].style.left = 0;
				nRow--;
				if(nRow<0) nRow = this.arrMenuLi.length-1;
				this.SetCurrRowIndex(nRow);
				this.bMoving = false;
				return;
			}
			this.arrMenuLi[nRow].style.left = newCurX + 'px';
			this.arrMenuLi[nNext].style.left = newNextX + 'px';
		}
		else
		{
			if (newNextX <= 0)
			{
				this.arrMenuLi[nRow].style.left = currPageWidth + 'px';
				this.arrMenuLi[nNext].style.left = 0;
				nRow++;
				if (nRow >= this.arrMenuLi.length) nRow = 0;
				this.SetCurrRowIndex(nRow);
				this.bMoving = false;
				return;
			}
			this.arrMenuLi[nRow].style.left = newCurX + 'px';
			this.arrMenuLi[nNext].style.left = newNextX + 'px';
		}
		var func = this.objName + '.MovePage(' + bPrev + ')';
		var sec = this.animation;
		if(!sec) sec = 11;
		setTimeout(func, sec);
	},
	PrevPage : function()
	{
		if(this.bRepeat)
		{
			if(this.bMoving) return;
			this.bMoving = true;
			var currPageWidth = Webcrea.GetWidth(this.objDivPos, true);
			var nRow = this.GetCurrRowIndex();
			if(nRow<0) nRow = 0;
			var nNext = nRow-1;
			if(nNext<0) nNext = this.arrMenuLi.length-1;
			this.arrMenuLi[nNext].style.left = -currPageWidth + 'px';
			this.MovePage(true);
		}
		else
		{
			if(this.IsFirst()) return;
			this.meunScroll.scrollToPage('prev', 0);
		}
	},
	NextPage : function()
	{
		if(this.bRepeat)
		{
			if(this.bMoving) return;
			this.bMoving = true;
			var currPageWidth = Webcrea.GetWidth(this.objDivPos, true);
			var nRow = this.GetCurrRowIndex();
			if(nRow<0) nRow = 0;
			var nNext = nRow+1;
			if(this.arrMenuLi.length == nNext) nNext = 0;
			this.arrMenuLi[nNext].style.left = currPageWidth + 'px';
			this.MovePage();
		}
		else
		{
			if(this.IsLast()) return;
			this.meunScroll.scrollToPage('next', 0);
		}
	},
	IsFirst : function()
	{
		var bRet = false;
		if(this.meunScroll.currPageX == 0) bRet = true;
		this.SetCurrRowIndex(this.meunScroll.currPageX);
		return bRet;
	},
	IsLast : function()
	{
		var currPageWidth = Webcrea.GetWidth(this.objDivPos, true);
		this.divMaxPage = Math.ceil(this.menuPageWidth/currPageWidth);
		var bRet = false;
		if(this.divMaxPage == this.meunScroll.currPageX + 1) bRet = true;
		this.SetCurrRowIndex(this.meunScroll.currPageX);
		return bRet;
	},
	IsVisible : function()
	{
		var ___bRet=1;
		if(this.objGDivPos) ___bRet = this.objGDivPos.style.display == 'none'?0:1;
		else ___bRet = this.objDivPos.style.display == 'none'?0:1;
		return ___bRet;
	},
	IsWhere : function()
	{
		var ___param = {};
		___param.sql = arguments[0];
		if(Webcrea.IsEmpty(___param.sql)) return true;
		___param.rowIndex = arguments[1];
		var bVal = arguments[2];
		var aWhere = Webcrea.MakeToken(___param.sql);
		return Webcrea.IsWhereData(this, ___param.rowIndex, aWhere, null, false, bVal);
	}
});
/*Tab Object*/
var TabObject = Class.create({
	initialize : function(divPage, divPos, cellId, page, masterPage){
		this.divPage = divPage;
		this.divPos = divPos;
		this.divPosOrg = divPos;
		this.cellId = cellId;
		this.page = page;
		this.masterPage = masterPage;
		this.objDivPage = document.getElementById(this.divPage);
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);
		this.objItemGroup = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'ItemGroup');
		this.objItemRoot = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'ItemRoot');
		this.objArrawGroup = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + 'ArrawGroup');
		if(this.objItemRoot) this.objItem = Webcrea.FindNode(this.objItemRoot, 'id', this.divPos + '.' + cellId);
		if(this.objItemRoot) this.objItemLabel = Webcrea.FindNode(this.objItemRoot, 'for', this.divPos + '.' + cellId);
		if(this.objItemLabel)
		{
			this.nCurrLeft = Webcrea.GetLeft(this.objItemLabel, true);
			var nWidth = Number(Extract(this.objItemLabel.style.width, '[DIGIT]'));
			this.objItemLabel.setAttribute('orgWidth', nWidth);
		}

		/*Layout Info*/
		this.SetLayout();
		this.initDivWidth = Webcrea.GetWidth(this.objDivPos, true);
		this.initDivHeight = Webcrea.GetHeight(this.objDivPos);
		this.initLeft = Webcrea.GetLeft(this.objDivPos);
		this.initTop = Webcrea.GetTop(this.objDivPos);
		if(this.objItemRoot) this.initItemRootWidth = Webcrea.GetWidth(this.objItemRoot, true);

		this.arrMobileLayout = [];

		this.parentObj = _my_File.GetObject(this.objDivPos);
		this.parentObj.objTabItemGroup = this.objItemGroup;
		this.parentObj.objTabItemRoot = this.objItemRoot;
		this.parentObj.objTabArrawGroup = this.objArrawGroup;
		this.parentObj.AddObject(this);

		this.bInit = false;

		this.palette = '';
		this.pageObj = _my_File.GetPageObjById(this.divPage);
	},
	Init : function()
	{
		if(!this.parentObj.arrTabObj) this.parentObj.arrTabObj = [];
		this.parentObj.arrTabObj[this.parentObj.arrTabObj.length] = this;
		var bDisplay = false;
		var sDisplay = this.objArrawGroup.style.display;
		if(sDisplay == 'block') bDisplay = true;
		if(!bDisplay) this.parentObj.DisplayTabArraw();
		this.bInit = true;
	},
	IsOpen : function()
	{
		var bRet = false;
		var obj = Webcrea.FindNode(this.objDivPage, 'id', this.divPos + '.' + this.cellId);
		if(obj)	bRet = obj.checked;
		return bRet;
	},
	SetEtcDisplay : function()
	{
        var nFileVersion = Webcrea.GetCurrFileVersion();
		var bOldTab = !this.objItemRoot;
		if(!bOldTab && (this.parentObj.tabPos == 2 || this.parentObj.tabPos == 3)) return;
		var nAdd = 0;
		var nDiff = 0;
		var bTranslate = false;
		this.objItem.checked = true;
		for(var i=0; i<this.parentObj.arrTabObj.length; i++)
		{
			var obj = this.parentObj.arrTabObj[i];
			var currNode = Webcrea.FindNode(this.objDivPos, 'for', obj.divPos + '.' + obj.cellId);
			if(currNode)
			{
				if(obj.IsOpen()) currNode.setAttribute('tabchecked', '1');
				else currNode.setAttribute('tabchecked', '0');
			}
			if(!bOldTab && currNode)
			{
				var nWidthOrg = currNode.getAttribute('orgWidth');
				var nWidth = Number(Extract(currNode.style.width, '[DIGIT]'));
				if(nWidthOrg>0 && !nDiff)
				{
					nDiff = nWidth - nWidthOrg;
					if(obj.nCurrLeft<0 && nDiff>0) bTranslate = true;
				}
				if(obj.IsOpen())
				{
					if(nFileVersion>=7020180726001)
					{
						nWidth += 10;
						nAdd += 10;
					}
					else
					{
						if(nWidth>100)
						{
							nWidth += 40;
							nAdd += 40;
						}
						else if(nWidth>60)
						{
							nWidth += 10;
							nAdd += 10;
						}
					}
				}
				else nWidth = nWidthOrg;
				currNode.style.width = nWidth + 'px';
				if(nAdd>0 && !obj.IsOpen()) obj.nCurrLeft = obj.nCurrLeft + nAdd;
			}
			if(obj.page == this.masterPage) _my_File.arrPage[obj.page].SetDisplay(true);
			else if(obj.masterPage == this.page)
			{
				if(obj.IsOpen())
				{
					_my_File.arrPage[obj.page].SetDisplay(true);
					obj.SetEtcDisplay();
				}
				else _my_File.arrPage[obj.page].SetDisplay(false);
			}
		}
		if(this.objItemRoot)
		{
			this.objItemRoot.style.width = this.initItemRootWidth + nAdd + 'px';
			if(nDiff>0 && bTranslate)
			{
				this.parentObj.arrTabObj[0].nCurrLeft = this.parentObj.arrTabObj[0].nCurrLeft + nDiff;
				var nMoveLeft = this.parentObj.arrTabObj[0].nCurrLeft;
				this.objItemRoot.style.transform = 'translate(' + nMoveLeft + 'px, 0px) scale(1) translateZ(0px)';
			}
			var nArrawLeftAdjust = 2;
			var nTabArrawLeft = Webcrea.GetLeft(this.objArrawGroup);
			var nWidth = Webcrea.GetWidth(this.objItemLabel);
			var nCurrLeft = this.nCurrLeft + nWidth;
			if(this.objArrawGroup.style.display == 'block' && nCurrLeft + nArrawLeftAdjust >= nTabArrawLeft) this.parentObj.TabArrawClick(true);
		}
	},
	/*가로크기 변경, 세로크기 변경, 오른쪽 맞추기, 아래쪽 맞추기*/
	SetLayout : function(bHorzExpand, bVertExpand, bRight, bBottom)
	{
		if(bHorzExpand == undefined) bHorzExpand = false;
		if(bVertExpand == undefined) bVertExpand = false;
		if(bRight == undefined) bRight = false;
		if(bBottom == undefined) bBottom = false;
		this.layoutOpt = {
			bHorz : bHorzExpand,
			bVert : bVertExpand,
			bRight : bRight,
			bBottom : bBottom
		};
	},
	SetPalette : function(bForm, bLayout, sID, crFillIndex, crHatchIndex, bTrans, bEven, grade, crLLineIndex, crRLineIndex, crTLineIndex, crBLineIndex, crFontIndex, crFillIndex1, crHatchIndex1, grade1)
	{
		if(bTrans) return;
		this.palette = this.parentObj.palette;
		var currObj = this;
		var SetColor = function(css)
		{
			if(crFillIndex != crHatchIndex)
			{
				return;
			}
			if(crFillIndex>=0)
			{
				if(grade>0)
				{
					var sBackground = css.style.background;
					var arrToken = Webcrea.MakeToken(sBackground, '', true);
					var arrBackground = [];
					var sAdd = '';
					for(var i=0; i<arrToken.length; i++)
					{
						var s = arrToken[i];
						var sNext = '';
						if(i+1<arrToken.length) sNext = arrToken[i+1];
						if(s.iEquals('rgb') && sNext == '(')
						{
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
							for(var j=i; j<arrToken.length; j++)
							{
								var s1 = arrToken[j];
								sAdd += s1;
								if(s1 == ')') break;
							}
							i=j;
							arrBackground[arrBackground.length] = sAdd;
							sAdd = '';
						}
						else sAdd += s;
					}
					var bgFill = Webcrea.GetPaletteColor(currObj, crFillIndex);
					arrBackground[1] = bgFill;
					if(crHatchIndex>=0) 
					{
						var bgHatch = Webcrea.GetPaletteColor(currObj, crFillIndex);
						arrBackground[2] = bgHatch;
					}
					if(grade>3) arrBackground[3] = bgFill;
					var bgColor = '';
					for(var i=0; i<arrBackground.length; i++) bgColor += arrBackground[i];
					css.style.background = bgColor;
				}
				else
				{
					var bgColor = Webcrea.GetPaletteColor(currObj, crFillIndex);
					css.style.background = bgColor;
				}
			}
			if(crLLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crLLineIndex);
				css.style.borderLeftColor = lineColor;
			}
			if(crRLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crRLineIndex);
				css.style.borderRightColor = lineColor;
			}
			if(crTLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crTLineIndex);
				css.style.borderTopColor = lineColor;
			}
			if(crBLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crBLineIndex);
				css.style.borderBottomColor = lineColor;
			}
			if(crFontIndex>=0)
			{
				var fontColor = Webcrea.GetPaletteColor(currObj, crFontIndex);
				css.style.color = fontColor;
			}
		};
		if(bForm)
		{
			var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos + 'ItemRoot > label');
			if(css) SetColor(css);
			return;
		}
	},
	SetMobileLayout : function()
	{
		var params = '';
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(Webcrea.IsString(param)) param = "'" + param + "'";
			if(!Webcrea.IsEmpty(params)) params += ',';
			params += param;
		}
		var func = 'Webcrea.SetMobileLayout(' + params + ', this);';
		eval(func);
	},
	_Get_NoPrint : function()
	{
		return this.bNoPrint;
	},
	_Set_NoPrint : function()
	{
		this.bNoPrint = arguments[0];
		Webcrea.NoPrint(this, arguments[0]);
	},
	_Get_OnlyPrint : function()
	{
		return this.bOnlyPrint;
	},
	_Set_OnlyPrint : function()
	{
		this.bOnlyPrint = arguments[0];
		Webcrea.OnlyPrint(this, arguments[0]);
	},
	_Get_Visible : function() {
		var obj = Webcrea.FindNode(this.objDivPage, 'for', this.divPos + '.' + this.cellId);
		var bVisible = obj.style.display == 'none' ? false : true;
		return bVisible;
	},
	_Set_Visible : function(b) {
		var obj = Webcrea.FindNode(this.objDivPage, 'for', this.divPos + '.' + this.cellId);
		if(b) obj.style.display = 'block';
		else obj.style.display = 'none';
	},
	TabChecked : function()
	{
		var currNode = Webcrea.FindNode(this.objDivPos, 'for', this.divPos + '.' + this.cellId);
		if(currNode && currNode.getAttribute('tabchecked') == '1') return;
		this.SetEtcDisplay();
		if(this.objArrawGroup.style.display != 'block') this.parentObj.DisplayTabArraw();
	},
	OnCLICK : function() {
		_my_File.RunPage(this.page);
		if(typeof window[this.divPage][this.divPosOrg][this.cellId].OnCLICK != 'undefined') window[this.divPage][this.divPosOrg][this.cellId].OnCLICK();
	},
	OnResizeLeft : function(nExpand)
	{
		this.objDivPos.style.left = this.initLeft + nExpand + 'px';
	},
	OnResizeHorz : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		var layoutHorz = this.layoutOpt.bHorz;
		var layoutRight = this.layoutOpt.bRight;
		var objHgap = this.layoutOpt.objHgap;
		if(objHgap && objHgap.layoutOpt.bHorz)
		{
			nExpand = nExpand/objHgap.layoutOpt.nHgap;
			objHgap.layoutOpt.bHorzing = true;
			objHgap.OnResizeHorz(nExpand);
			this.OnResizeLeft(nExpand);
		}
		if(layoutHorz != undefined && layoutHorz)
		{
			this.objDivPos.style.width = this.initDivWidth + nExpand + 'px';
			bRet = true;
		}
		if(layoutRight != undefined && layoutRight)
		{
			var objLeft = this.layoutOpt.objLeft;
			if(objLeft)
			{
				objLeft.layoutOpt.bHorzing = true;
				objLeft.OnResizeHorz(nExpand);
				var nLeft = (objLeft.objGDivPos) ? Webcrea.GetLeft(objLeft.objGDivPos) : Webcrea.GetLeft(objLeft.objDivPos);
				var nDiff = nLeft - this.initLeft;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeLeft(nExpand);
			bRet = true;
		}
		return bRet;
	},
	OnResizeTop : function(nExpand)
	{
		this.objDivPos.style.top = this.initTop + nExpand + 'px';
	},
	OnResizeVert : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		var layoutVert = this.layoutOpt.bVert;
		var layoutBottom = this.layoutOpt.bBottom;
		var objVgap = this.layoutOpt.objVgap;
		if(objVgap && objVgap.layoutOpt.bVert)
		{
			nExpand = nExpand/objVgap.layoutOpt.nVgap;
			objVgap.layoutOpt.bVerting = true;
			objVgap.OnResizeVert(nExpand);
			this.OnResizeTop(nExpand);
			if(objVgap.layoutOpt.objRelHeight) objVgap.layoutOpt.objRelHeight.OnResizeVert();
		}
		if(layoutVert != undefined && layoutVert)
		{
			this.objDivPos.style.height = this.initDivHeight + nExpand + 'px';
			bRet = true;
		}
		if(layoutBottom != undefined && layoutBottom)
		{
			var objTop = this.layoutOpt.objTop;
			if(objTop)
			{
				objTop.layoutOpt.bVerting = true;
				objTop.OnResizeVert(nExpand);
				var nTop = (objTop.objGDivPos) ? Webcrea.GetTop(objTop.objGDivPos) : Webcrea.GetTop(objTop.objDivPos);
				var nDiff = nTop - this.initTop;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeTop(nExpand);
			bRet = true;
		}
		return bRet;
	}
});
/*Draw Object*/
var DrawObject = Class.create({
	initialize : function(divPage, divPos, objType){
		this.divPage = divPage;
		this.divPos = divPos;
		this.divPosOrg = divPos;
		this.objDivPage = document.getElementById(this.divPage);
		this.objDivPos = Webcrea.FindNode(this.objDivPage, 'id', this.divPos);
		if(!this.objDivPos) this.objDivPos = Webcrea.FindNode(document.body, 'id', this.divPos);

		this.SetLayout();
		this.initDivWidth = Webcrea.GetWidth(this.objDivPos, true);
		this.initDivHeight = Webcrea.GetHeight(this.objDivPos);
		this.initLeft = Webcrea.GetLeft(this.objDivPos);
		this.initTop = Webcrea.GetTop(this.objDivPos);

		this.arrMobileLayout = [];

		this.bInit = false;

		this.palette = '';

		this.objType = objType;/*0(canvas), 1(div), 2(div Ellipse)*/
		this.objPos = Webcrea.FindNode(this.objDivPos, 'name', 'CANVAS', true);
		if(!this.objPos) this.objPos = this.objDivPos;
		if(!this.objType) this.context = this.objPos.getContext('2d');

		var parentObj = _my_File.GetPageObjById(this.divPage);
		parentObj.AddObject(this);
		this.pageObj = parentObj;
		this.bInitDisplay = true;
		if(this.objType && this.objDivPos && this.objDivPos.getAttribute('initDisplay') == 'none') this.bInitDisplay = false;
		else if(this.objPos && this.objPos.getAttribute('initDisplay') == 'none') this.bInitDisplay = false;
	},
	CopyInfo : function()
	{
		let orgObj = arguments[0];
	},
	Init : function()
	{
		if(!this.bInitDisplay) this.Hide();
		this.bInit = true;
	},
	/*가로크기 변경, 세로크기 변경, 오른쪽 맞추기, 아래쪽 맞추기*/
	SetLayout : function(bHorzExpand, bVertExpand, bRight, bBottom)
	{
		if(bHorzExpand == undefined) bHorzExpand = false;
		if(bVertExpand == undefined) bVertExpand = false;
		if(bRight == undefined) bRight = false;
		if(bBottom == undefined) bBottom = false;
		this.layoutOpt = {
			bHorz : bHorzExpand,
			bVert : bVertExpand,
			bRight : bRight,
			bBottom : bBottom
		};
	},
	SetPalette : function(bForm, bLayout, sID, crFillIndex, crHatchIndex, bTrans, bEven, grade, crLLineIndex, crRLineIndex, crTLineIndex, crBLineIndex, crFontIndex)
	{
		if(bTrans) return;
		var currObj = this;
		var SetColor = function(css)
		{
			if(crLLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crLLineIndex);
				css.style.borderLeftColor = lineColor;
			}
			if(crRLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crRLineIndex);
				css.style.borderRightColor = lineColor;
			}
			if(crTLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crTLineIndex);
				css.style.borderTopColor = lineColor;
			}
			if(crBLineIndex>=0)
			{
				var lineColor = Webcrea.GetPaletteColor(currObj, crBLineIndex);
				css.style.borderBottomColor = lineColor;
			}
		};
		if(this.objType)
		{
			var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos);
			SetColor(css);
		}
		if(crLLineIndex>=0)
		{
			var lineColor = Webcrea.GetPaletteColor(this, crLLineIndex);
			this.drawInfo.lineColor = lineColor;
		}
	},
	SetMobileLayout : function()
	{
		var params = '';
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(Webcrea.IsString(param)) param = "'" + param + "'";
			if(!Webcrea.IsEmpty(params)) params += ',';
			params += param;
		}
		var func = 'Webcrea.SetMobileLayout(' + params + ', this);';
		eval(func);
	},
	SetOpt : function(rect, color, lineColor, lineWidth, bClose, nBegArrow, nEndArrow) {
		if(rect == undefined) rect = '';
		if(color == undefined) color = '';
		if(lineColor == undefined) lineColor = '';
		if(lineWidth == undefined) lineWidth = 0;
		if(bClose == undefined) bClose = 0;
		if(nBegArrow == undefined) nBegArrow = 0;
		if(nEndArrow == undefined) nEndArrow = 0;
		this.drawInfo = {
			rect : rect,
			color : color,
			lineColor : lineColor,
			lineWidth : lineWidth,
			bClose : bClose,
			nBegArrow : nBegArrow,
			nEndArrow : nEndArrow
		};
	},
	OnDraw : function() {
		if(this.objType)
		{
			var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos);
			if(css)
			{
				css.style.backgroundColor = this.drawInfo.color;
				css.style.border = this.drawInfo.lineWidth + 'px solid';
				css.style.borderColor = this.drawInfo.lineColor;
				if(this.objType == 2) css.style.borderRadius = '100%';
				else css.style.borderRadius = this.drawInfo.rect;
			}
		}
		else
		{
			var currObj = this;
			var draw = function(x1, y1, x2, y2, nBegArrow, nEndArrow)
			{
				if(currObj.drawInfo.bClose)
				{
					currObj.context.lineTo(x2,y2);
				}
				var xPos1=x1, yPos1=y1;
				var xPos2=x2, yPos2=y2;
				var size = 0, ang = 0;
				if(nBegArrow || nEndArrow)
				{
					var nAdd = currObj.drawInfo.lineWidth;
					if(!nAdd) nAdd = 0;
					size = 6 + nAdd*2;
					ang = 2 + nAdd*2;
					var radians = Math.atan((y2-y1)/(x2-x1));
					var headRadians = radians + ((x2>x1)?-90:90)*Math.PI/180;
					var endRadians = radians + ((x2>x1)?90:-90)*Math.PI/180;

					if(nBegArrow);
					{
						currObj.context.save();
						currObj.context.beginPath();
						currObj.context.translate(x1,y1);
						if(nBegArrow!=6 && nBegArrow!=7) currObj.context.rotate(headRadians);
						currObj.context.moveTo(0,0);
						if(nBegArrow==1)
						{
							currObj.context.lineTo(ang,size);
							currObj.context.moveTo(0,0);
							currObj.context.lineTo(-ang,size);
						}
						else if(nBegArrow==2 || nBegArrow==3)
						{
							currObj.context.lineTo(ang,size);
							currObj.context.lineTo(-ang,size);
						}
						else if(nBegArrow==4 || nBegArrow==5)
						{
							size=8;
							currObj.context.lineTo(-size/2,0);
							currObj.context.lineTo(size/2,0);
							currObj.context.lineTo(size/2,-size);
							currObj.context.lineTo(-size/2,-size);
							currObj.context.lineTo(-size/2,0);
						}
						else if(nBegArrow==6 || nBegArrow==7) currObj.context.arc(0,0,4,0,2*Math.PI,false);
						if(nBegArrow!=1)
						{
							currObj.context.closePath();
							if(nBegArrow==3 || nBegArrow==5 || nBegArrow==7)
							{
								currObj.context.fillStyle = currObj.drawInfo.lineColor;
								currObj.context.fill();
							}
						}
						currObj.context.restore();
						currObj.context.globalAlpha = 1.0;
						if(nBegArrow==1) currObj.context.lineWidth = currObj.drawInfo.lineWidth;
						else currObj.context.lineWidth = 1;
						currObj.context.strokeStyle = currObj.drawInfo.lineColor;
						currObj.context.stroke();
					}
					if(nEndArrow)
					{
						currObj.context.save();
						currObj.context.beginPath();
						currObj.context.translate(x2,y2);
						if(nEndArrow!=6 && nEndArrow!=7) currObj.context.rotate(endRadians);
						currObj.context.moveTo(0,0);
						if(nEndArrow==1)
						{
							currObj.context.lineTo(-ang,size);
							currObj.context.moveTo(0,0);
							currObj.context.lineTo(ang,size);
						}
						else if(nEndArrow==2 || nEndArrow==3)
						{
							currObj.context.lineTo(-ang,size);
							currObj.context.lineTo(ang,size);
						}
						else if(nEndArrow==4 || nEndArrow==5)
						{
							size=8;
							currObj.context.lineTo(-size/2,0);
							currObj.context.lineTo(size/2,0);
							currObj.context.lineTo(size/2,-size);
							currObj.context.lineTo(-size/2,-size);
							currObj.context.lineTo(-size/2,0);
						}
						else if(nEndArrow==6 || nEndArrow==7) currObj.context.arc(0,0,4,360,0,true);
						if(nEndArrow!=1)
						{
							currObj.context.closePath();
							if(nEndArrow==3 || nEndArrow==5 || nEndArrow==7)
							{
								currObj.context.fillStyle = currObj.drawInfo.lineColor;
								currObj.context.fill();
							}
						}
						currObj.context.restore();
						currObj.context.globalAlpha = 1.0;
						if(nEndArrow==1) currObj.context.lineWidth = currObj.drawInfo.lineWidth;
						else currObj.context.lineWidth = 1;
						currObj.context.strokeStyle = currObj.drawInfo.lineColor;
						currObj.context.stroke();
					}
				}
				if(!currObj.drawInfo.bClose)
				{
					currObj.context.beginPath();
					currObj.context.moveTo(xPos2,yPos2);
					currObj.context.lineTo(xPos1,yPos1);
					currObj.context.globalAlpha = 1.0;
					currObj.context.lineWidth = currObj.drawInfo.lineWidth;
					currObj.context.strokeStyle = currObj.drawInfo.lineColor;
					currObj.context.stroke();
				}
			};
			var rect = this.drawInfo.rect;
			if(rect == undefined || Webcrea.IsEmpty(rect)) return;
			var arrRect = rect.split(' ');
			var x1=0, y1=0;
			for(var i=0; i<arrRect.length; i++)
			{
				var bBegArrow = false;
				var bEndArrow = false;
				var rgn = arrRect[i];
				var arr = rgn.split(',');
				if(arr.length != 2) return;
				var x=Number(arr[0]);
				var y=Number(arr[1]);
				if(i==0)
				{
					x1 = x, y1 = y;
					this.context.save();
					if(this.drawInfo.bClose) this.context.beginPath();
					this.context.moveTo(x1,y1);
					this.context.save();
				}
				else
				{
					if(i==arrRect.length-1) bEndArrow = true;
					if(i==1) bBegArrow = true;
					draw(x1, y1, x, y, bBegArrow?this.drawInfo.nBegArrow:0, bEndArrow?this.drawInfo.nEndArrow:0);
					x1 = x, y1 = y;
				}
			}
			this.context.globalAlpha = 1.0;
			this.context.lineWidth = this.drawInfo.lineWidth;
			this.context.fillStyle = this.drawInfo.color;
			this.context.strokeStyle = this.drawInfo.lineColor;
			if(this.drawInfo.bClose) this.context.closePath();
			if(!Webcrea.IsEmpty(this.drawInfo.color)) this.context.fill();
			if(this.drawInfo.lineWidth > 0) this.context.stroke();
		}
	},
	_Get_NoPrint : function()
	{
		return this.bNoPrint;
	},
	_Set_NoPrint : function()
	{
		this.bNoPrint = arguments[0];
		Webcrea.NoPrint(this, arguments[0]);
	},
	_Get_OnlyPrint : function()
	{
		return this.bOnlyPrint;
	},
	_Set_OnlyPrint : function()
	{
		this.bOnlyPrint = arguments[0];
		Webcrea.OnlyPrint(this, arguments[0]);
	},
	_Get_Width : function() {
		return Webcrea.GetWidth(this.objDivPos);
	},
	_Set_Width : function(width) {
		this.objDivPos.style.width = width + 'px';
	},
	_Get_Height : function() {
		return Webcrea.GetHeight(this.objDivPos);
	},
	_Set_Height : function(height) {
		this.objDivPos.style.height = height + 'px';
	},
	_Get_Left : function() {
		return Webcrea.GetLeft(this.objDivPos, true);
	},
	_Set_Left : function(pos) {
		var org = Webcrea.GetLeft(this.objDivPos);
		var diff = pos-org;
		if(this.objPos) this.objPos.style.left = Webcrea.GetLeft(this.objPos) + diff + 'px';
		this.objDivPos.style.left = pos + 'px';
	},
	_Get_Top : function() {
		return Webcrea.GetTop(this.objDivPos);
	},
	_Set_Top : function(pos) {
		var org = Webcrea.GetTop(this.objDivPos);
		var diff = pos-org;
		if(this.objPos) this.objPos.style.top = Webcrea.GetTop(this.objPos) + diff + 'px';
		this.objDivPos.style.top = pos + 'px';
	},
	_Get_Visible : function() {
		var bVisible=true;
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(obj.style.display=='')
		{
			var css = Webcrea.GetCSS('#'+this.divPage + ' #'+this.divPos);
			bVisible = css.style.display == 'none' ? false : true;
		}
		else bVisible = obj.style.display == 'none' ? false : true;
		return bVisible;
	},
	_Set_Visible : function(b) {
		var obj = this.objGDivPos?this.objGDivPos:this.objDivPos;
		if(b) obj.style.display = 'block';
		else obj.style.display = 'none';
	},
	IsCanvasDraw : function()
	{
		if(this.objType == 0) return true;
		return false;
	},
	IsDivDraw : function()
	{
		if(this.objType == 1) return true;
		return false;
	},
	IsEllipseDraw : function()
	{
		if(this.objType == 2) return true;
		return false;
	},
	IsVisible : function()
	{
		var ___bRet=1;
		if(this.objGDivPos) ___bRet = this.objGDivPos.style.display == 'none'?0:1;
		else ___bRet = this.objDivPos.style.display == 'none'?0:1;
		return ___bRet;
	},
	Hide : function() {
		if(this.objDivPos.style.display == 'none') return;
		(this.objGDivPos)?this.objGDivPos.style.display = 'none':this.objDivPos.style.display = 'none';
	},
	Show : function() {
		(this.objGDivPos)?this.objGDivPos.style.display = 'block':this.objDivPos.style.display = 'block';
	},
	OnResizeLeft : function(nExpand)
	{
		this.objDivPos.style.left = this.initLeft + nExpand + 'px';
		if(this.objPos) this.objPos.style.left = this.initLeft + nExpand + 'px';
	},
	OnResizeHorz : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		var nExpandOrg = nExpand;
		var layoutHorz = this.layoutOpt.bHorz;
		var layoutRight = this.layoutOpt.bRight;
		var objHgap = this.layoutOpt.objHgap;
		if(objHgap && objHgap.layoutOpt.bHorz)
		{
			nExpand = nExpand/objHgap.layoutOpt.nHgap;
			objHgap.layoutOpt.bHorzing = true;
			objHgap.OnResizeHorz(nExpand);
			this.OnResizeLeft(nExpand);
		}
		if(layoutHorz != undefined && layoutHorz)
		{
			var nAdd=0;
			var objWidth = this.layoutOpt.objWidth;
			var objRight = this.layoutOpt.objRight;
			if(objWidth)
			{
				objWidth.layoutOpt.bHorzing = true;
				objWidth.OnResizeHorz(nExpandOrg);
				nAdd = Webcrea.GetWidth(objWidth.objDivPos, true) + Webcrea.GetScrollWidth(objWidth.objDivPos) - this.initDivWidth;
			}
			else if(objRight)
			{
				objRight.layoutOpt.bHorzing = true;
				objRight.OnResizeHorz(nExpandOrg);
				var nObjLeft = (objRight.objGDivPos) ? Webcrea.GetLeft(objRight.objGDivPos) : Webcrea.GetLeft(objRight.objDivPos);
				var nLeft = Webcrea.GetLeft(this.objDivPos);
				var nRightPos = nObjLeft + Webcrea.GetWidth(objRight.objDivPos, true) + Webcrea.GetScrollWidth(objRight.objDivPos);
				if(this.initLeft<nRightPos) nAdd = nRightPos - nLeft - this.initDivWidth;
			}
			else nAdd = nExpand;

			this.objDivPos.style.width = this.initDivWidth + nAdd + 'px';
			if(this.objPos) this.objPos.style.width = this.initDivWidth + nAdd + 'px';
			bRet = true;
		}
		if(layoutRight != undefined && layoutRight)
		{
			var objLeft = this.layoutOpt.objLeft;
			if(objLeft)
			{
				objLeft.layoutOpt.bHorzing = true;
				objLeft.OnResizeHorz(nExpand);
				var nLeft = (objLeft.objGDivPos) ? Webcrea.GetLeft(objLeft.objGDivPos) : Webcrea.GetLeft(objLeft.objDivPos);
				var nDiff = nLeft - this.initLeft;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeLeft(nExpand);
			bRet = true;
		}
		return bRet;
	},
	OnResizeTop : function(nExpand)
	{
		this.objDivPos.style.top = this.initTop + nExpand + 'px';
		if(this.objPos) this.objPos.style.top = this.initTop + nExpand + 'px';
	},
	OnResizeVert : function(nExpand)
	{
		var bRet = false;
		if(this.layoutOpt == undefined) return false;
		var nExpandOrg = nExpand;
		var layoutVert = this.layoutOpt.bVert;
		var layoutBottom = this.layoutOpt.bBottom;
		var objVgap = this.layoutOpt.objVgap;
		if(objVgap && objVgap.layoutOpt.bVert)
		{
			nExpand = nExpand/objVgap.layoutOpt.nVgap;
			objVgap.layoutOpt.bVerting = true;
			objVgap.OnResizeVert(nExpand);
			this.OnResizeTop(nExpand);
			if(objVgap.layoutOpt.objRelHeight) objVgap.layoutOpt.objRelHeight.OnResizeVert();
		}
		if(layoutVert != undefined && layoutVert)
		{
			var nAdd=0;
			var objHeight = this.layoutOpt.objHeight;
			var objBottom = this.layoutOpt.objBottom;
			if(objHeight)
			{
				objHeight.layoutOpt.bVerting = true;
				objHeight.OnResizeVert(nExpandOrg);
				nAdd = Webcrea.GetHeight(objHeight.objDivPos, true) - this.initDivHeight;
			}
			else if(objBottom)
			{
				objBottom.layoutOpt.bVerting = true;
				objBottom.OnResizeVert(nExpandOrg);
				var nObjTop = (objBottom.objGDivPos) ? Webcrea.GetTop(objBottom.objGDivPos) : Webcrea.GetTop(objBottom.objDivPos);
				var nTop = Webcrea.GetTop(this.objDivPos);
				var nBottomPos = nObjTop + Webcrea.GetHeight(objBottom.objDivPos, true);
				if(this.initTop<nBottomPos) nAdd = nBottomPos - nTop - this.initDivHeight;
			}
			else nAdd = nExpand;

			this.objDivPos.style.height = this.initDivHeight + nAdd + 'px';
			if(this.objPos) this.objPos.style.height = this.initDivHeight + nAdd + 'px';
			bRet = true;
		}
		if(layoutBottom != undefined && layoutBottom)
		{
			var objTop = this.layoutOpt.objTop;
			if(objTop)
			{
				objTop.layoutOpt.bVerting = true;
				objTop.OnResizeVert(nExpand);
				var nTop = (objTop.objGDivPos) ? Webcrea.GetTop(objTop.objGDivPos) : Webcrea.GetTop(objTop.objDivPos);
				var nDiff = nTop - this.initTop;
				if(nDiff>0) nExpand = nDiff;
			}
			this.OnResizeTop(nExpand);
			bRet = true;
		}
		return bRet;
	}
});
var FileObject=Class.create({initialize:function(objType){Webcrea.OnSendParam('sessionParam');this.objType=objType;this.FileVersion='';this.nFileVersion=-1;this.CreateDate='';this.arrMasterPage=new Array();this.arrPage=new Array();this.ifrmObj=null;this.objWindow=Webcrea.FindNode(document.body,'id','WindowDiv');this.initWindowWidth=Webcrea.GetWidth(this.objWindow,true);this.initWindowHeight=Webcrea.GetHeight(this.objWindow);this.objMain=Webcrea.FindNode(document.body,'id','MainDiv');this.initWidth=Webcrea.GetWidth(this.objMain,true);this.initHeight=Webcrea.GetHeight(this.objMain);this.bResize=true;this.bAdjustMainDiv=false;this.bMultiLayout=false;this.baseInfo={screenWidth:screenWidth=0,screenHeight:screenHeight=0};this.marginTop=0,this.marginLeft=0;var divCSS=Webcrea.GetCSS('#MainDiv');if(divCSS){var marginTop=divCSS.style.marginTop;var marginLeft=divCSS.style.marginLeft;this.marginTop=Number(marginLeft.replace('px',''));this.marginLeft=Number(marginTop.replace('px',''));}this.CreateProgress();this.CreateBackDiv();Webcrea.MainEVENT('click');},CreateProgress:function(){var divProgress=document.createElement('div');divProgress.setAttribute('id','_my_progress');divProgress.setAttribute('class','_my_progress');divProgress.setAttribute('style','position:absolute;display:none;left:0px;top:0px;height:45px;z-index:10001;');var progress=document.createElement('progress');progress.setAttribute('id','_my_progress_bar');progress.setAttribute('value','0');progress.setAttribute('max','100');progress.setAttribute('style','position:absolute;top:30%;width:90%;');divProgress.appendChild(progress);var spanPC=document.createElement('span');spanPC.setAttribute('id','_my_progress_pc');spanPC.setAttribute('style','position:absolute;top:35%;left:45%;font-size:.8em;color:#000;');spanPC.textContent='0%';divProgress.appendChild(spanPC);this.objWindow.appendChild(divProgress);},CreateBackDiv:function(){var backDiv=document.createElement('div');backDiv.setAttribute('id','_my_BackDiv');var style='position:absolute;display:none;left:0px;top:0px;width:100%;height:100%;background-color:#000000;opacity:0.1;z-index:10000;';backDiv.setAttribute('style',style);this.objWindow.appendChild(backDiv);},AddPage:function(page,bMaster){if(bMaster)this.arrMasterPage[this.arrMasterPage.length]=page;else this.arrPage[this.arrPage.length]=page;if(this.arrPage.length>this.arrMasterPage.length)_my_maxPage=this.arrPage.length;else _my_maxPage=this.arrMasterPage.length;if(this.arrPage.length>1&&WebcreaInfo.ResizeWindow){var mainDiv=Webcrea.FindNodePublic(document.body,'id','MainDiv');mainDiv.style.overflow='hidden';this.bAdjustMainDiv=true;}},GetObject:function(node){var currObj=null;var pageDiv=Webcrea.FindParentDiv(node,1);if(pageDiv){var objPage=this.GetPageObjById(pageDiv.id);if(objPage)currObj=objPage.GetObject(node.id);}return currObj;},GetPageObjById:function(id){for(var i=0;i<this.arrMasterPage.length;i++){var page=this.arrMasterPage[i];if(page.divPage==id)return page;}for(var i=0;i<this.arrPage.length;i++){var page=this.arrPage[i];if(page.divPage==id)return page;}},GetMasterPageObj:function(nPage){if(nPage==undefined||nPage<0)nPage=_my_currPage;return this.arrMasterPage[nPage];},GetPageObj:function(nPage){if(nPage==undefined||nPage<0)nPage=_my_currPage;return this.arrPage[nPage];},GetNextTabObject:function(tabIndex,currObj){var retObj=null;var currPageObj=currObj.pageObj;var nCurrPage=currObj.nPage;if(currPageObj)findObj=currPageObj.GetNextTabObject(tabIndex,currObj);if(!findObj.obj){var addFindObj=null;var addFindPageObj=null;var bCurrMaster=false;var FindSubObject=function(nStart,fileObj){var findSubObj;for(var i=nStart;i<fileObj.arrPage.length;i++){var subPage=fileObj.arrPage[i];if(!subPage.GetDisplay())continue;var subFindObj=subPage.GetNextTabObject(tabIndex,currObj);if(subFindObj.obj){findSubObj=subFindObj;break;}}return findSubObj;};if(this.arrMasterPage.length>0){addFindPageObj=this.arrMasterPage[0];if(currPageObj==addFindPageObj)bCurrMaster=true;}if(!bCurrMaster&&nCurrPage==0&&_my_currPage>0){addFindPageObj=this.arrPage[_my_currPage];addFindObj=addFindPageObj.GetNextTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}if(!retObj){if(bCurrMaster){if(_my_currPage>0){addFindPageObj=this.arrPage[0];addFindObj=addFindPageObj.GetNextTabObject(tabIndex,currObj);}if(addFindObj&&addFindObj.obj)retObj=addFindObj.obj;else {addFindPageObj=this.arrPage[_my_currPage];addFindObj=addFindPageObj.GetNextTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}}else {if(nCurrPage+1<this.arrPage.length){addFindObj=FindSubObject(nCurrPage+1,this);if(addFindObj){if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}}if(!retObj){if(this.arrMasterPage.length>0){addFindPageObj=this.arrMasterPage[0];addFindObj=addFindPageObj.GetNextTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}if(!retObj){addFindPageObj=this.arrPage[0];if(currPageObj!=addFindPageObj){addFindObj=addFindPageObj.GetNextTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}}}}}if(!retObj)retObj=findObj.defaultObj;}else retObj=findObj.obj;return retObj;},GetPrevTabObject:function(tabIndex,currObj){var retObj=null;var currPageObj=currObj.pageObj;var nCurrPage=currObj.nPage;if(currPageObj)findObj=currPageObj.GetPrevTabObject(tabIndex,currObj);if(!findObj.obj){var addFindObj=null;var addFindPageObj=null;var bCurrMaster=false;var FindSubObject=function(nStart,fileObj){var findSubObj;for(var i=nStart;i>0;i--){var subPage=fileObj.arrPage[i];if(!subPage.GetDisplay())continue;var subFindObj=subPage.GetPrevTabObject(tabIndex,currObj);if(subFindObj.obj){findSubObj=subFindObj;break;}}return findSubObj;};if(this.arrMasterPage.length>0){addFindPageObj=this.arrMasterPage[0];if(currPageObj==addFindPageObj)bCurrMaster=true;}if(!bCurrMaster&&nCurrPage==0&&_my_currPage>0){if(this.arrMasterPage.length>0)addFindPageObj=this.arrMasterPage[0];else addFindPageObj=this.arrPage[_my_currPage];addFindObj=addFindPageObj.GetPrevTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}if(!retObj){if(bCurrMaster){addFindPageObj=this.arrPage[_my_currPage];addFindObj=addFindPageObj.GetPrevTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}else {if(nCurrPage-1>0){addFindObj=FindSubObject(nCurrPage-1,this);if(addFindObj){if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}}if(!retObj){if(_my_currPage>0){addFindPageObj=this.arrPage[0];addFindObj=addFindPageObj.GetPrevTabObject(tabIndex,currObj);}if(addFindObj&&addFindObj.obj)retObj=addFindObj.obj;else {if(this.arrMasterPage.length>0){addFindPageObj=this.arrMasterPage[0];addFindObj=addFindPageObj.GetPrevTabObject(tabIndex,currObj);if(addFindObj.obj)retObj=addFindObj.obj;else retObj=addFindObj.defaultObj;}}}}}if(!retObj)retObj=findObj.defaultObj;}else retObj=findObj.obj;return retObj;},IsBottomPane:function(){if(this.objType==1)return true;return false;},IsRightPane:function(){if(this.objType==2)return true;return false;},IsLeftPane:function(){if(this.objType==3)return true;return false;},IsTopPane:function(){if(this.objType==4)return true;return false;},IsMainPane:function(){if(this.objType==5)return true;return false;},IsPaneFile:function(){if(this.objType==1||this.objType==2||this.objType==3||this.objType==4||this.objType==5)return true;return false;},IsLoginFile:function(){if(this.objType==7)return true;return false;},IsStartFile:function(){if(this.objType==6)return true;return false;},DisplayCodeButton:function(bOrgLayout){for(var i=0;i<this.arrMasterPage.length;i++){this.arrMasterPage[i].DisplayCodeButton(bOrgLayout);}for(var i=0;i<this.arrPage.length;i++){this.arrPage[i].DisplayCodeButton(bOrgLayout);}},PanelAutoHide:function(obj){if(obj!=undefined)obj.Hide();else {for(var i=0;i<this.arrMasterPage.length;i++){this.arrMasterPage[i].PanelAutoHide();}for(var i=0;i<this.arrPage.length;i++){this.arrPage[i].PanelAutoHide();}}},RunPage:function(nPage){var bDisplay=false;if(nPage>=this.arrMasterPage.length&&nPage>=this.arrPage.length){Webcrea.Trace(nPage+'page not exist');return;}if(nPage&&_my_currPage==nPage)return;_my_currPage=nPage;for(var i=1;i<this.arrMasterPage.length;i++){if(i==nPage)bDisplay=true;else bDisplay=false;this.arrMasterPage[i].SetDisplay(bDisplay);}for(var i=1;i<this.arrPage.length;i++){if(i==nPage)bDisplay=true;else bDisplay=false;this.arrPage[i].SetDisplay(bDisplay);}Webcrea.TabChecked(nPage);if(this.arrPage[nPage]){this.arrPage[nPage].OnAdjustMainDiv();this.OnResizeHorz(nPage);this.OnResizeVert(nPage);}},MdiWindowScroll:function(){try{if(!window.parent||(window.parent&&!window.parent.Webcrea.IsMDI()))return;var nMdiWindowScroll=WebcreaInfo.nMdiWindowScroll;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())nMdiWindowScroll=window.parent.WebcreaInfo.nMdiWindowScroll;if(!nMdiWindowScroll)return;if(nMdiWindowScroll==1||nMdiWindowScroll==2){var ifrm=window.frameElement;if(ifrm){var name=ifrm.getAttribute('name');if(name=='WorkFrame'){var nHeight=this.objMain.scrollHeight;if(nHeight<100)nHeight=100;var nWidth=this.objMain.scrollWidth;var nIfrmWidth=ifrm.scrollWidth;if(nIfrmWidth<nWidth)nHeight+=20;var initTabHeight=0;if(window.parent._my_FileMDI.topInfo.bShow)initTabHeight=window.parent._my_FileMDI.initTabHeight;var nContainerHeight=nHeight+initTabHeight;var nMdiTabmargin=window.parent._my_FileMDI.nMdiTabControlMargin*2;if(!Webcrea.IsNumber(nMdiTabmargin))nMdiTabmargin=0;nContainerHeight+=nMdiTabmargin;if(window.parent._my_FileMDI.LeftPane){var nPaneHeight=window.parent._my_FileMDI.GetPaneHeight('LeftFrame');if(nContainerHeight<nPaneHeight){nContainerHeight=nPaneHeight;nHeight=nContainerHeight-initTabHeight;}}if(window.parent._my_FileMDI.RightPane){var nPaneHeight=window.parent._my_FileMDI.GetPaneHeight('RightFrame');if(nContainerHeight<nPaneHeight){nContainerHeight=nPaneHeight;nHeight=nContainerHeight-initTabHeight;}}ifrm.style.height=nHeight+'px';window.parent._my_FileMDI.WorkPaneContainer.style.height=nContainerHeight+'px';window.parent._my_FileMDI.BottomPane.position='releative';}}}}catch(e){}},OnBUTTON:function(){for(var ___i=0;___i<this.arrMasterPage.length;___i++)this.arrMasterPage[___i].OnBUTTON();for(var ___i=0;___i<this.arrPage.length;___i++)this.arrPage[___i].OnBUTTON();},OnResize:function(){if(!this.bResize)return;if(!document.documentElement)return;var nMdiWindowScroll=0;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())nMdiWindowScroll=window.parent.WebcreaInfo.nMdiWindowScroll;if(Win.nCenter&&!Webcrea.IsMobileScreen()){this.OnResizeEtc();this.MdiWindowScroll();return;}if(!nMdiWindowScroll){this.OnResizeHorz();this.OnResizeVert();}this.MdiWindowScroll();if(this.bMultiLayout){if(this.baseInfo.screenWidth>0&&this.baseInfo.screenHeight){let baseWidth=this.baseInfo.screenWidth;if(Webcrea.IsDeviceWidthMode()&&Webcrea.IsMobile()&&_my_File)baseWidth=Webcrea.GetWidth(_my_File.objWindow,true);for(var i=0;i<this.arrMasterPage.length;i++){this.arrMasterPage[i].objDivPage.style.height=this.baseInfo.screenHeight+'px';this.arrMasterPage[i].objDivPage.style.width=baseWidth+'px';this.arrMasterPage[i].objDivPage.style.top='0px';this.arrMasterPage[i].objDivPage.style.left='0px';}for(var i=0;i<this.arrPage.length;i++){this.arrPage[i].objDivPage.style.height=this.baseInfo.screenHeight+'px';this.arrPage[i].objDivPage.style.width=baseWidth+'px';this.arrPage[i].objDivPage.style.top='0px';this.arrPage[i].objDivPage.style.left='0px';}this.objMain.style.height=this.baseInfo.screenHeight+'px';this.objMain.style.width=baseWidth+'px';this.objWindow.style.height=this.baseInfo.screenHeight+'px';this.objWindow.style.width=baseWidth+'px';}else {for(var i=0;i<this.arrMasterPage.length;i++){this.arrMasterPage[i].objDivPage.style.height=null;this.arrMasterPage[i].objDivPage.style.width=null;this.arrMasterPage[i].objDivPage.style.top=this.initTop+'px';this.arrMasterPage[i].objDivPage.style.left=this.initLeft+'px';}for(var i=0;i<this.arrPage.length;i++){this.arrPage[i].objDivPage.style.height=null;this.arrPage[i].objDivPage.style.width=null;this.arrPage[i].objDivPage.style.top=this.initTop+'px';this.arrPage[i].objDivPage.style.left=this.initLeft+'px';}this.objMain.style.height=null;this.objMain.style.width=null;this.objWindow.style.height=null;this.objWindow.style.width=null;}}},OnResizeEtc:function(){for(var i=0;i<this.arrMasterPage.length;i++){this.arrMasterPage[i].OnResizeEtc();}for(var i=0;i<this.arrPage.length;i++){this.arrPage[i].OnResizeEtc();}},OnResizeHorz:function(){var bAll=false;var nPage=arguments[0];if(Webcrea.IsNull(nPage))bAll=true;var bRetHorz=false;var winWidth=Webcrea.GetWidth(document.documentElement,true);if(window.event&&window.event.type=='resize'&&(Webcrea.IsIPhone()||Webcrea.IsPad())&&Webcrea.initDocWidth&&Webcrea.initDocWidth==winWidth&&!Win.bOrientationChg)return;var bWinVScroll=Webcrea.IsVScroll(document.documentElement);if(bWinVScroll){let nScrlHeight=document.documentElement.scrollHeight-document.documentElement.clientHeight;if(nScrlHeight>17)nScrlHeight=17;winWidth-=nScrlHeight;}var nMarginLeft=this.marginLeft*2;if(nMarginLeft<0)nMarginLeft=0;var nExpand=winWidth-this.initWidth-nMarginLeft;if(nExpand<0)nExpand=0;if(this.absolute&&Webcrea.IsNull(this.nPageLeftAdjust)){this.nPageLeftAdjust=0;for(var i=1;i<this.arrPage.length;i++){let nPageLeft=this.arrPage[0].initLeft-this.arrPage[i].initLeft;if(nPageLeft>this.nPageLeftAdjust)this.nPageLeftAdjust=nPageLeft;}}if(!this.nPageLeftAdjust)this.nPageLeftAdjust=0;let nExpandPage=nExpand+this.nPageLeftAdjust;if(bAll){for(var i=0;i<this.arrMasterPage.length;i++){var b=this.arrMasterPage[i].OnResizeHorz(nExpandPage);if(b)bRetHorz=b;}for(var i=0;i<this.arrPage.length;i++){var b=this.arrPage[i].OnResizeHorz(nExpandPage);if(b)bRetHorz=b;}}else {var b=this.arrPage[nPage].OnResizeHorz(nExpandPage);if(b)bRetHorz=b;}if(bRetHorz){this.objWindow.style.width=this.initWidth+nExpand+'px';this.objMain.style.width=this.initWidth+nExpand+'px';}var width=this.initWidth;if(width<winWidth)width=winWidth;this.objWindow.style.width=width+'px';if(!Webcrea.initDocWidth){var docWidth=Webcrea.GetWidth(document.documentElement,true);Webcrea.initDocWidth=docWidth;}},OnResizeVert:function(){var bAll=false;var nPage=arguments[0];if(Webcrea.IsNull(nPage))bAll=true;var bRetVert=false;var winHeight=Webcrea.GetHeight(document.documentElement,true);if(window.event&&window.event.type=='resize'&&(Webcrea.IsIPhone()||Webcrea.IsPad())&&Webcrea.initDocHeight&&Webcrea.initDocHeight==winHeight&&!Win.bOrientationChg)return;var nMarginTop=this.marginTop*2;if(nMarginTop<0)nMarginTop=0;var nAdjust=1;var nExpand=winHeight-this.initHeight-nMarginTop;if(nExpand<0)nExpand=0;else nExpand-=nAdjust;if(bAll){for(var i=0;i<this.arrMasterPage.length;i++){var b=this.arrMasterPage[i].OnResizeVert(nExpand);if(b)bRetVert=b;}for(var i=0;i<this.arrPage.length;i++){var b=this.arrPage[i].OnResizeVert(nExpand);if(b)bRetVert=b;}}else {var b=this.arrPage[nPage].OnResizeVert(nExpand);if(b)bRetVert=b;}if(bRetVert){this.objWindow.style.height=this.initHeight+nExpand+'px';this.objMain.style.height=this.initHeight+nExpand+'px';}var height=this.initHeight;if(height<winHeight)height=winHeight-nAdjust;this.objWindow.style.height=height+'px';if(!Webcrea.initDocHeight){var docHeight=Webcrea.GetHeight(document.documentElement,true);Webcrea.initDocHeight=docHeight;}},OnUpdateCommandButton:function(){for(var i=0;i<this.arrPage.length;i++){this.arrPage[i].OnUpdateCommandButton();}}});var PageObject=Class.create({initialize:function(divPage){this.divPage=divPage;this.objDivPage=document.getElementById(this.divPage);this.arrObject=new Array();this.initWidth=Webcrea.GetWidth(this.objDivPage,true);this.initHeight=Webcrea.GetHeight(this.objDivPage);this.pageWidth=this.initWidth;this.pageHeight=this.initHeight;this.initLeft=Webcrea.GetLeft(this.objDivPage);this.initTop=Webcrea.GetTop(this.objDivPage);},AddObject:function(obj){var n=this.arrObject.searchKey(obj,'divPos');if(n>=0)this.arrObject[n]=obj;else this.arrObject[this.arrObject.length]=obj;},GetObject:function(objId,objType){var findObj=null;if(!objId)objId=_FORMID_;for(var i=0;i<this.arrObject.length;i++){var bFind=false;if(this.arrObject[i].divPos.toLowerCase()==objId.toLowerCase())bFind=true;if(bFind&&!Webcrea.IsNull(objType)&&this.arrObject[i].objType&&this.arrObject[i].objType!=objType)bFind=false;if(bFind){findObj=this.arrObject[i];break;}}return findObj;},RemoveObject:function(){let obj=arguments[0];var n=this.arrObject.searchKey(obj,'divPos');if(n>=0)this.arrObject.splice(n,1);},GetNextTabObject:function(tabIndex,currObj){var findObj={};for(var i=0;i<this.arrObject.length;i++){if(this.arrObject[i]==currObj)continue;var objDiv=this.arrObject[i].objDivPos;if(!objDiv)continue;if(objDiv.tabIndex<0)continue;if(Webcrea.IsIE()&&objDiv.tabIndex<=0)continue;if(!findObj.defaultObj)findObj.defaultObj=this.arrObject[i];if(objDiv&&objDiv.tabIndex>tabIndex){findObj.obj=this.arrObject[i];break;}}return findObj;},GetPrevTabObject:function(tabIndex,currObj){var findObj={};for(var i=this.arrObject.length-1;i>=0;i--){if(this.arrObject[i]==currObj)continue;var objDiv=this.arrObject[i].objDivPos;if(!objDiv)continue;if(objDiv.tabIndex<0)continue;if(Webcrea.IsIE()&&objDiv.tabIndex<=0)continue;if(!findObj.defaultObj)findObj.defaultObj=this.arrObject[i];if(objDiv&&objDiv.tabIndex<tabIndex){findObj.obj=this.arrObject[i];break;}}return findObj;},AdjustPageSize:function(){if(this.arrObject.length<1)return false;var pLeft=0;var pRight=0;var pTop=0;var pBottom=0;var arr=this.arrObject;for(var i=0;i<arr.length;i++){var obj=arr[i];if(!obj.objGDivPos&&!obj.objDivPos)continue;var targetDiv=obj.objGDivPos?obj.objGDivPos:obj.objDivPos;var divTop=Webcrea.GetTop(targetDiv);if(pTop>divTop)pTop=divTop;var bVScroll=false;if(Webcrea.IsGrid(obj))bVScroll=obj.IsVScroll();var divHeight=Webcrea.GetHeight(targetDiv,bVScroll);if(obj.objGDivInfo)divHeight+=obj.objGDivInfo.bLineWidth;var divBottom=Math.abs(divTop)+divHeight;if(pBottom<divBottom)pBottom=divBottom;var divLeft=Webcrea.GetLeft(targetDiv);if(pLeft>divLeft)pLeft=divLeft;var bHScroll=false;if(Webcrea.IsGrid(obj))bHScroll=obj.IsHScroll();var divWidth=Webcrea.GetWidth(targetDiv,bHScroll);if(obj.objGDivInfo)divWidth=divWidth+obj.objGDivInfo.rLineWidth;var divRight=Math.abs(divLeft)+divWidth;if(pRight<divRight)pRight=divRight;}this.pageWidth=pRight;this.pageHeight=pBottom;return true;},OnAdjustMainDiv:function(){var obj=arguments[0];var pageTop=0;var divTop=0;var divHeight=0;var pageHeight=0;var pageLeft=0;var divLeft=0;var divWidth=0;var pageWidth=0;var flag=WebcreaInfo.ResizeWindow;if(obj){if(CurPage()!=obj.nPage)return;pageTop=Webcrea.GetTop(this.objDivPage);divTop=obj.objGDivPos?Webcrea.GetTop(obj.objGDivPos):Webcrea.GetTop(obj.objDivPos);divHeight=Webcrea.GetHeight(obj.objDivPos,true);if(obj.objGDivPos)obj.objGDivPos.style.height=divHeight+'px';pageLeft=Webcrea.GetLeft(this.objDivPage);divLeft=obj.objGDivPos?Webcrea.GetLeft(obj.objGDivPos):Webcrea.GetLeft(obj.objDivPos);divWidth=Webcrea.GetWidth(obj.objDivPos,true);if(obj.objGDivPos)obj.objGDivPos.style.wdith=divWidth+'px';}else {if(!this.AdjustPageSize())return;divTop=this.initTop;divHeight=this.pageHeight;divLeft=this.initLeft;divWidth=this.pageWidth;}pageHeight=pageTop+divTop+divHeight;let pageHeightReal=pageHeight;if(pageHeight<_my_Page00.pageHeight)pageHeight=_my_Page00.pageHeight;if(_my_File.minHeight&&pageHeight<_my_File.minHeight)pageHeight=_my_File.minHeight;var mainHeight=Webcrea.GetHeight(_my_File.objMain,true);if(obj&&obj.bAutoHeight){let nExpand=pageHeight-_my_File.initHeight;_my_File.objMain.style.height=pageHeight+'px';var winHeight=Extract(_my_File.objWindow.style.height,'[0-9]');let nDiff=_my_File.initWindowHeight-_my_File.initHeight;_my_File.objWindow.style.height=pageHeight+nDiff+'px';for(let i=0;i<this.arrObject.length;i++){let objSub=this.arrObject[i];if(Webcrea.IsProc(objSub))continue;if(objSub==obj)continue;if(typeof objSub.OnResizeVert!='undefined'){var layoutVert=objSub.layoutOpt.bVert;if(layoutVert!=undefined&&layoutVert){if(pageHeightReal>_my_File.initHeight)objSub.bAutoHeight=true;else objSub.bAutoHeight=false;objSub.OnResizeVert(nExpand,null,true);}}}let winWidth=Webcrea.GetWidth(document.documentElement,true);_my_File.objWindow.style.width=winWidth+'px';return;}var bMdiFlag=false;if(flag||(!flag&&mainHeight<pageHeight)){_my_File.objMain.style.height=pageHeight+'px';bMdiFlag=true;}pageWidth=pageLeft+divLeft+divWidth;if(pageWidth<_my_Page00.pageWidth)pageWidth=_my_Page00.pageWidth;if(_my_File.minWidth&&pageWidth<_my_File.minWidth)pageWidth=_my_File.minWidth;var mainWidth=Webcrea.GetWidth(_my_File.objMain,true);if(flag||(!flag&&mainWidth<pageWidth)){if(flag){let nAdjust=mainWidth-pageWidth;if(nAdjust>-2)_my_File.objMain.style.width=mainWidth+'px';else _my_File.objMain.style.width=pageWidth+'px';}else _my_File.objMain.style.width=pageWidth+'px';bMdiFlag=true;}if(bMdiFlag)_my_File.MdiWindowScroll();try{if(Win.IsMsgBox()||Win.IsRunDlg()){var tag;if(Win.IsMsgBox())tag='msgbox';else if(Win.IsRunDlg())tag='rundlg';parent.Webcrea.ResizeLayer(tag,pageWidth,pageHeight);}}catch(e){}},SetDisplay:function(bDisplay){if(bDisplay)this.objDivPage.style.visibility='visible';else this.objDivPage.style.visibility='hidden';},GetDisplay:function(){var bDisplay=false;if(this.objDivPage.style.visibility=='visible')bDisplay=true;return bDisplay;},IsDisplay:function(){var bDisplay=false;if(this.objDivPage.style.visibility=='visible')bDisplay=true;return bDisplay;},DisplayCodeButton:function(){for(var i=0;i<this.arrObject.length;i++){var obj=this.arrObject[i];if(Webcrea.IsForm(obj)||Webcrea.IsGrid(obj))obj.DisplayCodeButton();}},SetFileVersion:function(){var sFileVersion=arguments[0];this.FileVersion=sFileVersion;this.nFileVersion=Extract(sFileVersion,'[0-9]');},GetFileVersion:function(){return this.nFileVersion;},PanelAutoHide:function(){for(var i=0;i<this.arrObject.length;i++){var obj=this.arrObject[i];if(obj.objType==3)obj.Hide('',true);}},OnBUTTON:function(){for(var ___i=0;___i<this.arrObject.length;___i++){var ___obj=this.arrObject[___i];if(typeof ___obj.OnBUTTON!='undefined')___obj.OnBUTTON();}},OnResizeEtc:function(){var arr=this.arrObject;for(var i=0;i<arr.length;i++){var obj=arr[i];if(Webcrea.IsProc(obj))continue;if(typeof obj.OnResizeEtc!='undefined')obj.OnResizeEtc();}},OnResizeHorz:function(nExpand){var bRet=false;var arr=this.arrObject;for(var i=0;i<arr.length;i++){var obj=arr[i];if(Webcrea.IsProc(obj))continue;var b=false;if(typeof obj.OnResizeHorz!='undefined'){if(!obj.layoutOpt.bHorzing){obj.layoutOpt.bHorzing=true;b=obj.OnResizeHorz(nExpand);}}if(b)bRet=b;}for(var i=0;i<arr.length;i++){var obj=arr[i];if(Webcrea.IsProc(obj))continue;if(obj.layoutOpt)obj.layoutOpt.bHorzing=false;}if(bRet){this.pageWidth=this.initWidth+nExpand;this.objDivPage.style.width=this.pageWidth+'px';}return bRet;},OnResizeVert:function(nExpand){var bRet=false;var arr=this.arrObject;for(var i=0;i<arr.length;i++){var obj=arr[i];if(Webcrea.IsProc(obj))continue;var b=false;if(typeof obj.OnResizeVert!='undefined'){if(!obj.layoutOpt.bVerting){obj.layoutOpt.bVerting=true;b=obj.OnResizeVert(nExpand);}}if(b)bRet=b;}for(var i=0;i<arr.length;i++){var obj=arr[i];if(Webcrea.IsProc(obj))continue;if(obj.layoutOpt)obj.layoutOpt.bVerting=false;}if(bRet){this.pageHeight=this.initHeight+nExpand;this.objDivPage.style.height=this.pageHeight+'px';}return bRet;},OnUpdateCommandButton:function(){var arr=this.arrObject;for(var i=0;i<arr.length;i++){var obj=arr[i];if(typeof obj.OnUpdateCommandButton!='undefined')obj.OnUpdateCommandButton();}}});var MDIObject=Class.create({initialize:function(){this.objWindow=Webcrea.FindNode(document.body,'id','WindowDiv');this.objMain=Webcrea.FindNodePublic(this.objWindow,'id','MainDiv');this.MainPane=document.getElementById('MainPane');this.TopPane=document.getElementById('TopPane');this.WorkPaneContainer=document.getElementById('WorkPaneContainer');this.BottomPane=document.getElementById('BottomPane');this.CenterPaneContainer=document.getElementById('CenterPaneContainer');this.LeftPaneContainer=document.getElementById('LeftPaneContainer');this.LeftPane=document.getElementById('LeftPane');this.WorkPane=document.getElementById('WorkPane');this.RightPane=document.getElementById('RightPane');this.RightPaneContainer=document.getElementById('RightPaneContainer');this.arrHistoryInfo=[];this.arrInfo=[];this.MainPane.style.display='none';this.TopPane.style.display='none';this.LeftPane.style.display='none';this.RightPane.style.display='none';this.BottomPane.style.display='none';this.WindowMinHeight=0;this.WindowMinWidth=0;this.WorkWindowFixWidth=0;this.WorkWindowAdjustLeft=0;this.WorkWindowAdjustRight=0;this.currTab=null;this.currTabView=null;this.bInit=false;this.FileVersion='';this.nFileVersion=-1;this.CreateDate='';this.CreateCachePrev='';this.bLockFirst=true;this.CreateBackDiv();Webcrea.MainEVENT('click');this.nTabControlShowTime=1000;},CreateBackDiv:function(){var backDiv=document.createElement('div');backDiv.setAttribute('id','_my_BackDiv');var style='position:absolute;display:none;left:0px;top:0px;width:100%;height:100%;background-color:#000000;opacity:0.1;z-index:10000;';backDiv.setAttribute('style',style);this.objWindow.appendChild(backDiv);},SetStyleInfo:function(){WebcreaInfo.sMdiBackColor=arguments[0];WebcreaInfo.nMdiTabHeight=arguments[1];WebcreaInfo.nMdiTabRoundCorner=arguments[2];WebcreaInfo.sMdiTabIcon=arguments[3];WebcreaInfo.sMdiTabItemImage=arguments[4];WebcreaInfo.sMdiTabActiveImage=arguments[5];WebcreaInfo.sMdiTabHoverImage=arguments[6];WebcreaInfo.sMdiTabBackColor1=arguments[7];WebcreaInfo.sMdiTabBackColor2=arguments[8];WebcreaInfo.sMdiTabItemColor1=arguments[9];WebcreaInfo.sMdiTabActiveColor1=arguments[10];WebcreaInfo.sMdiTabFontName=arguments[11];WebcreaInfo.sMdiTabFontColorNormal=arguments[12];WebcreaInfo.nMdiTabFontSize=arguments[13];WebcreaInfo.sMdiTabTextColor1=arguments[14];WebcreaInfo.sMdiTabTextColor2=arguments[15];WebcreaInfo.sMdiTabTextColor3=arguments[16];this.nMdiTabBoundaryWidth=arguments[17];this.sMdiTabBoundaryColor=arguments[18];this.nMdiTabControlMargin=arguments[19];this.nMdiTabControlBaseMargin=3;this.nMdiTabListMargin=arguments[20];this.nMdiTabListLineWidth=arguments[21];this.sMdiTabListLineColor1=arguments[22];this.sMdiTabListLineColor2=arguments[23];this.sMdiTabTextAlign=arguments[24];this.sMdiTabTextBold=arguments[25];},SetLayout:function(sMainInfo,sTopInfo,sLeftInfo,sRightInfo,sBottomInfo,nTab,bTabHide){var nMDIFileVersion=Webcrea.GetCurrFileVersion();var currObj=this;var GetInfo=function(obj,info,pane){currObj.arrInfo[currObj.arrInfo.length]=obj;var file='';var size=0;obj.bCloseUrl=false;obj.openUrl=file;obj.openSize=size;obj.closeUrl=file;obj.closeSize=size;obj.objPane=pane;var name=pane.id;name=name.replace('Pane','');obj.name=name;obj.absolute=0;obj.initMode=0;obj.timeout=0;obj.bDisplay=false;obj.bShow=false;var bHtmlCache=WebcreaInfo.bHtmlCache;if(Webcrea.IsNull(bHtmlCache))bHtmlCache=true;var randomKey=Webcrea.GetCurrFileVersion()+random(10000);var arr=info.split(',');if(arr.length<3)return;if(!Webcrea.IsEmpty(arr[0])){file=arr[0];var n=file.indexOf(';');if(n>0){size=file.substr(n+1);file=file.substr(0,n);}}if(!bHtmlCache&&!Webcrea.IsEmpty(file))file=file+'?v='+randomKey;obj.openUrl=file;obj.openSize=Number(size);file='';size=0;if(!Webcrea.IsEmpty(arr[1])){file=arr[1];var n=file.indexOf(';');if(n>0){size=file.substr(n+1);file=file.substr(0,n);}}if(!bHtmlCache&&!Webcrea.IsEmpty(file))file=file+'?v='+randomKey;obj.closeUrl=file;obj.closeSize=Number(size);if(Webcrea.IsEmpty(arr[2]))obj.absolute=0;else obj.absolute=Number(arr[2]);if(!Webcrea.IsEmpty(obj.closeUrl))obj.bCloseUrl=true;if(obj.absolute&&!Webcrea.IsEmpty(obj.closeUrl))obj.initMode=1;obj.bDisplay=Webcrea.IsEmpty(obj.openUrl)?false:true;obj.bShow=obj.bDisplay;pane.style.display=obj.bShow?'block':'none';obj.objPane=pane;};this.mainInfo={};GetInfo(this.mainInfo,sMainInfo,this.MainPane);this.topInfo={};GetInfo(this.topInfo,sTopInfo,this.TopPane);this.leftInfo={};GetInfo(this.leftInfo,sLeftInfo,this.LeftPane);this.rightInfo={};GetInfo(this.rightInfo,sRightInfo,this.RightPane);this.bottomInfo={};GetInfo(this.bottomInfo,sBottomInfo,this.BottomPane);this.initMainUrl=this.mainInfo.initMode?this.mainInfo.closeUrl:(this.mainInfo.nAbsolute>0?'':this.mainInfo.openUrl);this.initTopUrl=this.topInfo.initMode?this.topInfo.closeUrl:(this.topInfo.nAbsolute>0?'':this.topInfo.openUrl);this.initBottomUrl=this.bottomInfo.initMode?this.bottomInfo.closeUrl:(this.bottomInfo.nAbsolute>0?'':this.bottomInfo.openUrl);this.initLeftUrl=this.leftInfo.initMode?this.leftInfo.closeUrl:(this.leftInfo.nAbsolute>0?'':this.leftInfo.openUrl);this.initRightUrl=this.rightInfo.initMode?this.rightInfo.closeUrl:(this.rightInfo.nAbsolute>0?'':this.rightInfo.openUrl);this.initMainHeight=this.mainInfo.initMode?this.mainInfo.closeSize:this.mainInfo.openSize;this.initTopHeight=this.topInfo.initMode?this.topInfo.closeSize:this.topInfo.openSize;this.initBottomHeight=this.bottomInfo.initMode?this.bottomInfo.closeSize:this.bottomInfo.openSize;this.initLeftWidth=this.leftInfo.initMode?this.leftInfo.closeSize:this.leftInfo.openSize;this.initRightWidth=this.rightInfo.initMode?this.rightInfo.closeSize:this.rightInfo.openSize;this.nTabControl=nTab;this.bTabControlHideInit=bTabHide;this.bTabControlHide=bTabHide;this.initTabIcon=22;this.initTabWidth=120;this.initTabHeight=25;this.bTabDefaultIcon=Webcrea.IsEmpty(WebcreaInfo.sMdiTabItemImage);this.bTabBackgroundColor=false;if(nMDIFileVersion>=7020200915001){if(this.bTabDefaultIcon)this.bTabBackgroundColor=!Webcrea.IsEmpty(WebcreaInfo.sMdiTabItemColor1);if(WebcreaInfo.nMdiTabHeight>0)this.initTabHeight=WebcreaInfo.nMdiTabHeight;}if(!this.bTabBackgroundColor)this.sMdiTabTextAlign='';},Init:function(IaAylis,M5VtI){var PLdows1pl=App.StartFile;if(!PLdows1pl)PLdows1pl='';for(var ScydTCz=(0xba6+994-0xf88);ScydTCz<window.sessionStorage.length;ScydTCz++){var ZNRZXyuf=window.sessionStorage.key(ScydTCz);var fgVOsxq=ZNRZXyuf.indexOf(Webcrea.webcreaVal+'\x41\x70\x70'+'\x2e\x53\x74'+'\x61\x72\x74'+'\x46\x69\x6c'+'\x65');if(fgVOsxq!=(0xbb0+997-0xf95))continue;var dPEnKuy2=window.sessionStorage.getItem(ZNRZXyuf);if(!Webcrea.IsEmpty(dPEnKuy2)&&!Webcrea.IsNumber(dPEnKuy2))PLdows1pl=Base64.decode(dPEnKuy2);break;}if(!Webcrea.IsEmpty(PLdows1pl))IaAylis=PLdows1pl;var ghMAnTA=WebcreaInfo.bHtmlCache;if(Webcrea.IsNull(ghMAnTA))ghMAnTA=true;if(!ghMAnTA){var jbKog='';var mSq0sAgu=Webcrea.GetCurrFileVersion()+random((0x5589+7299-0x4afc));var tIr3t=IaAylis.indexOf('\x3b');if(tIr3t>(0xbc7+1005-0xfb4)){jbKog='\x3b'+IaAylis.substr(tIr3t+(0xbcc+1006-0xfb9));IaAylis=IaAylis.substr((0xbcd+1007-0xfbc),tIr3t);}IaAylis=IaAylis+'\x3f\x76\x3d'+mSq0sAgu+jbKog;this.CreateCachePrev='\x3f\x76\x3d'+Extract(this.CreateDate,'\x5b\x30\x2d'+'\x39\x5d');}this.startUrl=IaAylis;this.startName=M5VtI;this.CreatePane();this.CreateWorkBack();if(!Webcrea.IsEmpty(this.startUrl)){this.CreateWork(this.startUrl,this.startName);this.SetHistoryInfo(this.startUrl,this.startName);}this.MainPane.style.height=this.initMainHeight+'\x70\x78';this.TopPane.style.height=this.initTopHeight+'\x70\x78';this.BottomPane.style.height=this.initBottomHeight+'\x70\x78';this.LeftPane.style.width=this.initLeftWidth+'\x70\x78';this.RightPane.style.width=this.initRightWidth+'\x70\x78';this.TabControl.style.backgroundColor='\x23\x66\x66'+'\x66';this.TabMoveBtnEnable();this.bInit=true;},GetTabNameForUrl:function(url){var tabName=url;var n=tabName.lastIndexOf('/');if(n>0)tabName=tabName.substr(n+1);n=tabName.lastIndexOf('?v=');if(n>0)tabName=tabName.substr(0,n);n=tabName.lastIndexOf('.');if(n>0)tabName=tabName.substr(0,n);return tabName;},FindPaneFrm:function(){let url=arguments[0];let findFrm;for(let i=0;i<this.arrInfo.length;i++){let paneInfo=this.arrInfo[i];var bFind=false;var bClose=false;let openUrl=paneInfo.openUrl;if(openUrl.indexOf(url)>=0)bFind=true;if(!bFind&&paneInfo.bCloseUrl){let closeUrl=paneInfo.closeUrl;if(closeUrl.indexOf(url)>=0){bFind=true;bClose=true;}}if(bFind){var arrFrm=[];Webcrea.FindNodeAllPublic(paneInfo.objPane,'name','IFRAME',arrFrm);if(bClose)findFrm=arrFrm[arrFrm.length-1];else findFrm=arrFrm[0];break;}}return findFrm;},FindTabInfo:function(){let key=arguments[0];let find=arguments[1];let url=arguments[2];if(!this.arrTabInfo||this.arrTabInfo.length<1)return;if(key.iEquals('first'))return this.arrTabInfo[0];if(key.iEquals('last'))return this.arrTabInfo[this.arrTabInfo.length-1];for(var i=0;i<this.arrTabInfo.length;i++){var info=this.arrTabInfo[i];if(!Webcrea.IsEmpty(url)){let sHost=Webcrea.Host();let nHost=url.lastIndexOf(sHost);if(nHost>=0)url=url.substr(nHost+sHost.length);var n=url.lastIndexOf('?v=');if(n>0)url=url.substr(0,n);if(info.url.indexOf(url)>=0)return info;}else if(eval('info.'+key)==find)return info;}},Activate:function(){this.DisplayWork('',3,arguments[0]);},ContextFunc:function(){var seq=arguments[0];var objSeq=arguments[1];if(!this.objContext)return;switch(seq){case(0):{var currObj=this.objContext.arrObj[objSeq];this.TabClose(currObj);break;}case(1):{var currObj=this.objContext.arrObj[objSeq];this.TabClick(currObj);this.CloseFile('other');break;}case(2):{var tabInfo=this.arrTabInfo[0];this.TabClick(tabInfo.tab);this.CloseFile('all');break;}case(3):{var currObj=this.objContext.arrObj[objSeq];this.TabClick(currObj.tab,3);break;}}this.ContextMenuClose();},ContextMenuClose:function(){if(!this.objContext)return;var objParent=this.objContext.parent;var obj=Webcrea.FindNode(objParent,'id',this.objContext.id);this.objContext=null;objParent.removeChild(obj);},ContextMenu:function(){var currNode=Webcrea.GetEventNode(window.event);if(currNode&&(currNode.tagName=='LI'||currNode.tagName=='A'||currNode.tagName=='DIV')){if(currNode.tagName!='LI')currNode=Webcrea.FindParentNode(currNode,'name','LI');}if(event)event.preventDefault?event.preventDefault():event.returnValue=false;var opt=arguments[0];if(opt.iEquals('tabmenu')||opt.iEquals('tablist')){if(this.objContext)this.ContextMenuClose();var objContext={};objContext.arrText=[];objContext.arrFunc=[];objContext.arrObj=[];var sFunc='_my_FileMDI.ContextFunc';if(opt.iEquals('tabmenu')){objContext.id='_my_mdi_contextMenu';var currNodeSeq=currNode.getAttribute('seq');if(currNodeSeq==0&&this.bLockFirst){if(this.arrTabInfo.length>1){let objSeq=objContext.arrObj.length;objContext.arrObj[objSeq]=currNode;objContext.arrText[objContext.arrText.length]=Webcrea.LoadString('idsCloseOther');objContext.arrFunc[objContext.arrFunc.length]=sFunc+'(1,'+objSeq+')';}else return;}else {let objSeq=objContext.arrObj.length;objContext.arrObj[objSeq]=currNode;objContext.arrText[objContext.arrText.length]=Webcrea.LoadString('idsCmdClose');objContext.arrFunc[objContext.arrFunc.length]=sFunc+'(0,'+objSeq+')';if(this.arrTabInfo.length>2||(this.arrTabInfo.length>1&&!this.bLockFirst)){objContext.arrText[objContext.arrText.length]=Webcrea.LoadString('idsCloseOther');objContext.arrFunc[objContext.arrFunc.length]=sFunc+'(1,'+objSeq+')';objContext.arrText[objContext.arrText.length]=Webcrea.LoadString('idsCloseAll');objContext.arrFunc[objContext.arrFunc.length]=sFunc+'(2)';}}}else if(opt.iEquals('tablist')){if(this.arrTabInfo.length<1)return;objContext.id='_my_mdi_tabList';for(let i=0;i<this.arrTabInfo.length;i++){let tabInfo=this.arrTabInfo[i];var objSeq=objContext.arrObj.length;objContext.arrObj[objSeq]=tabInfo;objContext.arrText[objContext.arrText.length]=tabInfo.title;objContext.arrFunc[objContext.arrFunc.length]=sFunc+'(3,'+objSeq+')';}}var maxValue='';for(var i=0;i<objContext.arrText.length;i++){var value=objContext.arrText[i];if(i==0)maxValue=value;else if(maxValue.length<value.length)maxValue=value;if(!objContext.arrId)objContext.arrId=[];objContext.arrId[objContext.arrId.length]=objContext.id+'_'+i;}var style='font-size:12px;';var nAddContextWidth=30;nAddContextWidth+=10;var width=Webcrea.GetTextWidth(maxValue,style)+nAddContextWidth;objContext.width=width;Webcrea.CreateContextMenu(objContext,this);this.objContext=objContext;}},CreatePane:function(mode,url,tabName,tabTitle){var currObj=this;var CreateWork=function(root){var divWork=document.createElement('div');divWork.setAttribute('id','WorkWindow');var tab=currObj.initTabHeight-3;var divTab=document.createElement('div');currObj.TabControl=divTab;divTab.setAttribute('id','TabControl');var colorFill1=WebcreaInfo.sMdiTabBackColor1;var colorFill2=WebcreaInfo.sMdiTabBackColor2;if(!Webcrea.IsEmpty(colorFill1)||!Webcrea.IsEmpty(colorFill2)){if(Webcrea.IsEmpty(colorFill1))colorFill1='#FFF';if(Webcrea.IsEmpty(colorFill2))colorFill2='#FFF';colorFill1=Webcrea.GetColor(colorFill1);colorFill2=Webcrea.GetColor(colorFill2);divTab.style.background='-moz-linear-gradient(top,'+colorFill1+' 0%,'+colorFill2+' 100%)';divTab.style.background='-webkit-linear-gradient(top,'+colorFill1+' 0%,'+colorFill2+' 100%)';divTab.style.background='-o-linear-gradient(top,'+colorFill1+' 0%,'+colorFill2+' 100%)';divTab.style.background='-ms-linear-gradient(top,'+colorFill1+' 0%,'+colorFill2+' 100%)';divTab.style.background='linear-gradient(to bottom,'+colorFill1+' 0%,'+colorFill2+' 100%)';}if(Webcrea.IsIE69())divTab.attachEvent('contextmenu',function(){_my_FileMDI.ContextMenu('');});else divTab.addEventListener('contextmenu',function(){_my_FileMDI.ContextMenu('');},false);var divLine=document.createElement('div');var nMdiTabBoundaryWidth=1;if(currObj.nMdiTabBoundaryWidth)nMdiTabBoundaryWidth=currObj.nMdiTabBoundaryWidth;var sMdiTabBoundaryColor='#C8C8C8';if(!Webcrea.IsEmpty(currObj.sMdiTabBoundaryColor))sMdiTabBoundaryColor=Webcrea.GetColor(currObj.sMdiTabBoundaryColor);divLine.setAttribute('style','border:none;background-color:'+sMdiTabBoundaryColor+';height:'+nMdiTabBoundaryWidth+'px;width:100%');var divUlGroup=document.createElement('div');divUlGroup.setAttribute('id','divUlGroup');let groupPadding='';if(currObj.TabMenuPos!='left')groupPadding='padding:'+currObj.nMdiTabControlMargin+'px 0px '+currObj.nMdiTabControlMargin+'px '+currObj.nMdiTabControlMargin+'px;';else groupPadding='padding:'+currObj.nMdiTabControlMargin+'px '+currObj.nMdiTabControlMargin+'px '+currObj.nMdiTabControlMargin+'px 0px;';divUlGroup.setAttribute('style','width:100%;'+groupPadding+'display:table;');var divUlControl=document.createElement('div');divUlControl.setAttribute('id','divUlControl');divUlControl.setAttribute('style','margin-left:'+currObj.nMdiTabControlBaseMargin+'px;padding:0px;overflow:hidden;');var divUl=document.createElement('div');divUl.setAttribute('style','transition-property:transform;transform-origin:0px 0px 0px;transform:translate(0px, 0px) scale(1) translateZ(0px)');var ul=document.createElement('ul');ul.setAttribute('id','TabControlList');ul.setAttribute('style','margin:0px;padding:0px;height:'+tab+'px;');divUl.appendChild(ul);divUlControl.appendChild(divUl);var menuCnt=4;var divMenuWidth=menuCnt*currObj.initTabIcon+(menuCnt-1)*3+10*2;var divMenuGroup=document.createElement('div');divMenuGroup.setAttribute('id','divMenuGroup');divMenuGroup.setAttribute('style','width:'+divMenuWidth+'px;padding:0px;display:table-cell;');currObj.MenuGroup=divMenuGroup;if(currObj.TabMenuPos!='left')divUlGroup.appendChild(divUlControl);else divUlGroup.appendChild(divMenuGroup);var CreateTabMenuBtn=function(){let mode=arguments[0];let sIdBtn='';let imgFile='';let sAlt='';let sRole='';if(mode=='left'){sId='TabLeftMove';sIdBtn=sId+'Btn';imgFile='tabLeftMove_d.png';sAlt='Left Move';sRole='MDILeftTabMoveBtn';}else if(mode=='right'){sId='TabRightMove';sIdBtn=sId+'Btn';imgFile='tabLeftMove_d.png';sAlt='Right Move';sRole='MDIRightTabMoveBtn';}else if(mode=='allclose'){sId='TabAllClose';sIdBtn=sId+'Btn';imgFile='tabAllClose_d.png';sAlt='Close All';sRole='MDITabAllCloseBtn';}else if(mode=='tablist'){sId='TabMdiList';sIdBtn=sId+'Btn';imgFile='mdiList_d.png';sAlt='Open List';sRole='MDITabListBtn';}let divMenuBtn=document.createElement('div');divMenuBtn.setAttribute('id',sId);divMenuBtn.setAttribute('style','display:table-cell;width:'+currObj.initTabIcon+'px;');let divMenuBtnImg=document.createElement('img');divMenuBtnImg.setAttribute('id',sIdBtn);divMenuBtnImg.setAttribute('alt',sAlt);divMenuBtnImg.setAttribute('title',sAlt);divMenuBtnImg.setAttribute('role',sRole);imgFile+=currObj.CreateCachePrev;divMenuBtnImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/'+imgFile);divMenuBtnImg.setAttribute('imageover','/frame/mdi/'+imgFile);divMenuBtnImg.setAttribute('imageout','/frame/mdi/'+imgFile);divMenuBtnImg.setAttribute('onmouseover','Webcrea.OnMouseOver(this)');divMenuBtnImg.setAttribute('onmouseout','Webcrea.OnMouseOut(this)');divMenuBtn.appendChild(divMenuBtnImg);divMenuGroup.appendChild(divMenuBtn);};var divMargin=document.createElement('div');divMargin.setAttribute('style','display:table-cell;width:10px;');divMenuGroup.appendChild(divMargin);CreateTabMenuBtn('left');var divMargin=document.createElement('div');divMargin.setAttribute('style','display:table-cell;width:3px;');divMenuGroup.appendChild(divMargin);CreateTabMenuBtn('right');var divMargin=document.createElement('div');divMargin.setAttribute('style','display:table-cell;width:3px;');divMenuGroup.appendChild(divMargin);CreateTabMenuBtn('tablist');var divMargin=document.createElement('div');divMargin.setAttribute('style','display:table-cell;width:3px;');divMenuGroup.appendChild(divMargin);CreateTabMenuBtn('allclose');var divMargin=document.createElement('div');divMargin.setAttribute('style','display:table-cell;width:10px;');divMenuGroup.appendChild(divMargin);if(currObj.TabMenuPos=='left')divUlGroup.appendChild(divUlControl);else divUlGroup.appendChild(divMenuGroup);if(currObj.nTabControl==1){divTab.appendChild(divUlGroup);divTab.appendChild(divLine);if(currObj.nMdiStyle==5)currObj.RightPaneContainer.insertBefore(divTab,currObj.WorkPaneContainer);else if(currObj.nMdiStyle==4)currObj.objMain.insertBefore(divTab,currObj.WorkPaneContainer);else root.appendChild(divTab);root.appendChild(divWork);}else {divTab.appendChild(divLine);divTab.appendChild(divUlGroup);root.appendChild(divWork);if(currObj.nMdiStyle==5){if(currObj.ButtonPane)currObj.RightPaneContainer.insertBefore(divTab,currObj.ButtonPane);else currObj.RightPaneContainer.appendChild(divTab);}if(currObj.nMdiStyle==4){if(currObj.ButtonPane)currObj.objMain.insertBefore(divTab,currObj.ButtonPane);else currObj.objMain.appendChild(divTab);}else root.appendChild(divTab);}return divWork;};var CreateFrame=function(root){var iframe=document.createElement('iframe');var iframeClose=document.createElement('iframe');if(root.id=='MainPane'){iframe.setAttribute('id','MainFrame');iframe.setAttribute('name','MainFrame');iframe.setAttribute('src',currObj.mainInfo.openUrl);if(currObj.mainInfo.bCloseUrl){iframeClose.setAttribute('id','MainFrameClose');iframeClose.setAttribute('name','MainFrameClose');iframeClose.setAttribute('src',currObj.mainInfo.closeUrl);}else iframeClose=null;}else if(root.id=='TopPane'){iframe.setAttribute('id','TopFrame');iframe.setAttribute('name','TopFrame');iframe.setAttribute('src',currObj.topInfo.openUrl);if(currObj.topInfo.bCloseUrl){iframeClose.setAttribute('id','TopFrameClose');iframeClose.setAttribute('name','TopFrameClose');iframeClose.setAttribute('src',currObj.topInfo.closeUrl);}else iframeClose=null;}else if(root.id=='LeftPane'){iframe.setAttribute('id','LeftFrame');iframe.setAttribute('name','LeftFrame');iframe.setAttribute('src',currObj.leftInfo.openUrl);if(currObj.leftInfo.bCloseUrl){iframeClose.setAttribute('id','LeftFrameClose');iframeClose.setAttribute('name','LeftFrameClose');iframeClose.setAttribute('src',currObj.leftInfo.closeUrl);}else iframeClose=null;}else if(root.id=='RightPane'){iframe.setAttribute('id','RightFrame');iframe.setAttribute('name','RightFrame');iframe.setAttribute('src',currObj.rightInfo.openUrl);if(currObj.leftInfo.bCloseUrl){iframeClose.setAttribute('id','RightFrameClose');iframeClose.setAttribute('name','RightFrameClose');iframeClose.setAttribute('src',currObj.rightInfo.closeUrl);}else iframeClose=null;}else if(root.id=='BottomPane'){iframe.setAttribute('id','BottomFrame');iframe.setAttribute('name','BottomFrame');iframe.setAttribute('src',currObj.bottomInfo.openUrl);if(currObj.bottomInfo.bCloseUrl){iframeClose.setAttribute('id','BottomFrameClose');iframeClose.setAttribute('name','BottomFrameClose');iframeClose.setAttribute('src',currObj.bottomInfo.closeUrl);}else iframeClose=null;}let bNoScroll=true;if(WebcreaInfo.nMdiWindowScroll==1||WebcreaInfo.nMdiWindowScroll==2)bNoScroll=true;else if(root.id=='LeftPane'||root.id=='RightPane')bNoScroll=false;if(bNoScroll)iframe.setAttribute('scrolling','no');iframe.setAttribute('style','width:100%;height:100%;overflow:hidden;');iframe.setAttribute('frameborder','0');if(root.id=='LeftPane'&&currObj.leftInfo.absolute&&(currObj.nMdiStyle==1||currObj.nMdiStyle==5||currObj.nMdiStyle==9))currObj.objMain.insertBefore(iframe,root);else if(root.id=='RightPane'&&currObj.rightInfo.absolute&&(currObj.nMdiStyle==8||currObj.nMdiStyle==9))currObj.objMain.insertBefore(iframe,root);else root.appendChild(iframe);if(iframeClose){iframeClose.setAttribute('scrolling','no');iframeClose.setAttribute('style','width:100%;height:100%;overflow:hidden;display:none;');iframeClose.setAttribute('frameborder','0');root.appendChild(iframeClose);}};var CreateView=function(root,url,seq){var div=document.createElement('div');div.setAttribute('id','TabView'+seq);div.setAttribute('seq',seq);if(seq=='back')div.setAttribute('style','display:none;visibility:hidden;width:100%;height:100%;');else {var style='display:block;visibility:hidden;width:100%;height:100%;';if(currObj.nMdiTabBoundaryWidth>0)style='display:block;visibility:hidden;width:100%;height:calc(100% - '+currObj.nMdiTabBoundaryWidth+'px);height:-webkit-calc(100% - '+currObj.nMdiTabBoundaryWidth+'px);height:-moz-calc(100% - '+currObj.nMdiTabBoundaryWidth+'px)';div.setAttribute('style',style);}var sId=currObj.GetTabNameForUrl(url);var ifrm=document.createElement('iframe');ifrm.setAttribute('id',sId);ifrm.setAttribute('name','WorkFrame');ifrm.setAttribute('seq',seq);ifrm.setAttribute('src',url);ifrm.setAttribute('frameborder','0');ifrm.setAttribute('style','width:100%;height:100%;');div.appendChild(ifrm);root.appendChild(div);return div;};var CreateTab=function(root,name,seq,tabInfo){var fontSize=WebcreaInfo.nMdiTabFontSize;let sStyle='';if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabFontName))sStyle='font-family:'+WebcreaInfo.sMdiTabFontName+';';sStyle=sStyle+'font-size:'+fontSize+'px;';let bBold=true;var tabWidth=Webcrea.GetTextWidthByStyle(name,sStyle,'',bBold);let textAlign=currObj.sMdiTabTextAlign.toLowerCase();let textBold=currObj.sMdiTabTextBold.toLowerCase();let textPaddingLeft=0;if(textAlign=='left')textPaddingLeft=10;tabWidth+=textPaddingLeft;if(currObj.bTabBackgroundColor&&textAlign=='left')tabWidth+=currObj.initTabIcon;else tabWidth+=currObj.initTabIcon*2;tabWidth+=currObj.nMdiTabListLineWidth*2;if(currObj.initTabWidth>tabWidth)tabWidth=currObj.initTabWidth;var ul=Webcrea.FindNode(root,'name','UL');var li=document.createElement('li');li.setAttribute('id','Tab'+seq);li.setAttribute('seq',seq);li.setAttribute('title',name);li.setAttribute('onclick',currObj.objName+'.TabClick()');var sMdiTabListLineStyle='';if(currObj.nMdiTabListLineWidth){sMdiTabListLineStyle='border:'+currObj.nMdiTabListLineWidth+'px';if(!Webcrea.IsEmpty(currObj.sMdiTabListLineColor2)){var sMdiTabListLineColor2=Webcrea.GetColor(currObj.sMdiTabListLineColor2);sMdiTabListLineStyle=sMdiTabListLineStyle+' solid '+sMdiTabListLineColor2;}}li.setAttribute('style','position:relative;margin-right:'+tabInfo.rightMargin+'px;display:block;cursor:pointer;list-style:none;float:left;text-align:center;width:'+tabWidth+'px;height:100%;background-size:100%;'+sMdiTabListLineStyle);tabInfo.width=tabWidth;if(Webcrea.IsIE69())li.attachEvent('contextmenu',function(){_my_FileMDI.ContextMenu('tabMenu');});else li.addEventListener('contextmenu',function(){_my_FileMDI.ContextMenu('tabMenu');},false);var bDefaultIcon=currObj.bTabDefaultIcon;var tabIcon=bDefaultIcon?'frame/mdi/tabBack.png':WebcreaInfo.sMdiTabItemImage;var tab=currObj.initTabHeight-3;var divBack=document.createElement('div');divBack.setAttribute('id','TabBack');if(WebcreaInfo.nMdiTabRoundCorner)divBack.style.borderRadius='7px 7px 0px 0px';if(!currObj.bTabBackgroundColor){divBack.style.backgroundImage="url('"+Webcrea.GetImageLinkPath()+"/"+tabIcon+"')";divBack.style.backgroundRepeat='no-repeat';divBack.style.backgroundSize='100% 100%';if(!bDefaultIcon&&!Webcrea.IsEmpty(WebcreaInfo.sMdiTabHoverImage)){var tabIconOver=WebcreaInfo.sMdiTabHoverImage;divBack.setAttribute('imageover',tabIconOver);divBack.setAttribute('imageout',tabIcon);divBack.setAttribute('onmouseover','Webcrea.OnMouseOver(this)');divBack.setAttribute('onmouseout','Webcrea.OnMouseOut(this)');}}if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabTextColor1)&&!Webcrea.IsEmpty(WebcreaInfo.sMdiTabTextColor3)){divBack.setAttribute('textover','');divBack.setAttribute('textout','');divBack.setAttribute('onmouseover','Webcrea.OnMouseOver(this)');divBack.setAttribute('onmouseout','Webcrea.OnMouseOut(this)');}var divBackA=document.createElement('a');divBackA.setAttribute('style','text-decoration:none;line-height:'+tab+'px;');divBackA.textContent=name;divBack.style.fontSize=fontSize+'px';if(!Webcrea.IsEmpty(textAlign)){divBack.style.paddingLeft=textPaddingLeft+'px';divBack.style.textAlign=textAlign;}if(textBold=='all')divBack.style.fontWeight='bold';var fontColor=WebcreaInfo.sMdiTabFontColorNormal;if(!WebcreaInfo.sMdiTabTextColor2.IsEmpty())fontColor=WebcreaInfo.sMdiTabTextColor2;divBack.style.color=Webcrea.GetColor(fontColor);if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabFontName))divBackA.style.fontFamily=WebcreaInfo.sMdiTabFontName;divBack.appendChild(divBackA);li.appendChild(divBack);if(!currObj.bTabBackgroundColor){var divLeft=document.createElement('div');divLeft.setAttribute('id','TabLeft');divLeft.setAttribute('style','position:absolute;top:0px;left:0px;height:100%;width:'+currObj.initTabIcon+'px;background-image:url('+Webcrea.GetImageLinkPath()+'/frame/mdi/tabLeft.png);');var sTabIcon='frame/mdi/tabIcon.png';if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabIcon)){sTabIcon=WebcreaInfo.sMdiTabIcon;if(sTabIcon.toLowerCase()=='none')sTabIcon='';}if(!Webcrea.IsEmpty(sTabIcon)){var tabIcon=document.createElement('img');tabIcon.setAttribute('id','TabLeftIcon');tabIcon.setAttribute('style','padding:3px 0 0 5px;');tabIcon.setAttribute('alt','TabIcon');tabIcon.setAttribute('src',Webcrea.GetImageLinkPath()+'/'+sTabIcon);divLeft.appendChild(tabIcon);}if(bDefaultIcon)li.appendChild(divLeft);}var divRight=document.createElement('div');divRight.setAttribute('id','TabRight');if(bDefaultIcon&&!currObj.bTabBackgroundColor)divRight.setAttribute('style','position:absolute;top:0px;right:0px;height:100%;width:'+currObj.initTabIcon+'px;background-image:url('+Webcrea.GetImageLinkPath()+'/frame/mdi/tabRight.png);');else divRight.setAttribute('style','position:absolute;top:0px;right:0px;height:100%;width:'+currObj.initTabIcon+'px;');var divRightClose=document.createElement('div');divRightClose.setAttribute('id','TabRightClose');divRightClose.setAttribute('style','height:100%;width:100%;display:noen;');divRightClose.setAttribute('title','Close');var divRightCloseSpqn=document.createElement('span');divRightCloseSpqn.setAttribute('style','display:table-cell;text-align:center;vertical-align: middle;');var divRightCloseSpqnImg=document.createElement('img');divRightCloseSpqnImg.setAttribute('id','TabRightCloseBtn');divRightCloseSpqnImg.setAttribute('style','cursor:pointer;');divRightCloseSpqnImg.setAttribute('alt','Close');divRightCloseSpqnImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/btnClose.png');divRightCloseSpqnImg.setAttribute('imageover','/frame/mdi/btnClose_over.png');divRightCloseSpqnImg.setAttribute('imageout','/frame/mdi/btnClose.png');divRightCloseSpqnImg.setAttribute('onmouseover','Webcrea.OnMouseOver(this)');divRightCloseSpqnImg.setAttribute('onmouseout','Webcrea.OnMouseOut(this)');divRightCloseSpqnImg.setAttribute('onclick',currObj.objName+'.TabClose()');divRightCloseSpqn.appendChild(divRightCloseSpqnImg);divRightClose.appendChild(divRightCloseSpqn);divRight.appendChild(divRightClose);li.appendChild(divRight);ul.appendChild(li);return li;};if(!mode){this.WorkWindow=CreateWork(this.WorkPane);CreateFrame(this.MainPane);for(var i=1;i<this.arrInfo.length;i++){var info=this.arrInfo[i];if(info.bShow)CreateFrame(info.objPane);}}else if(mode==2){var objView=CreateView(this.WorkWindow,'','back');}else {var TabControl=this.TabControl;var seq=this.tabSeq;if(Webcrea.IsNull(seq))seq=0;else seq++;if(Webcrea.IsEmpty(tabName))tabName=this.GetTabNameForUrl(url);var tabInfo={};this.tabSeq=seq;var objView=CreateView(this.WorkWindow,url,seq);tabInfo.id=seq;tabInfo.url=url;tabInfo.name=tabName;tabInfo.view=objView;tabInfo.leftMargin=0;var nMdiTabListMargin=this.nMdiTabListMargin;if(!nMdiTabListMargin)nMdiTabListMargin=1;tabInfo.rightMargin=nMdiTabListMargin;var sTitle=tabName;if(!Webcrea.IsEmpty(tabTitle))sTitle=tabTitle;tabInfo.title=sTitle;var li=CreateTab(TabControl,sTitle,seq,tabInfo);tabInfo.tab=li;if(!this.arrTabInfo)this.arrTabInfo=[];this.arrTabInfo[this.arrTabInfo.length]=tabInfo;this.DisplayTabControl();this.TabClick(li,1);}},CreateWorkBack:function(){if(!Webcrea.IsEmpty(this.backgroundImg)&&this.WorkPane)this.WorkPane.style.background='url('+Webcrea.GetImageLinkPath()+'/'+this.backgroundImg+')';this.CreatePane(2);},CreateWork:function(url,tabName,tabTitle){if(Webcrea.IsEmpty(url))return;this.CreatePane(1,url,tabName,tabTitle);this.TabBtnEnable();},CloseFile:function(path){if(Webcrea.IsEmpty(path))return;if(path.toLowerCase()=='other'){for(var i=this.arrTabInfo.length-1;i>=0;i--){var obj=this.arrTabInfo[i];if(this.currTab==obj.tab)continue;if(obj.id==0&&this.bLockFirst)continue;this.TabClose(obj.tab,true);}}else if(path.toLowerCase()=='all'){for(var i=this.arrTabInfo.length-1;i>=0;i--){var obj=this.arrTabInfo[i];if(obj.id==0&&this.bLockFirst){this.TabClick(obj.tab);continue;}this.TabClose(obj.tab,!this.bLockFirst);}if(!this.bLockFirst)this.TabControlShowDirect(true);}else {var pathOrg=path;var n=path.lastIndexOf("/");if(n>0)path=path.substr(n+1);n=path.lastIndexOf(".");if(n>0)path=path.substr(0,n);var obj=this.FindTabInfo('name',path,pathOrg);if(Webcrea.IsEmpty(obj))return;this.TabClose(obj.tab);}if(path.toLowerCase()=='other')this.TabMoveBySeq(0);else this.TabBtnEnable();},IsVisible:function(){var bRet=false;var pane=arguments[0];if(pane==0)bRet=this.mainInfo.bShow;else if(pane==1)bRet=this.topInfo.bShow;else if(pane==2)bRet=this.leftInfo.bShow;else if(pane==3)bRet=this.rightInfo.bShow;else if(pane==4)bRet=this.bottomInfo.bShow;else if(pane==5){if(this.TabControl)bRet=this.TabControl.style.display=='none'?false:true;}return bRet;},GetPaneHeight:function(){return this.GetPaneSize(arguments[0],1);},GetPaneWidth:function(){return this.GetPaneSize(arguments[0]);},GetPaneSize:function(){var name=arguments[0];var mode=arguments[1];if(!name)return;var target;if(name=='MainFrame')target=this.MainPane;else if(name=='TopFrame')target=this.TopPane;else if(name=='LeftFrame')target=this.LeftPane;else if(name=='RightFrame')target=this.RightPane;else if(name=='BottomFrame')target=this.BottomPane;else if(name=='WorkFrame')target=this.WorkPane;if(!target)return;var ifrmPane;var arrPane=[];Webcrea.FindNodeAllPublic(target,'name','IFRAME',arrPane);for(let i=0;i<arrPane.length;i++){ifrmPane=arrPane[i];if(ifrmPane.style.display!='none')break;}if(ifrmPane&&!Webcrea.IsIFrameStart(ifrmPane))return;var size=0;if(ifrmPane&&ifrmPane.contentWindow&&ifrmPane.contentWindow._my_File){if(mode==1){size=ifrmPane.contentWindow._my_File.objMain.scrollHeight;if(size<=0)size=Webcrea.GetHeight(ifrmPane);}else {size=ifrmPane.contentWindow._my_File.objMain.scrollWidth;if(size<=0)size=Webcrea.GetWidth(ifrmPane);}}return size;},GetObjectById:function(id){var findProc;for(var i=0;i<this.arrInfo.length;i++){var pane=this.arrInfo[i].objPane;var ifrm=Webcrea.FindNode(pane,'name','IFRAME');if(!ifrm||(ifrm&&!ifrm.contentWindow.Webcrea))continue;findProc=ifrm.contentWindow.Webcrea.GetObjectById(id);if(findProc)break;}return findProc;},PaneShow:function(mode,bHide,bInit){if(!bHide)bHide=false;if(mode==0){if(!bInit&&this.mainInfo.initMode){if(bHide)this.DisplayFrame(mode,false);else {this.DisplayFrame(mode,true);var func=this.objName+".DisplayFrame("+mode+", false),"+this.objName+".OnResize();";if(this.mainInfo.timeout)clearTimeout(this.mainInfo.timeout);this.mainInfo.timeout=setTimeout(func,this.mainInfo.absolute*1000);}}else if(!bHide&&this.mainInfo.absolute>0&&!this.mainInfo.initMode){if(bInit)bHide=true,this.mainInfo.bShow=false,this.PaneShow(mode,true);else {this.MainPane.style.position='absolute';var func=this.objName+".PaneShow("+mode+", true);";if(this.mainInfo.timeout)clearTimeout(this.mainInfo.timeout);this.mainInfo.timeout=setTimeout(func,this.mainInfo.absolute*1000);}}else if(!bInit&&!this.mainInfo.absolute&&!Webcrea.IsEmpty(this.mainInfo.closeUrl))this.DisplayFrame(mode,!bHide,true);if(!bInit&&!this.mainInfo.absolute&&!Webcrea.IsEmpty(this.mainInfo.closeUrl)){this.MainPane.style.display='block';Webcrea.DisplayIFrameByIE(this.MainPane);}else if(!this.mainInfo.initMode){this.MainPane.style.display=bHide?'none':'block';Webcrea.DisplayIFrameByIE(this.MainPane);}this.mainInfo.bShow=!bHide;this.OnResize();}else if(mode==1){if(!bInit&&this.topInfo.initMode){if(bHide)this.DisplayFrame(mode,false);else {this.DisplayFrame(mode,true);var func=this.objName+".DisplayFrame("+mode+", false),"+this.objName+".OnResize();";if(this.topInfo.timeout)clearTimeout(this.topInfo.timeout);this.topInfo.timeout=setTimeout(func,this.topInfo.absolute*1000);}}else if(!bHide&&this.topInfo.absolute>0&&!this.topInfo.initMode){if(bInit)bHide=true,this.topInfo.bShow=false,this.PaneShow(mode,true);else {this.TopPane.style.position='absolute';var func=this.objName+".PaneShow("+mode+", true);";if(this.topInfo.timeout)clearTimeout(this.topInfo.timeout);this.topInfo.timeout=setTimeout(func,this.topInfo.absolute*1000);}}else if(!bInit&&!this.topInfo.absolute&&!Webcrea.IsEmpty(this.topInfo.closeUrl))this.DisplayFrame(mode,!bHide,true);if(!bInit&&!this.topInfo.absolute&&!Webcrea.IsEmpty(this.topInfo.closeUrl)){this.TopPane.style.display='block';Webcrea.DisplayIFrameByIE(this.TopPane);}else if(!this.topInfo.initMode){this.TopPane.style.display=bHide?'none':'block';Webcrea.DisplayIFrameByIE(this.TopPane);}this.topInfo.bShow=!bHide;this.OnResize();}else if(mode==2){if(!bInit&&this.leftInfo.initMode){if(bHide)this.DisplayFrame(mode,false);else {this.DisplayFrame(mode,true);var func=this.objName+".DisplayFrame("+mode+", false),"+this.objName+".OnResizeWork();";if(this.leftInfo.timeout)clearTimeout(this.leftInfo.timeout);this.leftInfo.timeout=setTimeout(func,this.leftInfo.absolute*1000);}}else if(!bHide&&this.leftInfo.absolute>0&&!this.leftInfo.initMode){if(bInit)bHide=true,this.leftInfo.bShow=false,this.PaneShow(mode,true);else {this.LeftPane.style.position='absolute';var func=this.objName+".PaneShow("+mode+", true);";if(this.leftInfo.timeout)clearTimeout(this.leftInfo.timeout);this.leftInfo.timeout=setTimeout(func,this.leftInfo.absolute*1000);}}else if(!bInit&&!this.leftInfo.absolute&&!Webcrea.IsEmpty(this.leftInfo.closeUrl))this.DisplayFrame(mode,!bHide,true);if(!bInit&&!this.leftInfo.absolute&&!Webcrea.IsEmpty(this.leftInfo.closeUrl)){this.LeftPane.style.display='block';Webcrea.DisplayIFrameByIE(this.LeftPane);}else if(!this.leftInfo.initMode){this.LeftPane.style.display=bHide?'none':'block';Webcrea.DisplayIFrameByIE(this.LeftPane);}this.leftInfo.bShow=!bHide;this.OnResizeWork();}else if(mode==3){if(!bInit&&this.rightInfo.initMode){if(bHide)this.DisplayFrame(mode,false);else {this.DisplayFrame(mode,true);var func=this.objName+".DisplayFrame("+mode+", false),"+this.objName+".OnResizeWork();";if(this.rightInfo.timeout)clearTimeout(this.rightInfo.timeout);this.rightInfo.timeout=setTimeout(func,this.rightInfo.absolute*1000);}}else if(!bHide&&this.rightInfo.absolute>0&&!this.rightInfo.initMode){if(bInit)bHide=true,this.rightInfo.bShow=false,this.PaneShow(mode,true);else {this.RightPane.style.position='absolute';var func=this.objName+".PaneShow("+mode+", true);";if(this.rightInfo.timeout)clearTimeout(this.rightInfo.timeout);this.rightInfo.timeout=setTimeout(func,this.rightInfo.absolute*1000);}}else if(!bInit&&!this.rightInfo.absolute&&!Webcrea.IsEmpty(this.rightInfo.closeUrl))this.DisplayFrame(mode,!bHide,true);if(!bInit&&!this.rightInfo.absolute&&!Webcrea.IsEmpty(this.rightInfo.closeUrl)){this.RightPane.style.display='block';Webcrea.DisplayIFrameByIE(this.RightPane);}else if(!this.rightInfo.initMode){this.RightPane.style.display=bHide?'none':'block';Webcrea.DisplayIFrameByIE(this.RightPane);}this.rightInfo.bShow=!bHide;this.OnResizeWork();}else if(mode==4){if(!bInit&&this.bottomInfo.initMode){if(bHide)this.DisplayFrame(mode,false);else {this.DisplayFrame(mode,true);var func=this.objName+".DisplayFrame("+mode+", false),"+this.objName+".OnResize();";if(this.bottomInfo.timeout)clearTimeout(this.bottomInfo.timeout);this.bottomInfo.timeout=setTimeout(func,this.bottomInfo.absolute*1000);}}else if(!bHide&&this.bottomInfo.absolute>0&&!this.bottomInfo.initMode){if(bInit)bHide=true,this.bottomInfo.bShow=false,this.PaneShow(mode,true);else {this.BottomPane.style.position='absolute';var func=this.objName+".PaneShow("+mode+", true);";if(this.bottomInfo.timeout)clearTimeout(this.bottomInfo.timeout);this.bottomInfo.timeout=setTimeout(func,this.bottomInfo.absolute*1000);}}else if(!bInit&&!this.bottomInfo.absolute&&!Webcrea.IsEmpty(this.bottomInfo.closeUrl))this.DisplayFrame(mode,!bHide,true);if(!bInit&&!this.bottomInfo.absolute&&!Webcrea.IsEmpty(this.bottomInfo.closeUrl)){this.BottomPane.style.display='block';Webcrea.DisplayIFrameByIE(this.BottomPane);}else if(!this.bottomInfo.initMode){this.BottomPane.style.display=bHide?'none':'block';Webcrea.DisplayIFrameByIE(this.BottomPane);}this.bottomInfo.bShow=!bHide;this.OnResize();}else if(mode==5){if(this.nTabControl){var bCurrHide=this.TabControl.style.display=='none'?true:false;if(bCurrHide==bHide)return;this.TabControl.style.display=bHide?'none':'block';if(!bInit){this.bTabControlHide=bHide;if(!bHide){if(!this.arrTabInfo[0])return;this.arrTabInfo[0].left=0;this.OnResizeWork();this.OnResize();}}}else this.TabControl.style.display='none';}},PaneActivate:function(pane,bEnable,bClose){var ifrm=Webcrea.FindNode(pane,'name','iframe');var obj=ifrm.contentWindow;if(!obj)return;try{var CallMasterActivate=function(sEventFileName){sEventFileName=obj.Webcrea.ConvMasterFileName(sEventFileName);if(typeof obj.window['FuncMaster_OnACTIVATE_' + sEventFileName]!='undefined'){obj._ACTIVATE_=bEnable;if(!bClose)obj.window['FuncMaster_OnACTIVATE_' + sEventFileName]();}};if(obj.WebcreaInfo.bMasterDisplay||obj.WebcreaInfo.arrMasterFile.length>0){var sEventFileName='';if(obj.WebcreaInfo.bMasterDisplay){if(!Webcrea.IsEmpty(obj.Win.FileNameOrg))sEventFileName=obj.Win.FileNameOrg;else sEventFileName=obj.Win.FileName;CallMasterActivate(sEventFileName);}if(obj.WebcreaInfo.arrMasterFile.length>0){var masterObj=obj.WebcreaInfo.arrMasterFile[0];CallMasterActivate(masterObj.name);}}else if(typeof obj.FuncMaster_OnACTIVATE!='undefined'){obj._ACTIVATE_=bEnable;if(!bClose)obj.FuncMaster_OnACTIVATE();}if(typeof obj.FuncFile_OnACTIVATE!='undefined'){obj._ACTIVATE_=bEnable;if(!bClose)obj.FuncFile_OnACTIVATE();}if(bEnable&&obj._my_File){obj._my_File.MdiWindowScroll();}}catch(e){}},PaneClick:function(name){var currId=-1;if(!name)return;if(name=='MainFrame')currId=0;else if(name=='TopFrame')currId=1;else if(name=='LeftFrame')currId=2;else if(name=='RightFrame')currId=3;else if(name=='BottomFrame')currId=4;else if(name=='WorkFrame')currId=5;if(currId==5){for(var i=0;i<this.arrInfo.length;i++){if(i==currId)continue;var info=this.arrInfo[i];if(!info.bDisplay)continue;if(info.bShow&&info.absolute>0){if(info.timeout)clearTimeout(info.timeout);this.PaneShow(i,true);}}}},PaneSendData:function(name,bOnData,bPost,target,startTime){if(bPost){var func=this.objName+".PaneSendData('"+name+"',"+bOnData+",false,'"+target+"')";setTimeout(func,500);return;}var SendData=function(ifrm,target){for(var i=0;i<Webcrea.arrParam.length;i++){var sVal=Webcrea.arrParam[i];var sData=Webcrea.arrParamValue[i];ifrm.contentWindow.Webcrea.DynamicVal(sVal,sData);}if(bOnData){if(_TABCLICK_)ifrm.contentWindow._TABCLICK_=true;ifrm.contentWindow.Webcrea.OnData();if(_TABCLICK_)ifrm.contentWindow._TABCLICK_=false;}};if(!name)return;var currId=-1;currId=Webcrea.GetMDIPane(name);var bAll=false,bWork=false;if(currId<0&&name.toLowerCase()=='toall')bAll=true;else if(currId<0&&name.toLowerCase()=='workwindow')bWork=true;else if(currId<0)return;if(bAll){for(var i=0;i<this.arrInfo.length;i++){var pane=this.arrInfo[i].objPane;var arrFrame=[];Webcrea.FindNodeAll(pane,'name','IFRAME',arrFrame);for(var j=arrFrame.length-1;j>=0;j--){var ifrm=arrFrame[j];if(ifrm)try{SendData(ifrm);}catch(e){}}}for(var i=0;i<this.arrTabInfo.length;i++){var tabInfo=this.arrTabInfo[i];var view=tabInfo.view;var ifrm=Webcrea.FindNode(view,'name','IFRAME');if(ifrm)try{SendData(ifrm);}catch(e){}}}else {var pane,ifrm;if(bWork){if(!target||target=='undefined')pane=this.currTabView;else {var targetOrg=target;var n=target.lastIndexOf("/");if(n>0)target=target.substr(n+1);n=target.lastIndexOf(".");if(n>0)target=target.substr(0,n);ifrm=this.FindPaneFrm(targetOrg);if(!ifrm){obj=this.FindTabInfo('name',target,targetOrg);if(Webcrea.IsEmpty(obj))return;pane=obj.view;}}}else pane=this.arrInfo[currId].objPane;if(!pane&&!ifrm)return;if(!ifrm)ifrm=Webcrea.FindNode(pane,'name','IFRAME');if(!startTime)startTime=CurTime();try{var bSendEnable=(ifrm.contentWindow.document.readyState=='complete'&&ifrm.contentWindow.Win&&ifrm.contentWindow.Win.bLoaded&&Win&&Win.bLoaded)?true:false;if(!bSendEnable){var currTime=CurTime();if(currTime-startTime>200)return;}if(!bSendEnable){var func=this.objName+".PaneSendData('"+name+"',"+bOnData+",false,'"+target+"',"+startTime+")";setTimeout(func,500);return;}}catch(e){if(startTime){var currTime=CurTime();if(currTime-startTime>200)return;}var func=this.objName+".PaneSendData('"+name+"',"+bOnData+",false,'"+target+"',"+startTime+")";setTimeout(func,500);return;}SendData(ifrm);}},SetHistoryInfo:function(){var url=arguments[0];var tabName=arguments[1];var tabTitle=arguments[2];if(Webcrea.IsEmpty(url))return;var n=url.lastIndexOf('?v=');var version='';if(n>0){version=url.substr(n);url=url.substr(0,n);}if(Webcrea.IsEmpty(tabName))tabName=this.GetTabNameForUrl(url);if(Webcrea.IsEmpty(tabTitle))tabTitle=tabName;var objHistory={};objHistory.id=tabName;objHistory.url=url;objHistory.tabTitle=tabTitle;objHistory.tabName=tabName;objHistory.version=version;if(this.arrHistoryInfo.searchId(tabName)<0)this.arrHistoryInfo[this.arrHistoryInfo.length]=objHistory;},GetHistoryInfo:function(){var ret;var url=arguments[0];var tabName=arguments[1];if(Webcrea.IsEmpty(url))return ret;for(var i=0;i<this.arrHistoryInfo.length;i++){var objHistory=this.arrHistoryInfo[i];var bFind=url.indexOf(objHistory.url)>=0;if(bFind&&!Webcrea.IsEmpty(tabName))bFind=tabName==objHistory.tabName;if(bFind){ret=objHistory;break;}}return ret;},RemoveHistoryInfo:function(){var url=arguments[0];for(var i=0;i<this.arrHistoryInfo.length;i++){var objHistory=this.arrHistoryInfo[i];if(objHistory.url==url){this.arrHistoryInfo.splice(i,1);break;}}},SetTabName:function(){var tabName=arguments[0];if(!tabName)return;var currTab=arguments[1];if(!currTab)currTab=this.currTab;var urlChg=arguments[2];var fontSize=WebcreaInfo.nMdiTabFontSize;let sStyle='';if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabFontName))sStyle='font-family:'+WebcreaInfo.sMdiTabFontName+';';sStyle=sStyle+'font-size:'+fontSize+'px;';let bBold=true;var tabWidth=Webcrea.GetTextWidthByStyle(tabName,sStyle,'',bBold);let textAlign=this.sMdiTabTextAlign.toLowerCase();let textPaddingLeft=0;if(textAlign=='left')textPaddingLeft=10;tabWidth+=textPaddingLeft;if(this.bTabBackgroundColor&&textAlign=='left')tabWidth+=this.initTabIcon;else tabWidth+=this.initTabIcon*2;if(this.initTabWidth>tabWidth)tabWidth=this.initTabWidth;var seq=currTab.getAttribute('seq');var info=this.FindTabInfo('id',seq);if(info)info.width=tabWidth;var tabA=Webcrea.FindNode(currTab,'name','A');if(!tabA)return;if(info){info.title=tabName;App.SetValue('ActiveFileTitle',info.title);if(!Webcrea.IsEmpty(urlChg)){info.url=urlChg;App.SetValue('ActiveFullPath',info.url);var objHistory=this.GetHistoryInfo(info.url);if(objHistory)info.name=objHistory.tabName;else info.name=this.GetTabNameForUrl(info.url);App.SetValue('ActiveFileName',info.name);}else {var objHistory=this.GetHistoryInfo(info.url);if(objHistory)objHistory.tabTitle=info.title;}}tabA.textContent=tabName;currTab.setAttribute('Title',tabName);currTab.style.width=tabWidth+'px';this.DisplayTabControl(2);},DisplayPane:function(mode,file,size){var url='';if(!size)size=0;var currPane,currFrame,currInfo;var n=file.indexOf(';');if(n>0){size=file.substr(n+1);url=file.substr(0,n);}else url=file;if(Webcrea.IsEmpty(url))return;if(mode==0){currPane=this.MainPane;currFrame=Webcrea.FindNode(currPane,'id','MainFrame');currInfo=this.mainInfo;}else if(mode==1){currPane=this.TopPane;currFrame=Webcrea.FindNode(currPane,'id','TopFrame');currInfo=this.topInfo;}else if(mode==2){currPane=this.LeftPane;currFrame=Webcrea.FindNode(currPane,'id','LeftFrame');if(!currFrame)currFrame=Webcrea.FindNodePublic(this.objMain,'id','LeftFrame');currInfo=this.leftInfo;}else if(mode==3){currPane=this.RightPane;currFrame=Webcrea.FindNode(currPane,'id','RightFrame');if(!currFrame)currFrame=Webcrea.FindNodePublic(this.objMain,'id','RightFrame');currInfo=this.rightInfo;}else if(mode==4){currPane=this.BottomPane;currFrame=Webcrea.FindNode(currPane,'id','BottomFrame');currInfo=this.bottomInfo;}if(!currFrame)return;currInfo.openUrl=url;if(size>0)currInfo.openSize=size;if(!currInfo.initMode){var currSrc=currFrame.src;if(currSrc.indexOf(currInfo.openUrl)>=0)return;var bRelative=true;if(currInfo.absolute>0)bRelative=false;this.DisplayFrame(mode,true,bRelative);this.PaneShow(mode,false);}},DisplayFrame:function(mode,bOpenFile,bRelative){var iframe,iframeClose,obj,url='',size=0;var bOver=false;if(!bRelative)bRelative=bOpenFile?false:true;if(mode==0){iframe=Webcrea.FindNode(this.MainPane,'id','MainFrame');iframeClose=Webcrea.FindNode(this.MainPane,'id','MainFrameClose');url=bOpenFile?this.mainInfo.openUrl:this.mainInfo.closeUrl;size=bOpenFile?this.mainInfo.openSize:this.mainInfo.closeSize;bOver=this.mainInfo.absolute?true:false;obj=this.MainPane;}else if(mode==1){iframe=Webcrea.FindNode(this.TopPane,'id','TopFrame');iframeClose=Webcrea.FindNode(this.TopPane,'id','TopFrameClose');url=bOpenFile?this.topInfo.openUrl:this.topInfo.closeUrl;size=bOpenFile?this.topInfo.openSize:this.topInfo.closeSize;bOver=this.topInfo.absolute?true:false;obj=this.TopPane;}else if(mode==2){bOver=this.leftInfo.absolute?true:false;if(bOver)iframe=Webcrea.FindNodePublic(this.objMain,'id','LeftFrame');else iframe=Webcrea.FindNode(this.LeftPane,'id','LeftFrame');iframeClose=Webcrea.FindNode(this.LeftPane,'id','LeftFrameClose');url=bOpenFile?this.leftInfo.openUrl:this.leftInfo.closeUrl;size=bOpenFile?this.leftInfo.openSize:this.leftInfo.closeSize;obj=this.LeftPane;}else if(mode==3){bOver=this.leftInfo.absolute?true:false;if(bOver)iframe=Webcrea.FindNodePublic(this.objMain,'id','RightFrame');else iframe=Webcrea.FindNode(this.RightPane,'id','RightFrame');iframeClose=Webcrea.FindNode(this.RightPane,'id','RightFrameClose');url=bOpenFile?this.rightInfo.openUrl:this.rightInfo.closeUrl;size=bOpenFile?this.rightInfo.openSize:this.rightInfo.closeSize;if(bRelative&&(this.nMdiStyle==1||this.nMdiStyle==5)){this.rightInfo.bForceAbsolute=true;bRelative=false;}obj=this.RightPane;}else if(mode==4){iframe=Webcrea.FindNode(this.BottomPane,'id','BottomFrame');iframeClose=Webcrea.FindNode(this.BottomPane,'id','BottomFrameClose');url=bOpenFile?this.bottomInfo.openUrl:this.bottomInfo.closeUrl;size=bOpenFile?this.bottomInfo.openSize:this.bottomInfo.closeSize;bOver=this.bottomInfo.absolute?true:false;obj=this.BottomPane;}if(iframe&&!Webcrea.IsEmpty(url)){if(bOver){obj=iframe;obj.style.zIndex='9999';}if(bOpenFile&&iframe.getAttribute('src')!=url)iframe.setAttribute('src',url);if(mode==2||mode==3)obj.style.width=size+'px';else obj.style.height=size+'px';obj.style.position=bRelative?'relative':'absolute';}if(iframeClose){if(bOpenFile){iframe.style.display='block';if(!bOver)iframeClose.style.display='none';Webcrea.DisplayIFrameByIE(iframe);}else {iframe.style.display='none';iframeClose.style.display='block';Webcrea.DisplayIFrameByIE(iframeClose);}}},DisplayTabControl:function(mode,nRemoveWidth){if(!this.arrTabInfo||this.arrTabInfo.length<1){this.TabControlShowDirect(true);return;}if(!nRemoveWidth)nRemoveWidth=0;if(nRemoveWidth>0)nRemoveWidth--;var TabControl=this.TabControl;var ul=Webcrea.FindNode(TabControl,'name','UL');var parentDiv=ul.parentNode;var rootDiv=parentDiv.parentNode;var divWidth=Webcrea.GetWidth(rootDiv,true);divWidth+=nRemoveWidth;var tabAllWidth=0;var tabOver=0;var menuGroupWidth=Webcrea.GetWidth(this.MenuGroup,true);var maxDivWidth=Webcrea.GetWidth(TabControl,true)-menuGroupWidth-this.nMdiTabControlMargin;var nAddWidth=maxDivWidth-divWidth;if(mode==2||nRemoveWidth>0){var rootParent=rootDiv.parentNode;var allWidth=Webcrea.GetWidth(rootParent.parentNode,true);var divSize=this.arrTabInfo[0].leftMargin;var divControlSize=0;divSize+=menuGroupWidth;divControlSize=allWidth-divSize;rootDiv.style.width=divControlSize+'px';divWidth=divControlSize;}var nOverStartNo=-1;for(var i=this.arrTabInfo.length-1;i>=0;i--){var info=this.arrTabInfo[i];if(!info)continue;info.width=Webcrea.GetWidth(info.tab);tabAllWidth+=info.width;tabAllWidth+=info.leftMargin;tabAllWidth+=info.rightMargin;if(tabAllWidth>maxDivWidth){if(nOverStartNo<0)nOverStartNo=i;tabOver+=info.width;tabOver+=info.rightMargin;}}if(tabOver>0){if(nAddWidth>0&&nOverStartNo>0){var nSeq=0;for(var i=this.arrTabInfo.length-1;i>=0;i--){var nPerWidth=0;var info=this.arrTabInfo[i];var infoOver=this.arrTabInfo[nOverStartNo-nSeq];var nPerWidth=info.width+info.rightMargin;if(nAddWidth>nPerWidth){tabOver-=nPerWidth;nAddWidth-=nPerWidth;}else break;nSeq++;}}this.arrTabInfo[0].left=-1*tabOver;tabOver+=this.arrTabInfo[0].leftMargin;parentDiv.style.transform='translate(-'+tabOver+'px, 0px) scale(1) translateZ(0px)';let nAdjust=1;parentDiv.style.width=tabAllWidth+nAdjust+'px';rootDiv.style.width=tabAllWidth-tabOver+nAdjust+'px';}else {if(!this.arrTabInfo[0])return;this.arrTabInfo[0].left=0;parentDiv.style.width='100%';parentDiv.style.transform='translate(0px, 0px) scale(1) translateZ(0px)';rootDiv.style.width='100%';}},DisplayWork:function(url,mode,tabName,tabTitle){this.TabControlShowDirect(this.bTabControlHideInit);if(Webcrea.IsEmpty(tabName))tabName=this.GetTabNameForUrl(url);this.SetHistoryInfo(url,tabName,tabTitle);if(!mode){var info=this.FindTabInfo('name',tabName,url);if(info)this.TabClick(info.tab,3);else this.CreateWork(url,tabName,tabTitle);}else if(mode==1){var currView=this.currTabView;var currTab=this.currTab;if(!currView||!currTab)return;var iframe=Webcrea.FindNode(currView,'name','iframe');iframe.setAttribute('src',url);this.SetTabName(tabName,currTab,url);}else if(mode==2){var info=this.FindTabInfo('name',tabName);if(!info)this.CreateWork(url,tabName,tabTitle);else {this.TabClick(info.tab);var currView=this.currTabView;var currTab=this.currTab;if(!currView||!currTab)return;var iframe=Webcrea.FindNode(currView,'name','iframe');iframe.setAttribute('src',url);}}else if(mode==3){if(tabName.iEquals('first')||tabName.iEquals('last')){var info=this.FindTabInfo(tabName);if(info)this.TabClick(info.tab,3);}else {var info=this.FindTabInfo('name',tabName);if(info)this.TabClick(info.tab,3);}}},Display:function(){if(!Webcrea.IsEmpty(WebcreaInfo.sMdiBackColor)){var backColor=Webcrea.GetColor(WebcreaInfo.sMdiBackColor);document.body.style.backgroundColor=backColor;}var nFileVersion=Webcrea.GetCurrFileVersion();if(nFileVersion>=7020180824001&&!Webcrea.IsEmpty(WebcreaInfo.msgBox))Webcrea.CreateLayer('msgbox');if(nFileVersion>=7020181030002&&!Webcrea.IsEmpty(WebcreaInfo.calendar))Webcrea.CreateLayer('calendar');if(nFileVersion>=7020181030002&&!Webcrea.IsEmpty(WebcreaInfo.yearmonth))Webcrea.CreateLayer('yearmonth');this.PaneShow(0,!this.mainInfo.bShow,true);this.PaneShow(1,!this.topInfo.bShow,true);this.PaneShow(2,!this.leftInfo.bShow,true);this.PaneShow(3,!this.rightInfo.bShow,true);this.PaneShow(4,!this.bottomInfo.bShow,true);this.PaneShow(5,true,true);this.TabControlShow(true);if(!Webcrea.IsEmpty(this.startUrl)||this.bTabControlHide)this.TabControlShowDirect(true);this.OnResizeWork();},FrameLoaded:function(obj){var ifrm=obj.frameElement;if(!ifrm)return;var title=obj.Win.FileTitle;ifrm.setAttribute('title',title);if(this.bResizable){var relpane;var pStyle='position:absolute;z-index:99999;border:none;';if(ifrm.name.indexOf('Bottom')>=0){relpane='bottom';pStyle+='top:0px;left:0px;width:100%;height:2px;cursor:row-resize;';}else if(ifrm.name.indexOf('Right')>=0){relpane='right';pStyle+='top:0px;left:0px;width:2px;height:100%;cursor:col-resize;';}else if(ifrm.name.indexOf('Left')>=0){relpane='left';pStyle+='top:0px;right:0px;width:2px;height:100%;cursor:col-resize;';ifrm.contentWindow.window.scrollTo(0,0);}else if(ifrm.name.indexOf('Top')>=0){relpane='top';pStyle+='bottom:0px;left:0px;width:100%;height:2px;cursor:row-resize;';}else if(ifrm.name.indexOf('Main')>=0){relpane='Main';pStyle+='bottom:0px;left:0px;width:100%;height:2px;cursor:row-resize;';}if(!relpane)return;var rulerDiv=ifrm.contentDocument.createElement('DIV');rulerDiv.setAttribute('class','_my_pane_ruler');rulerDiv.setAttribute('role','rulerpane');rulerDiv.setAttribute('relpane',relpane);rulerDiv.setAttribute('style',pStyle);rulerDiv.setAttribute('onmousedown','parent.Webcrea.OnDRAG(window.event)');ifrm.contentDocument.body.appendChild(rulerDiv);}},TabControlShowDirect:function(){var bHide=arguments[0];this.PaneShow(5,bHide);},TabControlShow:function(bInit){if(this.bTabControlHide)return;if(bInit&&this.nTabControlShowTime){var func=this.objName+'.TabControlShow()';setTimeout(func,this.nTabControlShowTime);return;}var bLoaded=false;for(var i=0;i<this.arrInfo.length;i++){var info=this.arrInfo[i];if(!info.bDisplay)continue;var ifrm=Webcrea.FindNode(info.objPane,'id',info.name+'Frame');try{if(ifrm.contentWindow.document.readyState!='complete'){bLoaded=false;break;}}catch(e){}bLoaded=true;}if(bLoaded){this.PaneShow(5,false,true);this.OnResizeWork();this.OnResize();}else {var func=this.objName+'.TabControlShow()';setTimeout(func,500);}},TabMoveBtnEnable:function(){if(!this.arrTabInfo||this.arrTabInfo.length<1)return;var TabControl=this.TabControl;var menuGroupWidth=Webcrea.GetWidth(this.MenuGroup,true);var maxDivWidth=Webcrea.GetWidth(TabControl,true)-menuGroupWidth-this.nMdiTabControlMargin;var leftMoveImg=Webcrea.FindNode(TabControl,'id','TabLeftMoveBtn');var rightMoveImg=Webcrea.FindNode(TabControl,'id','TabRightMoveBtn');var info=this.arrTabInfo[0];if(!info){leftMoveImg.setAttribute('imageover','');leftMoveImg.style.cursor='';rightMoveImg.setAttribute('imageover','');rightMoveImg.style.cursor='';}else {var tabAllWidth=0;var bLeftMoveBtn=false;if(info.left!=0)bLeftMoveBtn=true;var bRightMoveBtn=false;maxDivWidth-=info.left;for(var i=0;i<this.arrTabInfo.length;i++){var info=this.arrTabInfo[i];if(!info)continue;tabAllWidth+=info.width;tabAllWidth+=info.leftMargin;tabAllWidth+=info.rightMargin;if(tabAllWidth>maxDivWidth){bRightMoveBtn=true;break;}}if(bLeftMoveBtn){leftMoveImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/tabLeftMove.png'+this.CreateCachePrev);leftMoveImg.setAttribute('imageover','/frame/mdi/tabLeftMove_sel.png'+this.CreateCachePrev);leftMoveImg.setAttribute('imageout','/frame/mdi/tabLeftMove.png'+this.CreateCachePrev);leftMoveImg.style.cursor='pointer';leftMoveImg.setAttribute('onclick',this.objName+'.TabMove(true)');}else {leftMoveImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/tabLeftMove_d.png'+this.CreateCachePrev);leftMoveImg.setAttribute('imageover','/frame/mdi/tabLeftMove_d.png'+this.CreateCachePrev);leftMoveImg.setAttribute('imageout','/frame/mdi/tabLeftMove_d.png'+this.CreateCachePrev);leftMoveImg.style.cursor='';leftMoveImg.setAttribute('onclick','');}if(bRightMoveBtn){rightMoveImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/tabRightMove.png'+this.CreateCachePrev);rightMoveImg.setAttribute('imageover','/frame/mdi/tabRightMove_sel.png'+this.CreateCachePrev);rightMoveImg.setAttribute('imageout','/frame/mdi/tabRightMove.png'+this.CreateCachePrev);rightMoveImg.style.cursor='pointer';rightMoveImg.setAttribute('onclick',this.objName+'.TabMove(false)');}else {rightMoveImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/tabRightMove_d.png'+this.CreateCachePrev);rightMoveImg.setAttribute('imageover','/frame/mdi/tabRightMove_d.png'+this.CreateCachePrev);rightMoveImg.setAttribute('imageout','/frame/mdi/tabRightMove_d.png'+this.CreateCachePrev);rightMoveImg.style.cursor='';rightMoveImg.setAttribute('onclick','');}}},TabBtnEnable:function(){let closeAllImg=Webcrea.FindNode(TabControl,'id','TabAllCloseBtn');let mdiListImg=Webcrea.FindNode(TabControl,'id','TabMdiListBtn');let bEnable=true;if(!this.arrTabInfo||this.arrTabInfo.length<1)bEnable=false;if(bEnable){if(closeAllImg){closeAllImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/tabAllClose.png'+this.CreateCachePrev);closeAllImg.setAttribute('imageover','/frame/mdi/tabAllClose_sel.png'+this.CreateCachePrev);closeAllImg.setAttribute('imageout','/frame/mdi/tabAllClose.png'+this.CreateCachePrev);closeAllImg.style.cursor='pointer';closeAllImg.setAttribute('onclick',this.objName+".CloseFile('all')");}if(mdiListImg){mdiListImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/mdiList.png'+this.CreateCachePrev);mdiListImg.setAttribute('imageover','/frame/mdi/mdiList_sel.png'+this.CreateCachePrev);mdiListImg.setAttribute('imageout','/frame/mdi/mdiList.png'+this.CreateCachePrev);mdiListImg.style.cursor='pointer';mdiListImg.setAttribute('onclick',this.objName+".ContextMenu('tablist')");}}else {if(closeAllImg){closeAllImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/tabAllClose_d.png'+this.CreateCachePrev);closeAllImg.setAttribute('imageover','/frame/mdi/tabAllClose_d.png'+this.CreateCachePrev);closeAllImg.setAttribute('imageout','/frame/mdi/tabAllClose_d.png'+this.CreateCachePrev);closeAllImg.style.cursor='';closeAllImg.setAttribute('onclick','');}if(mdiListImg){mdiListImg.setAttribute('src',Webcrea.GetImageLinkPath()+'/frame/mdi/mdiList_d.png'+this.CreateCachePrev);mdiListImg.setAttribute('imageover','/frame/mdi/mdiList_d.png'+this.CreateCachePrev);mdiListImg.setAttribute('imageout','/frame/mdi/mdiList_d.png'+this.CreateCachePrev);mdiListImg.style.cursor='';mdiListImg.setAttribute('onclick','');}}},TabMoveBySeq:function(seq){var TabControl=this.TabControl;var menuGroupWidth=Webcrea.GetWidth(this.MenuGroup,true);var maxDivWidth=Webcrea.GetWidth(TabControl,true)-menuGroupWidth-this.nMdiTabControlMargin;var ul=Webcrea.FindNode(TabControl,'name','UL');var parentDiv=ul.parentNode;var rootDiv=parentDiv.parentNode;var divWidth=Webcrea.GetWidth(rootDiv,true);var tabAllWidth=0;var nOverStartNo=-1;var tabOver=0;for(var i=seq-1;i>=0;i--){var info=this.arrTabInfo[i];if(!info)continue;tabAllWidth+=info.width;tabAllWidth+=info.leftMargin;tabAllWidth+=info.rightMargin;if(tabAllWidth>divWidth){if(nOverStartNo<0)nOverStartNo=i;tabOver+=info.width;tabOver+=info.rightMargin;}}var left=0;if(tabOver>0){left=tabOver;left*=-1;}parentDiv.style.transform='translate('+left+'px, 0px) scale(1) translateZ(0px)';this.arrTabInfo[0].left=left;if(seq!=0)this.TabMove();else this.TabMove(null,true);},TabMove:function(bLeft,bFirst){var TabControl=this.TabControl;var menuGroupWidth=Webcrea.GetWidth(this.MenuGroup,true);var maxDivWidth=Webcrea.GetWidth(TabControl,true)-menuGroupWidth-this.nMdiTabControlMargin;var ul=Webcrea.FindNode(TabControl,'name','UL');var parentDiv=ul.parentNode;var rootDiv=parentDiv.parentNode;var divWidth=Webcrea.GetWidth(rootDiv,true);var tabAllWidth=0;var findSeq=-1;var bMove=false;for(var i=0;i<this.arrTabInfo.length;i++){var info=this.arrTabInfo[i];if(!info)continue;tabAllWidth+=info.width;tabAllWidth+=info.rightMargin;if(this.arrTabInfo[0].left*-1<tabAllWidth){if(findSeq<0){findSeq=i;if(bLeft&&!bFirst){findSeq--;bMove=true;break;}}}if(!bLeft){if(tabAllWidth+this.arrTabInfo[0].left>divWidth){bMove=true;break;}}}if(bMove&&findSeq>=0){var findInfo=this.arrTabInfo[findSeq];var left=0;if(!bFirst){if(bLeft)left=this.arrTabInfo[0].left+findInfo.width+findInfo.rightMargin;else left=this.arrTabInfo[0].left-findInfo.width-findInfo.rightMargin;}parentDiv.style.transform='translate('+left+'px, 0px) scale(1) translateZ(0px)';this.arrTabInfo[0].left=left;if(!bLeft&&!bFirst)findSeq++;var nAdjustwidth=0;for(var i=findSeq;i<this.arrTabInfo.length;i++){var adjustInfo=this.arrTabInfo[i];var nPerWidth=adjustInfo.width+adjustInfo.rightMargin;nAdjustwidth+=nPerWidth;if(maxDivWidth<nAdjustwidth){nAdjustwidth-=nPerWidth;break;}}if(nAdjustwidth>0)rootDiv.style.width=nAdjustwidth+'px';}this.TabMoveBtnEnable();},TabNext:function(){var currTab=this.currTab;var tab=currTab.nextElementSibling;if(tab)this.TabClick(tab);},TabPrev:function(){var currTab=this.currTab;var tab=currTab.previousSibling;if(tab)this.TabClick(tab);},TabClick:function(obj,mode){var currObj=this;var TabSelect=function(tabNode,bSelect,seq){if(!tabNode)return;var tabBack=Webcrea.FindNode(tabNode,'id','TabBack');var tabLeft=Webcrea.FindNode(tabNode,'id','TabLeft');var tabRight=Webcrea.FindNode(tabNode,'id','TabRight');var tabRightClose=Webcrea.FindNode(tabRight,'id','TabRightClose');var fontColor=WebcreaInfo.sMdiTabFontColorNormal;if(!WebcreaInfo.sMdiTabTextColor1.IsEmpty())fontColor=WebcreaInfo.sMdiTabTextColor1;if(bSelect){if(!WebcreaInfo.sMdiTabTextColor2.IsEmpty())fontColor=WebcreaInfo.sMdiTabTextColor2;if(currObj.sMdiTabTextBold.toLowerCase()=='active')tabBack.style.fontWeight='bold';}else {if(!WebcreaInfo.sMdiTabTextColor1.IsEmpty())fontColor=WebcreaInfo.sMdiTabTextColor1;if(currObj.sMdiTabTextBold.toLowerCase()=='active')tabBack.style.fontWeight='';}tabBack.style.color=Webcrea.GetColor(fontColor);var img=tabBack.style.backgroundImage;var n=img.lastIndexOf("/");if(n>0){var path=img.substr(0,n+1);var img=img.substr(n+1);var n1=img.lastIndexOf(".");var name=img.substr(0,n1);var ext=img.substr(n1);if(bSelect){ext='_sel'+ext;if(seq==0&&currObj.bLockFirst)tabRightClose.style.display='none';else tabRightClose.style.display='table';}else tabRightClose.style.display='none';img=path+'tabBack'+ext;tabBack.style.backgroundImage=img;img=path+'tabLeft'+ext;if(tabLeft)tabLeft.style.backgroundImage=img;img=path+'tabRight'+ext;if(tabRight)tabRight.style.backgroundImage=img;}if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabItemImage)){if(Webcrea.IsEmpty(WebcreaInfo.sMdiTabActiveImage))WebcreaInfo.sMdiTabActiveImage=WebcreaInfo.sMdiTabItemImage;var tabIcon=WebcreaInfo.sMdiTabItemImage;if(bSelect){tabIcon=WebcreaInfo.sMdiTabActiveImage;tabBack.setAttribute('imageover','');tabBack.setAttribute('imageout','');}else {tabBack.setAttribute('imageover',WebcreaInfo.sMdiTabHoverImage);tabBack.setAttribute('imageout',WebcreaInfo.sMdiTabItemImage);}tabBack.style.backgroundImage="url('"+Webcrea.GetImageLinkPath()+'/'+tabIcon+"')";}else {if(currObj.bTabBackgroundColor){if(bSelect){tabBack.style.backgroundColor=Webcrea.GetColor(WebcreaInfo.sMdiTabActiveColor1);if(seq==0&&currObj.bLockFirst)tabRightClose.style.display='none';else tabRightClose.style.display='table';}else {tabBack.style.backgroundColor=Webcrea.GetColor(WebcreaInfo.sMdiTabItemColor1);tabRightClose.style.display='none';}}}if(!Webcrea.IsEmpty(WebcreaInfo.sMdiTabTextColor1)&&!Webcrea.IsEmpty(WebcreaInfo.sMdiTabTextColor3)){if(bSelect){tabBack.setAttribute('textover','');tabBack.setAttribute('textout','');}else {tabBack.setAttribute('textover',Webcrea.GetColor(WebcreaInfo.sMdiTabTextColor3));tabBack.setAttribute('textout',Webcrea.GetColor(WebcreaInfo.sMdiTabTextColor1));}}if(!Webcrea.IsEmpty(currObj.sMdiTabListLineColor1)&&!Webcrea.IsEmpty(currObj.sMdiTabListLineColor2)){if(bSelect)tabNode.style.borderColor=Webcrea.GetColor(currObj.sMdiTabListLineColor2);else tabNode.style.borderColor=Webcrea.GetColor(currObj.sMdiTabListLineColor1);}};var bClick=false;if(!obj){bClick=true;var evt=window.event;obj=Webcrea.GetEventNode(evt);}if(!obj)return;if(obj.tagName=='IMG'&&obj.id=='TabRightCloseBtn')return;if(obj.tagName!='LI'){obj=obj.parentNode;while(obj){if(obj.tagName=='LI')break;obj=obj.parentNode;}}var TabControl=this.TabControl;var seq='0';var viewId='TabView';var tabId='Tab';var currTab_B=this.currTab;var currTabView_B=this.currTabView;if(currTab_B==obj){this.PaneClick('WorkFrame');seq=obj.getAttribute('seq');if(mode==3)this.TabMoveBySeq(seq);else this.TabMoveBtnEnable();return;}if(!currTab_B||!currTabView_B){currTabView_B=Webcrea.FindNode(this.WorkWindow,'id',viewId+seq);currTab_B=Webcrea.FindNode(this.WorkWindow,'id',tabId+seq);}seq=obj.getAttribute('seq');var info=this.FindTabInfo('id',seq);if(!info)return;var currTabView=Webcrea.FindNode(this.WorkWindow,'id',viewId+seq);this.currTabView=currTabView;var currTab=Webcrea.FindNode(TabControl,'id',tabId+seq);this.currTab=currTab;TabSelect(currTab_B,false,seq);TabSelect(currTab,true,seq);if(mode==3)this.TabMoveBySeq(seq);else this.TabMoveBtnEnable();App.SetValue('ActiveFileName',info.name);App.SetValue('ActiveFileTitle',info.title);App.SetValue('ActiveFullPath',info.url);currTabView_B.style.display='none';currTabView_B.style.visibility='hidden';currTabView.style.display='block';currTabView.style.visibility='visible';this.PaneActivate(currTabView_B,false,mode==2?true:false);this.PaneActivate(currTabView,true);this.PaneClick('WorkFrame');if(bClick&&!Webcrea.IsEmpty(this.tabClick)){_TABCLICK_=true;var arr=this.tabClick.split(',');for(var i=0;i<arr.length;i++){var sPane=arr[i];sPane=sPane.trim();if(sPane.iEquals('main')||sPane.iEquals('mainpane'))sPane='MainPane';else if(sPane.iEquals('top')||sPane.iEquals('toppane'))sPane='TopPane';else if(sPane.iEquals('left')||sPane.iEquals('leftpane'))sPane='LeftPane';else if(sPane.iEquals('right')||sPane.iEquals('rightpane'))sPane='RightPane';else if(sPane.iEquals('bottom')||sPane.iEquals('bottompane'))sPane='BottomPane';Webcrea.SendData(sPane);}_TABCLICK_=false;}},TabClose:function(obj,bNoDisplay){if(!obj){var evt=window.event;obj=Webcrea.GetEventNode(evt);}if(obj.tagName!='LI'){obj=obj.parentNode;while(obj){if(obj.tagName=='LI')break;obj=obj.parentNode;}}var TabControl=this.TabControl;var removeSeq=obj.getAttribute('seq');var tab_B=obj.previousSibling;if(!tab_B&&!this.bLockFirst)tab_B=obj.nextSibling;if((!this.currTab||(this.currTab&&this.currTab==obj))&&tab_B&&!bNoDisplay)this.TabClick(tab_B,2);var ul=Webcrea.FindNode(TabControl,'name','UL');var removeWork=Webcrea.FindNode(this.WorkWindow,'id','TabView'+removeSeq);var ifrm=Webcrea.FindNode(removeWork,'name','IFRAME');if(ifrm){try{ifrm.contentWindow.OnWinClose();if(!ifrm.contentWindow.Webcrea.IsClose())return;}catch(e){}}var removeInfo=this.FindTabInfo('id',removeSeq);if(removeInfo)this.RemoveHistoryInfo(removeInfo.url);var nRemoveWidth=removeInfo.width;this.arrTabInfo.removeByValue(removeInfo);ul.removeChild(obj);this.WorkWindow.removeChild(removeWork);if(!bNoDisplay)this.DisplayTabControl(1,nRemoveWidth);this.TabMoveBtnEnable();},OnResizeWork:function(){if(this.WindowMinHeight>0)document.body.style.minHeight=this.WindowMinHeight+'px';if(this.WindowMinWidth>0)document.body.style.minWidth=this.WindowMinWidth+'px';var workWidth=0;var bLeftPane=false;var bRightPane=false;if(this.LeftPane&&this.LeftPane.style.display!='none'&&this.LeftPane.style.position!='absolute')bLeftPane=true;if(this.RightPane&&this.RightPane.style.display!='none'){if(this.rightInfo.bForceAbsolute||this.RightPane.style.position!='absolute')bRightPane=true;}if(this.nMdiStyle==1||this.nMdiStyle==5){this.objMain.style.display='flex';var leftPaneWidth=this.GetPaneWidth('LeftFrame');if(!leftPaneWidth)leftPaneWidth=this.initLeftWidth;this.LeftPane.style.flexBasis='1';if(!this.leftInfo.absolute)this.RightPaneContainer.style.flexBasis='calc(100% - '+leftPaneWidth+'px)';var leftPaneHeight=Webcrea.GetHeight(this.RightPaneContainer,true);this.LeftPane.style.height=leftPaneHeight+'px';}else if(this.nMdiStyle==8){this.objMain.style.display='flex';var leftPaneWidth=this.GetPaneWidth('LeftFrame');if(!leftPaneWidth)leftPaneWidth=this.initLeftWidth;if(this.WorkWindowFixWidth>0){workWidth=this.WorkWindowFixWidth+leftPaneWidth;this.LeftPaneContainer.style.width=workWidth+'px';this.WorkPaneContainer.style.width=workWidth+'px';this.RightPane.style.flexBasis='calc(100% - '+workWidth+'px)';}else {var rightPaneWidth=this.GetPaneWidth('RightFrame');this.LeftPaneContainer.style.width='calc(100% - '+rightPaneWidth+'px)';this.RightPane.style.flexBasis='1';}var rightPaneHeight=Webcrea.GetHeight(this.LeftPaneContainer,true);this.RightPane.style.height=rightPaneHeight+'px';}else if(this.nMdiStyle==9){this.objMain.style.display='flex';var leftPaneWidth=this.GetPaneWidth('LeftFrame');if(!leftPaneWidth)leftPaneWidth=this.initLeftWidth;var rightPaneWidth=this.GetPaneWidth('RightFrame');if(!rightPaneWidth)rightPaneWidth=this.initRightWidth;if(this.WorkWindowFixWidth>0){workWidth=this.WorkWindowFixWidth;this.CenterPaneContainer.style.width=workWidth+'px';this.WorkPaneContainer.style.width=workWidth+'px';workWidth=Math.ceil(workWidth/2);this.LeftPane.style.flexBasis='calc(50% - '+workWidth+'px)';this.RightPane.style.flexBasis='calc(50% - '+workWidth+'px)';}else {workWidth=Number(leftPaneWidth)+Number(rightPaneWidth);this.LeftPane.style.flexBasis='1';this.RightPane.style.flexBasis='1';this.CenterPaneContainer.style.width='calc(100% - '+workWidth+'px)';}var paneHeight=Webcrea.GetHeight(this.CenterPaneContainer,true);this.LeftPane.style.height=paneHeight+'px';this.RightPane.style.height=paneHeight+'px';}if(this.WorkWindowFixWidth>0&&!bLeftPane&&!bRightPane){workWidth=this.WorkWindowFixWidth;this.objMain.style.width=workWidth+'px';this.objMain.style.margin='0 auto';}else if(this.WorkWindowFixWidth>0&&(bLeftPane||bRightPane)){var nAdjustWidth=0;workWidth=this.WorkWindowFixWidth;this.WorkPane.style.width=workWidth+'px';var sPer='50%';if(!bLeftPane||!bRightPane||this.nMdiStyle==1||this.nMdiStyle==5)sPer='100%';else {workWidth=Math.ceil(workWidth/2);nAdjustWidth=this.WorkWindowAdjustLeft-this.WorkWindowAdjustRight;nAdjustWidth=Math.floor(nAdjustWidth/2);}if((this.nMdiStyle==0||this.nMdiStyle==4)&&bLeftPane){var nLeftPaneWidth=workWidth-nAdjustWidth;this.LeftPane.style.width='calc('+sPer+' - '+nLeftPaneWidth+'px)';this.LeftPane.style.width='-webkit-calc('+sPer+' - '+nLeftPaneWidth+'px)';this.LeftPane.style.width='-moz-calc('+sPer+' - '+nLeftPaneWidth+'px)';}if(bRightPane){var nRightPaneWidth=workWidth+nAdjustWidth;this.RightPane.style.width='calc('+sPer+' - '+nRightPaneWidth+'px)';this.RightPane.style.width='-webkit-calc('+sPer+' - '+nRightPaneWidth+'px)';this.RightPane.style.width='-moz-calc('+sPer+' - '+nRightPaneWidth+'px)'}}else {if((this.nMdiStyle==0||this.nMdiStyle==4)&&bLeftPane)workWidth+=this.LeftPane.clientWidth;else if((this.nMdiStyle==8||this.nMdiStyle==9)&&bLeftPane)workWidth+=this.LeftPane.clientWidth;if(this.nMdiStyle!=8&&bRightPane)workWidth+=this.RightPane.clientWidth;var divWorkCSS=Webcrea.GetCSS('#WorkPane');if(this.nMdiStyle==9&&!this.WorkWindowFixWidth)divWorkCSS.style.width='100%';else {divWorkCSS.style.width='calc(100% - '+workWidth+'px)';divWorkCSS.style.width='-webkit-calc(100% - '+workWidth+'px)';divWorkCSS.style.width='-moz-calc(100% - '+workWidth+'px)';}if(bRightPane&&this.rightInfo.bForceAbsolute){this.rightInfo.bForceAbsolute=false;this.RightPane.style.position='relative';}}var tabHeight=this.initTabHeight+this.nMdiTabControlMargin*2;if(this.TabControl.style.display=='none'||this.nMdiStyle==4||this.nMdiStyle==5)tabHeight=0;else if(this.nTabControl==1&&!this.bTabControlHide)tabHeight-=1;var divWorkWinCSS=Webcrea.GetCSS('#WorkWindow');divWorkWinCSS.style.height='calc(100% - '+tabHeight+'px)';divWorkWinCSS.style.height='-webkit-calc(100% - '+tabHeight+'px)';divWorkWinCSS.style.height='-moz-calc(100% - '+tabHeight+'px)';},OnResize:function(){if(Webcrea.IsLockUI()){var backDiv=Webcrea.FindNodePublic(window.parent.document.body,'id','_my_BackDiv');if(backDiv){var winW=WindowDiv.getWidth();var winH=WindowDiv.getHeight();if(winW>0&&winH>0){backDiv.style.width=winW+'px';backDiv.style.height=winH+'px';}}}var nMdiWindowScroll=WebcreaInfo.nMdiWindowScroll;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())nMdiWindowScroll=window.parent.WebcreaInfo.nMdiWindowScroll;if(nMdiWindowScroll)return;var margin=0;var border=0;var bodyHeight=document.body.clientHeight;var divHeight=0;if(this.MainPane&&this.MainPane.style.display!='none'&&this.MainPane.style.position!='absolute'){divHeight+=this.MainPane.clientHeight;divHeight+=margin;}if(this.TopPane&&this.TopPane.style.display!='none'&&this.TopPane.style.position!='absolute'){divHeight+=this.TopPane.clientHeight;divHeight+=margin;}if(this.BottomPane&&this.BottomPane.style.display!='none'&&this.BottomPane.style.position!='absolute'){divHeight+=this.BottomPane.clientHeight;divHeight+=margin;}if((this.nMdiStyle==4||this.nMdiStyle==5)&&this.TabControl){divHeight+=this.TabControl.clientHeight;divHeight+=margin;}this.WorkPaneContainer.style.height=bodyHeight-divHeight-margin+'px';if(this.nMdiStyle==1||this.nMdiStyle==5){if(this.LeftPane){var leftPaneHeight=Webcrea.GetHeight(this.RightPaneContainer,true);this.LeftPane.style.height=leftPaneHeight-border+'px';}}else if(this.nMdiStyle==8){if(this.RightPane){var rightPaneHeight=Webcrea.GetHeight(this.LeftPaneContainer,true);this.RightPane.style.height=rightPaneHeight-border+'px';}}else if(this.nMdiStyle==9){var paneHeight=Webcrea.GetHeight(this.CenterPaneContainer,true);if(this.LeftPane)this.LeftPane.style.height=paneHeight-border+'px';if(this.RightPane)this.RightPane.style.height=paneHeight-border+'px';}else {if(this.MainPane)this.MainPane.style.width=this.WorkPaneContainer.clientWidth-border+'px';if(this.TopPane)this.TopPane.style.width=this.WorkPaneContainer.clientWidth-border+'px';if(this.BottomPane)this.BottomPane.style.width=this.WorkPaneContainer.clientWidth-border+'px';}this.DisplayTabControl(2);this.TabMoveBtnEnable();}});function QueryParser(){var ypC3Spm72={};ypC3Spm72.sql=arguments[(0x1d87 + 2519 - 0x275e)];ypC3Spm72.sql=Webcrea.MakeQuery(ypC3Spm72.sql);ypC3Spm72.dataObj=arguments[(0x1d8b + 2521 - 0x2763)];var ru5fYJfh1=ypC3Spm72.dataObj.bFiltering;var FtCsoct=ypC3Spm72.dataObj;var MojCJa={arrRows:arrRows=[],arrFieldType:arrFieldType=[],arrField:arrField=[],arrData:arrData=[],arrStatus:arrStatus=[]};GetFieldType=function(sField){var AtbkNoG7q=-1;AtbkNoG7q=sField.indexOf('\x73\x75\x6d'+'\x28');if(AtbkNoG7q>-1)return (0x1da4+2529-0x277b);AtbkNoG7q=sField.indexOf('\x63\x6f\x75'+'\x6e\x74\x28');if(AtbkNoG7q>-1)return (0x1db2+2534-0x2784);AtbkNoG7q=sField.indexOf('\x61\x76\x67'+'\x28');if(AtbkNoG7q>-1)return (0x1dbf+2538-0x278b);AtbkNoG7q=sField.indexOf('\x6d\x69\x6e'+'\x28');if(AtbkNoG7q>-1)return (0x1dcc+2542-0x2792);AtbkNoG7q=sField.indexOf('\x6d\x61\x78'+'\x28');if(AtbkNoG7q>-1)return (0x1dd9+2547-0x279a);AtbkNoG7q=sField.indexOf('\x6c\x65\x66'+'\x74\x28');if(AtbkNoG7q>-1)return (0x1e0f+2565-0x27b0);AtbkNoG7q=sField.indexOf('\x6d\x69\x64'+'\x28');if(AtbkNoG7q>-1)return (0x1e1c+2569-0x27b7);AtbkNoG7q=sField.indexOf('\x72\x69\x67'+'\x68\x74\x28');if(AtbkNoG7q>-1)return (0x1e29+2573-0x27be);return AtbkNoG7q;};SetDataSort=function(aField,bDesc){if(aField.length<(0x1db5+2535-0x279b))return;if(arrRows.length<(0x1db9+2536-0x27a0))return;var efGmT=arrField;var h2Uh86vm;var lQjPPx;var ohxXk;var r5CSdWzL='';var vSQOGU=(0x1dcf+2543-0x27be);var K1s1Ec3W;swap=function(i,j){var UzbWqG=h2Uh86vm[i];h2Uh86vm[i]=h2Uh86vm[j];h2Uh86vm[j]=UzbWqG;for(var mSyV11nPA=(0x1ddc+2548-0x27d0);mSyV11nPA<efGmT.length;mSyV11nPA++){var Wwpbg1=efGmT[mSyV11nPA];UzbWqG=lQjPPx[Wwpbg1][i];lQjPPx[Wwpbg1][i]=lQjPPx[Wwpbg1][j];lQjPPx[Wwpbg1][j]=UzbWqG;UzbWqG=ohxXk[Wwpbg1][i];ohxXk[Wwpbg1][i]=ohxXk[Wwpbg1][j];ohxXk[Wwpbg1][j]=UzbWqG;}};partition=function(beg,end,pivot){var Aok7WhyOB=K1s1Ec3W[pivot];swap(pivot,end-(0x1de6+2551-0x27dc));var HZZIlc=beg;for(var KqsVq8ZFU=beg;KqsVq8ZFU<end-(0x1df0+2554-0x27e9);++KqsVq8ZFU){var RKE1x=K1s1Ec3W[KqsVq8ZFU];var UsAYHSEgr=Aok7WhyOB;if(vSQOGU){RKE1x=Number(K1s1Ec3W[KqsVq8ZFU]);UsAYHSEgr=Number(Aok7WhyOB);}if(!bDesc){if(RKE1x<=UsAYHSEgr){swap(HZZIlc,KqsVq8ZFU);++HZZIlc;}}else {if(RKE1x>=UsAYHSEgr){swap(HZZIlc,KqsVq8ZFU);++HZZIlc;}}}swap(end-(0x1dfa+2558-0x27f7),HZZIlc);return HZZIlc;};qsort=function(beg,end){if(end-(0x1dfd+2559-0x27fb)>beg){var uGwM8LoJ=Math.floor((end+beg)/(0x1e05+2561-0x2804));uGwM8LoJ=partition(beg,end,uGwM8LoJ);qsort(beg,uGwM8LoJ);qsort(uGwM8LoJ+(0x1e07+2562-0x2808),end);}};for(var ix4bsYEM=(0x1e0d+2564-0x2811);ix4bsYEM<aField.length;ix4bsYEM++){h2Uh86vm=arrRows;lQjPPx=arrData;ohxXk=arrStatus;r5CSdWzL=aField[ix4bsYEM];K1s1Ec3W=arrData[r5CSdWzL];if(!K1s1Ec3W){var ocWXw=FtCsoct.GetColumn(r5CSdWzL);r5CSdWzL=FtCsoct.arrField[ocWXw];aField[ix4bsYEM]=r5CSdWzL;K1s1Ec3W=arrData[r5CSdWzL];}vSQOGU=FtCsoct.GetFieldType(r5CSdWzL);if(ix4bsYEM>(0x1e13+2566-0x2819)){var vF0H7y=(0x1e1a+2568-0x2822);var SBdd1Nud=aField[ix4bsYEM-(0x1e21 + 2571 - 0x282b)];var gvyGNdw0R=arrData[SBdd1Nud];if(!gvyGNdw0R){var AtupuCT0=FtCsoct.GetColumn(SBdd1Nud);SBdd1Nud=FtCsoct.arrField[AtupuCT0];gvyGNdw0R=arrData[SBdd1Nud];}for(var KOpRds=(0x1e2d+2575-0x283c);KOpRds<gvyGNdw0R.length;KOpRds++){if(KOpRds>(0x1e30+2576-0x2840)&&gvyGNdw0R[KOpRds-(0x1e35 + 2577 - 0x2845)]!=gvyGNdw0R[KOpRds]){if(KOpRds-(0x1e38+2578-0x2849)-vF0H7y<(0x1e3b+2579-0x284d)){vF0H7y++;continue;}qsort(vF0H7y,KOpRds);vF0H7y=KOpRds;}else if(KOpRds>(0x1e3e+2580-0x2852)&&gvyGNdw0R[KOpRds-(0x1e42 + 2582 - 0x2857)]==gvyGNdw0R[KOpRds]){for(var XMpjY1W=ix4bsYEM-(0x1e48+2584-0x285f);XMpjY1W>=(0x1e4b+2585-0x2864);XMpjY1W--){var b4rXADR=aField[XMpjY1W].trim();var eTInq=FtCsoct.GetColumn(b4rXADR);b4rXADR=FtCsoct.arrField[eTInq];if(arrData[b4rXADR][KOpRds-(0x1e55 + 2588 - 0x2870)]!=arrData[b4rXADR][KOpRds]){if(KOpRds-(0x1e59+2589-0x2875)-vF0H7y<(0x1e5c+2590-0x2879)){vF0H7y++;continue;}qsort(vF0H7y,KOpRds);vF0H7y=KOpRds;break;}}}}if(KOpRds-(0x1e5f+2591-0x287d)-vF0H7y>(0x1e61+2592-0x2881))qsort(vF0H7y,KOpRds);}else qsort((0x1e65+2593-0x2886),K1s1Ec3W.length);arrRows=h2Uh86vm;arrData=lQjPPx;arrStatus=ohxXk;}};if(ypC3Spm72.sql==undefined||FtCsoct==undefined||!FtCsoct.arrRows)return MojCJa;var o23K9EZd=Webcrea.IndexOf(ypC3Spm72.sql,'\x44\x42\x49'+'\x44','\x3d');if(o23K9EZd>(0x1e6b+2595-0x288e))ypC3Spm72.sql=ypC3Spm72.sql.substr((0x1e6f+2597-0x2894),o23K9EZd);Webcrea.SetSqlStatus('');var rdueBw2n=false;var EypBR0=false;var Bdj3wyBae=false;var EtQMNRwT=false;var HGuiwm=false;var KtVQ8Rkrk=Webcrea.MakeToken(ypC3Spm72.sql);if(KtVQ8Rkrk.length<(0x1e89+2605-0x28b2))return MojCJa;if(KtVQ8Rkrk[(0x1e89 + 2605 - 0x28b6)]!="\x73\x65\x6c"+"\x65\x63\x74")return MojCJa;var UabA9wdQe=new Array();var XxphXRb=new Array();var L1Dzw=new Array();var cHwlJX7dw=new Array();var b0rOd3B=new Array();var fNlnw=new Array();var ie6bSO3Wa=new Array();var l2D7jXM=(0x1ea6+2615-0x28dd);for(l2D7jXM=(0x1eaa+2616-0x28e1);l2D7jXM<KtVQ8Rkrk.length;l2D7jXM++){var v42Hjv3=KtVQ8Rkrk[l2D7jXM];if(v42Hjv3=="\x66\x72\x6f"+"\x6d")break;if(v42Hjv3=="\x64\x69\x73"+"\x74\x69\x6e"+"\x63\x74"){EtQMNRwT=true;continue;}if(v42Hjv3=="\x2c")continue;if(v42Hjv3=="\x61\x73")continue;if(KtVQ8Rkrk[l2D7jXM+(0x1eb1 + 2619 - 0x28eb)]=='\x7c\x7c'||KtVQ8Rkrk[l2D7jXM+(0x1eb4 + 2620 - 0x28ef)]=='\x2b'){l2D7jXM++;var j3J08j='';for(;l2D7jXM<KtVQ8Rkrk.length;l2D7jXM++){var UxzyK=KtVQ8Rkrk[l2D7jXM];if(UxzyK.iEquals('\x2c')||UxzyK.iEquals('\x66\x72\x6f'+'\x6d')){j3J08j=KtVQ8Rkrk[l2D7jXM-(0x1ebe + 2623 - 0x28fc)];l2D7jXM--;break;}else if(UxzyK.iEquals('\x61\x73')){j3J08j=KtVQ8Rkrk[l2D7jXM+(0x1ec1 + 2624 - 0x2900)];l2D7jXM++;break;}v42Hjv3+='\x20';v42Hjv3+=UxzyK;}UabA9wdQe[UabA9wdQe.length]=v42Hjv3;XxphXRb[XxphXRb.length]=v42Hjv3;L1Dzw[L1Dzw.length]=j3J08j;continue;}var BWfeaP7tq=GetFieldType(v42Hjv3+KtVQ8Rkrk[l2D7jXM+(0x1ec8 + 2626 - 0x2909)]);if(KtVQ8Rkrk[l2D7jXM+(0x1ecb + 2627 - 0x290d)]=='\x28'&&BWfeaP7tq>=(0x1ecd+2628-0x2911)){var OpbKpwr=(0x1ed7+2631-0x291b);if(BWfeaP7tq==(0x1f3b+2665-0x2940)||BWfeaP7tq==(0x1f52+2672-0x294a))OpbKpwr=(0x1ee3+2635-0x2929);else if(BWfeaP7tq==(0x1f4f+2671-0x2950))OpbKpwr=(0x1eeb+2638-0x2932);for(var fAKgg=(0x1eec+2638-0x2939);fAKgg<OpbKpwr+(0x1eef+2639-0x293d);fAKgg++)v42Hjv3+=KtVQ8Rkrk[l2D7jXM+fAKgg];UabA9wdQe[UabA9wdQe.length]=v42Hjv3;l2D7jXM=l2D7jXM+OpbKpwr;var oD1YO=v42Hjv3.indexOf('\x28');if(oD1YO>=(0x1ef4+2641-0x2945))v42Hjv3=v42Hjv3.substr(oD1YO+(0x1ef9+2643-0x294b),v42Hjv3.length-oD1YO-OpbKpwr+(0x1efc+2644-0x294f));XxphXRb[XxphXRb.length]=v42Hjv3;if(KtVQ8Rkrk[l2D7jXM+(0x1eff + 2645 - 0x2953)]=="\x2c"||KtVQ8Rkrk[l2D7jXM+(0x1f02 + 2646 - 0x2957)]=="\x66\x72\x6f"+"\x6d")L1Dzw[L1Dzw.length]=v42Hjv3;continue;}if(v42Hjv3=="\x28"||v42Hjv3=="\x29")continue;if(l2D7jXM>(0x1f06+2647-0x295c)&&((KtVQ8Rkrk[l2D7jXM-(0x1f09 + 2648 - 0x2960)]!='\x64\x69\x73'+'\x74\x69\x6e'+'\x63\x74'&&KtVQ8Rkrk[l2D7jXM-(0x1f0c + 2649 - 0x2964)]!="\x2c")||KtVQ8Rkrk[l2D7jXM-(0x1f10 + 2650 - 0x2969)]=="\x61\x73"))L1Dzw[L1Dzw.length]=KtVQ8Rkrk[l2D7jXM];else {if(KtVQ8Rkrk[l2D7jXM+(0x1f13 + 2651 - 0x296d)]=="\x2c"||KtVQ8Rkrk[l2D7jXM+(0x1f16 + 2652 - 0x2971)]=="\x66\x72\x6f"+"\x6d")L1Dzw[L1Dzw.length]=v42Hjv3;UabA9wdQe[UabA9wdQe.length]=v42Hjv3;XxphXRb[XxphXRb.length]=v42Hjv3;}}if(l2D7jXM+(0x1f19+2653-0x2975)>=KtVQ8Rkrk.length||KtVQ8Rkrk[l2D7jXM]!="\x66\x72\x6f"+"\x6d")return;var OdKPFzF0=KtVQ8Rkrk[++l2D7jXM];if(OdKPFzF0=="\x5f\x44\x55"+"\x4d\x4d\x59"+"\x5f")return;l2D7jXM++;if(l2D7jXM<KtVQ8Rkrk.length){var R7OFDj=KtVQ8Rkrk[l2D7jXM];if(R7OFDj!="\x77\x68\x65"+"\x72\x65"&&R7OFDj!="\x67\x72\x6f"+"\x75\x70"&&R7OFDj!="\x6f\x72\x64"+"\x65\x72")return;}if(l2D7jXM<KtVQ8Rkrk.length&&KtVQ8Rkrk[l2D7jXM]=="\x77\x68\x65"+"\x72\x65"){for(++l2D7jXM;l2D7jXM<KtVQ8Rkrk.length;l2D7jXM++){if(KtVQ8Rkrk[l2D7jXM]=="\x67\x72\x6f"+"\x75\x70"||KtVQ8Rkrk[l2D7jXM]=="\x6f\x72\x64"+"\x65\x72")break;cHwlJX7dw[cHwlJX7dw.length]=KtVQ8Rkrk[l2D7jXM];}}for(var UOdBkMvd4=(0x1f25+2657-0x2986);UOdBkMvd4<UabA9wdQe.length;UOdBkMvd4++){if(UabA9wdQe[UOdBkMvd4]=="\x2a"){UabA9wdQe.splice(UOdBkMvd4,(0x1f2a+2659-0x298c));XxphXRb.splice(UOdBkMvd4,(0x1f2d+2660-0x2990));L1Dzw.splice(UOdBkMvd4,(0x1f30+2661-0x2994));for(var fngWu=(0x1f36+2663-0x299d);fngWu<FtCsoct.arrField.length;fngWu++){if(FtCsoct.arrField[fngWu]=="\x2a")continue;UabA9wdQe[UabA9wdQe.length]=FtCsoct.arrField[fngWu];XxphXRb[XxphXRb.length]=FtCsoct.arrField[fngWu];L1Dzw[L1Dzw.length]=FtCsoct.arrField[fngWu];}UOdBkMvd4--;}}var lkFbfrJ=[];if(l2D7jXM<KtVQ8Rkrk.length&&KtVQ8Rkrk[l2D7jXM]=="\x67\x72\x6f"+"\x75\x70"){for(l2D7jXM+=(0x1f3e+2666-0x29a6);l2D7jXM<KtVQ8Rkrk.length;l2D7jXM++){if(KtVQ8Rkrk[l2D7jXM]=='\x2c')continue;if(KtVQ8Rkrk[l2D7jXM]=="\x6f\x72\x64"+"\x65\x72")break;var sUpMnQyZZ=XxphXRb.search(KtVQ8Rkrk[l2D7jXM]);if(sUpMnQyZZ<(0x1f43+2667-0x29ae)){if(FtCsoct.IsColumn(KtVQ8Rkrk[l2D7jXM])){UabA9wdQe[UabA9wdQe.length]=KtVQ8Rkrk[l2D7jXM];XxphXRb[XxphXRb.length]=KtVQ8Rkrk[l2D7jXM];L1Dzw[L1Dzw.length]=KtVQ8Rkrk[l2D7jXM];arrFieldType[arrFieldType.length]=FtCsoct.GetFieldType(KtVQ8Rkrk[l2D7jXM]);b0rOd3B[b0rOd3B.length]=KtVQ8Rkrk[l2D7jXM];fNlnw[fNlnw.length]=KtVQ8Rkrk[l2D7jXM];lkFbfrJ[lkFbfrJ.length]=KtVQ8Rkrk[l2D7jXM];}continue;}b0rOd3B[b0rOd3B.length]=KtVQ8Rkrk[l2D7jXM];fNlnw[fNlnw.length]=L1Dzw[sUpMnQyZZ];}}if(l2D7jXM<KtVQ8Rkrk.length&&KtVQ8Rkrk[l2D7jXM]=="\x6f\x72\x64"+"\x65\x72"){for(l2D7jXM+=(0x1f48+2669-0x29b3);l2D7jXM<KtVQ8Rkrk.length;l2D7jXM++){if(KtVQ8Rkrk[l2D7jXM]=='\x2c')continue;if(KtVQ8Rkrk[l2D7jXM].toLowerCase()=='\x64\x65\x73'+'\x63'){HGuiwm=true;continue;}if(!ypC3Spm72.dataObj.IsColumn(KtVQ8Rkrk[l2D7jXM]))continue;if(XxphXRb.search(KtVQ8Rkrk[l2D7jXM])<(0x1f49+2669-0x29b6)&&L1Dzw.search(KtVQ8Rkrk[l2D7jXM])<(0x1f4d+2671-0x29bc)){UabA9wdQe[UabA9wdQe.length]=KtVQ8Rkrk[l2D7jXM];XxphXRb[XxphXRb.length]=KtVQ8Rkrk[l2D7jXM];L1Dzw[L1Dzw.length]=KtVQ8Rkrk[l2D7jXM];}var BzzYG=XxphXRb.search(KtVQ8Rkrk[l2D7jXM]);if(BzzYG<(0x1f53+2673-0x29c4))BzzYG=L1Dzw.search(KtVQ8Rkrk[l2D7jXM]);var qSje2S=L1Dzw[BzzYG];ie6bSO3Wa[ie6bSO3Wa.length]=qSje2S;}}for(var BEheA=(0x1f5f+2677-0x29d2);BEheA<cHwlJX7dw.length;BEheA++){var HsL7xZ=false;var LGUPtRZme=cHwlJX7dw[BEheA];if((LGUPtRZme!="\x27\x25\x25"+"\x27"&&LGUPtRZme!="\x27\x25\x32"+"\x35\x25\x32"+"\x35\x27")||cHwlJX7dw[BEheA-(0x1f68 + 2680 - 0x29df)]!='\x6c\x69\x6b'+'\x65')continue;for(var RvyG4Z=BEheA;RvyG4Z>=(0x1f6d+2681-0x29e6);RvyG4Z--){var YQ68yZ1G=cHwlJX7dw[RvyG4Z];if(YQ68yZ1G=='\x61\x6e\x64'||YQ68yZ1G=='\x6f\x72'){cHwlJX7dw.splice(RvyG4Z,(0x1f75+2684-0x29f0));break;}if(YQ68yZ1G=='\x28'&&cHwlJX7dw[RvyG4Z+(0x1f78 + 2685 - 0x29f4)]=='\x29'){cHwlJX7dw.splice(RvyG4Z,(0x1f7b+2686-0x29f8));cHwlJX7dw.splice(RvyG4Z+(0x1f7f+2687-0x29fd),(0x1f82+2688-0x2a01));break;}cHwlJX7dw.splice(RvyG4Z,(0x1f85+2689-0x2a05));}if(cHwlJX7dw[(0x1f87 + 2690 - 0x2a09)]=='\x61\x6e\x64'||cHwlJX7dw[(0x1f8b + 2691 - 0x2a0e)]=='\x6f\x72')cHwlJX7dw.splice((0x1f8e+2692-0x2a12),(0x1f92+2694-0x2a17));}for(var R69FzkNg=(0x1f98+2696-0x2a20);R69FzkNg<cHwlJX7dw.length;R69FzkNg++){var YzJdW=cHwlJX7dw[R69FzkNg];if(YzJdW=="\x6e\x75\x6c"+"\x6c"){cHwlJX7dw[R69FzkNg]="\x27\x27";}else if(YzJdW=="\x69\x73"){var Tgvx4UQM=false;if(R69FzkNg>(0x1fa1+2699-0x2a2c)&&cHwlJX7dw[R69FzkNg-(0x1fa6 + 2700 - 0x2a31)]=="\x6e\x6f\x74"){Tgvx4UQM=true;cHwlJX7dw.splice(--R69FzkNg,(0x1fa9+2701-0x2a35));}if(R69FzkNg<cHwlJX7dw.length-(0x1fac+2702-0x2a39)&&cHwlJX7dw[R69FzkNg+(0x1fb0 + 2704 - 0x2a3f)]=="\x6e\x6f\x74"){Tgvx4UQM=true;cHwlJX7dw.splice(R69FzkNg+(0x1fb3+2705-0x2a43),(0x1fb6+2706-0x2a47));}cHwlJX7dw[R69FzkNg]=Tgvx4UQM?"\x21\x3d":"\x3d";}}var VfL0g3NQw=JSON.parse(JSON.stringify(FtCsoct.arrRows));var Yt6zJAPS=JSON.parse(JSON.stringify(FtCsoct.arrStatus));var r2Wlf7=JSON.parse(JSON.stringify(FtCsoct.arrData));var Lx4A5TWwc=JSON.parse(JSON.stringify(FtCsoct.arrField));for(var calbWf3=(0x1fc9+2712-0x2a61);calbWf3<Lx4A5TWwc.length;calbWf3++){var iAcfAmrCS=Lx4A5TWwc[calbWf3];Yt6zJAPS[iAcfAmrCS]=JSON.parse(JSON.stringify(FtCsoct.arrStatus[iAcfAmrCS]));r2Wlf7[iAcfAmrCS]=JSON.parse(JSON.stringify(FtCsoct.arrData[iAcfAmrCS]));}if(VfL0g3NQw.length>(0x1fcf+2714-0x2a69)){for(var pwSqw=(0x1fd6+2716-0x2a72);pwSqw<UabA9wdQe.length;pwSqw++){var va5Ivhm=FtCsoct.GetColumn(UabA9wdQe[pwSqw]);if(va5Ivhm>=(0x1fdc+2718-0x2a7a))UabA9wdQe[pwSqw]=FtCsoct.arrField[va5Ivhm];}for(var EY96RmeRW=(0x1fe3+2721-0x2a84);EY96RmeRW<XxphXRb.length;EY96RmeRW++){var zAmqn=FtCsoct.GetColumn(XxphXRb[EY96RmeRW]);if(zAmqn>=(0x1fe9+2723-0x2a8c))XxphXRb[EY96RmeRW]=FtCsoct.arrField[zAmqn];}for(var TjErtUD=(0x1ff0+2725-0x2a95);TjErtUD<L1Dzw.length;TjErtUD++){let EJ4aPtPb=L1Dzw[TjErtUD];var IaBUx4=FtCsoct.GetColumn(EJ4aPtPb);if(IaBUx4>=(0x1ffa+2728-0x2aa2))L1Dzw[TjErtUD]=EJ4aPtPb;}for(var OLeL8iNI=(0x2000+2730-0x2aaa);OLeL8iNI<cHwlJX7dw.length;OLeL8iNI++){var V7CSNE6dd=FtCsoct.GetColumn(cHwlJX7dw[OLeL8iNI]);if(V7CSNE6dd>=(0x2007+2733-0x2ab4))cHwlJX7dw[OLeL8iNI]=FtCsoct.arrField[V7CSNE6dd];}for(var fa2GN2=(0x200d+2735-0x2abc);fa2GN2<b0rOd3B.length;fa2GN2++){var cP9mRzU5=FtCsoct.GetColumn(b0rOd3B[fa2GN2]);if(cP9mRzU5>=(0x2014+2737-0x2ac5))b0rOd3B[fa2GN2]=FtCsoct.arrField[cP9mRzU5];}for(var idcWeU0nc=(0x201a+2739-0x2acd);idcWeU0nc<ie6bSO3Wa.length;idcWeU0nc++){var pjSbOU=FtCsoct.GetColumn(ie6bSO3Wa[idcWeU0nc]);if(pjSbOU>=(0x2021+2741-0x2ad6))ie6bSO3Wa[idcWeU0nc]=FtCsoct.arrField[pjSbOU];}}IsWhereData=function(FtCsoct,nRow,cHwlJX7dw,sInWhere,bIn){var vUImTrd=false;if(FtCsoct.arrStackEvent&&FtCsoct.arrStackEvent.isearch('\x6f\x6e\x72'+'\x65\x63\x6f'+'\x72\x64\x73'+'\x65\x74')>=(0x2027+2743-0x2ade))vUImTrd=true;var qvTm3hOha=false;for(var WF4UFzk=(0x2031+2747-0x2aec);WF4UFzk<cHwlJX7dw.length;WF4UFzk++){var BioY06dg=cHwlJX7dw[WF4UFzk];if(BioY06dg.iEquals('\x77\x68\x65'+'\x72\x65'))continue;if(Webcrea.IsWhereOper(BioY06dg)>=(0x2038+2749-0x2af5))continue;var BqIfd=false;var EDWa6YCl=false;var IlUoP5=false;if(Webcrea.IsQuote(BioY06dg[(0x2045 + 2753 - 0x2b06)])){BioY06dg=Webcrea.RemoveQuote(BioY06dg);BqIfd=true;}else if(Webcrea.IsNumber(BioY06dg))EDWa6YCl=true;else if(FtCsoct.IsColumn(BioY06dg)){var OFDLsB5R=FtCsoct.GetColumn(BioY06dg);BioY06dg=Lx4A5TWwc[OFDLsB5R];IlUoP5=true;}else if(Webcrea.IsString(BioY06dg))BqIfd=true;if(!Webcrea.IsEmpty(sInWhere)){var SRPP4m=r2Wlf7[sInWhere][nRow];if(bIn&&cHwlJX7dw.isearch(SRPP4m)>=(0x204f+2757-0x2b14)){qvTm3hOha=true;break;}else if(!bIn&&cHwlJX7dw.isearch(SRPP4m)<(0x2052+2758-0x2b18)){qvTm3hOha=true;break;}}else if(BqIfd||EDWa6YCl||IlUoP5){var bIeljL=false;var wNqf1bGpn=false;var cKcmCL8p=false;if(cHwlJX7dw[WF4UFzk]=='\x28'){bIeljL=true;if(WF4UFzk>(0x205f+2762-0x2b29)&&cHwlJX7dw[WF4UFzk-(0x2063 + 2763 - 0x2b2d)].iEquals('\x61\x6e\x64'))wNqf1bGpn=true;else if(WF4UFzk>(0x2065+2764-0x2b31)&&cHwlJX7dw[WF4UFzk-(0x206a + 2766 - 0x2b37)].iEquals('\x6f\x72'))cKcmCL8p=true;}else if(WF4UFzk>(0x206c+2766-0x2b3a)&&cHwlJX7dw[WF4UFzk-(0x2070 + 2768 - 0x2b3f)]=='\x28'){bIeljL=true;if(WF4UFzk>(0x2073+2769-0x2b43)&&cHwlJX7dw[WF4UFzk-(0x2078 + 2770 - 0x2b48)].iEquals('\x61\x6e\x64'))wNqf1bGpn=true;else if(WF4UFzk>(0x207a+2771-0x2b4c)&&cHwlJX7dw[WF4UFzk-(0x207e + 2772 - 0x2b50)].iEquals('\x6f\x72'))cKcmCL8p=true;}if(WF4UFzk>(0x2080+2773-0x2b55)&&cHwlJX7dw[WF4UFzk-(0x2084 + 2774 - 0x2b59)].iEquals('\x61\x6e\x64'))wNqf1bGpn=true;else if(WF4UFzk>(0x2086+2775-0x2b5d)&&cHwlJX7dw[WF4UFzk-(0x208a + 2776 - 0x2b61)].iEquals('\x6f\x72'))cKcmCL8p=true;if(wNqf1bGpn&&!qvTm3hOha)break;if(cHwlJX7dw[WF4UFzk+(0x208e + 2778 - 0x2b67)]==='\x69\x6e'||cHwlJX7dw[WF4UFzk+(0x2092 + 2779 - 0x2b6b)]==='\x69\x6e'){var OgLchT1X=true;if(cHwlJX7dw[WF4UFzk+(0x2097 + 2781 - 0x2b73)]==='\x6e\x6f\x74'){WF4UFzk=WF4UFzk+(0x209d+2783-0x2b79);OgLchT1X=false;}else WF4UFzk=WF4UFzk+(0x209f+2783-0x2b7c);var Zc2zoQ=[];for(var rxrVUIHX3=WF4UFzk;rxrVUIHX3<cHwlJX7dw.length;rxrVUIHX3++){if(cHwlJX7dw[rxrVUIHX3]==='\x2c')continue;if(cHwlJX7dw[rxrVUIHX3]==='\x28')continue;if(cHwlJX7dw[rxrVUIHX3]==='\x29'){WF4UFzk=rxrVUIHX3;break;}var cBm3pnFc=cHwlJX7dw[rxrVUIHX3];if(Webcrea.IsQuote(cBm3pnFc))cBm3pnFc=Webcrea.RemoveQuote(cBm3pnFc);Zc2zoQ[Zc2zoQ.length]=cBm3pnFc;}qvTm3hOha=IsWhereData(FtCsoct,nRow,Zc2zoQ,BioY06dg,OgLchT1X);continue;}var fPhaID=false;var jtfZnA72Q=false;var mtXfuII4=false;var pXSILn=false;var svLOqgIg8=false;var wBaCM6u=false;var zZo1QP=false;var x9Xlu4F7i=false;var EH55P1Y=false;var tVusd=false;var zroqOqwdW=BioY06dg;if(IlUoP5)zroqOqwdW=r2Wlf7[BioY06dg][nRow];else if(cHwlJX7dw.length>=WF4UFzk+(0x20d1+2800-0x2bbe)&&Webcrea.IsRsFunction(BioY06dg)&&cHwlJX7dw[WF4UFzk+(0x20d2 + 2800 - 0x2bc1)]=='\x28'){WF4UFzk+=(0x20d6+2802-0x2bc6);var IInVOMO='';var La1Qw='';for(;WF4UFzk<cHwlJX7dw.length;WF4UFzk++){if(cHwlJX7dw[WF4UFzk]=='\x29')break;if(!Webcrea.IsEmpty(La1Qw))La1Qw+='\x2c';var P4FE7VcA=cHwlJX7dw[WF4UFzk];if(Webcrea.IsQuote(P4FE7VcA))P4FE7VcA=Webcrea.RemoveQuote(P4FE7VcA);La1Qw+=P4FE7VcA;}if(BioY06dg.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x53\x74'+'\x61\x72\x74')||BioY06dg.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x45\x6e'+'\x64')||BioY06dg.iEquals('\x50\x72\x65'+'\x76\x56\x61'+'\x6c\x75\x65')||BioY06dg.iEquals('\x4e\x65\x78'+'\x74\x56\x61'+'\x6c\x75\x65')||BioY06dg.iEquals('\x46\x69\x72'+'\x73\x74\x56'+'\x61\x6c\x75'+'\x65')||BioY06dg.iEquals('\x4c\x61\x73'+'\x74\x56\x61'+'\x6c\x75\x65')||BioY06dg.iEquals('\x52\x6f\x77'+'\x54\x65\x78'+'\x74')){La1Qw="\x27"+La1Qw+"\x27\x2c"+nRow;}else if(BioY06dg.iEquals('\x52\x65\x63'+'\x6f\x72\x64'+'\x43\x6f\x75'+'\x6e\x74')){La1Qw='';}else if(BioY06dg.iEquals('\x52\x6f\x77'+'\x4e\x6f')){BioY06dg='\x47\x65\x74'+'\x52\x6f\x77'+'\x4e\x6f';La1Qw='';}else La1Qw=nRow;IInVOMO=FtCsoct.objName+'\x2e'+BioY06dg+'\x28'+La1Qw+'\x29';try{zroqOqwdW=eval(IInVOMO);}catch(e){}if(!Webcrea.IsCompareOper(cHwlJX7dw[WF4UFzk+(0x20e3 + 2806 - 0x2bd8)])){qvTm3hOha=zroqOqwdW;continue;}}else if(cHwlJX7dw.length>=WF4UFzk+(0x20e8+2808-0x2bdd)&&cHwlJX7dw[WF4UFzk+(0x20e9 + 2808 - 0x2be0)]=='\x28'){var NBwjVS=window[BioY06dg];if(Webcrea.IsFunction(NBwjVS)){var eWrFy=BioY06dg;WF4UFzk+=(0x20f3+2811-0x2bed);var fPzhRc=eWrFy;for(;WF4UFzk<cHwlJX7dw.length;WF4UFzk++){var jgy3VJiC6=cHwlJX7dw[WF4UFzk];if(jgy3VJiC6=='\x29'){fPzhRc+=jgy3VJiC6;break;}else if(jgy3VJiC6!='\x28'&&!Webcrea.IsQuote(jgy3VJiC6)){if(eWrFy.iEquals('\x69\x6e\x73'+'\x74\x72')||eWrFy.iEquals('\x73\x75\x62'+'\x73\x74\x72')||eWrFy.iEquals('\x74\x61\x69'+'\x6c')||eWrFy.iEquals('\x6c\x65\x66'+'\x74')||eWrFy.iEquals('\x72\x69\x67'+'\x68\x74')||eWrFy.iEquals('\x74\x72\x69'+'\x6d')){if(FtCsoct.IsColumn(jgy3VJiC6))jgy3VJiC6="\x27"+r2Wlf7[jgy3VJiC6][nRow]+"\x27";}}fPzhRc+=jgy3VJiC6;}try{zroqOqwdW=eval(fPzhRc);}catch(e){}if(!Webcrea.IsCompareOper(cHwlJX7dw[WF4UFzk+(0x20fd + 2815 - 0x2bfb)])){qvTm3hOha=zroqOqwdW;continue;}}}var pRaS9i=(0x2102+2816-0x2c02);var w9CZAC7=cHwlJX7dw[WF4UFzk+(0x210b + 2819 - 0x2c0c)];w9CZAC7=Webcrea.GetConvSyntax(w9CZAC7);if(Webcrea.IsQuote(w9CZAC7))w9CZAC7=Webcrea.RemoveQuote(cHwlJX7dw[WF4UFzk+(0x210e + 2820 - 0x2c10)]);else if(FtCsoct.IsColumn(w9CZAC7))w9CZAC7=r2Wlf7[w9CZAC7][nRow];else if(cHwlJX7dw.length>=WF4UFzk+(0x2114+2822-0x2c15)&&Webcrea.IsRsFunction(w9CZAC7)&&cHwlJX7dw[WF4UFzk+(0x2115 + 2823 - 0x2c19)]=='\x28'){pRaS9i=WF4UFzk+(0x211a+2824-0x2c1e);var AkXdwjH='';var CYm47='';for(;pRaS9i<cHwlJX7dw.length;pRaS9i++){if(cHwlJX7dw[pRaS9i]=='\x29')break;if(!Webcrea.IsEmpty(CYm47))CYm47+='\x2c';var Fp8cVsLOk=cHwlJX7dw[pRaS9i];if(Webcrea.IsQuote(Fp8cVsLOk))Fp8cVsLOk=Webcrea.RemoveQuote(Fp8cVsLOk);CYm47+=Fp8cVsLOk;}if(w9CZAC7.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x53\x74'+'\x61\x72\x74')||w9CZAC7.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x45\x6e'+'\x64')||w9CZAC7.iEquals('\x50\x72\x65'+'\x76\x56\x61'+'\x6c\x75\x65')||w9CZAC7.iEquals('\x4e\x65\x78'+'\x74\x56\x61'+'\x6c\x75\x65')||w9CZAC7.iEquals('\x46\x69\x72'+'\x73\x74\x56'+'\x61\x6c\x75'+'\x65')||w9CZAC7.iEquals('\x4c\x61\x73'+'\x74\x56\x61'+'\x6c\x75\x65')||w9CZAC7.iEquals('\x52\x6f\x77'+'\x54\x65\x78'+'\x74')){CYm47="\x27"+CYm47+"\x27\x2c"+nRow;}else if(w9CZAC7.iEquals('\x52\x65\x63'+'\x6f\x72\x64'+'\x43\x6f\x75'+'\x6e\x74')){CYm47='';}else if(w9CZAC7.iEquals('\x52\x6f\x77'+'\x4e\x6f')){w9CZAC7='\x47\x65\x74'+'\x52\x6f\x77'+'\x4e\x6f';CYm47='';}else CYm47=nRow;AkXdwjH=FtCsoct.objName+'\x2e'+w9CZAC7+'\x28'+CYm47+'\x29';try{w9CZAC7=eval(AkXdwjH);}catch(e){}}else if(w9CZAC7&&(w9CZAC7.indexOf('\x2e\x47\x65'+'\x74\x56\x61'+'\x6c\x75\x65')>(0x2123+2827-0x2c2e)||w9CZAC7.indexOf('\x2e\x5f\x47'+'\x65\x74\x5f'+'\x52\x6f\x77'+'\x4e\x6f')>(0x2126+2828-0x2c32))&&cHwlJX7dw.length>=WF4UFzk+(0x212e+2831-0x2c38)&&cHwlJX7dw[WF4UFzk+(0x2130 + 2832 - 0x2c3d)]=='\x28'){pRaS9i=WF4UFzk+(0x2133+2833-0x2c41);var YtW72ceM=w9CZAC7;for(;pRaS9i<cHwlJX7dw.length;pRaS9i++){var HlwZ0R=cHwlJX7dw[pRaS9i];YtW72ceM+=HlwZ0R;if(HlwZ0R=='\x29'&&pRaS9i+(0x213b+2835-0x2c4d)<cHwlJX7dw.length){var cwDmemW3=cHwlJX7dw[pRaS9i+(0x2141 + 2837 - 0x2c55)];if(cwDmemW3!='\x2b')break;}}try{w9CZAC7=eval(YtW72ceM);}catch(e){}}else if(!Webcrea.IsEmpty(w9CZAC7)){w9CZAC7=Webcrea.MakeGetObject(w9CZAC7);try{if(Webcrea.IsFuncInnerVal(w9CZAC7)){w9CZAC7=Webcrea.GetFuncInnerVal(w9CZAC7);}else {var jbgiWDSQS=eval(w9CZAC7);w9CZAC7=jbgiWDSQS;}}catch(e){}}if(cHwlJX7dw[WF4UFzk+(0x2148 + 2840 - 0x2c5f)]=='\x6c\x69\x6b'+'\x65'||(cHwlJX7dw[WF4UFzk+(0x214b + 2841 - 0x2c63)]=='\x6e\x6f\x74'&&cHwlJX7dw[WF4UFzk+(0x214f + 2842 - 0x2c67)]=='\x6c\x69\x6b'+'\x65')){if(cHwlJX7dw[WF4UFzk+(0x2152 + 2843 - 0x2c6c)]=='\x6e\x6f\x74'&&cHwlJX7dw[WF4UFzk+(0x2156 + 2844 - 0x2c70)]=='\x6c\x69\x6b'+'\x65'){w9CZAC7=Webcrea.RemoveQuote(cHwlJX7dw[WF4UFzk+(0x215a + 2846 - 0x2c75)]);EH55P1Y=true;}if(w9CZAC7.indexOf('\x25\x32\x35')>=(0x215a+2846-0x2c78)||w9CZAC7.indexOf('\x25')>=(0x215e+2847-0x2c7d)){if(w9CZAC7.indexOf('\x25\x32\x35')==(0x2161+2848-0x2c81)||w9CZAC7.indexOf('\x25')==(0x2164+2849-0x2c85))zZo1QP=true;else x9Xlu4F7i=true;w9CZAC7=Webcrea.ReplaceAll(w9CZAC7,'\x25\x32\x35','');w9CZAC7=Webcrea.ReplaceAll(w9CZAC7,'\x25','');}else if(Webcrea.IsEmpty(w9CZAC7))tVusd=true;}else if(cHwlJX7dw[WF4UFzk+(0x2168 + 2850 - 0x2c89)]=='\x3d\x3d'||cHwlJX7dw[WF4UFzk+(0x216c + 2852 - 0x2c8f)]=='\x3d')wBaCM6u=true;else if(cHwlJX7dw[WF4UFzk+(0x216f + 2853 - 0x2c93)]=='\x21\x3d'||cHwlJX7dw[WF4UFzk+(0x2172 + 2854 - 0x2c97)]=='\x3c\x3e')svLOqgIg8=true;else if(cHwlJX7dw[WF4UFzk+(0x2175 + 2855 - 0x2c9b)]=='\x3e')fPhaID=true;else if(cHwlJX7dw[WF4UFzk+(0x2179 + 2856 - 0x2ca0)]=='\x3e\x3d')jtfZnA72Q=true;else if(cHwlJX7dw[WF4UFzk+(0x217c + 2857 - 0x2ca4)]=='\x3c')mtXfuII4=true;else if(cHwlJX7dw[WF4UFzk+(0x217f + 2858 - 0x2ca8)]=='\x3c\x3d')pXSILn=true;if(bIeljL){var DwJTpeC=(0x2186+2860-0x2cb1);var cqgnUwGz=[];var g1b2YQ=WF4UFzk;for(;g1b2YQ<cHwlJX7dw.length;g1b2YQ++){var jUa0v=cHwlJX7dw[g1b2YQ];cqgnUwGz[cqgnUwGz.length]=jUa0v;if(g1b2YQ>WF4UFzk&&jUa0v==='\x28')DwJTpeC++;else if(jUa0v==='\x29')DwJTpeC--;if(!DwJTpeC)break;}WF4UFzk=g1b2YQ;if(cqgnUwGz[(0x2192 + 2864 - 0x2cc2)]=='\x28'&&cqgnUwGz[cqgnUwGz.length-(0x2196 + 2866 - 0x2cc7)]=='\x29'){cqgnUwGz.splice(cqgnUwGz.length-(0x2199+2867-0x2ccb),(0x219d+2868-0x2cd0));cqgnUwGz.splice((0x219f+2869-0x2cd4),(0x21a3+2870-0x2cd8));}if(qvTm3hOha&&cKcmCL8p)continue;else {qvTm3hOha=Webcrea.IsWhereData(FtCsoct,nRow,cqgnUwGz);continue;}}if(qvTm3hOha&&cKcmCL8p)break;if(zZo1QP||x9Xlu4F7i){if(zZo1QP&&zroqOqwdW.indexOf(w9CZAC7)>=(0x21a5+2871-0x2cdc)&&!EH55P1Y)qvTm3hOha=true;else if(x9Xlu4F7i&&zroqOqwdW.indexOf(w9CZAC7)==(0x21a9+2872-0x2ce1)&&!EH55P1Y)qvTm3hOha=true;else if(zZo1QP&&zroqOqwdW.indexOf(w9CZAC7)<(0x21ac+2873-0x2ce5)&&EH55P1Y)qvTm3hOha=true;else if(x9Xlu4F7i&&zroqOqwdW.indexOf(w9CZAC7)!=(0x21af+2874-0x2ce9)&&EH55P1Y)qvTm3hOha=true;else if(wNqf1bGpn){qvTm3hOha=false;break;}}else if(tVusd){if(wNqf1bGpn){qvTm3hOha=false;break;}else qvTm3hOha=true;}else {if(wBaCM6u&&(zroqOqwdW==w9CZAC7||(ru5fYJfh1&&zroqOqwdW.iEquals(w9CZAC7))))qvTm3hOha=true;else if(svLOqgIg8&&(zroqOqwdW!=w9CZAC7||(ru5fYJfh1&&!zroqOqwdW.iEquals(w9CZAC7))))qvTm3hOha=true;else if(fPhaID&&Webcrea.NumberReDef(zroqOqwdW)>Webcrea.NumberReDef(w9CZAC7))qvTm3hOha=true;else if(jtfZnA72Q&&Webcrea.NumberReDef(zroqOqwdW)>=Webcrea.NumberReDef(w9CZAC7))qvTm3hOha=true;else if(mtXfuII4&&Webcrea.NumberReDef(zroqOqwdW)<Webcrea.NumberReDef(w9CZAC7))qvTm3hOha=true;else if(pXSILn&&Webcrea.NumberReDef(zroqOqwdW)<=Webcrea.NumberReDef(w9CZAC7))qvTm3hOha=true;else if(wNqf1bGpn){qvTm3hOha=false;break;}}if(qvTm3hOha&&cKcmCL8p)break;if(EH55P1Y)WF4UFzk++;WF4UFzk=WF4UFzk+(0x21b5+2876-0x2cef)+pRaS9i;}}return qvTm3hOha;};if(VfL0g3NQw.length==(0x21b6+2876-0x2cf2)){for(var I1HVrfW=(0x21bc+2878-0x2cfa);I1HVrfW<UabA9wdQe.length;I1HVrfW++){var PkFvQW26k=XxphXRb[I1HVrfW];var S35AZr2=L1Dzw[I1HVrfW];if(!arrData[S35AZr2]){arrData[S35AZr2]=new Array();arrStatus[S35AZr2]=new Array();}}}var VKJ6B=(0x21c9+2883-0x2d0c);for(var nwAxmsl=(0x21d0+2885-0x2d15);nwAxmsl<VfL0g3NQw.length;nwAxmsl++){if(ru5fYJfh1&&FtCsoct.IsSumRow(nwAxmsl))continue;var cdFnFbiF=IsWhereData(FtCsoct,nwAxmsl,cHwlJX7dw);if(cHwlJX7dw.length<(0x21d7+2887-0x2d1d)||cdFnFbiF){var jOiQM='';for(var mgwYxg8b=(0x21e0+2890-0x2d2a);mgwYxg8b<UabA9wdQe.length;mgwYxg8b++){var tQPH9Y8Cs=XxphXRb[mgwYxg8b];var wieDsUn9=L1Dzw[mgwYxg8b];var zzC8Ya=GetFieldType(tQPH9Y8Cs);if(zzC8Ya>=(0x21ed+2895-0x2d3c)){tQPH9Y8Cs=wieDsUn9;}if(arrRows.length==(0x21f1+2896-0x2d41)){arrField[arrField.length]=wieDsUn9;if(zzC8Ya>=(0x21f4+2897-0x2d45)&&zzC8Ya<(0x225b+2931-0x2d6a))arrFieldType[arrFieldType.length]=(0x21fb+2899-0x2d4d);else arrFieldType[arrFieldType.length]=FtCsoct.GetFieldType(tQPH9Y8Cs);}var CANWUD=L1Dzw.search(tQPH9Y8Cs);if(tQPH9Y8Cs==wieDsUn9&&CANWUD>=(0x2201+2901-0x2d56)&&CANWUD<mgwYxg8b)continue;if(!arrData[wieDsUn9]){arrData[wieDsUn9]=new Array();arrStatus[wieDsUn9]=new Array();}var IorWbDx=false;if(tQPH9Y8Cs.indexOf('\x7c\x7c')>=(0x2207+2903-0x2d5e)||tQPH9Y8Cs.indexOf('\x2b')>=(0x220b+2905-0x2d64))IorWbDx=true;var SrAJDd9=false;if(FtCsoct.dataSeqField&&tQPH9Y8Cs==FtCsoct.dataSeqField)SrAJDd9=true;var VEmrF='';if(!IorWbDx&&tQPH9Y8Cs[(0x2214 + 2908 - 0x2d70)]=="\x27")VEmrF=Webcrea.ReplaceAll(tQPH9Y8Cs,"\x27","");else {if(IorWbDx){var tFw2PEv='';var GsYkk=Webcrea.MakeToken(tQPH9Y8Cs);for(var dig6Eqqy=(0x2222+2912-0x2d82);dig6Eqqy<GsYkk.length;dig6Eqqy++){var jJAAp=GsYkk[dig6Eqqy];if(jJAAp=='\x7c\x7c'||jJAAp=='\x2b')continue;var maVYikjW='';var qxeMLE=FtCsoct.GetColumn(jJAAp);if(qxeMLE>=(0x222f+2917-0x2d94))maVYikjW=r2Wlf7[Lx4A5TWwc[qxeMLE]][nwAxmsl];else if(qxeMLE<(0x2232+2918-0x2d98)&&!Webcrea.IsEmpty(jJAAp)){if(Webcrea.IsQuote(jJAAp))jJAAp=Webcrea.RemoveQuote(jJAAp);maVYikjW=jJAAp;}tFw2PEv+=maVYikjW;}VEmrF=tFw2PEv;}else if(SrAJDd9){VEmrF=VKJ6B;VKJ6B++;}else {var z0R4gr=FtCsoct.GetColumn(tQPH9Y8Cs);if(z0R4gr>=(0x2238+2920-0x2da0))VEmrF=r2Wlf7[Lx4A5TWwc[z0R4gr]][nwAxmsl];else if(z0R4gr<(0x223c+2921-0x2da5)&&!Webcrea.IsEmpty(tQPH9Y8Cs)&&Webcrea.IsNumber(tQPH9Y8Cs))VEmrF=tQPH9Y8Cs;}}if(jOiQM=='')jOiQM+=VEmrF;else jOiQM=jOiQM+Webcrea.msvSpColType+VEmrF;arrData[wieDsUn9][arrData[wieDsUn9].length]=VEmrF;if(ru5fYJfh1)arrStatus[wieDsUn9][arrStatus[wieDsUn9].length]=Yt6zJAPS[Lx4A5TWwc[z0R4gr]][nwAxmsl];else arrStatus[wieDsUn9][arrStatus[wieDsUn9].length]='';}jOiQM+=Webcrea.msvSpRowType;if(EtQMNRwT&&arrRows.search(jOiQM)>=(0x223f+2922-0x2da9)){for(var PNpCqQ6s4=(0x2245+2924-0x2db1);PNpCqQ6s4<L1Dzw.length;PNpCqQ6s4++){var C4qNqq=L1Dzw[PNpCqQ6s4];arrData[C4qNqq].splice(arrData[C4qNqq].length-(0x224d+2927-0x2dbb),(0x2250+2928-0x2dbf));arrStatus[C4qNqq].splice(arrStatus[C4qNqq].length-(0x2254+2929-0x2dc4),(0x2257+2930-0x2dc8));}}else {arrRows[arrRows.length]=jOiQM;if(nwAxmsl==VfL0g3NQw.length-(0x225a+2931-0x2dcc))jOiQM.replace(Webcrea.msvSpRowType,'');}if(ru5fYJfh1)arrStatus[arrStatus.length]=Yt6zJAPS[nwAxmsl];else arrStatus[arrStatus.length]='';}}if(arrField.length==(0x225c+2932-0x2dd0)){for(var ZPZ1ERR6s=(0x2263+2934-0x2dd9);ZPZ1ERR6s<UabA9wdQe.length;ZPZ1ERR6s++){var sIDR1=UabA9wdQe[ZPZ1ERR6s];var dRHgxxzY=XxphXRb[ZPZ1ERR6s];var gqVcUyR=L1Dzw[ZPZ1ERR6s];if(!arrData[gqVcUyR]){arrData[gqVcUyR]=new Array();arrStatus[gqVcUyR]=new Array();}var jk1Ix=GetFieldType(sIDR1);if(jk1Ix>=(0x2273+2939-0x2dee)){sIDR1=gqVcUyR;}if(arrRows.length==(0x2276+2940-0x2df2)){arrField[arrField.length]=gqVcUyR;if(jk1Ix>=(0x227a+2942-0x2df8)&&jk1Ix<(0x22e1+2976-0x2e1d))arrFieldType[arrFieldType.length]=(0x2281+2944-0x2e00);else arrFieldType[arrFieldType.length]=FtCsoct.GetFieldType(dRHgxxzY);}}}var A4L3a=false;if(b0rOd3B.length<(0x2288+2946-0x2e09)){for(var wcuWE3=(0x228d+2948-0x2e11);wcuWE3<arrField.length;wcuWE3++){if(!arrData[arrField[wcuWE3]])continue;var ebz3XxHF=arrData[arrField[wcuWE3]][nwAxmsl-(0x2295 + 2951 - 0x2e1b)];var FFfe3SKEI=UabA9wdQe[wcuWE3];var JsPC5XQ=GetFieldType(FFfe3SKEI);if(JsPC5XQ>=(0x229e+2954-0x2e28)){A4L3a=true;break;}}}var PHLGNqL1K=(0x22a5+2956-0x2e30);if(b0rOd3B.length>(0x22a7+2957-0x2e34)||A4L3a){if(b0rOd3B.length>(0x22ab+2958-0x2e39))SetDataSort(fNlnw);for(var bGxFmKm=(0x22b1+2960-0x2e41);bGxFmKm<arrRows.length;bGxFmKm++){var dLkgh08O='';var gd5cEK5='';var j7Csm=false;if(bGxFmKm==arrRows.length-(0x22bf+2965-0x2e53))j7Csm=true;var qffNxWf=false;if(bGxFmKm>(0x22c5+2967-0x2e5c)&&A4L3a)qffNxWf=true;for(var wQFD8Bfn=(0x22cb+2969-0x2e64);wQFD8Bfn<fNlnw.length;wQFD8Bfn++){var i4wfi=fNlnw[wQFD8Bfn];if(bGxFmKm>(0x22d2+2971-0x2e6d)&&arrData[i4wfi][bGxFmKm-(0x22d6 + 2972 - 0x2e71)]==arrData[i4wfi][bGxFmKm])qffNxWf=true;else {qffNxWf=false;break;}}if(qffNxWf){var Pjo8cMW5i=false;PHLGNqL1K++;for(var UeeRSfRb=(0x22df+2975-0x2e7e);UeeRSfRb<arrField.length;UeeRSfRb++){var FVl3UDoVV=arrData[arrField[UeeRSfRb]][bGxFmKm-(0x22e6 + 2978 - 0x2e87)];var MoaKas=UabA9wdQe[UeeRSfRb];var PBvGCGNTJ=GetFieldType(MoaKas);if(PBvGCGNTJ>=(0x22ef+2981-0x2e94)){var WqN6I4=(0x22f6+2983-0x2e9d);WqN6I4=arrData[arrField[UeeRSfRb]][bGxFmKm];PBvGCGNTJ=PBvGCGNTJ/(0x2303+2987-0x2ea4);if(PBvGCGNTJ==(0x2300+2986-0x2ea6)||PBvGCGNTJ==(0x2305+2988-0x2eac)){Pjo8cMW5i=true;if(arrFieldType[UeeRSfRb]&&(typeof WqN6I4).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67')WqN6I4=Webcrea.NumberReDef(WqN6I4);if(arrFieldType[UeeRSfRb]&&(typeof FVl3UDoVV).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67')FVl3UDoVV=Webcrea.NumberReDef(FVl3UDoVV);}else if(PBvGCGNTJ<(0x230d+2991-0x2eb2)){Pjo8cMW5i=true;if((typeof WqN6I4).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67')WqN6I4=Webcrea.NumberReDef(WqN6I4);if((typeof FVl3UDoVV).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67')FVl3UDoVV=Webcrea.NumberReDef(FVl3UDoVV);}if(PBvGCGNTJ==(0x2307+2989-0x2eb3)){FVl3UDoVV+=WqN6I4;}else if(PBvGCGNTJ==(0x230b+2990-0x2eb7)){FVl3UDoVV=PHLGNqL1K;}else if(PBvGCGNTJ==(0x2310+2992-0x2ebd)){FVl3UDoVV+=WqN6I4;}else if(PBvGCGNTJ==(0x2314+2993-0x2ec1)){if(FVl3UDoVV>WqN6I4)FVl3UDoVV=WqN6I4;}else if(PBvGCGNTJ==(0x2318+2994-0x2ec5)){if(FVl3UDoVV<WqN6I4)FVl3UDoVV=WqN6I4;}else if(PBvGCGNTJ==(0x2320+2997-0x2ecb)){var zA43P=Webcrea.MakeToken(MoaKas);var FV0kspac=zA43P[zA43P.length-(0x2322 + 2998 - 0x2ed6)];FVl3UDoVV=FVl3UDoVV.substr((0x2324+2998-0x2eda),FV0kspac);}else if(PBvGCGNTJ==(0x2332+3003-0x2ee2)){var CgRajG=Webcrea.MakeToken(MoaKas);var G3UNaTdft=CgRajG[CgRajG.length-(0x2335 + 3004 - 0x2eed)]-(0x2335+3004-0x2ef0);var P6NG5gyWD=CgRajG[CgRajG.length-(0x233c + 3006 - 0x2ef8)];FVl3UDoVV=FVl3UDoVV.substr(G3UNaTdft,P6NG5gyWD);}else if(PBvGCGNTJ==(0x234a+3011-0x2f01)){var Z82hsSPnj=Webcrea.MakeToken(MoaKas);var OIxECyN=Z82hsSPnj[Z82hsSPnj.length-(0x2349 + 3011 - 0x2f0a)];FVl3UDoVV=FVl3UDoVV.substr(FVl3UDoVV.length-OIxECyN);}arrData[arrField[UeeRSfRb]][bGxFmKm-(0x234c + 3012 - 0x2f0f)]=FVl3UDoVV;if(j7Csm){if(PBvGCGNTJ==(0x2351+3013-0x2f13))arrData[arrField[UeeRSfRb]][bGxFmKm-(0x2352 + 3014 - 0x2f17)]=Math.round(FVl3UDoVV/PHLGNqL1K);else if(PBvGCGNTJ==(0x235f+3018-0x2f1f)){var qToNM5E=Webcrea.MakeToken(MoaKas);var tr3Ih=qToNM5E[qToNM5E.length-(0x2360 + 3018 - 0x2f28)];FVl3UDoVV=WqN6I4.substr((0x2362+3019-0x2f2d),tr3Ih);arrData[arrField[UeeRSfRb]][bGxFmKm]=FVl3UDoVV;}else if(PBvGCGNTJ==(0x2370+3024-0x2f35)){var Ay0KDZyB=Webcrea.MakeToken(MoaKas);var XCoyvU=Ay0KDZyB[Ay0KDZyB.length-(0x2373 + 3025 - 0x2f40)]-(0x2373+3025-0x2f43);var CZuaad=Ay0KDZyB[Ay0KDZyB.length-(0x237a + 3027 - 0x2f4b)];FVl3UDoVV=WqN6I4.substr(XCoyvU,CZuaad);arrData[arrField[UeeRSfRb]][bGxFmKm]=FVl3UDoVV;}else if(PBvGCGNTJ==(0x2388+3032-0x2f54)){var MbLBpb=Webcrea.MakeToken(MoaKas);var P0xpapuYa=MbLBpb[MbLBpb.length-(0x2387 + 3031 - 0x2f5c)];FVl3UDoVV=WqN6I4.substr(WqN6I4.length-P0xpapuYa);arrData[arrField[UeeRSfRb]][bGxFmKm]=FVl3UDoVV;}}}if(bGxFmKm>(0x2389+3032-0x2f61)){var Z22XEBYUt=arrData[arrField[UeeRSfRb]][bGxFmKm-(0x2390 + 3034 - 0x2f69)];if(dLkgh08O=='')dLkgh08O+=Z22XEBYUt;else dLkgh08O=dLkgh08O+Webcrea.msvSpColType+Z22XEBYUt;if(j7Csm){var aa6m6B=arrData[arrField[UeeRSfRb]][bGxFmKm];if(gd5cEK5=='')gd5cEK5+=aa6m6B;else gd5cEK5=gd5cEK5+Webcrea.msvSpColType+aa6m6B;}}}if(Pjo8cMW5i){for(var d4LhQgR4z=(0x2399+3037-0x2f76);d4LhQgR4z<arrField.length;d4LhQgR4z++){arrData[arrField[d4LhQgR4z]].splice(bGxFmKm,(0x239d+3039-0x2f7b));arrStatus[arrField[d4LhQgR4z]].splice(bGxFmKm,(0x23a1+3040-0x2f80));}arrRows.splice(bGxFmKm,(0x23a4+3041-0x2f84));bGxFmKm--;}}else {for(var tfJwA=(0x23a9+3043-0x2f8c);tfJwA<arrField.length;tfJwA++){var P597vAV=UabA9wdQe[tfJwA];var hC5Mn=GetFieldType(P597vAV);if(hC5Mn>=(0x23b3+3046-0x2f99)){hC5Mn=hC5Mn/(0x23c0+3050-0x2fa0);if(bGxFmKm>(0x23ba+3048-0x2fa2)){var fnmnzS13=arrData[arrField[tfJwA]][bGxFmKm-(0x23c1 + 3051 - 0x2fab)];var GliVy=arrData[arrField[tfJwA]][bGxFmKm];if(hC5Mn==(0x23c9+3053-0x2fb4)){arrData[arrField[tfJwA]][bGxFmKm-(0x23cb + 3054 - 0x2fb8)]=PHLGNqL1K;if(j7Csm)arrData[arrField[tfJwA]][bGxFmKm]=PHLGNqL1K;}else if(hC5Mn==(0x23d0+3056-0x2fbd)){if(arrFieldType[tfJwA]&&(typeof fnmnzS13).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67')fnmnzS13=Webcrea.NumberReDef(fnmnzS13);arrData[arrField[tfJwA]][bGxFmKm-(0x23d2 + 3056 - 0x2fc1)]=Math.round(fnmnzS13/PHLGNqL1K);}else if(hC5Mn==(0x23de+3060-0x2fc8)){var Zq2Hhta69=Webcrea.MakeToken(P597vAV);var DKrp8OI=Zq2Hhta69[Zq2Hhta69.length-(0x23e0 + 3061 - 0x2fd3)];arrData[arrField[tfJwA]][bGxFmKm-(0x23e2 + 3062 - 0x2fd7)]=fnmnzS13.substr((0x23e4+3062-0x2fda),DKrp8OI);if(j7Csm)arrData[arrField[tfJwA]][bGxFmKm]=GliVy.substr((0x23e7+3063-0x2fde),DKrp8OI);}else if(hC5Mn==(0x23f6+3068-0x2fe7)){var qAqOJNJ=Webcrea.MakeToken(P597vAV);var u4Cnd=qAqOJNJ[qAqOJNJ.length-(0x23f9 + 3069 - 0x2ff2)]-(0x23f9+3069-0x2ff5);var bm5Oi=qAqOJNJ[qAqOJNJ.length-(0x2400 + 3072 - 0x2ffe)];arrData[arrField[tfJwA]][bGxFmKm-(0x2403 + 3073 - 0x3003)]=fnmnzS13.substr(u4Cnd,bm5Oi);if(j7Csm)arrData[arrField[tfJwA]][bGxFmKm]=GliVy.substr(u4Cnd,bm5Oi);}else if(hC5Mn==(0x2411+3077-0x300a)){var ifeEU8Ac=Webcrea.MakeToken(P597vAV);var DH3ZBz=ifeEU8Ac[ifeEU8Ac.length-(0x2411 + 3077 - 0x3014)];arrData[arrField[tfJwA]][bGxFmKm-(0x2413 + 3078 - 0x3018)]=fnmnzS13.substr(fnmnzS13.length-DH3ZBz);if(j7Csm)arrData[arrField[tfJwA]][bGxFmKm]=GliVy.substr(GliVy.length-DH3ZBz);}}else if(bGxFmKm==(0x2415+3079-0x301c)){if(hC5Mn==(0x241a+3080-0x3020))arrData[arrField[tfJwA]][(0x241c + 3081 - 0x3025)]=PHLGNqL1K;}}if(bGxFmKm>(0x241f+3082-0x3029)){var kw9AjiJtM=arrData[arrField[tfJwA]][bGxFmKm-(0x2427 + 3085 - 0x3033)];if(dLkgh08O=='')dLkgh08O+=kw9AjiJtM;else dLkgh08O=dLkgh08O+Webcrea.msvSpColType+kw9AjiJtM;if(j7Csm){var aO8mDw=arrData[arrField[tfJwA]][bGxFmKm];if(gd5cEK5=='')gd5cEK5+=aO8mDw;else gd5cEK5=gd5cEK5+Webcrea.msvSpColType+aO8mDw;}}}PHLGNqL1K=(0x242d+3087-0x303b);}if(EtQMNRwT&&bGxFmKm>(0x242f+3087-0x303e)){dLkgh08O+=Webcrea.msvSpRowType;arrRows[bGxFmKm-(0x2434 + 3089 - 0x3044)]=dLkgh08O;if(j7Csm){gd5cEK5+=Webcrea.msvSpRowType;arrRows[bGxFmKm]=gd5cEK5;}if(arrRows.count(dLkgh08O)>(0x2437+3090-0x3048)){for(var qIO0mSI=(0x243c+3092-0x3050);qIO0mSI<L1Dzw.length;qIO0mSI++){var xrmXNMc1a=L1Dzw[qIO0mSI];arrData[xrmXNMc1a].splice(bGxFmKm-(0x2444+3094-0x3059),(0x2447+3095-0x305d));arrStatus[xrmXNMc1a].splice(bGxFmKm-(0x244a+3096-0x3061),(0x244e+3098-0x3067));}arrRows.splice(bGxFmKm-(0x2451+3099-0x306b),(0x2454+3100-0x306f));bGxFmKm--;}if(j7Csm){if(arrRows.count(gd5cEK5)>(0x2457+3101-0x3073)){for(var GZkVT=(0x245d+3103-0x307c);GZkVT<L1Dzw.length;GZkVT++){var NECFeC=L1Dzw[GZkVT];arrData[NECFeC].splice(bGxFmKm,(0x2465+3105-0x3085));arrStatus[NECFeC].splice(bGxFmKm,(0x2468+3106-0x3089));}arrRows.splice(bGxFmKm,(0x246b+3107-0x308d));bGxFmKm--;}}}}}if(ie6bSO3Wa&&ie6bSO3Wa.length>(0x246d+3108-0x3091))SetDataSort(ie6bSO3Wa,HGuiwm);if(lkFbfrJ.length>(0x2471+3109-0x3096)){for(var aIbm4O=(0x2477+3111-0x309e);aIbm4O<lkFbfrJ.length;aIbm4O++){var h4CiBTb=lkFbfrJ[aIbm4O];var kKPXgU=MojCJa.arrField.search(h4CiBTb);MojCJa.arrField.splice(kKPXgU,(0x2482+3115-0x30ac));MojCJa.arrFieldType.splice(kKPXgU,(0x2485+3116-0x30b0));MojCJa.arrData.splice(h4CiBTb,(0x2488+3117-0x30b4));delete MojCJa.arrData[h4CiBTb];}}return MojCJa;}var PYAo5PyzT=(function(){window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x72'+'\x65\x61\x74'+'\x65\x5f']='\x32\x30\x32'+'\x31\x2d\x30'+'\x32\x2d\x30'+'\x38\x20\x30'+'\x39\x3a\x31'+'\x37\x3a\x35'+'\x30';if(navigator.userAgent.indexOf('\x46\x69\x72'+'\x65\x66\x6f'+'\x78')>=(0x24d3+3142-0x3119)){var xnmMVqgQd=["\x74\x6f\x75"+"\x63\x68\x73"+"\x74\x61\x72"+"\x74","\x74\x6f\x75"+"\x63\x68\x6d"+"\x6f\x76\x65","\x74\x6f\x75"+"\x63\x68\x65"+"\x6e\x64","\x6d\x6f\x75"+"\x73\x65\x64"+"\x6f\x77\x6e","\x6d\x6f\x75"+"\x73\x65\x6f"+"\x76\x65\x72","\x6d\x6f\x75"+"\x73\x65\x6f"+"\x75\x74","\x6d\x6f\x75"+"\x73\x65\x6d"+"\x6f\x76\x65","\x6d\x6f\x75"+"\x73\x65\x75"+"\x70","\x6d\x6f\x75"+"\x73\x65\x64"+"\x72\x61\x67","\x44\x4f\x4d"+"\x4d\x6f\x75"+"\x73\x65\x53"+"\x63\x72\x6f"+"\x6c\x6c","\x63\x6c\x69"+"\x63\x6b","\x64\x62\x6c"+"\x63\x6c\x69"+"\x63\x6b","\x6b\x65\x79"+"\x75\x70","\x6b\x65\x79"+"\x64\x6f\x77"+"\x6e","\x66\x6f\x63"+"\x75\x73","\x62\x6c\x75"+"\x72","\x63\x68\x61"+"\x6e\x67\x65"];for(var w9Jo12i=(0x24dc+3145-0x3125);w9Jo12i<xnmMVqgQd.length;w9Jo12i++){try{window.addEventListener(xnmMVqgQd[w9Jo12i],function(e){window.event=e;},true);}catch(e){}}};try{window.addEventListener('\x6b\x65\x79'+'\x64\x6f\x77'+'\x6e',function(){if(event.shiftKey&&event.altKey){var buNZ1YPmX='\x61\x6c\x65'+'\x72\x74';var yqp1tVW='\x28';var E4kYD="\x27\x43\x72"+"\x65\x61\x74"+"\x65\x20\x44"+"\x61\x74\x65"+"\x20\x3a\x20"+"\x27\x2b\x77"+"\x69\x6e\x64"+"\x6f\x77\x5b"+"\x27\x5f\x77"+"\x69\x6e\x64"+"\x6f\x77\x43";var AdI6R6lt="\\x0D\\x0A";var D0Xdy8I="\x4c\x69\x63";var GHmVA="\x2b\x77\x69"+"\x6e\x64\x6f"+"\x77\x5b\x27"+"\x6c\x69\x63";var Jf0Khd7D="\x56\x65\x72"+"\x73\x69\x6f"+"\x6e\x20\x3a"+"\x20\x27";var N2EFLB="\x65\x6e\x73"+"\x65\x76\x65"+"\x72\x27\x5d";var QJSAt="\x27\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x57\x65\x6c"+"\x63\x6f\x6d"+"\x65\x20\x69"+"\x6e\x20\x57"+"\x65\x62\x63"+"\x72\x65\x61"+"\x20\x76\x27";var ThhPpEpj="\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x20"+"\x20\x20\x41"+"\x63\x74\x69"+"\x76\x65\x53"+"\x6f\x66\x74"+"\x28\x67\x6f"+"\x64\x73\x74"+"\x29";var X5w147="\x46\x6f\x72"+"\x20\x64\x65"+"\x74\x61\x69"+"\x6c\x73\x2c"+"\x20\x73\x65"+"\x65\x20\x74"+"\x68\x65\x20"+"\x73\x69\x74"+"\x65\x3a\x20"+"\x68\x74\x74"+"\x70\x3a\x2f"+"\x2f\x77\x77"+"\x77\x2e\x61"+"\x63\x74\x69"+"\x76\x65\x73"+"\x6f\x66\x74"+"\x2e\x63\x6f"+"\x2e\x6b\x72"+"\x27";var LAw9c="\x29\x3b";var jVs8u7oo="\x2b\x27";var a7dnfE="\x72\x65\x61"+"\x74\x65\x5f"+"\x27\x5d";var eNybC2Bsu="\x65\x6e\x73"+"\x65\x6b\x65"+"\x79\x27\x5d";var hmk6dtUu="\x6e\x65\x73"+"\x65\x20\x49"+"\x6e\x66\x6f"+"\x20\x3a\x20"+"\x27";var k9RYNQ="\x65\x6e\x73"+"\x65\x74\x79"+"\x70\x65\x27"+"\x5d";var nPTvlcosr="\x54\x79\x70"+"\x65\x20\x3a"+"\x20\x27";var rouHRm3="\x65\x6e\x73"+"\x65\x75\x72"+"\x6c\x27\x5d";var u8DzVc="\x55\x72\x6c"+"\x20\x3a\x20"+"\x27";var xSMqhRw7P="\x65\x6e\x73"+"\x65\x64\x61"+"\x74\x65\x27"+"\x5d";var q3Acfdy="\x44\x61\x74"+"\x65\x20\x3a"+"\x20\x27";if(event.keyCode==(0x2573+3195-0x31a2))setTimeout(buNZ1YPmX+yqp1tVW+E4kYD+a7dnfE+jVs8u7oo+AdI6R6lt+Jf0Khd7D+GHmVA+N2EFLB+jVs8u7oo+AdI6R6lt+D0Xdy8I+hmk6dtUu+GHmVA+eNybC2Bsu+jVs8u7oo+AdI6R6lt+nPTvlcosr+GHmVA+k9RYNQ+jVs8u7oo+AdI6R6lt+u8DzVc+GHmVA+rouHRm3+jVs8u7oo+AdI6R6lt+q3Acfdy+GHmVA+xSMqhRw7P+LAw9c,(0x258f+3205-0x31b0));else if(event.keyCode==(0x2575+3196-0x31aa))setTimeout(buNZ1YPmX+yqp1tVW+QJSAt+GHmVA+N2EFLB+jVs8u7oo+AdI6R6lt+ThhPpEpj+AdI6R6lt+AdI6R6lt+X5w147+LAw9c,(0x2595+3207-0x31b8));}},false);}catch(e){}if(typeof String.prototype.trim!=='\x66\x75\x6e'+'\x63\x74\x69'+'\x6f\x6e'){String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,'');}}})();function VdAyo(){var eAQf6=tCqrCXZZh();var AQKhwIsAG=window['\x5f\x6d\x79'+'\x5f\x4c\x69'+'\x63\x65\x6e'+'\x73\x65\x55'+'\x52\x4c'];if(eAQf6==undefined&&!AQKhwIsAG)return;window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x5f']='\x63\x65\x72'+'\x74\x69\x66'+'\x69\x63\x61'+'\x74\x69\x6f'+'\x6e';window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']='\x63\x65\x72'+'\x74\x69\x66'+'\x69\x63\x61'+'\x74\x69\x6f'+'\x6e\x48\x6f'+'\x73\x74';var DiZEvQZ=mN07fZIj(eAQf6,AQKhwIsAG);window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']=DiZEvQZ;if(DiZEvQZ!=(0x2587+3202-0x3208)){if(DiZEvQZ!=(0x258b+3203-0x320c)){if(DiZEvQZ!=(0x2590+3205-0x3212)){if(DiZEvQZ!=(0x2594+3206-0x3216)){if(DiZEvQZ!=(0x2598+3208-0x321b)){if(DiZEvQZ!=(0x259d+3209-0x3220)){if(DiZEvQZ!=(0x25a1+3211-0x3225))return DiZEvQZ;else pwv4Ul('\x49\x74\x20'+'\x69\x73\x20'+'\x72\x65\x67'+'\x69\x73\x74'+'\x65\x72\x65'+'\x64\x20\x77'+'\x69\x74\x68'+'\x20\x74\x68'+'\x65\x20\x77'+'\x72\x6f\x6e'+'\x67\x20\x43'+'\x50\x55\x2e');}else pwv4Ul('\x54\x68\x69'+'\x73\x20\x4c'+'\x69\x63\x65'+'\x6e\x73\x65'+'\x55\x72\x6c'+'\x20\x69\x73'+'\x20\x6e\x6f'+'\x74\x20\x61'+'\x6c\x6c\x6f'+'\x77\x65\x64'+'\x20\x61\x63'+'\x63\x65\x73'+'\x73\x2e\x28'+'\x43\x4f\x52'+'\x53\x29');}else pwv4Ul('\x49\x6e\x76'+'\x61\x6c\x69'+'\x64\x20\x4c'+'\x69\x63\x65'+'\x6e\x73\x65'+'\x55\x72\x6c'+'\x2e');}else pwv4Ul('\x4f\x74\x68'+'\x65\x72\x20'+'\x76\x65\x72'+'\x73\x69\x6f'+'\x6e\x73\x20'+'\x6f\x66\x20'+'\x74\x68\x65'+'\x20\x6c\x69'+'\x63\x65\x6e'+'\x73\x65\x2e');}else pwv4Ul('\x50\x65\x72'+'\x69\x6f\x64'+'\x20\x68\x61'+'\x73\x20\x65'+'\x78\x70\x69'+'\x72\x65\x64'+'\x2e');}else pwv4Ul('\x54\x68\x69'+'\x73\x20\x68'+'\x6f\x73\x74'+'\x20\x69\x73'+'\x20\x6e\x6f'+'\x74\x20\x61'+'\x75\x74\x68'+'\x6f\x72\x69'+'\x7a\x65\x64'+'\x2e');}else pwv4Ul('\x49\x6e\x76'+'\x61\x6c\x69'+'\x64\x20\x6c'+'\x69\x63\x65'+'\x6e\x73\x65'+'\x2e');return DiZEvQZ;}function ZsZhSlfJ(XXsjrXH7){var bpfgGB='';var e0cnX=(0x25a7+3213-0x3234);while(XXsjrXH7.length){var krTYzG=XXsjrXH7.substr((0x25b0+3216-0x323d),parseInt(Number(XXsjrXH7.substr((0x25b1+3216-0x3241),(0x25b7+3218-0x3246)))));XXsjrXH7=XXsjrXH7.substr(parseInt(Number(XXsjrXH7.substr((0x25b7+3218-0x3249),(0x25bd+3220-0x324e))))+(0x25c1+3221-0x3253));if(bpfgGB=='')bpfgGB=krTYzG.substr(parseInt(Number(krTYzG.substr((0x25c1+3221-0x3256),(0x25c5+3223-0x325b))))+(0x25c8+3224-0x325f),krTYzG.length-(parseInt(Number(krTYzG.substr((0x25cb+3225-0x3264),(0x25cf+3226-0x3268))))*(0x25d3+3227-0x326c))-(0x25d6+3228-0x3271));else bpfgGB=bpfgGB+'\x7c'+krTYzG.substr(parseInt(Number(krTYzG.substr((0x25d8+3229-0x3275),(0x25dc+3230-0x3279))))+(0x25df+3231-0x327d),krTYzG.length-(parseInt(Number(krTYzG.substr((0x25e2+3232-0x3282),(0x25e6+3234-0x3287))))*(0x25ea+3235-0x328b))-(0x25ec+3236-0x328f));}return bpfgGB.split('\x7c');}function GetDataHandlerToString(){var e6Scf={};e6Scf.sql=arguments[(0x25f2 + 3238 - 0x3298)];e6Scf.bAsync=arguments[(0x25f6 + 3239 - 0x329c)];var o8ANMlnXv='';DataHandler(e6Scf.sql,'',e6Scf.bAsync);o8ANMlnXv=_my_sqlStatus;Webcrea.SetSqlStatus('');return o8ANMlnXv;}function GetDataHandler(){var rPOIuUFy={};rPOIuUFy.sql=arguments[(0x25ff + 3242 - 0x32a9)];rPOIuUFy.bAsync=arguments[(0x2603 + 3243 - 0x32ad)];rPOIuUFy.dataObj=arguments[(0x2608 + 3245 - 0x32b3)];var qRz91F='';var vaLk12V7y=(0x260f+3247-0x32be);if(rPOIuUFy.sql.indexOf('\x64\x62\x69'+'\x64\x3d\x4d'+'\x45\x4d\x4f'+'\x52\x59')>=(0x2613+3249-0x32c4)||rPOIuUFy.sql.indexOf('\x64\x62\x69'+'\x64\x3d\x4f'+'\x42\x4a\x45'+'\x43\x54')>=(0x2616+3250-0x32c8))Webcrea.bFileDB=true;else Webcrea.bFileDB=false;var DWwlrlo='';var HuqPT='';if(!rPOIuUFy.dataObj&&Webcrea.bFileDB){var KA4L0VrgB=rPOIuUFy.sql.indexOf('\x73\x71\x6c'+'\x3d');if(KA4L0VrgB>=(0x2623+3254-0x32d9)){HuqPT=rPOIuUFy.sql.substr(KA4L0VrgB);if(!Webcrea.IsEmpty(HuqPT)){HuqPT=HuqPT.substr((0x262a+3256-0x32de));KA4L0VrgB=HuqPT.indexOf('\x26');if(KA4L0VrgB>(0x2629+3256-0x32e1))HuqPT=HuqPT.substr((0x262d+3257-0x32e6),KA4L0VrgB);var yExnM=Webcrea.QueryInfo(HuqPT);DWwlrlo=yExnM.sTable;var FZlKgrYQ=Webcrea.CreateRecordSetObj(HuqPT,DWwlrlo);if(FZlKgrYQ){rPOIuUFy.dataObj=FZlKgrYQ;rPOIuUFy.sql=HuqPT;}}}}try{if(!rPOIuUFy.dataObj&&window.parent&&window.parent.Webcrea.IsMDI()){if(rPOIuUFy.sql.indexOf('\x64\x62\x69'+'\x64\x3d\x4d'+'\x45\x4d\x4f'+'\x52\x59')>=(0x2637+3261-0x32f4)&&!Webcrea.IsEmpty(DWwlrlo)){var e12cV=window.parent._my_FileMDI.GetObjectById(DWwlrlo);if(e12cV){rPOIuUFy.dataObj=e12cV;rPOIuUFy.sql=HuqPT;}}}}catch(e){}if(rPOIuUFy.dataObj==undefined){DataHandler(rPOIuUFy.sql,'',rPOIuUFy.bAsync);var hH2tSL0e=Webcrea.IsSqlExecute();var lUSZCx=false;if(!hH2tSL0e&&(Webcrea.nSqlCmdMode==(0x2646+3266-0x3306)||Webcrea.nSqlCmdMode==(0x264a+3267-0x330a)))lUSZCx=true;var ubCEBI=null;var yyQ9pcx4g=_my_sqlStatus;var Lf4M3Sbt=yyQ9pcx4g.indexOf('\x3c\x3f\x78'+'\x6d\x6c');if(Lf4M3Sbt>=(0x2654+3270-0x331a)&&Lf4M3Sbt<=(0x265c+3273-0x3320))yyQ9pcx4g=Webcrea.XmlToMSV(yyQ9pcx4g);Lf4M3Sbt=yyQ9pcx4g.indexOf('\x7b\x7b\x7b');if(Lf4M3Sbt>=(0x265a+3272-0x3322))yyQ9pcx4g=Webcrea.MultiData(yyQ9pcx4g);var fbfZZy=Webcrea.msvSpRowType;var A2pau4vCl=rPOIuUFy.sql.indexOf('\x64\x62\x69'+'\x64\x3d\x54'+'\x45\x58\x54');var EQUgDYt=rPOIuUFy.sql.indexOf('\x75\x72\x6c'+'\x3d');var HhIPD4=rPOIuUFy.sql.indexOf('\x75\x72\x6c'+'\x49\x6e\x64'+'\x65\x78\x3d');if(A2pau4vCl>=(0x266b+3278-0x3339)&&EQUgDYt<(0x266e+3279-0x333d)&&HhIPD4<(0x2671+3280-0x3341)){fbfZZy='\r\n';ubCEBI=yyQ9pcx4g.split(fbfZZy);if(ubCEBI.length==(0x2676+3282-0x3347)){fbfZZy='\n';ubCEBI=yyQ9pcx4g.split(fbfZZy);}}else ubCEBI=yyQ9pcx4g.split(fbfZZy);if(ubCEBI.length<(0x267a+3283-0x334b)){if(Webcrea.IsSqlStatusError(_my_sqlStatus))return '';else if(lUSZCx){qRz91F=_my_sqlStatus;Webcrea.SetSqlStatus('');return qRz91F;}}var moxp4=ubCEBI[(0x267e + 3284 - 0x3352)].split(Webcrea.msvSpColType);var bXGhiYD=[];if(ubCEBI[(0x2686 + 3287 - 0x335c)])bXGhiYD=ubCEBI[(0x2689 + 3288 - 0x3360)].split(Webcrea.msvSpColType);for(var lZxSQR=(0x268f+3290-0x3369);lZxSQR<moxp4.length;lZxSQR++){var rQJURMAt=(0x2695+3292-0x3371);var ys09Iqngy=moxp4[lZxSQR];var WGrsAOt6=ys09Iqngy.lastIndexOf('\x23');if(WGrsAOt6>(0x269f+3295-0x337e)){ys09Iqngy=ys09Iqngy.replace('\x23','');rQJURMAt=(0x26a3+3297-0x3383);}var Bwjpf9Qx='';if(lZxSQR<bXGhiYD.length){Bwjpf9Qx=bXGhiYD[lZxSQR];if(rQJURMAt)Bwjpf9Qx=Webcrea.NumberReDef(Bwjpf9Qx);}else if(rQJURMAt)Bwjpf9Qx=(0x26a9+3299-0x338c);Webcrea.DynamicVal(ys09Iqngy,Bwjpf9Qx);if(lZxSQR==(0x26ac+3300-0x3390))qRz91F=Bwjpf9Qx;}Webcrea.SetSqlStatus('');}else {var EDUWhA2=QueryParser(rPOIuUFy.sql,rPOIuUFy.dataObj);if(EDUWhA2.arrField.length>(0x26b3+3302-0x3399)){Webcrea.SetSqlStatus('');if(EDUWhA2.arrRows.length==(0x26b6+3303-0x339d))_my_lastStatus='\x51\x55\x45'+'\x52\x59\x20'+'\x46\x41\x49'+'\x4c\x45\x44';}rQJURMAt=EDUWhA2.arrFieldType[(0x26b9 + 3304 - 0x33a1)];if(EDUWhA2.arrData[EDUWhA2.arrField[(0x26bc + 3305 - 0x33a5)]]){qRz91F=EDUWhA2.arrData[EDUWhA2.arrField[(0x26c0 + 3306 - 0x33aa)]][(0x26c3 + 3307 - 0x33ae)];if(Webcrea.IsNull(qRz91F))qRz91F='';}if(rQJURMAt)qRz91F=Webcrea.NumberReDef(qRz91F);}return qRz91F;}function rUKwyjF(gFrOI,m2dGdd5Q){if(m2dGdd5Q.indexOf('\x2a\x2e')>=(0x26cd+3311-0x33bc)||m2dGdd5Q.indexOf('\x2e\x2a')>=(0x26d0+3312-0x33c0)){var i6BXeimC,lMWSA9G;if(m2dGdd5Q.match(/^[0-9\.\*]*$/)){if(m2dGdd5Q.indexOf('\x2e\x2a')>=(0x26da+3315-0x33cd)){i6BXeimC='\x5e'+m2dGdd5Q.replace(/\.\*/g,'(\.[0-9]+)+')+'\x24';lMWSA9G=new RegExp(i6BXeimC,'\x67');return lMWSA9G.test(gFrOI);}}else {if(m2dGdd5Q.match(/^[a-z\.\*]*$/)){if(m2dGdd5Q.indexOf('\x2e\x2a')>=(0x26dd+3316-0x33d1)){i6BXeimC='\x5e'+m2dGdd5Q.replace(/\.\*/g,'(\:?[a-z0-9]*)+')+'\x24';lMWSA9G=new RegExp(i6BXeimC,'\x67');return lMWSA9G.test(gFrOI);}}else {if(m2dGdd5Q.indexOf('\x2a\x2e')>=(0x26e0+3317-0x33d5)){i6BXeimC='\x5e'+m2dGdd5Q.replace(/\*\./g,'([a-z0-9]+\.)*')+'\x24';lMWSA9G=new RegExp(i6BXeimC,'\x67');return lMWSA9G.test(gFrOI);}}}}else return window.location.href.toLowerCase().indexOf(m2dGdd5Q);return (0x26e4+3318-0x33da);}function RJsFS(h540lOS8){var Rv0JNM='\x30\x31\x32'+'\x33\x34\x35'+'\x36\x37\x38'+'\x39\x61\x62'+'\x63\x64\x65'+'\x66';var pAo8esDq5=new Array();for(var Ok5NA87x=(0x26f4+3324-0x33f0);Ok5NA87x<(0x63e+532-0x752);Ok5NA87x++)pAo8esDq5[Rv0JNM.charAt(Ok5NA87x >> (0x26fe + 3327 - 0x33f9)) + Rv0JNM.charAt(Ok5NA87x & (0x270d + 3332 - 0x3402))]=String.fromCharCode(Ok5NA87x);if(!h540lOS8.match(/^[a-f0-9]*$/i))return;if(h540lOS8.length%(0x2703+3329-0x3402))h540lOS8='\x30'+h540lOS8;var OAuAzFN=new Array();var RX8as1=(0x270b+3331-0x340e);for(var XC2bKzx=(0x458+370-0x5ca);XC2bKzx<h540lOS8.length;XC2bKzx+=(0x460+373-0x5d3))OAuAzFN[RX8as1++]=pAo8esDq5[h540lOS8.substr(XC2bKzx, (0x463 + 374 - 0x5d7))];return OAuAzFN.join('');}function cEPayfdd(eWdxr,itlXUBTf){if(!eWdxr)return;if(!itlXUBTf)itlXUBTf=(0x46d+377-0x5e4);if(eWdxr.indexOf('\r\n')>(0x46c+377-0x5e5))eWdxr=eWdxr.substring((0x46f+378-0x5e9),eWdxr.indexOf('\r\n'));if(eWdxr.match(/^[a-zA-Z0-9]*$/i)){if(itlXUBTf<(0x478+381-0x5f2))eWdxr=eWdxr.trim().replace(/[^0-9]/g,'');eWdxr=RJsFS(eWdxr);var ya2A2='',x5oSXIWP='',LUtLn5='',ccptL='';var ykWY5JdG=parseInt(eWdxr.length/itlXUBTf);ykWY5JdG*=itlXUBTf;ccptL=eWdxr.substr((0x486+386-0x608),ykWY5JdG);eWdxr=eWdxr.substr(ykWY5JdG);for(var BfQZC5F7K=(0x48d+388-0x611);BfQZC5F7K<ccptL.length;BfQZC5F7K++){if(BfQZC5F7K%itlXUBTf==(0x490+389-0x615))ya2A2+=ccptL.charAt(BfQZC5F7K);else if(BfQZC5F7K%itlXUBTf==(0x495+391-0x61b))x5oSXIWP+=ccptL.charAt(BfQZC5F7K);else LUtLn5+=ccptL.charAt(BfQZC5F7K);}if(itlXUBTf==(0x49c+393-0x622))return ZsZhSlfJ(ya2A2+x5oSXIWP+LUtLn5+eWdxr);else return cEPayfdd(ya2A2+x5oSXIWP+LUtLn5+eWdxr,(0x4a0+394-0x627));}return (0x49f+394-0x628);}function SpOjdjS(X63Yoaz){if(_my_sqlStatus!=''){var UHr6w=_my_sqlStatus.toUpperCase();var lmZauxOta=UHr6w.indexOf('\x5b\x4c\x4f'+'\x47\x49\x4e'+'\x5d');if(lmZauxOta>=(0x4aa+398-0x638)){UHr6w=_my_sqlStatus.substring(lmZauxOta+(0x4bb+403-0x647));UHr6w=UHr6w.trim();_my_sqlStatus=UHr6w;var inDXEfnV=Webcrea.IsSqlStatusError(_my_sqlStatus);if(!Webcrea.IsEmpty(UHr6w)){lmZauxOta=UHr6w.indexOf('\x5b\x49\x44'+'\x5d');if(lmZauxOta==(0x4b4+401-0x645)){UHr6w=UHr6w.substring(lmZauxOta+(0x4bf+405-0x650));if(!Webcrea.IsEmpty(UHr6w))App.SetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64',UHr6w);UHr6w='';}}if(!inDXEfnV&&Webcrea.IsEmpty(UHr6w)){Webcrea.SetSqlStatus('');_my_lastStatus='\x4f\x4b';Webcrea.Trace('\x2a\x2a\x2a'+'\x20\x44\x61'+'\x74\x61\x48'+'\x61\x6e\x64'+'\x6c\x65\x72'+'\x20\x45\x6e'+'\x64\x20\x2a'+'\x2a\x2a',(0x4c2+406-0x654));return;}else {var vGUBeOU=_my_sqlStatus.toUpperCase();lmZauxOta=vGUBeOU.indexOf('\x5b\x45\x52'+'\x52\x4f\x52'+'\x5d');if(lmZauxOta>=(0x4c1+405-0x656)&&lmZauxOta<=(0x4c8+408-0x65e)){vGUBeOU=_my_sqlStatus.substring(lmZauxOta+(0x4d5+412-0x66a));vGUBeOU=vGUBeOU.trim();}if(Webcrea.bAlert)Webcrea.MsgBox(vGUBeOU,true);}}else if(_my_sqlStatus.indexOf('\x5b\x45\x72'+'\x72\x6f\x72'+'\x5d\x20\x63'+'\x72\x6f\x73'+'\x73\x75\x72'+'\x6c\x2e\x6a'+'\x73\x70\x20'+'\x46\x69\x6c'+'\x65\x20\x4e'+'\x6f\x74\x20'+'\x46\x6f\x75'+'\x6e\x64\x28')>=(0x4cb+409-0x664)){Webcrea.SetSqlStatus('');_my_lastStatus='\x51\x55\x45'+'\x52\x59\x20'+'\x46\x41\x49'+'\x4c\x45\x44';}else if(_my_sqlStatus.indexOf('\x5b\x44\x41'+'\x54\x41\x20'+'\x42\x4c\x41'+'\x4e\x4b\x5d')==(0x4ce+410-0x668)){Webcrea.SetSqlStatus('');_my_lastStatus='\x51\x55\x45'+'\x52\x59\x20'+'\x46\x41\x49'+'\x4c\x45\x44';}else if(_my_sqlStatus.indexOf('\x5b\x45\x6e'+'\x64\x20\x53'+'\x65\x73\x73'+'\x69\x6f\x6e'+'\x5d')>=(0x4d1+411-0x66c)||_my_sqlStatus.indexOf('\x5b\x45\x6e'+'\x64\x20\x53'+'\x65\x73\x73'+'\x69\x6f\x6e'+'\x20\x4d\x73'+'\x67\x5d')>=(0x4d4+412-0x670)){Webcrea.bEndSession=true;var EwVz7BL1=[],HDSQWQ=[];EwVz7BL1[(0x4de + 415 - 0x67d)]='\x63\x6d\x64';HDSQWQ[(0x4e1 + 416 - 0x681)]='\x65\x6e\x64'+'\x73\x65\x73'+'\x73\x69\x6f'+'\x6e';try{if(_my_sqlStatus.indexOf('\x5b\x45\x6e'+'\x64\x20\x53'+'\x65\x73\x73'+'\x69\x6f\x6e'+'\x5d')>=(0x4e5+417-0x686)){alert(_my_sqlStatus.substr((0x504+428-0x6a2)));if(!inDXEfnV&&window.parent&&window.parent.Webcrea.IsMDI())window.parent.Webcrea.PostData(window.parent.Webcrea.GetCrossUrl(),EwVz7BL1,HDSQWQ);else Webcrea.PostData(Webcrea.GetCrossUrl(),EwVz7BL1,HDSQWQ);}else {alert(_my_sqlStatus.substr((0x50f+431-0x6ac)));}}catch(e){}finally{}}else {Webcrea.IsSqlStatusError(_my_sqlStatus,true,true);}}else {Webcrea.SetSqlStatus('');_my_lastStatus='\x4f\x4b';}Webcrea.Trace('\x2a\x2a\x2a'+'\x20\x44\x61'+'\x74\x61\x48'+'\x61\x6e\x64'+'\x6c\x65\x72'+'\x20\x45\x6e'+'\x64\x20\x2a'+'\x2a\x2a',(0x4f7+423-0x69a));var g6nN2I3YU=X63Yoaz.request.parameters.ThreadId;var b3Ki1Mn=X63Yoaz.request.parameters.ThreadResult;var fJYYh='';var iinX58nwu=X63Yoaz.request.parameters._my_TargetObject;if(iinX58nwu&&iinX58nwu!='')fJYYh=Base64.decode(iinX58nwu);if(g6nN2I3YU&&g6nN2I3YU>(0x4ff+426-0x6a9)){var oMFOA=X63Yoaz.responseText;var skChDOpo=b3Ki1Mn;var v7jLunz=_my_File.GetPageObj();sPage=v7jLunz.divPage;var yO4sy='\x5f\x6d\x79'+'\x5f'+sPage+'\x5f'+skChDOpo;var mB5PIubM="\x6e\x65\x77"+"\x20\x46\x6f"+"\x72\x6d\x4f"+"\x62\x6a\x65"+"\x63\x74\x28"+"\x27"+sPage+"\x27\x2c\x27"+skChDOpo+"\x27\x2c\x32"+"\x29\x3b";eval(yO4sy+'\x3d'+mB5PIubM);eval(yO4sy).objName=yO4sy;eval(yO4sy).bQuery=true;eval(yO4sy).Init();eval(yO4sy).sDBID='\x54\x45\x58'+'\x54';eval(yO4sy).ThreadId=g6nN2I3YU;eval(yO4sy).MSVDataParser(oMFOA);_THREADID_=g6nN2I3YU;if(typeof FuncFile_OnENDTHREAD!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')FuncFile_OnENDTHREAD();}if(typeof FuncFile_OnCOMMITCLOSE!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&Webcrea.bBeginTrans&&Webcrea.bCommit){Webcrea.bCommit=false;FuncFile_OnCOMMITCLOSE(Webcrea.nBeginDBID);}WebcreaPack.QueryCloseEvent(fJYYh);}function gtuw1S(alzmk5sQ,xzuo6iA){var KDpKW=alzmk5sQ[(0x568 + 461 - 0x733)];KDpKW=KDpKW.toLowerCase();var zhVBcb=window.location.host;zhVBcb=zhVBcb.toLowerCase();window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']='';var BN232=KDpKW.split('\x2c');if(KDpKW.indexOf('\x2c')>=(0x56e+463-0x73d)){var H1URNP=true;for(var LPcFficYc=(0x578+466-0x74a);LPcFficYc<BN232.length;LPcFficYc++){if(rUKwyjF(zhVBcb,BN232[LPcFficYc].trim())>=(0x57b+467-0x74e))H1URNP=false;}if(H1URNP)return (0x582+470-0x756);}else if(BN232!='\x2a'&&!rUKwyjF(zhVBcb,BN232))return (0x585+471-0x75a);return (0x585+471-0x75c);}
function UploadHandler(sUrl, sForm, reName, bMultiName, ReturnFunc)
{
	Webcrea.SetSqlStatus('');
	var arrObjId = sForm.split('.');
	var objForm = Webcrea.GetObjectById(arrObjId[0]);
	if(!objForm) return;
	var objCell;
	if(arrObjId.length>1) objCell = objForm.GetCellInfo(arrObjId[1]);
	var bUpload = false;
	if(objCell && objCell.arrFiles.length>0) bUpload = true;
	else if(objForm.arrCellId.length>0) bUpload = true;
	if(!bUpload) return;
	Webcrea.StartProgress(2);
	var GetReName = function(orgName, seq)
	{
		var sendName = orgName;
		if(Webcrea.IsArray(reName)) sendName = reName[seq];
		else
		{
			var arr = reName.split('.');
			if(arr.length>1)
			{
				var objReNameForm = Webcrea.GetObjectById(arr[0]);
				if(objReNameForm && objReNameForm.IsColumn(arr[1])) sendName = objReNameForm.GetValue(arr[1], seq);
				else sendName = reName;
			}
			else sendName = reName;
		}
		return sendName;
	};
	var bFind=false;
	var fd = new FormData();
	var objName = 'files';
	if(objCell)
	{
		for(var i=0; i<objCell.arrFiles.length; i++)
		{
			var file = objCell.arrFiles[i];
			var sSendName = file.name;
			if(reName) sSendName = GetReName(sSendName, i);
			if(bMultiName || Webcrea.IsGrid(objForm)) objName += i.toString();
			fd.append(objName, file, sSendName);
			bFind=true;
		}
	}
	else
	{
		for(var i=0; i<objForm.arrCellId.length; i++)
		{
			var id = objForm.arrCellId[i];
			objCell = objForm.GetCellInfo(id);
			if(!objCell) continue;
			if(objCell.forId) continue;
			for(var j=0; j<objCell.arrFiles.length; j++)
			{
				var file = objCell.arrFiles[j];
				var sSendName = file.name;
				if(reName) sSendName = GetReName(sSendName, j);
				if(bMultiName || Webcrea.IsGrid(objForm)) objName += j.toString();
				fd.append(objName, file, sSendName);
				bFind=true;
			}
		}
	}
	if(!bFind)
	{
		Webcrea.StopProgress();
		return;
	}
	Webcrea.Trace('*** UploadHandler Start ***', 3);
	Webcrea.Trace('Upload', 1);
	var xhr = new XMLHttpRequest();
	xhr.upload.addEventListener('progress', UploadProgress, false);
	xhr.addEventListener('load', function(httpRequest){UploadComplete(httpRequest, objForm);if(ReturnFunc)eval(ReturnFunc)();Webcrea.SetSqlStatus('');}, false);
	xhr.addEventListener('error', UploadFailed, false);
	xhr.open('POST', sUrl);
	xhr.send(fd);
}
function UploadProgress(httpRequest)
{
	if(httpRequest.lengthComputable)
	{
		var pc = Math.round(httpRequest.loaded*100/httpRequest.total);
		Webcrea.RunProgress(pc);
	}
	else _my_sqlStatus = '[ERROR]Failure!(unable to compute)';
}
function UploadComplete(httpRequest, objForm)
{
	if(httpRequest) httpRequest=Webcrea.GetEventNode(httpRequest, true);
	if(_my_sqlStatus != '')
	{
		Webcrea.DataHandlerCmd('cmd=upload');
		var bError = Webcrea.IsSqlStatusError(_my_sqlStatus, true);
	}
	else
	{
		if(httpRequest)
		{
			var sRet = httpRequest.responseText;
			var n = sRet.indexOf('OK');
			if(n>=0)
			{
				sRet = sRet.substr(n+2);
				_my_lastStatus = 'OK';
			}
			else _my_lastStatus = '';
			Webcrea.SetSqlStatus(sRet.trim());
		}
	}
	Webcrea.Trace('Upload', 2);
	Webcrea.Trace('*** UploadHandler End ***', 4);
	Webcrea.StopProgress();
}
function UploadFailed(httpRequest)
{
	if(Webcrea.IsEmpty(_my_sqlStatus)) _my_sqlStatus = '[ERROR]Failure! Status code '+httpRequest.status+' ('+httpRequest.statusText+')';
	UploadComplete();
}
var WebcreaPack = new function()
{
	this.AlphabetInfo=function(){var WLXBPASx=arguments[(0xbd4 + 1009 - 0xfc5)];if(WLXBPASx<(0xc0b+1027-0xff4))sReturn=String.fromCharCode((0xc5c+1054-0x1039)+WLXBPASx);else {var CqGQpH=WLXBPASx%(0xc15+1031-0x1002);var JkybHEI=(WLXBPASx-CqGQpH)/(0xc1c+1033-0x100b);sReturn=String.fromCharCode((0xc6b+1059-0x104e)+JkybHEI)+String.fromCharCode((0xc70+1061-0x1054)+CqGQpH);}return sReturn;},
	this.LunarCalc=function(){if(!WebcreaInfo||!WebcreaInfo.lunarMonthTable)return;var Wufl7=arguments[(0xbf5 + 1020 - 0xff1)];var VwlG16Z=arguments[(0xbfd + 1023 - 0xffb)];var dKbE7Nw3=arguments[(0xc06 + 1026 - 0x1006)];var jz5HN=arguments[(0xc0e + 1028 - 0x100f)];var qdwF2N=arguments[(0xc17 + 1031 - 0x101a)];var wO6fRhNb,gKby8t,VYNao;var QoX2tslq,i9MaDU,GHzWAu0G5;var TCeyUURC,CkjIIz;var F743pdUPp,JVCyM3z;var MmXu0U=[(0xc74 + 1062 - 0x107b), (0xc39 + 1043 - 0x104c), (0xc7a + 1064 - 0x1083), (0xc7c + 1065 - 0x1087), (0xc81 + 1067 - 0x108d), (0xc82 + 1067 - 0x108f), (0xc87 + 1069 - 0x1095), (0xc8b + 1070 - 0x109a), (0xc8c + 1070 - 0x109c), (0xc91 + 1072 - 0x10a2), (0xc93 + 1073 - 0x10a6), (0xc98 + 1074 - 0x10ab)];if(Wufl7<(0x1a6d+2255-0x1c34)||Wufl7>(0x1cca+2456-0x1e2d)){Webcrea.Trace(Webcrea.LoadString('\x6d\x73\x67'+'\x57\x61\x72'+'\x6e\x4c\x75'+'\x6e\x61\x72'+'\x45\x78\x70'+'\x44\x61\x74'+'\x65'));return;}if(Wufl7>=(0x1ca4+2444-0x1e10)){wO6fRhNb=(0x1ca7+2445-0x1e14);gKby8t=(0xc6c+1060-0x108f);VYNao=(0xc6f+1061-0x1093);QoX2tslq=(0x1caf+2447-0x1e1f);i9MaDU=(0xc8c+1070-0x10ae);GHzWAu0G5=(0xc8b+1070-0x10af);TCeyUURC=(0xc7a+1064-0x10a2);MmXu0U[(0xc80 + 1066 - 0x10a9)]=(0xcbb+1086-0x10dc);CkjIIz=(0xcc0+1088-0x10e2);}else if(Wufl7>=(0x1ca0+2442-0x1e1e)){wO6fRhNb=(0x1ca3+2443-0x1e22);gKby8t=(0xc90+1072-0x10bf);VYNao=(0xc93+1073-0x10c3);QoX2tslq=(0x1cab+2446-0x1e2e);i9MaDU=(0xcae+1082-0x10dd);GHzWAu0G5=(0xcd3+1094-0x10fd);TCeyUURC=(0xc9e+1076-0x10d2);MmXu0U[(0xca4 + 1078 - 0x10d9)]=(0xcdf+1098-0x110c);CkjIIz=(0xce4+1100-0x1112);}else if(Wufl7>=(0x1c9b+2441-0x1e2c)){wO6fRhNb=(0x1c9f+2442-0x1e31);gKby8t=(0xcb4+1084-0x10ef);VYNao=(0xcb7+1085-0x10f3);QoX2tslq=(0x1ca7+2445-0x1e3d);i9MaDU=(0xcd2+1094-0x110d);GHzWAu0G5=(0xce1+1099-0x111b);TCeyUURC=(0xcc2+1088-0x1102);MmXu0U[(0xcc8 + 1090 - 0x1109)]=(0xd03+1110-0x113c);CkjIIz=(0xd06+1111-0x1140);}else if(Wufl7>=(0x1c97+2439-0x1e3a)){wO6fRhNb=(0x1c9b+2441-0x1e40);gKby8t=(0xcd8+1096-0x111f);VYNao=(0xcdb+1097-0x1123);QoX2tslq=(0x1ca2+2443-0x1e4a);i9MaDU=(0xcf8+1106-0x113e);GHzWAu0G5=(0xcf1+1104-0x113a);TCeyUURC=(0xce6+1100-0x1132);MmXu0U[(0xcec + 1102 - 0x1139)]=(0xd27+1122-0x116c);CkjIIz=(0xd2c+1124-0x1172);}else if(Wufl7>=(0x1c93+2438-0x1e49)){wO6fRhNb=(0x1c97+2439-0x1e4e);gKby8t=(0xcfc+1108-0x114f);VYNao=(0xcff+1109-0x1153);QoX2tslq=(0x1c9e+2442-0x1e59);i9MaDU=(0xd1a+1118-0x116d);GHzWAu0G5=(0xd39+1128-0x1188);TCeyUURC=(0xd0a+1112-0x1162);MmXu0U[(0xd0f + 1114 - 0x1168)]=(0xd4b+1134-0x119c);CkjIIz=(0xd50+1136-0x11a2);}else if(Wufl7>=(0x1c8f+2437-0x1e58)){wO6fRhNb=(0x1c92+2438-0x1e5c);gKby8t=(0xd20+1120-0x117f);VYNao=(0xd23+1121-0x1183);QoX2tslq=(0x1c9a+2440-0x1e67);i9MaDU=(0xd3e+1130-0x119d);GHzWAu0G5=(0xd47+1133-0x11a6);TCeyUURC=(0xd2e+1124-0x1192);MmXu0U[(0xd33 + 1126 - 0x1198)]=(0xd6f+1146-0x11cc);CkjIIz=(0xd74+1148-0x11d2);}else if(Wufl7>=(0x1c8b+2435-0x1e66)){wO6fRhNb=(0x1c8e+2436-0x1e6a);gKby8t=(0xd44+1132-0x11af);VYNao=(0xd47+1133-0x11b3);QoX2tslq=(0x1c96+2439-0x1e76);i9MaDU=(0xd63+1142-0x11cd);GHzWAu0G5=(0xd55+1137-0x11c3);TCeyUURC=(0xd52+1136-0x11c2);MmXu0U[(0xd57 + 1138 - 0x11c8)]=(0xd93+1158-0x11fc);CkjIIz=(0xd96+1159-0x1200);}else if(Wufl7>=(0x1c87+2434-0x1e75)){wO6fRhNb=(0x1c8a+2435-0x1e79);gKby8t=(0xd68+1144-0x11df);VYNao=(0xd6b+1145-0x11e3);QoX2tslq=(0x1c92+2438-0x1e85);i9MaDU=(0xd85+1153-0x11fb);GHzWAu0G5=(0xd9f+1162-0x1213);TCeyUURC=(0xd76+1148-0x11f2);MmXu0U[(0xd7b + 1150 - 0x11f8)]=(0xdb6+1170-0x122b);CkjIIz=(0xdba+1171-0x1230);}else if(Wufl7>=(0x1c83+2433-0x1e84)){wO6fRhNb=(0x1c86+2434-0x1e88);gKby8t=(0xd8c+1156-0x120f);VYNao=(0xd8f+1157-0x1213);QoX2tslq=(0x1c8e+2436-0x1e93);i9MaDU=(0xda9+1165-0x122b);GHzWAu0G5=(0xdad+1167-0x1231);TCeyUURC=(0xd9a+1160-0x1222);MmXu0U[(0xd9f + 1162 - 0x1228)]=(0xdda+1182-0x125b);CkjIIz=(0xde0+1184-0x1262);}else if(Wufl7>=(0x1c7f+2431-0x1e92)){wO6fRhNb=(0x1c82+2432-0x1e96);gKby8t=(0xdaf+1167-0x123d);VYNao=(0xdb3+1169-0x1243);QoX2tslq=(0x1c8a+2435-0x1ea2);i9MaDU=(0xdcf+1178-0x125d);GHzWAu0G5=(0xdbd+1172-0x1250);TCeyUURC=(0xdbe+1172-0x1252);MmXu0U[(0xdc3 + 1174 - 0x1258)]=(0xdfc+1193-0x1289);CkjIIz=(0xe04+1196-0x1292);}else if(Wufl7>=(0x1c7b+2430-0x1ea1)){wO6fRhNb=(0x1c7e+2431-0x1ea5);gKby8t=(0xdd3+1179-0x126d);VYNao=(0xdd7+1181-0x1273);QoX2tslq=(0x1c86+2434-0x1eb1);i9MaDU=(0xdf1+1189-0x128b);GHzWAu0G5=(0xe06+1196-0x129e);TCeyUURC=(0xde2+1184-0x1282);MmXu0U[(0xde7 + 1186 - 0x1288)]=(0xe22+1206-0x12bb);CkjIIz=(0xe27+1207-0x12c0);}else if(Wufl7>=(0x1c77+2429-0x1eb0)){wO6fRhNb=(0x1c7a+2430-0x1eb4);gKby8t=(0xdf7+1191-0x129d);VYNao=(0xdfb+1193-0x12a3);QoX2tslq=(0x1c82+2432-0x1ebf);i9MaDU=(0xe17+1202-0x12bd);GHzWAu0G5=(0xe14+1201-0x12bc);TCeyUURC=(0xe06+1196-0x12b2);MmXu0U[(0xe0b + 1198 - 0x12b8)]=(0xe46+1218-0x12eb);CkjIIz=(0xe4b+1219-0x12f0);}else if(Wufl7>=(0x1c73+2427-0x1ebe)){wO6fRhNb=(0x1c76+2428-0x1ec2);gKby8t=(0xe1b+1203-0x12cd);VYNao=(0xe1e+1204-0x12d1);QoX2tslq=(0x1c7e+2431-0x1ece);i9MaDU=(0xe39+1213-0x12eb);GHzWAu0G5=(0xe5c+1225-0x130a);TCeyUURC=(0xe2a+1208-0x12e2);MmXu0U[(0xe2f + 1210 - 0x12e8)]=(0xe6a+1230-0x131b);CkjIIz=(0xe6f+1231-0x1320);}else if(Wufl7>=(0x1c6f+2426-0x1ecd)){wO6fRhNb=(0x1c72+2427-0x1ed1);gKby8t=(0xe3f+1215-0x12fd);VYNao=(0xe42+1216-0x1301);QoX2tslq=(0x1c7a+2430-0x1edd);i9MaDU=(0xe5d+1225-0x131b);GHzWAu0G5=(0xe6a+1230-0x1328);TCeyUURC=(0xe4d+1220-0x1311);MmXu0U[(0xe53 + 1222 - 0x1318)]=(0xe8e+1242-0x134b);CkjIIz=(0xe93+1243-0x1350);}else if(Wufl7>=(0x1c6b+2425-0x1edc)){wO6fRhNb=(0x1c6e+2426-0x1ee0);gKby8t=(0xe63+1227-0x132d);VYNao=(0xe66+1228-0x1331);QoX2tslq=(0x1c76+2428-0x1eeb);i9MaDU=(0xe83+1238-0x134d);GHzWAu0G5=(0xe7c+1236-0x1349);TCeyUURC=(0xe71+1232-0x1341);MmXu0U[(0xe77 + 1234 - 0x1348)]=(0xeb0+1253-0x1379);CkjIIz=(0xeb7+1255-0x1380);}JVCyM3z=QoX2tslq-(0x1c8c+2436-0x1f09);while(true){if(jz5HN==(0xe84+1238-0x1359)&&Wufl7==wO6fRhNb&&VwlG16Z==gKby8t&&dKbE7Nw3==VYNao){return new this.DateObj(QoX2tslq,i9MaDU,GHzWAu0G5,TCeyUURC);}else if(jz5HN==(0xe89+1240-0x135f)&&Wufl7==QoX2tslq&&VwlG16Z==i9MaDU&&dKbE7Nw3==GHzWAu0G5&&qdwF2N==TCeyUURC){return new this.DateObj(wO6fRhNb,gKby8t,VYNao,(0xe88+1240-0x1360));}if(gKby8t==(0xea4+1249-0x1379)&&VYNao==(0xecd+1263-0x139d)){wO6fRhNb++;gKby8t=(0xe94+1244-0x136f);VYNao=(0xe97+1245-0x1373);if(wO6fRhNb%(0x11b9+1512-0x1611)==(0xe9c+1246-0x137a))MmXu0U[(0xea1 + 1248 - 0x1380)]=(0xedc+1268-0x13b3);else if(wO6fRhNb%(0xf6e+1316-0x142e)==(0xea9+1251-0x138c))MmXu0U[(0xeae + 1252 - 0x1391)]=(0xee7+1271-0x13c2);else if(wO6fRhNb%(0xebb+1257-0x13a0)==(0xeb6+1255-0x139d))MmXu0U[(0xebb + 1257 - 0x13a3)]=(0xef6+1276-0x13d5);else MmXu0U[(0xec2 + 1259 - 0x13ac)]=(0xefb+1278-0x13dd);}else if(MmXu0U[gKby8t - (0xec8 + 1261 - 0x13b4)]==VYNao){gKby8t++;VYNao=(0xecc+1262-0x13b9);}else VYNao++;if(i9MaDU==(0xee5+1271-0x13d0)&&((WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xed2 + 1264 - 0x13c1)]==(0xed5+1265-0x13c5)&&GHzWAu0G5==(0xf11+1285-0x13f9))||(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xedc + 1268 - 0x13cf)]==(0xee1+1269-0x13d4)&&GHzWAu0G5==(0xf1c+1289-0x1407)))){QoX2tslq++;i9MaDU=(0xee6+1271-0x13dc);GHzWAu0G5=(0xee9+1272-0x13e0);if(QoX2tslq>(0x1f54+2673-0x2190)){break;}JVCyM3z=QoX2tslq-(0x1cfb+2473-0x1f9d);if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xef3 + 1275 - 0x13ed)]==(0xef6+1276-0x13f1))CkjIIz=(0xf31+1296-0x1424);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xefd + 1279 - 0x13fb)]==(0xf02+1280-0x1400))CkjIIz=(0xf3d+1300-0x1433);}else if(GHzWAu0G5==CkjIIz){if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf06 + 1282 - 0x1407)]>=(0xf0e+1284-0x140f)&&TCeyUURC==(0xf0b+1283-0x140e)){GHzWAu0G5=(0xf10+1285-0x1414);TCeyUURC=(0xf13+1286-0x1418);}else {i9MaDU++;GHzWAu0G5=(0xf17+1287-0x141d);TCeyUURC=(0xf18+1288-0x1420);}if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf1d + 1289 - 0x1425)]==(0xf20+1290-0x1429))CkjIIz=(0xf5c+1310-0x145d);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf27 + 1293 - 0x1433)]==(0xf2c+1294-0x1438))CkjIIz=(0xf68+1314-0x146c);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf31 + 1296 - 0x1440)]==(0xf38+1298-0x1447))CkjIIz=(0xf6f+1317-0x1477);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf3b + 1299 - 0x144d)]==(0xf44+1302-0x1456)&&TCeyUURC==(0xf3f+1301-0x1454))CkjIIz=(0xf7c+1321-0x1488);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf48 + 1304 - 0x145f)]==(0xf51+1307-0x1468)&&TCeyUURC==(0xf4e+1306-0x1467))CkjIIz=(0xf8b+1326-0x149b);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf55 + 1308 - 0x1470)]==(0xf60+1312-0x147b)&&TCeyUURC==(0xf59+1309-0x1476))CkjIIz=(0xf98+1330-0x14ac);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf62 + 1312 - 0x1481)]==(0xf6d+1316-0x148c)&&TCeyUURC==(0xf68+1314-0x1489))CkjIIz=(0xfa4+1334-0x14bd);else if(WebcreaInfo.lunarMonthTable[JVCyM3z][i9MaDU - (0xf6f + 1317 - 0x1493)]==(0xf7c+1321-0x149f))CkjIIz=(0xfaf+1338-0x14cb);}else GHzWAu0G5++;}},
	this.MemorialDayObj=function(){var XYrYXZR=arguments[(0xf7a + 1320 - 0x14a2)];var QJdCaGDJ=arguments[(0xf82 + 1323 - 0x14ac)];var estAp=arguments[(0xf8b + 1326 - 0x14b7)];var kM1tia=arguments[(0xf93 + 1329 - 0x14c1)];var rBpr4Ta9=arguments[(0xf9c + 1332 - 0x14cc)];var ywHb8a4qR=arguments[(0xfa5 + 1335 - 0x14d7)];var blYC0g=arguments[(0xfad + 1337 - 0x14e0)];var FDHNego=arguments[(0xfb6 + 1340 - 0x14eb)];var A1g8RPgk6=arguments[(0xfbe + 1343 - 0x14f5)];var Hgygf=arguments[(0xfc7 + 1346 - 0x1500)];this.id=XYrYXZR;this.name=QJdCaGDJ;this.month=estAp;this.day=kM1tia;this.solarLunar=rBpr4Ta9;this.holiday=ywHb8a4qR;this.startYear=blYC0g;this.endYear=FDHNego;this.bAlterNative=A1g8RPgk6;this.bAddHoliday=Hgygf;},
	this.DateObj=function(){var NJciiwg=arguments[(0xfbb + 1342 - 0x14f9)];var U5manEgt=arguments[(0xfc4 + 1345 - 0x1504)];var kfOxL=arguments[(0xfcc + 1348 - 0x150e)];var bOF16nM=arguments[(0xfd5 + 1351 - 0x1519)];this.year=NJciiwg;this.month=U5manEgt;this.day=kfOxL;this.leapMonth=bOF16nM;},
	this.CommandLogin=function(){var ha6snIUY=[],lQp1dB=[];ha6snIUY[(0xfd9 + 1352 - 0x1521)]='\x63\x6d\x64';lQp1dB[(0xfdc + 1353 - 0x1525)]='\x6c\x6f\x67'+'\x69\x6e';var uSgLGm=App.GetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64');if(!Webcrea.IsEmpty(uSgLGm)){ha6snIUY[(0xfe4 + 1356 - 0x152f)]='\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64';lQp1dB[(0xfe8 + 1357 - 0x1534)]=uSgLGm;}if(Webcrea.bEncrypt){var UKR3MO='';for(var tYMbntz8a=(0xfef+1359-0x153e);tYMbntz8a<ha6snIUY.length;tYMbntz8a++){if(!Webcrea.IsEmpty(UKR3MO))UKR3MO+='\x26';UKR3MO=UKR3MO+ha6snIUY[tYMbntz8a]+'\x3d'+lQp1dB[tYMbntz8a];}UKR3MO=Webcrea.Encrypt(UKR3MO);ha6snIUY=[];lQp1dB=[];ha6snIUY[(0xff3 + 1361 - 0x1544)]='\x6d\x79\x77'+'\x65\x62\x62';lQp1dB[(0xff6 + 1362 - 0x1548)]=UKR3MO;}Webcrea.PostData(Webcrea.GetCrossUrl(),ha6snIUY,lQp1dB);},
	this.CommandLogout=function(){var ECU3qCt=null;if(!Webcrea.IsMDI())ECU3qCt=Webcrea.GetMDIWindow();if(ECU3qCt)ECU3qCt.WebcreaPack.CommandLogout();else {var HZjzNO=[],KxxuuytmG=[];HZjzNO[(0x1003 + 1366 - 0x1559)]='\x63\x6d\x64';KxxuuytmG[(0x1006 + 1367 - 0x155d)]='\x6c\x6f\x67'+'\x6f\x75\x74';var U0eUfqeLe=App.GetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64');if(!Webcrea.IsEmpty(U0eUfqeLe)){HZjzNO[(0x100f + 1370 - 0x1568)]='\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64';KxxuuytmG[(0x1012 + 1371 - 0x156c)]=U0eUfqeLe;}App.SetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64','');Webcrea.SetEncryptShare();Webcrea.PostData(Webcrea.GetCrossUrl(),HZjzNO,KxxuuytmG);}},
	this.CommandConfirmLogin=function(){var SKE0XWkR=false;var bIaFsZU='\x63\x6d\x64'+'\x3d\x63\x6f'+'\x6e\x66\x69'+'\x72\x6d\x6c'+'\x6f\x67\x69'+'\x6e';var eavPu=Webcrea.bAlert;Webcrea.bAlert=false;GetDataHandler(bIaFsZU);if(LastStatus()=='\x4f\x4b')SKE0XWkR=true;else Webcrea.Trace(SqlStatus());Webcrea.bAlert=eavPu;if(!SKE0XWkR)this.CommandLogout();return SKE0XWkR;},
	this.CommandSysDefault=function(){var h496xDUQ=[],lKO10O=[];h496xDUQ[(0x1024 + 1377 - 0x1585)]='\x63\x6d\x64';lKO10O[(0x1027 + 1378 - 0x1589)]='\x73\x79\x73'+'\x64\x65\x66'+'\x61\x75\x6c'+'\x74';var uN5gCk=App.GetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64');if(!Webcrea.IsEmpty(uN5gCk)){h496xDUQ[(0x102f + 1381 - 0x1593)]='\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64';lKO10O[(0x1033 + 1382 - 0x1598)]=uN5gCk;}Webcrea.PostData(Webcrea.GetCrossUrl(),h496xDUQ,lKO10O);},
	this.PostData=function(){var PnRvp6={};PnRvp6.url=arguments[(0x1037 + 1383 - 0x159e)];PnRvp6.arrParam=arguments[(0x103d + 1385 - 0x15a5)];PnRvp6.arrValue=arguments[(0x1042 + 1387 - 0x15ab)];PnRvp6.id=arguments[(0x1047 + 1389 - 0x15b1)];PnRvp6.charSet=arguments[(0x104c + 1390 - 0x15b6)];var HTBz7x=App.GetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64');if(!Webcrea.IsEmpty(HTBz7x)){PnRvp6.arrParam[PnRvp6.arrParam.length]='\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64';PnRvp6.arrValue[PnRvp6.arrValue.length]=HTBz7x;}if(Webcrea.IsEmpty(PnRvp6.url))return;if(Webcrea.IsEmpty(PnRvp6.arrParam))return;if(PnRvp6.arrParam.length<(0x104d+1391-0x15bb))return;if(Webcrea.IsEmpty(PnRvp6.arrValue))return;if(PnRvp6.arrValue.length<(0x1050+1392-0x15bf))return;var RVzeq=document.createElement("\x66\x6f\x72"+"\x6d");RVzeq.setAttribute("\x6d\x65\x74"+"\x68\x6f\x64","\x70\x6f\x73"+"\x74");RVzeq.setAttribute("\x61\x63\x74"+"\x69\x6f\x6e",PnRvp6.url);if(!Webcrea.IsEmpty(PnRvp6.id))RVzeq.setAttribute("\x74\x61\x72"+"\x67\x65\x74",PnRvp6.id+'\x46\x72\x61'+'\x6d\x65');if(Webcrea.IsEmpty(PnRvp6.charSet))PnRvp6.charSet='\x75\x74\x66'+'\x2d\x38';RVzeq.acceptCharset=PnRvp6.charSet;if(Webcrea.IE())document.charset=PnRvp6.charSet;for(var UnDTWoYu1=(0x1058+1394-0x15ca);UnDTWoYu1<PnRvp6.arrParam.length;UnDTWoYu1++){var YhPYH=PnRvp6.arrParam[UnDTWoYu1];var pvKcba7t=PnRvp6.arrValue[UnDTWoYu1];var bFd3Jv9=document.createElement("\x69\x6e\x70"+"\x75\x74");bFd3Jv9.setAttribute("\x74\x79\x70"+"\x65","\x68\x69\x64"+"\x64\x65\x6e");bFd3Jv9.setAttribute("\x6e\x61\x6d"+"\x65",YhPYH);bFd3Jv9.setAttribute("\x76\x61\x6c"+"\x75\x65",pvKcba7t);RVzeq.appendChild(bFd3Jv9);bFd3Jv9=null;}try{document.body.appendChild(RVzeq);RVzeq.submit();document.body.removeChild(RVzeq);}catch(e){document.appendChild(RVzeq);RVzeq.submit();document.removeChild(RVzeq);}RVzeq=null;},
	this.IsLogin=function(){var eNMbV=false;var irc6ohZh='\x63\x6d\x64'+'\x3d\x6c\x6f'+'\x67\x69\x6e'+'\x63\x68\x65'+'\x63\x6b';var lr1K8iX=Webcrea.bAlert;Webcrea.bAlert=false;GetDataHandler(irc6ohZh);if(LastStatus()=='\x4f\x4b')eNMbV=true;else Webcrea.Trace(SqlStatus());Webcrea.bAlert=lr1K8iX;return eNMbV;},
	this.IsWhereData=function(oxsSC,ruJlPmiS,vAg3DC,ytciO,w7W7yCEx,CMRfIi){var bNBdCAK0N=false;if(oxsSC.arrStackEvent&&oxsSC.arrStackEvent.isearch('\x6f\x6e\x72'+'\x65\x63\x6f'+'\x72\x64\x73'+'\x65\x74')>=(0x1086+1410-0x1608))bNBdCAK0N=true;var E3NNCi=oxsSC.bFiltering;var AdH8uiou6=false;for(var E0V4RJ8=(0x1093+1414-0x1619);E0V4RJ8<vAg3DC.length;E0V4RJ8++){var KfznuJ3Z5=vAg3DC[E0V4RJ8];if(KfznuJ3Z5.iEquals('\x77\x68\x65'+'\x72\x65'))continue;if(Webcrea.IsWhereOper(KfznuJ3Z5)>=(0x1099+1416-0x1621))continue;var RJYehJ=false;var UhgEzop9a=false;var X51UlJJ=false;if(Webcrea.IsQuote(KfznuJ3Z5[(0x10a6 + 1420 - 0x1632)])){KfznuJ3Z5=Webcrea.RemoveQuote(KfznuJ3Z5);RJYehJ=true;}else if(Webcrea.IsNumber(KfznuJ3Z5))UhgEzop9a=true;else if(oxsSC.IsColumn(KfznuJ3Z5)){var jUKw5Iij9=oxsSC.GetColumn(KfznuJ3Z5);KfznuJ3Z5=oxsSC.arrField[jUKw5Iij9];X51UlJJ=true;}else if(Webcrea.IsString(KfznuJ3Z5))RJYehJ=true;if(!Webcrea.IsEmpty(ytciO)){var b7cTVog=oxsSC.arrData[ytciO][ruJlPmiS];if(w7W7yCEx&&vAg3DC.isearch(b7cTVog)>=(0x10b0+1424-0x1640)){AdH8uiou6=true;break;}else if(!w7W7yCEx&&vAg3DC.isearch(b7cTVog)<(0x10b3+1425-0x1644)){AdH8uiou6=true;break;}}else if(RJYehJ||UhgEzop9a||X51UlJJ){var l9P2Ppn=false;var oQqcv=false;var rotlGFPy=false;if(vAg3DC[E0V4RJ8]=='\x28'){l9P2Ppn=true;if(E0V4RJ8>(0x10c0+1429-0x1655)&&vAg3DC[E0V4RJ8-(0x10c6 + 1431 - 0x165c)].iEquals('\x61\x6e\x64'))oQqcv=true;else if(E0V4RJ8>(0x10c7+1431-0x165e)&&vAg3DC[E0V4RJ8-(0x10cc + 1433 - 0x1664)].iEquals('\x6f\x72'))rotlGFPy=true;}else if(E0V4RJ8>(0x10ce+1434-0x1668)&&vAg3DC[E0V4RJ8-(0x10d3 + 1435 - 0x166d)]=='\x28'){l9P2Ppn=true;if(E0V4RJ8>(0x10d6+1436-0x1671)&&vAg3DC[E0V4RJ8-(0x10db + 1438 - 0x1677)].iEquals('\x61\x6e\x64'))oQqcv=true;else if(E0V4RJ8>(0x10dd+1439-0x167b)&&vAg3DC[E0V4RJ8-(0x10e2 + 1440 - 0x1680)].iEquals('\x6f\x72'))rotlGFPy=true;}if(E0V4RJ8>(0x10e1+1440-0x1681)&&vAg3DC[E0V4RJ8-(0x10e6 + 1442 - 0x1687)].iEquals('\x61\x6e\x64'))oQqcv=true;else if(E0V4RJ8>(0x10e8+1442-0x168a)&&vAg3DC[E0V4RJ8-(0x10ed + 1444 - 0x1690)].iEquals('\x6f\x72'))rotlGFPy=true;if(oQqcv&&!AdH8uiou6)break;if(vAg3DC[E0V4RJ8+(0x10f0 + 1445 - 0x1694)]==='\x69\x6e'||vAg3DC[E0V4RJ8+(0x10f5 + 1447 - 0x169a)]==='\x69\x6e'){var xLhX8rQJM=true;if(vAg3DC[E0V4RJ8+(0x10fa + 1448 - 0x16a1)]==='\x6e\x6f\x74'){E0V4RJ8=E0V4RJ8+(0x1101+1451-0x16a9);xLhX8rQJM=false;}else E0V4RJ8=E0V4RJ8+(0x1102+1451-0x16ab);var l3s2w48=[];for(var oKqZO=E0V4RJ8;oKqZO<vAg3DC.length;oKqZO++){if(vAg3DC[oKqZO]==='\x2c')continue;if(vAg3DC[oKqZO]==='\x28')continue;if(vAg3DC[oKqZO]==='\x29'){E0V4RJ8=oKqZO;break;}var sbSl7j8d=vAg3DC[oKqZO];if(Webcrea.IsQuote(sbSl7j8d))sbSl7j8d=Webcrea.RemoveQuote(sbSl7j8d);l3s2w48[l3s2w48.length]=sbSl7j8d;}AdH8uiou6=Webcrea.IsWhereData(oxsSC,ruJlPmiS,l3s2w48,KfznuJ3Z5,xLhX8rQJM);continue;}var v6ahbmI=false;var yMvcB=false;var d9WjoWME=false;var NSFTRO=false;var ONuad=false;var grBQ0PqS=false;var yKdM1N=false;var BRJ9VfKDP=false;var EiX495dI=false;var H5mtaP=false;var KT8okcDnV=KfznuJ3Z5;if(X51UlJJ)KT8okcDnV=oxsSC.arrData[KfznuJ3Z5][ruJlPmiS];else if(vAg3DC.length>=E0V4RJ8+(0x1135+1468-0x16ee)&&Webcrea.IsRsFunction(KfznuJ3Z5)&&vAg3DC[E0V4RJ8+(0x1135 + 1468 - 0x16f0)]=='\x28'){E0V4RJ8+=(0x113a+1470-0x16f6);var Ym3UTGj='';var BP0bE2='';for(;E0V4RJ8<vAg3DC.length;E0V4RJ8++){if(vAg3DC[E0V4RJ8]=='\x29')break;if(!Webcrea.IsEmpty(BP0bE2))BP0bE2+='\x2c';var XWLX1j02S=vAg3DC[E0V4RJ8];if(Webcrea.IsQuote(XWLX1j02S))XWLX1j02S=Webcrea.RemoveQuote(XWLX1j02S);BP0bE2+=XWLX1j02S;}if(KfznuJ3Z5.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x53\x74'+'\x61\x72\x74')||KfznuJ3Z5.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x45\x6e'+'\x64')||KfznuJ3Z5.iEquals('\x50\x72\x65'+'\x76\x56\x61'+'\x6c\x75\x65')||KfznuJ3Z5.iEquals('\x4e\x65\x78'+'\x74\x56\x61'+'\x6c\x75\x65')||KfznuJ3Z5.iEquals('\x46\x69\x72'+'\x73\x74\x56'+'\x61\x6c\x75'+'\x65')||KfznuJ3Z5.iEquals('\x4c\x61\x73'+'\x74\x56\x61'+'\x6c\x75\x65')||KfznuJ3Z5.iEquals('\x52\x6f\x77'+'\x54\x65\x78'+'\x74')){BP0bE2="\x27"+BP0bE2+"\x27\x2c"+ruJlPmiS;}else if(KfznuJ3Z5.iEquals('\x52\x65\x63'+'\x6f\x72\x64'+'\x43\x6f\x75'+'\x6e\x74')){BP0bE2='';}else if(KfznuJ3Z5.iEquals('\x52\x6f\x77'+'\x4e\x6f')){KfznuJ3Z5='\x47\x65\x74'+'\x52\x6f\x77'+'\x4e\x6f';BP0bE2='';}else BP0bE2=ruJlPmiS;Ym3UTGj=oxsSC.objName+'\x2e'+KfznuJ3Z5+'\x28'+BP0bE2+'\x29';try{KT8okcDnV=eval(Ym3UTGj);}catch(e){}if(!Webcrea.IsCompareOper(vAg3DC[E0V4RJ8+(0x1145 + 1473 - 0x1705)])){AdH8uiou6=KT8okcDnV;continue;}}else if(vAg3DC.length>=E0V4RJ8+(0x114c+1476-0x170d)&&vAg3DC[E0V4RJ8+(0x114c + 1476 - 0x170f)]=='\x28'){var lrRvnQj=window[KfznuJ3Z5];if(Webcrea.IsFunction(lrRvnQj)){var ohqKs=KfznuJ3Z5;E0V4RJ8+=(0x1155+1479-0x171b);var vthVDdT=ohqKs;for(;E0V4RJ8<vAg3DC.length;E0V4RJ8++){var yN2xj=vAg3DC[E0V4RJ8];if(yN2xj=='\x29'){vthVDdT+=yN2xj;break;}else if(yN2xj!='\x28'&&!Webcrea.IsQuote(yN2xj)){if(ohqKs.iEquals('\x69\x6e\x73'+'\x74\x72')||ohqKs.iEquals('\x73\x75\x62'+'\x73\x74\x72')||ohqKs.iEquals('\x74\x61\x69'+'\x6c')||ohqKs.iEquals('\x6c\x65\x66'+'\x74')||ohqKs.iEquals('\x72\x69\x67'+'\x68\x74')||ohqKs.iEquals('\x74\x72\x69'+'\x6d')){if(oxsSC.IsColumn(yN2xj))yN2xj="\x27"+oxsSC.arrData[yN2xj][ruJlPmiS]+"\x27";}}vthVDdT+=yN2xj;}try{KT8okcDnV=eval(vthVDdT);}catch(e){}if(!Webcrea.IsCompareOper(vAg3DC[E0V4RJ8+(0x115f + 1482 - 0x1728)])){AdH8uiou6=KT8okcDnV;continue;}}}else if(Webcrea.IsWebcreaObject(KT8okcDnV)){let vqS6cq=Webcrea.MakeGetObject(KT8okcDnV);try{vqS6cq=Webcrea.Eval(vqS6cq);KT8okcDnV=vqS6cq;}catch(e){}}else if(CMRfIi){let CNe2K=KT8okcDnV;try{CNe2K=Webcrea.Eval(CNe2K);KT8okcDnV=CNe2K;}catch(e){}}var aJCBMqXQ=(0x116a+1486-0x1738);var BEm9M=vAg3DC[E0V4RJ8+(0x1175 + 1489 - 0x1744)];BEm9M=Webcrea.GetConvSyntax(BEm9M);if(Webcrea.IsQuote(BEm9M))BEm9M=Webcrea.RemoveQuote(vAg3DC[E0V4RJ8+(0x1178 + 1490 - 0x1748)]);else if(oxsSC.IsColumn(BEm9M))BEm9M=oxsSC.arrData[BEm9M][ruJlPmiS];else if(vAg3DC.length>=E0V4RJ8+(0x1181+1493-0x1751)&&Webcrea.IsRsFunction(BEm9M)&&vAg3DC[E0V4RJ8+(0x1181 + 1493 - 0x1753)]=='\x28'){aJCBMqXQ=E0V4RJ8+(0x1186+1495-0x1759);var UIHZgIw4e='';var YhVUDdR='';for(;aJCBMqXQ<vAg3DC.length;aJCBMqXQ++){if(vAg3DC[aJCBMqXQ]=='\x29')break;if(!Webcrea.IsEmpty(YhVUDdR))YhVUDdR+='\x2c';var kQkwRb=vAg3DC[aJCBMqXQ];if(Webcrea.IsQuote(kQkwRb))kQkwRb=Webcrea.RemoveQuote(kQkwRb);YhVUDdR+=kQkwRb;}if(BEm9M.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x53\x74'+'\x61\x72\x74')||BEm9M.iEquals('\x49\x73\x47'+'\x72\x6f\x75'+'\x70\x45\x6e'+'\x64')||BEm9M.iEquals('\x50\x72\x65'+'\x76\x56\x61'+'\x6c\x75\x65')||BEm9M.iEquals('\x4e\x65\x78'+'\x74\x56\x61'+'\x6c\x75\x65')||BEm9M.iEquals('\x46\x69\x72'+'\x73\x74\x56'+'\x61\x6c\x75'+'\x65')||BEm9M.iEquals('\x4c\x61\x73'+'\x74\x56\x61'+'\x6c\x75\x65')||BEm9M.iEquals('\x52\x6f\x77'+'\x54\x65\x78'+'\x74')){YhVUDdR="\x27"+YhVUDdR+"\x27\x2c"+ruJlPmiS;}else if(BEm9M.iEquals('\x52\x65\x63'+'\x6f\x72\x64'+'\x43\x6f\x75'+'\x6e\x74')){YhVUDdR='';}else if(BEm9M.iEquals('\x52\x6f\x77'+'\x4e\x6f')){BEm9M='\x47\x65\x74'+'\x52\x6f\x77'+'\x4e\x6f';YhVUDdR='';}else YhVUDdR=ruJlPmiS;UIHZgIw4e=oxsSC.objName+'\x2e'+BEm9M+'\x28'+YhVUDdR+'\x29';try{BEm9M=eval(UIHZgIw4e);}catch(e){}}else if(BEm9M&&(BEm9M.indexOf('\x2e\x47\x65'+'\x74\x56\x61'+'\x6c\x75\x65')>(0x118b+1497-0x1764)||BEm9M.indexOf('\x2e\x5f\x47'+'\x65\x74\x5f'+'\x52\x6f\x77'+'\x4e\x6f')>(0x118e+1498-0x1768))&&vAg3DC.length>=E0V4RJ8+(0x119b+1502-0x1774)&&vAg3DC[E0V4RJ8+(0x119b + 1502 - 0x1776)]=='\x28'){aJCBMqXQ=E0V4RJ8+(0x119e+1503-0x177a);var p9rEw=BEm9M;for(;aJCBMqXQ<vAg3DC.length;aJCBMqXQ++){var sPUmbQoth=vAg3DC[aJCBMqXQ];p9rEw+=sPUmbQoth;if(sPUmbQoth=='\x29'&&aJCBMqXQ+(0x11a4+1505-0x1784)<vAg3DC.length){var yxnQX=vAg3DC[aJCBMqXQ+(0x11aa + 1507 - 0x178c)];if(yxnQX!='\x2b')break;}}try{BEm9M=eval(p9rEw);}catch(e){}}else if(!Webcrea.IsEmpty(BEm9M)){BEm9M=Webcrea.MakeGetObject(BEm9M);try{if(Webcrea.IsFuncInnerVal(BEm9M)){BEm9M=Webcrea.GetFuncInnerVal(BEm9M);}else {var qPSyXff=eval(BEm9M);BEm9M=qPSyXff;}}catch(e){}}if(vAg3DC[E0V4RJ8+(0x11b1 + 1509 - 0x1795)]=='\x6c\x69\x6b'+'\x65'||(vAg3DC[E0V4RJ8+(0x11b4 + 1510 - 0x1799)]=='\x6e\x6f\x74'&&vAg3DC[E0V4RJ8+(0x11b9 + 1512 - 0x179f)]=='\x6c\x69\x6b'+'\x65')){if(vAg3DC[E0V4RJ8+(0x11bb + 1513 - 0x17a3)]=='\x6e\x6f\x74'&&vAg3DC[E0V4RJ8+(0x11c0 + 1514 - 0x17a8)]=='\x6c\x69\x6b'+'\x65'){BEm9M=Webcrea.RemoveQuote(vAg3DC[E0V4RJ8+(0x11c5 + 1516 - 0x17ae)]);EiX495dI=true;}if(BEm9M.indexOf('\x25\x32\x35')>=(0x11c2+1515-0x17ad)||BEm9M.indexOf('\x25')>=(0x11c6+1516-0x17b2)){if(BEm9M.indexOf('\x25\x32\x35')==(0x11c9+1517-0x17b6)||BEm9M.indexOf('\x25')==(0x11cc+1518-0x17ba))yKdM1N=true;else BRJ9VfKDP=true;BEm9M=Webcrea.ReplaceAll(BEm9M,'\x25\x32\x35','');BEm9M=Webcrea.ReplaceAll(BEm9M,'\x25','');}else if(Webcrea.IsEmpty(BEm9M))H5mtaP=true;}else if(vAg3DC[E0V4RJ8+(0x11d1 + 1520 - 0x17c0)]=='\x3d\x3d'||vAg3DC[E0V4RJ8+(0x11d5 + 1521 - 0x17c5)]=='\x3d')grBQ0PqS=true;else if(vAg3DC[E0V4RJ8+(0x11d8 + 1522 - 0x17c9)]=='\x21\x3d'||vAg3DC[E0V4RJ8+(0x11db + 1523 - 0x17cd)]=='\x3c\x3e')ONuad=true;else if(vAg3DC[E0V4RJ8+(0x11df + 1525 - 0x17d3)]=='\x3e')v6ahbmI=true;else if(vAg3DC[E0V4RJ8+(0x11e2 + 1526 - 0x17d7)]=='\x3e\x3d')yMvcB=true;else if(vAg3DC[E0V4RJ8+(0x11e5 + 1527 - 0x17db)]=='\x3c')d9WjoWME=true;else if(vAg3DC[E0V4RJ8+(0x11e8 + 1528 - 0x17df)]=='\x3c\x3d')NSFTRO=true;if(l9P2Ppn){var sJxmZ8wUy=(0x11ef+1530-0x17e8);var yyPns=[];var MeXADeqx=E0V4RJ8;for(;MeXADeqx<vAg3DC.length;MeXADeqx++){var dsSinFz=vAg3DC[MeXADeqx];yyPns[yyPns.length]=dsSinFz;if(MeXADeqx>E0V4RJ8&&dsSinFz==='\x28')sJxmZ8wUy++;else if(dsSinFz==='\x29')sJxmZ8wUy--;if(!sJxmZ8wUy)break;}E0V4RJ8=MeXADeqx;if(yyPns[(0x11fa + 1534 - 0x17f8)]=='\x28'&&yyPns[yyPns.length-(0x11ff + 1535 - 0x17fd)]=='\x29'){yyPns.splice(yyPns.length-(0x1202+1536-0x1801),(0x1206+1538-0x1807));yyPns.splice((0x1207+1538-0x1809),(0x120c+1540-0x180f));}if(AdH8uiou6&&rotlGFPy)continue;else {AdH8uiou6=Webcrea.IsWhereData(oxsSC,ruJlPmiS,yyPns);continue;}}if(AdH8uiou6&&rotlGFPy)break;if(yKdM1N||BRJ9VfKDP){if(yKdM1N&&KT8okcDnV.indexOf(BEm9M)>=(0x120e+1540-0x1812)&&!EiX495dI)AdH8uiou6=true;else if(BRJ9VfKDP&&KT8okcDnV.indexOf(BEm9M)==(0x1211+1541-0x1816)&&!EiX495dI)AdH8uiou6=true;else if(yKdM1N&&KT8okcDnV.indexOf(BEm9M)<(0x1214+1542-0x181a)&&EiX495dI)AdH8uiou6=true;else if(BRJ9VfKDP&&KT8okcDnV.indexOf(BEm9M)!=(0x1217+1543-0x181e)&&EiX495dI)AdH8uiou6=true;else if(oQqcv){AdH8uiou6=false;break;}}else if(H5mtaP){if(oQqcv){AdH8uiou6=false;break;}else AdH8uiou6=true;}else {if(grBQ0PqS&&(KT8okcDnV==BEm9M||(E3NNCi&&KT8okcDnV.iEquals(BEm9M))))AdH8uiou6=true;else if(ONuad&&(KT8okcDnV!=BEm9M||(E3NNCi&&!KT8okcDnV.iEquals(BEm9M))))AdH8uiou6=true;else if(v6ahbmI&&Webcrea.NumberReDef(KT8okcDnV)>Webcrea.NumberReDef(BEm9M))AdH8uiou6=true;else if(yMvcB&&Webcrea.NumberReDef(KT8okcDnV)>=Webcrea.NumberReDef(BEm9M))AdH8uiou6=true;else if(d9WjoWME&&Webcrea.NumberReDef(KT8okcDnV)<Webcrea.NumberReDef(BEm9M))AdH8uiou6=true;else if(NSFTRO&&Webcrea.NumberReDef(KT8okcDnV)<=Webcrea.NumberReDef(BEm9M))AdH8uiou6=true;else if(oQqcv){AdH8uiou6=false;break;}}if(AdH8uiou6&&rotlGFPy)break;if(EiX495dI)E0V4RJ8++;E0V4RJ8=E0V4RJ8+(0x121f+1546-0x1827)+aJCBMqXQ;}}return AdH8uiou6;},
	this.IsSessionTime=function(){var mmJS0F=false;var EzKkJxp2w=WebcreaInfo.SessionTime;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())EzKkJxp2w=window.parent.WebcreaInfo.SessionTime;if(!EzKkJxp2w)return mmJS0F;var cXFAWeF=CurDate()+CurTime();cXFAWeF=GetDate(cXFAWeF,(0x1234+1553-0x183f));var ii0bWMCW8=this.startTime;var lZ3wrrA=this.activeTime;if(!lZ3wrrA)lZ3wrrA=ii0bWMCW8;lZ3wrrA=GetDate(lZ3wrrA,(0x123d+1556-0x184b));var sWmJr572Y=cXFAWeF-lZ3wrrA;if(sWmJr572Y>(0x1238+1554-0x184a)&&sWmJr572Y>EzKkJxp2w)mmJS0F=true;return mmJS0F;},
	this.EndSessionCheck=function(){if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI()||Win.IsEndSessionDlg()){if(parent&&parent.WebcreaPack){if(typeof parent.WebcreaPack.EndSessionCheck!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')parent.WebcreaPack.EndSessionCheck();return;}}if(WebcreaPack.IsSessionTime()){Webcrea.bEndSession=true;Webcrea.ClearTimer('\x57\x65\x62'+'\x63\x72\x65'+'\x61\x50\x61'+'\x63\x6b\x2e'+'\x45\x6e\x64'+'\x53\x65\x73'+'\x73\x69\x6f'+'\x6e\x43\x68'+'\x65\x63\x6b'+'\x28\x29');var zszUF=[];Webcrea.FindNodeAll(document.body,'\x6e\x61\x6d'+'\x65','\x49\x46\x52'+'\x41\x4d\x45',zszUF);for(var X2aLyf8GW=zszUF.length-(0x1244+1558-0x1859);X2aLyf8GW>=(0x1245+1559-0x185c);X2aLyf8GW--){var BvCdmrrL=zszUF[X2aLyf8GW];var ASpWAad=BvCdmrrL.contentWindow;if(BvCdmrrL&&ASpWAad&&ASpWAad._my_Popup&&!ASpWAad.Win.IsLayerFile()&&ASpWAad!=window){ASpWAad._my_Popup.close();}}Webcrea.CloseLayer('\x61\x6c\x6c');if(WebcreaInfo.endsession){Webcrea.CreateLayer('\x65\x6e\x64'+'\x73\x65\x73'+'\x73\x69\x6f'+'\x6e');}else {var BxN3h=WebcreaInfo.endsessionMsg;if(Webcrea.IsNull(BxN3h))BxN3h=Webcrea.LoadString('\x69\x64\x73'+'\x45\x6e\x64'+'\x53\x65\x73'+'\x73\x69\x6f'+'\x6e');alert(BxN3h);WebcreaPack.EndSessionEvent('\x63\x6c\x6f'+'\x73\x65');return;}}},
	this.EndSessionEvent=function(){var EDcyLsSl=arguments[(0x1255 + 1564 - 0x1871)];if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI()||Win.IsEndSessionDlg()){if(parent&&parent.WebcreaPack){if(typeof parent.WebcreaPack.EndSessionEvent!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')parent.WebcreaPack.EndSessionEvent(EDcyLsSl);return;}}try{var LzpPS=[],OGJd4xxK=[];if(EDcyLsSl=='\x6f\x6b'){var ReNSgB=parent.Webcrea.FindNodePublic(parent.document.body,'\x69\x64','\x5f\x6d\x79'+'\x5f\x65\x6e'+'\x64\x73\x65'+'\x73\x73\x69'+'\x6f\x6e');if(ReNSgB)ReNSgB.style.display='\x6e\x6f\x6e'+'\x65';parent.Webcrea.LockUI(false);Webcrea.bEndSession=false;var V1m8ixYzD=CurDate()+CurTime();WebcreaPack.SetActiveTime(V1m8ixYzD);}else if(EDcyLsSl=='\x63\x6c\x6f'+'\x73\x65'||EDcyLsSl=='\x63\x61\x6e'+'\x63\x65\x6c'){LzpPS[(0x1266 + 1570 - 0x1888)]='\x63\x6d\x64';OGJd4xxK[(0x1269 + 1571 - 0x188c)]='\x65\x6e\x64'+'\x73\x65\x73'+'\x73\x69\x6f'+'\x6e';Webcrea.PostData(Webcrea.GetCrossUrl(),LzpPS,OGJd4xxK);}}catch(e){}finally{}},
	this.SetActiveTime=function(){if(!Webcrea.IsMDIFrame())return;var ZFknSRXCU=arguments[(0x1270 + 1573 - 0x1895)];if(Webcrea.bEndSession)return;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI()){if(parent&&parent.WebcreaPack){if(typeof parent.WebcreaPack.SetActiveTime!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')parent.WebcreaPack.SetActiveTime(ZFknSRXCU);return;}}this.activeTime=ZFknSRXCU;if(!Webcrea.GetTimer('\x57\x65\x62'+'\x63\x72\x65'+'\x61\x50\x61'+'\x63\x6b\x2e'+'\x45\x6e\x64'+'\x53\x65\x73'+'\x73\x69\x6f'+'\x6e\x43\x68'+'\x65\x63\x6b'+'\x28\x29',true))Webcrea.SetTimer('\x57\x65\x62'+'\x63\x72\x65'+'\x61\x50\x61'+'\x63\x6b\x2e'+'\x45\x6e\x64'+'\x53\x65\x73'+'\x73\x69\x6f'+'\x6e\x43\x68'+'\x65\x63\x6b'+'\x28\x29',(0x1277+1575-0x189c));},
	this.SetStartTime=function(){if(!Webcrea.IsMDIFrame())return;var i6H1Rt4LI=arguments[(0x1279 + 1576 - 0x18a1)];if(Webcrea.bEndSession||Win.IsEndSessionDlg())return;else if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI()){if(parent&&parent.WebcreaPack){if(typeof parent.WebcreaPack.SetStartTime!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')parent.WebcreaPack.SetStartTime(i6H1Rt4LI);return;}}if(this.startTime&&this.startTime>i6H1Rt4LI)i6H1Rt4LI=this.startTime;this.startTime=i6H1Rt4LI;if(!Webcrea.GetTimer('\x57\x65\x62'+'\x63\x72\x65'+'\x61\x50\x61'+'\x63\x6b\x2e'+'\x45\x6e\x64'+'\x53\x65\x73'+'\x73\x69\x6f'+'\x6e\x43\x68'+'\x65\x63\x6b'+'\x28\x29',true))Webcrea.SetTimer('\x57\x65\x62'+'\x63\x72\x65'+'\x61\x50\x61'+'\x63\x6b\x2e'+'\x45\x6e\x64'+'\x53\x65\x73'+'\x73\x69\x6f'+'\x6e\x43\x68'+'\x65\x63\x6b'+'\x28\x29',(0x1281+1579-0x18aa));},
	this.GetSessionTime=function(){var s8yf5YhHb=WebcreaInfo.SessionTime;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())s8yf5YhHb=window.parent.WebcreaInfo.SessionTime;if(!s8yf5YhHb)return;var vODbbP4;if(window.parent&&window.parent.Webcrea.IsMDI()){var znREj=CurDate()+CurTime();znREj=GetDate(znREj,(0x1296+1586-0x18c2));var RuMIUY5=parent.WebcreaPack.startTime;var pHxo2=parent.WebcreaPack.activeTime;if(!pHxo2)pHxo2=RuMIUY5;pHxo2=GetDate(pHxo2,(0x129f+1589-0x18ce));vODbbP4=znREj-pHxo2;vODbbP4=s8yf5YhHb-vODbbP4;}return vODbbP4;},
	this.GetTextWidthByStyle=function(){var Tc1ayNq=arguments[(0x129a + 1587 - 0x18cd)];var EyKtKuIN=arguments[(0x12a2 + 1590 - 0x18d7)];var LtpG6=arguments[(0x12ab + 1593 - 0x18e2)];var SX7Kkd=arguments[(0x12b4 + 1596 - 0x18ed)];var YCZVWmP6=arguments[(0x12bc + 1598 - 0x18f6)];if(Webcrea.IsEmpty(SX7Kkd))SX7Kkd=false;var r9FbGAT3J=false;if(YCZVWmP6&&Webcrea.IsObject(YCZVWmP6))r9FbGAT3J=true;var cEHAbgYS=document.createElement('\x73\x70\x61'+'\x6e');cEHAbgYS.textContent=Tc1ayNq;if(!Webcrea.IsEmpty(LtpG6))cEHAbgYS.setAttribute('\x63\x6c\x61'+'\x73\x73',LtpG6);else if(!Webcrea.IsEmpty(EyKtKuIN))cEHAbgYS.setAttribute('\x73\x74\x79'+'\x6c\x65',EyKtKuIN);cEHAbgYS.style.display='\x69\x6e\x6c'+'\x69\x6e\x65'+'\x2d\x62\x6c'+'\x6f\x63\x6b';cEHAbgYS.style.position='\x61\x62\x73'+'\x6f\x6c\x75'+'\x74\x65';cEHAbgYS.style.top='\x30\x70\x78';if(SX7Kkd)cEHAbgYS.style.fontWeight='\x62\x6f\x6c'+'\x64';document.body.appendChild(cEHAbgYS);var f5f2AW=Webcrea.GetWidth(cEHAbgYS,r9FbGAT3J);document.body.removeChild(cEHAbgYS);f5f2AW+=(0x12c3+1601-0x1903);return f5f2AW;},
	this.GetTextWidth=function(){var mH5wqgA=arguments[(0x12c8 + 1602 - 0x190a)];var svXguRAFO=arguments[(0x12d0 + 1605 - 0x1914)];var za15C=arguments[(0x12d9 + 1608 - 0x191f)];var LTMAxHA='';var cbHhH='';var wDEcG9T6G=false;if(!za15C)LTMAxHA=arguments[(0x12e4 + 1612 - 0x192f)];else {var BfP3P=za15C.GetCellInfo(svXguRAFO);if(!BfP3P)return;cbHhH=BfP3P.classId;wDEcG9T6G=true;}var F2ezwomv=document.createElement('\x73\x70\x61'+'\x6e');F2ezwomv.textContent=mH5wqgA;if(!Webcrea.IsEmpty(cbHhH))F2ezwomv.setAttribute('\x63\x6c\x61'+'\x73\x73',cbHhH);else if(!Webcrea.IsEmpty(LTMAxHA))F2ezwomv.setAttribute('\x73\x74\x79'+'\x6c\x65',LTMAxHA);F2ezwomv.style.display='\x69\x6e\x6c'+'\x69\x6e\x65'+'\x2d\x62\x6c'+'\x6f\x63\x6b';F2ezwomv.style.position='\x61\x62\x73'+'\x6f\x6c\x75'+'\x74\x65';F2ezwomv.style.top='\x30\x70\x78';document.body.appendChild(F2ezwomv);var IPsuGtP=Webcrea.GetWidth(F2ezwomv,wDEcG9T6G);document.body.removeChild(F2ezwomv);return IPsuGtP;},
	this.QueryCloseEvent=function(){if(!Webcrea.arrQueryCloseEvent)return;var Lhi8Z=arguments[(0x12f2 + 1616 - 0x1942)];if(typeof Webcrea.QueryCloseEvent!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')Webcrea.QueryCloseEvent(Lhi8Z);for(var SSaDmm=(0x12f9+1619-0x194c);SSaDmm<Webcrea.arrQueryCloseEvent.length;SSaDmm++){var Y69OGzth=Webcrea.arrQueryCloseEvent[SSaDmm];if(Lhi8Z!=''&&Y69OGzth.obj.divPos!=Lhi8Z)continue;if(Lhi8Z=='')continue;try{eval(Y69OGzth.func);}catch(e){}Webcrea.arrQueryCloseEvent.splice(SSaDmm,(0x1301+1621-0x1955));}},
	this.ExportXlsx=function(){var lFRksdsdk=arguments[(0x1306 + 1623 - 0x195d)];var fW56VU=lFRksdsdk.fileName;var jnJ1pNVQc=lFRksdsdk.arrObj;var mXwasTde=lFRksdsdk.arrSheetName;var pYmsNQ=lFRksdsdk.charset;var sq0glusO7=lFRksdsdk.bMulti;if(!sq0glusO7&&jnJ1pNVQc.length>(0x131b+1630-0x1978))sq0glusO7=true;var zTqzKU='';var siRT7THag=new JSZip();var wM1QzFs='';var AHXlT='';var uVDzBGf95='';var Be8cVTR='';var Bz3qz=lFRksdsdk.bLayout;var FwzhAT4p=GetExportLayout();var IDRuKz1=[];var Lbis2='';var OzueOM6x='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n';var SF93hv="\x5b\x43\x6f"+"\x6e\x74\x65"+"\x6e\x74\x5f"+"\x54\x79\x70"+"\x65\x73\x5d"+"\x2e\x78\x6d"+"\x6c";var VdNZ8=OzueOM6x+'\x3c\x54\x79\x70\x65\x73\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x70\x61\x63\x6b\x61\x67\x65\x2f'+'\x32\x30\x30\x36\x2f\x63\x6f\x6e\x74\x65\x6e\x74\x2d\x74\x79\x70\x65\x73\x22\x3e\x3c\x44\x65\x66\x61\x75\x6c\x74\x20\x45\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x72\x65\x6c\x73\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70'+'\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x70\x61\x63\x6b\x61\x67\x65\x2e\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x2b'+'\x78\x6d\x6c\x22\x2f\x3e\x3c\x44\x65\x66\x61\x75\x6c\x74\x20\x45\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f'+'\x78\x6d\x6c\x22\x2f\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65\x20\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d\x22\x2f\x78\x6c\x2f\x77\x6f\x72\x6b\x62\x6f\x6f\x6b\x2e\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d'+'\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x6f\x66\x66\x69\x63\x65\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x73\x70\x72\x65\x61\x64\x73\x68\x65'+'\x65\x74\x6d\x6c\x2e\x73\x68\x65\x65\x74\x2e\x6d\x61\x69\x6e\x2b\x78\x6d\x6c\x22\x2f\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65\x20\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d\x22\x2f\x78\x6c\x2f\x77\x6f\x72\x6b\x73\x68\x65\x65\x74\x73'+'\x2f\x73\x68\x65\x65\x74\x31\x2e\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73'+'\x2d\x6f\x66\x66\x69\x63\x65\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x73\x70\x72\x65\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2e\x77\x6f\x72\x6b\x73\x68\x65\x65\x74\x2b\x78\x6d\x6c\x22\x2f\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65\x20'+'\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d\x22\x2f\x78\x6c\x2f\x74\x68\x65\x6d\x65\x2f\x74\x68\x65\x6d\x65\x31\x2e\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e'+'\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x6f\x66\x66\x69\x63\x65\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x74\x68\x65\x6d\x65\x2b\x78\x6d\x6c\x22\x2f\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65'+'\x20\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d\x22\x2f\x78\x6c\x2f\x73\x74\x79\x6c\x65\x73\x2e\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e'+'\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x6f\x66\x66\x69\x63\x65\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x73\x70\x72\x65\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2e\x73\x74\x79\x6c\x65\x73\x2b\x78\x6d\x6c\x22\x2f'+'\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x6f'+'\x66\x66\x69\x63\x65\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x73\x70\x72\x65\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2e\x73\x68\x61\x72\x65\x64\x53\x74\x72\x69\x6e\x67\x73\x2b\x78\x6d\x6c\x22\x20\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d'+'\x22\x2f\x78\x6c\x2f\x73\x68\x61\x72\x65\x64\x53\x74\x72\x69\x6e\x67\x73\x2e\x78\x6d\x6c\x22\x2f\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65\x20\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d\x22\x2f\x64\x6f\x63\x50\x72\x6f\x70\x73\x2f\x63'+'\x6f\x72\x65\x2e\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x70\x61\x63'+'\x6b\x61\x67\x65\x2e\x63\x6f\x72\x65\x2d\x70\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x2b\x78\x6d\x6c\x22\x2f\x3e\x3c\x4f\x76\x65\x72\x72\x69\x64\x65\x20\x50\x61\x72\x74\x4e\x61\x6d\x65\x3d\x22\x2f\x64\x6f\x63\x50\x72\x6f\x70\x73'+'\x2f\x61\x70\x70\x2e\x78\x6d\x6c\x22\x20\x43\x6f\x6e\x74\x65\x6e\x74\x54\x79\x70\x65\x3d\x22\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x2f\x76\x6e\x64\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2d\x6f\x66'+'\x66\x69\x63\x65\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x65\x78\x74\x65\x6e\x64\x65\x64\x2d\x70\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x2b\x78\x6d\x6c\x22\x2f\x3e\x3c\x2f\x54\x79\x70\x65\x73\x3e';siRT7THag.file(SF93hv,VdNZ8);SF93hv="\x64\x6f\x63"+"\x50\x72\x6f"+"\x70\x73\x2f"+"\x63\x6f\x72"+"\x65\x2e\x78"+"\x6d\x6c";VdNZ8=OzueOM6x+'\x3c\x63\x70\x3a\x63\x6f\x72\x65\x50\x72\x6f\x70\x65\x72\x74'+'\x69\x65\x73\x20\x78\x6d\x6c\x6e\x73\x3a\x63\x70\x3d\x22\x68'+'\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f'+'\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f'+'\x72\x67\x2f\x70\x61\x63\x6b\x61\x67\x65\x2f\x32\x30\x30\x36'+'\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x2f\x63\x6f\x72\x65\x2d'+'\x70\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x22\x20\x78\x6d\x6c'+'\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70'+'\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d'+'\x65\x6e\x74\x73\x2f\x31\x2e\x31\x2f\x22\x20\x78\x6d\x6c\x6e'+'\x73\x3a\x64\x63\x74\x65\x72\x6d\x73\x3d\x22\x68\x74\x74\x70'+'\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f'+'\x74\x65\x72\x6d\x73\x2f\x22\x20\x78\x6d\x6c\x6e\x73\x3a\x64'+'\x63\x6d\x69\x74\x79\x70\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f'+'\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63'+'\x6d\x69\x74\x79\x70\x65\x2f\x22\x20\x78\x6d\x6c\x6e\x73\x3a'+'\x78\x73\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77'+'\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x31\x2f\x58\x4d'+'\x4c\x53\x63\x68\x65\x6d\x61\x2d\x69\x6e\x73\x74\x61\x6e\x63'+'\x65\x22\x2f\x3e';siRT7THag.file(SF93hv,VdNZ8);SF93hv="\x64\x6f\x63"+"\x50\x72\x6f"+"\x70\x73\x2f"+"\x61\x70\x70"+"\x2e\x78\x6d"+"\x6c";VdNZ8=OzueOM6x+'\x3c\x50\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6f\x66\x66\x69\x63'+'\x65\x44\x6f\x63\x75\x6d\x65\x6e\x74\x2f\x32\x30\x30\x36\x2f\x65\x78\x74\x65\x6e\x64\x65\x64\x2d\x70\x72\x6f\x70\x65'+'\x72\x74\x69\x65\x73\x22\x20\x78\x6d\x6c\x6e\x73\x3a\x76\x74\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d'+'\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6f\x66\x66\x69\x63\x65\x44'+'\x6f\x63\x75\x6d\x65\x6e\x74\x2f\x32\x30\x30\x36\x2f\x64\x6f\x63\x50\x72\x6f\x70\x73\x56\x54\x79\x70\x65\x73\x22\x3e'+'\x3c\x41\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x3e\x4d\x69\x63\x72\x6f\x73\x6f\x66\x74\x20\x45\x78\x63\x65\x6c\x3c'+'\x2f\x41\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x3e\x3c\x44\x6f\x63\x53\x65\x63\x75\x72\x69\x74\x79\x3e\x30\x3c\x2f'+'\x44\x6f\x63\x53\x65\x63\x75\x72\x69\x74\x79\x3e\x3c\x53\x63\x61\x6c\x65\x43\x72\x6f\x70\x3e\x66\x61\x6c\x73\x65\x3c'+'\x2f\x53\x63\x61\x6c\x65\x43\x72\x6f\x70\x3e\x3c\x48\x65\x61\x64\x69\x6e\x67\x50\x61\x69\x72\x73\x3e\x3c\x76\x74\x3a'+'\x76\x65\x63\x74\x6f\x72\x20\x73\x69\x7a\x65\x3d\x22\x32\x22\x20\x62\x61\x73\x65\x54\x79\x70\x65\x3d\x22\x76\x61\x72'+'\x69\x61\x6e\x74\x22\x3e\x3c\x76\x74\x3a\x76\x61\x72\x69\x61\x6e\x74\x3e\x3c\x76\x74\x3a\x6c\x70\x73\x74\x72\x3e\x57'+'\x6f\x72\x6b\x73\x68\x65\x65\x74\x73\x3c\x2f\x76\x74\x3a\x6c\x70\x73\x74\x72\x3e\x3c\x2f\x76\x74\x3a\x76\x61\x72\x69'+'\x61\x6e\x74\x3e\x3c\x76\x74\x3a\x76\x61\x72\x69\x61\x6e\x74\x3e\x3c\x76\x74\x3a\x69\x34\x3e\x31\x3c\x2f\x76\x74\x3a'+'\x69\x34\x3e\x3c\x2f\x76\x74\x3a\x76\x61\x72\x69\x61\x6e\x74\x3e\x3c\x2f\x76\x74\x3a\x76\x65\x63\x74\x6f\x72\x3e\x3c'+'\x2f\x48\x65\x61\x64\x69\x6e\x67\x50\x61\x69\x72\x73\x3e\x3c\x54\x69\x74\x6c\x65\x73\x4f\x66\x50\x61\x72\x74\x73\x3e'+'\x3c\x76\x74\x3a\x76\x65\x63\x74\x6f\x72\x20\x73\x69\x7a\x65\x3d\x22\x31\x22\x20\x62\x61\x73\x65\x54\x79\x70\x65\x3d'+'\x22\x6c\x70\x73\x74\x72\x22\x3e\x3c\x76\x74\x3a\x6c\x70\x73\x74\x72\x3e\x53\x68\x65\x65\x74\x31\x3c\x2f\x76\x74\x3a'+'\x6c\x70\x73\x74\x72\x3e\x3c\x2f\x76\x74\x3a\x76\x65\x63\x74\x6f\x72\x3e\x3c\x2f\x54\x69\x74\x6c\x65\x73\x4f\x66\x50'+'\x61\x72\x74\x73\x3e\x3c\x2f\x50\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x3e';siRT7THag.file(SF93hv,VdNZ8);SF93hv="\x5f\x72\x65"+"\x6c\x73\x2f"+"\x2e\x72\x65"+"\x6c\x73";VdNZ8=OzueOM6x+'\x3c\x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a'+'\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72'+'\x67\x2f\x70\x61\x63\x6b\x61\x67\x65\x2f\x32\x30\x30\x36\x2f\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70'+'\x73\x22\x3e\x3c\x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x20\x49\x64\x3d\x22\x72\x49\x64\x33\x22\x20'+'\x54\x79\x70\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d'+'\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6f\x66\x66\x69\x63\x65\x44\x6f\x63\x75\x6d\x65\x6e\x74'+'\x2f\x32\x30\x30\x36\x2f\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x2f\x65\x78\x74\x65\x6e\x64\x65'+'\x64\x2d\x70\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x22\x20\x54\x61\x72\x67\x65\x74\x3d\x22\x64\x6f\x63\x50\x72'+'\x6f\x70\x73\x2f\x61\x70\x70\x2e\x78\x6d\x6c\x22\x2f\x3e\x3c\x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70'+'\x20\x49\x64\x3d\x22\x72\x49\x64\x32\x22\x20\x54\x79\x70\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x70\x61\x63'+'\x6b\x61\x67\x65\x2f\x32\x30\x30\x36\x2f\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x2f\x6d\x65\x74'+'\x61\x64\x61\x74\x61\x2f\x63\x6f\x72\x65\x2d\x70\x72\x6f\x70\x65\x72\x74\x69\x65\x73\x22\x20\x54\x61\x72\x67'+'\x65\x74\x3d\x22\x64\x6f\x63\x50\x72\x6f\x70\x73\x2f\x63\x6f\x72\x65\x2e\x78\x6d\x6c\x22\x2f\x3e\x3c\x52\x65'+'\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x20\x49\x64\x3d\x22\x72\x49\x64\x31\x22\x20\x54\x79\x70\x65\x3d\x22'+'\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61'+'\x74\x73\x2e\x6f\x72\x67\x2f\x6f\x66\x66\x69\x63\x65\x44\x6f\x63\x75\x6d\x65\x6e\x74\x2f\x32\x30\x30\x36\x2f'+'\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x2f\x6f\x66\x66\x69\x63\x65\x44\x6f\x63\x75\x6d\x65\x6e'+'\x74\x22\x20\x54\x61\x72\x67\x65\x74\x3d\x22\x78\x6c\x2f\x77\x6f\x72\x6b\x62\x6f\x6f\x6b\x2e\x78\x6d\x6c\x22'+'\x2f\x3e\x3c\x2f\x52\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x3e';siRT7THag.file(SF93hv,VdNZ8);var Y1P7Rq5q='';SF93hv="\x78\x6c\x2f"+"\x74\x68\x65"+"\x6d\x65\x2f"+"\x74\x68\x65"+"\x6d\x65\x31"+"\x2e\x78\x6d"+"\x6c";VdNZ8=OzueOM6x+'\x3c\x61\x3a\x74\x68\x65\x6d\x65\x20\x78\x6d\x6c\x6e\x73\x3a\x61\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d'+'\x61\x74\x73\x2e\x6f\x72\x67\x2f\x64\x72\x61\x77\x69\x6e\x67\x6d\x6c\x2f\x32\x30\x30\x36\x2f\x6d\x61\x69\x6e\x22\x20\x6e\x61\x6d\x65\x3d\x22\x4f\x66\x66\x69\x63\x65\x20\x54\x68'+'\x65\x6d\x65\x22\x3e\x3c\x61\x3a\x74\x68\x65\x6d\x65\x45\x6c\x65\x6d\x65\x6e\x74\x73\x3e\x3c\x61\x3a\x63\x6c\x72\x53\x63\x68\x65\x6d\x65\x20\x6e\x61\x6d\x65\x3d\x22\x4f\x66\x66'+'\x69\x63\x65\x22\x3e\x3c\x61\x3a\x64\x6b\x31\x3e\x3c\x61\x3a\x73\x79\x73\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x77\x69\x6e\x64\x6f\x77\x54\x65\x78\x74\x22\x20\x6c\x61\x73\x74\x43'+'\x6c\x72\x3d\x22\x30\x30\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x64\x6b\x31\x3e\x3c\x61\x3a\x6c\x74\x31\x3e\x3c\x61\x3a\x73\x79\x73\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x77'+'\x69\x6e\x64\x6f\x77\x22\x20\x6c\x61\x73\x74\x43\x6c\x72\x3d\x22\x46\x46\x46\x46\x46\x46\x22\x2f\x3e\x3c\x2f\x61\x3a\x6c\x74\x31\x3e\x3c\x61\x3a\x64\x6b\x32\x3e\x3c\x61\x3a\x73'+'\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x34\x34\x35\x34\x36\x41\x22\x2f\x3e\x3c\x2f\x61\x3a\x64\x6b\x32\x3e\x3c\x61\x3a\x6c\x74\x32\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43'+'\x6c\x72\x20\x76\x61\x6c\x3d\x22\x45\x37\x45\x36\x45\x36\x22\x2f\x3e\x3c\x2f\x61\x3a\x6c\x74\x32\x3e\x3c\x61\x3a\x61\x63\x63\x65\x6e\x74\x31\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43'+'\x6c\x72\x20\x76\x61\x6c\x3d\x22\x35\x42\x39\x42\x44\x35\x22\x2f\x3e\x3c\x2f\x61\x3a\x61\x63\x63\x65\x6e\x74\x31\x3e\x3c\x61\x3a\x61\x63\x63\x65\x6e\x74\x32\x3e\x3c\x61\x3a\x73'+'\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x45\x44\x37\x44\x33\x31\x22\x2f\x3e\x3c\x2f\x61\x3a\x61\x63\x63\x65\x6e\x74\x32\x3e\x3c\x61\x3a\x61\x63\x63\x65\x6e\x74\x33\x3e'+'\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x41\x35\x41\x35\x41\x35\x22\x2f\x3e\x3c\x2f\x61\x3a\x61\x63\x63\x65\x6e\x74\x33\x3e\x3c\x61\x3a\x61\x63\x63\x65'+'\x6e\x74\x34\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x46\x46\x43\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x61\x63\x63\x65\x6e\x74\x34\x3e\x3c\x61\x3a'+'\x61\x63\x63\x65\x6e\x74\x35\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x34\x34\x37\x32\x43\x34\x22\x2f\x3e\x3c\x2f\x61\x3a\x61\x63\x63\x65\x6e\x74\x35'+'\x3e\x3c\x61\x3a\x61\x63\x63\x65\x6e\x74\x36\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x37\x30\x41\x44\x34\x37\x22\x2f\x3e\x3c\x2f\x61\x3a\x61\x63\x63'+'\x65\x6e\x74\x36\x3e\x3c\x61\x3a\x68\x6c\x69\x6e\x6b\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x30\x35\x36\x33\x43\x31\x22\x2f\x3e\x3c\x2f\x61\x3a\x68'+'\x6c\x69\x6e\x6b\x3e\x3c\x61\x3a\x66\x6f\x6c\x48\x6c\x69\x6e\x6b\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x39\x35\x34\x46\x37\x32\x22\x2f\x3e\x3c\x2f'+'\x61\x3a\x66\x6f\x6c\x48\x6c\x69\x6e\x6b\x3e\x3c\x2f\x61\x3a\x63\x6c\x72\x53\x63\x68\x65\x6d\x65\x3e\x3c\x61\x3a\x66\x6f\x6e\x74\x53\x63\x68\x65\x6d\x65\x20\x6e\x61\x6d\x65\x3d'+'\x22\x4f\x66\x66\x69\x63\x65\x22\x3e\x3c\x61\x3a\x6d\x61\x6a\x6f\x72\x46\x6f\x6e\x74\x3e\x3c\x61\x3a\x6c\x61\x74\x69\x6e\x20\x74\x79\x70\x65\x66\x61\x63\x65\x3d\x22\x43\x61\x6c'+'\x69\x62\x72\x69\x20\x4c\x69\x67\x68\x74\x22\x20\x70\x61\x6e\x6f\x73\x65\x3d\x22\x30\x32\x30\x46\x30\x33\x30\x32\x30\x32\x30\x32\x30\x34\x30\x33\x30\x32\x30\x34\x22\x2f\x3e\x3c'+'\x61\x3a\x65\x61\x20\x74\x79\x70\x65\x66\x61\x63\x65\x3d\x22\x22\x2f\x3e\x3c\x61\x3a\x63\x73\x20\x74\x79\x70\x65\x66\x61\x63\x65\x3d\x22\x22\x2f\x3e'+Y1P7Rq5q+'\x3c\x2f\x61\x3a\x6d\x61\x6a'+'\x6f\x72\x46\x6f\x6e\x74\x3e'+'\x3c\x61\x3a\x6d\x69\x6e\x6f'+'\x72\x46\x6f\x6e\x74\x3e\x3c'+'\x61\x3a\x6c\x61\x74\x69\x6e'+'\x20\x74\x79\x70\x65\x66\x61'+'\x63\x65\x3d\x22\x43\x61\x6c'+'\x69\x62\x72\x69\x22\x20\x70'+'\x61\x6e\x6f\x73\x65\x3d\x22'+'\x30\x32\x30\x46\x30\x35\x30'+'\x32\x30\x32\x30\x32\x30\x34'+'\x30\x33\x30\x32\x30\x34\x22'+'\x2f\x3e\x3c\x61\x3a\x65\x61'+'\x20\x74\x79\x70\x65\x66\x61'+'\x63\x65\x3d\x22\x22\x2f\x3e'+'\x3c\x61\x3a\x63\x73\x20\x74'+'\x79\x70\x65\x66\x61\x63\x65'+'\x3d\x22\x22\x2f\x3e'+Y1P7Rq5q+'\x3c\x2f\x61\x3a\x6d\x69\x6e\x6f\x72\x46\x6f\x6e\x74\x3e\x3c\x2f\x61\x3a\x66\x6f\x6e\x74\x53\x63\x68\x65\x6d\x65\x3e\x3c\x61\x3a\x66\x6d\x74\x53\x63\x68\x65\x6d\x65\x20\x6e\x61\x6d\x65\x3d\x22\x4f\x66\x66\x69\x63\x65\x22\x3e\x3c\x61\x3a\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x67\x72\x61\x64\x46\x69\x6c\x6c\x20\x72'+'\x6f\x74\x57\x69\x74\x68\x53\x68\x61\x70\x65\x3d\x22\x31\x22\x3e\x3c\x61\x3a\x67\x73\x4c\x73\x74\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x31\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x35\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x36\x37\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73'+'\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x35\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x35\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x33\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x37\x33\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65'+'\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x31\x30\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x35\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x39\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x38\x31\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e'+'\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x2f\x61\x3a\x67\x73\x4c\x73\x74\x3e\x3c\x61\x3a\x6c\x69\x6e\x20\x61\x6e\x67\x3d\x22\x35\x34\x30\x30\x30\x30\x30\x22\x20\x73\x63\x61\x6c\x65\x64\x3d\x22\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x67\x72\x61\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x67\x72\x61\x64\x46\x69\x6c\x6c\x20\x72\x6f\x74\x57\x69\x74\x68\x53\x68\x61\x70\x65\x3d\x22\x31\x22\x3e\x3c\x61\x3a\x67\x73\x4c\x73\x74\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72'+'\x22\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x33\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x32\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x39\x34\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x35\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a'+'\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x31\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x68\x61\x64\x65\x20\x76\x61\x6c\x3d\x22\x31\x30\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x31\x30\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x6c\x75'+'\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x39\x39\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x32\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x68\x61\x64\x65\x20\x76\x61\x6c\x3d\x22\x37\x38\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x2f\x61\x3a\x67\x73\x4c\x73\x74\x3e\x3c\x61\x3a\x6c\x69\x6e\x20\x61\x6e\x67\x3d\x22\x35\x34\x30\x30\x30\x30\x30\x22\x20\x73\x63\x61\x6c\x65\x64\x3d\x22\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x67\x72\x61\x64\x46\x69'+'\x6c\x6c\x3e\x3c\x2f\x61\x3a\x66\x69\x6c\x6c\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x6c\x6e\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x6c\x6e\x20\x77\x3d\x22\x36\x33\x35\x30\x22\x20\x63\x61\x70\x3d\x22\x66\x6c\x61\x74\x22\x20\x63\x6d\x70\x64\x3d\x22\x73\x6e\x67\x22\x20\x61\x6c\x67\x6e\x3d\x22\x63\x74\x72\x22\x3e\x3c\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a'+'\x70\x72\x73\x74\x44\x61\x73\x68\x20\x76\x61\x6c\x3d\x22\x73\x6f\x6c\x69\x64\x22\x2f\x3e\x3c\x61\x3a\x6d\x69\x74\x65\x72\x20\x6c\x69\x6d\x3d\x22\x38\x30\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x6c\x6e\x3e\x3c\x61\x3a\x6c\x6e\x20\x77\x3d\x22\x31\x32\x37\x30\x30\x22\x20\x63\x61\x70\x3d\x22\x66\x6c\x61\x74\x22\x20\x63\x6d\x70\x64\x3d\x22\x73\x6e\x67\x22\x20\x61\x6c\x67\x6e\x3d\x22\x63\x74\x72\x22\x3e\x3c\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22'+'\x2f\x3e\x3c\x2f\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x70\x72\x73\x74\x44\x61\x73\x68\x20\x76\x61\x6c\x3d\x22\x73\x6f\x6c\x69\x64\x22\x2f\x3e\x3c\x61\x3a\x6d\x69\x74\x65\x72\x20\x6c\x69\x6d\x3d\x22\x38\x30\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x6c\x6e\x3e\x3c\x61\x3a\x6c\x6e\x20\x77\x3d\x22\x31\x39\x30\x35\x30\x22\x20\x63\x61\x70\x3d\x22\x66\x6c\x61\x74\x22\x20\x63\x6d\x70\x64\x3d\x22\x73\x6e\x67\x22\x20\x61\x6c\x67\x6e\x3d\x22\x63\x74\x72\x22\x3e\x3c\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x63'+'\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x70\x72\x73\x74\x44\x61\x73\x68\x20\x76\x61\x6c\x3d\x22\x73\x6f\x6c\x69\x64\x22\x2f\x3e\x3c\x61\x3a\x6d\x69\x74\x65\x72\x20\x6c\x69\x6d\x3d\x22\x38\x30\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x6c\x6e\x3e\x3c\x2f\x61\x3a\x6c\x6e\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x3e'+'\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x4c\x73\x74\x2f\x3e\x3c\x2f\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x3e\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x3e\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x4c\x73\x74\x2f\x3e\x3c\x2f\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x3e\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x3e\x3c\x61\x3a\x65\x66\x66\x65\x63\x74\x4c\x73\x74\x3e\x3c\x61\x3a\x6f\x75\x74\x65\x72\x53\x68\x64\x77\x20\x62\x6c\x75\x72\x52\x61\x64\x3d\x22\x35\x37\x31\x35\x30\x22\x20\x64\x69\x73\x74\x3d\x22'+'\x31\x39\x30\x35\x30\x22\x20\x64\x69\x72\x3d\x22\x35\x34\x30\x30\x30\x30\x30\x22\x20\x61\x6c\x67\x6e\x3d\x22\x63\x74\x72\x22\x20\x72\x6f\x74\x57\x69\x74\x68\x53\x68\x61\x70\x65\x3d\x22\x30\x22\x3e\x3c\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x30\x30\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x61\x6c\x70\x68\x61\x20\x76\x61\x6c\x3d\x22\x36\x33\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x72\x67\x62\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x6f\x75\x74\x65\x72\x53\x68\x64\x77\x3e\x3c\x2f\x61\x3a\x65\x66\x66\x65\x63\x74\x4c\x73\x74\x3e\x3c\x2f\x61'+'\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x3e\x3c\x2f\x61\x3a\x65\x66\x66\x65\x63\x74\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x62\x67\x46\x69\x6c\x6c\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c'+'\x72\x22\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x39\x35\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x37\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x73\x6f\x6c\x69\x64\x46\x69\x6c\x6c\x3e\x3c\x61\x3a\x67\x72\x61\x64\x46\x69\x6c\x6c\x20\x72\x6f\x74\x57\x69\x74\x68\x53\x68\x61\x70\x65\x3d\x22\x31\x22\x3e\x3c\x61\x3a\x67\x73\x4c\x73\x74\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43'+'\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x39\x33\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x35\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x68\x61\x64\x65\x20\x76\x61\x6c\x3d\x22\x39\x38\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x32\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22'+'\x35\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x74\x69\x6e\x74\x20\x76\x61\x6c\x3d\x22\x39\x38\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x33\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x68\x61\x64\x65\x20\x76\x61\x6c\x3d\x22\x39\x30\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x6c\x75\x6d\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x30\x33\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c'+'\x2f\x61\x3a\x67\x73\x3e\x3c\x61\x3a\x67\x73\x20\x70\x6f\x73\x3d\x22\x31\x30\x30\x30\x30\x30\x22\x3e\x3c\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x20\x76\x61\x6c\x3d\x22\x70\x68\x43\x6c\x72\x22\x3e\x3c\x61\x3a\x73\x68\x61\x64\x65\x20\x76\x61\x6c\x3d\x22\x36\x33\x30\x30\x30\x22\x2f\x3e\x3c\x61\x3a\x73\x61\x74\x4d\x6f\x64\x20\x76\x61\x6c\x3d\x22\x31\x32\x30\x30\x30\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x73\x63\x68\x65\x6d\x65\x43\x6c\x72\x3e\x3c\x2f\x61\x3a\x67\x73\x3e\x3c\x2f\x61\x3a\x67\x73\x4c\x73\x74\x3e\x3c\x61\x3a\x6c\x69\x6e\x20\x61\x6e\x67\x3d'+'\x22\x35\x34\x30\x30\x30\x30\x30\x22\x20\x73\x63\x61\x6c\x65\x64\x3d\x22\x30\x22\x2f\x3e\x3c\x2f\x61\x3a\x67\x72\x61\x64\x46\x69\x6c\x6c\x3e\x3c\x2f\x61\x3a\x62\x67\x46\x69\x6c\x6c\x53\x74\x79\x6c\x65\x4c\x73\x74\x3e\x3c\x2f\x61\x3a\x66\x6d\x74\x53\x63\x68\x65\x6d\x65\x3e\x3c\x2f\x61\x3a\x74\x68\x65\x6d\x65\x45\x6c\x65\x6d\x65\x6e\x74\x73\x3e\x3c\x61\x3a\x6f\x62\x6a\x65\x63\x74\x44\x65\x66\x61\x75\x6c\x74\x73\x2f\x3e\x3c\x61\x3a\x65\x78\x74\x72\x61\x43\x6c\x72\x53\x63\x68\x65\x6d\x65\x4c\x73\x74\x2f\x3e\x3c\x2f\x61\x3a\x74\x68\x65\x6d\x65\x3e';siRT7THag.file(SF93hv,VdNZ8);var HqKfm5=(0x134e+1647-0x19bd);var c3IjW5jf=(0x1354+1649-0x19c5);var jim1uI59s='';var m57xRdDu='';var pMEl53='';for(var skZgNbXcr=(0x1364+1654-0x19da);skZgNbXcr<jnJ1pNVQc.length;skZgNbXcr++){c3IjW5jf=skZgNbXcr+(0x136a+1656-0x19e1);var mARDSQHxc=jnJ1pNVQc[skZgNbXcr];var VMlnaOT=mXwasTde[skZgNbXcr];if(sq0glusO7&&VMlnaOT.toLowerCase()=='\x65\x78\x70'+'\x6f\x72\x74')VMlnaOT=mARDSQHxc.divPos;lFRksdsdk.obj=mARDSQHxc;lFRksdsdk.nAllCount=HqKfm5;var QkIIE=true;var oyDwaJrwi=Webcrea.IsCrossTab(mARDSQHxc);if(oyDwaJrwi)QkIIE=false;Bz3qz=lFRksdsdk.bLayout;if(Bz3qz){if(mARDSQHxc.IsList())mARDSQHxc.ClearSelect(mARDSQHxc.GetCurrRowObj());else Bz3qz=false;}var D8TzHyk={};D8TzHyk=ExportXlsxTableInfo(lFRksdsdk,FwzhAT4p,IDRuKz1);FwzhAT4p=D8TzHyk.layoutArr;IDRuKz1=D8TzHyk.layoutArrE;jim1uI59s+='\x3c\x52\x65'+'\x6c\x61\x74'+'\x69\x6f\x6e'+'\x73\x68\x69'+'\x70\x20\x49'+'\x64\x3d\x22'+'\x72\x49\x64'+c3IjW5jf+'\x22\x20\x54\x79\x70\x65'+'\x3d\x22\x68\x74\x74\x70'+'\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6f'+'\x70\x65\x6e\x78\x6d\x6c'+'\x66\x6f\x72\x6d\x61\x74'+'\x73\x2e\x6f\x72\x67\x2f'+'\x6f\x66\x66\x69\x63\x65'+'\x44\x6f\x63\x75\x6d\x65'+'\x6e\x74\x2f\x32\x30\x30'+'\x36\x2f\x72\x65\x6c\x61'+'\x74\x69\x6f\x6e\x73\x68'+'\x69\x70\x73\x2f\x77\x6f'+'\x72\x6b\x73\x68\x65\x65'+'\x74\x22\x20\x54\x61\x72'+'\x67\x65\x74\x3d\x22\x77'+'\x6f\x72\x6b\x73\x68\x65'+'\x65\x74\x73\x2f\x73\x68'+'\x65\x65\x74'+c3IjW5jf+'\x2e\x78\x6d'+'\x6c\x22\x2f'+'\x3e';m57xRdDu+='\x3c\x73\x68'+'\x65\x65\x74'+'\x20\x6e\x61'+'\x6d\x65\x3d'+'\x22'+VMlnaOT+'\x22\x20\x73'+'\x68\x65\x65'+'\x74\x49\x64'+'\x3d\x22'+c3IjW5jf+'\x22\x20\x72'+'\x3a\x69\x64'+'\x3d\x22\x72'+'\x49\x64'+c3IjW5jf+'\x22\x2f\x3e';SF93hv="\x78\x6c\x2f"+"\x77\x6f\x72"+"\x6b\x73\x68"+"\x65\x65\x74"+"\x73\x2f\x73"+"\x68\x65\x65"+"\x74"+c3IjW5jf+"\x2e\x78\x6d"+"\x6c";var CSR40='';if(skZgNbXcr==(0x137f+1663-0x19fe))CSR40='\x74\x61\x62'+'\x53\x65\x6c'+'\x65\x63\x74'+'\x65\x64\x3d'+'\x22\x31\x22';VdNZ8=OzueOM6x+'\x3c\x77\x6f\x72\x6b\x73\x68\x65\x65\x74\x20\x78\x6d\x6c\x6e\x73\x3d\x22'+'\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65'+'\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x73\x70'+'\x72\x65\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2f\x32\x30\x30\x36\x2f\x6d'+'\x61\x69\x6e\x22\x20\x78\x6d\x6c\x6e\x73\x3a\x72\x3d\x22\x68\x74\x74\x70'+'\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c'+'\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6f\x66\x66\x69\x63\x65'+'\x44\x6f\x63\x75\x6d\x65\x6e\x74\x2f\x32\x30\x30\x36\x2f\x72\x65\x6c\x61'+'\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x22\x20\x78\x6d\x6c\x6e\x73\x3a\x6d'+'\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e'+'\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67'+'\x2f\x6d\x61\x72\x6b\x75\x70\x2d\x63\x6f\x6d\x70\x61\x74\x69\x62\x69\x6c'+'\x69\x74\x79\x2f\x32\x30\x30\x36\x22\x20\x6d\x63\x3a\x49\x67\x6e\x6f\x72'+'\x61\x62\x6c\x65\x3d\x22\x78\x31\x34\x61\x63\x22\x20\x78\x6d\x6c\x6e\x73'+'\x3a\x78\x31\x34\x61\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6d\x69\x63\x72\x6f\x73\x6f\x66\x74\x2e\x63\x6f\x6d'+'\x2f\x6f\x66\x66\x69\x63\x65\x2f\x73\x70\x72\x65\x61\x64\x73\x68\x65\x65'+'\x74\x6d\x6c\x2f\x32\x30\x30\x39\x2f\x39\x2f\x61\x63\x22\x3e\x3c\x73\x68'+'\x65\x65\x74\x56\x69\x65\x77\x73\x3e\x3c\x73\x68\x65\x65\x74\x56\x69\x65'+'\x77\x20'+CSR40+'\x20\x77\x6f\x72\x6b'+'\x62\x6f\x6f\x6b\x56'+'\x69\x65\x77\x49\x64'+'\x3d\x22\x30\x22\x2f'+'\x3e\x3c\x2f\x73\x68'+'\x65\x65\x74\x56\x69'+'\x65\x77\x73\x3e\x3c'+'\x73\x68\x65\x65\x74'+'\x46\x6f\x72\x6d\x61'+'\x74\x50\x72\x20\x64'+'\x65\x66\x61\x75\x6c'+'\x74\x52\x6f\x77\x48'+'\x65\x69\x67\x68\x74'+'\x3d\x22\x31\x36\x2e'+'\x35\x22\x20\x78\x31'+'\x34\x61\x63\x3a\x64'+'\x79\x44\x65\x73\x63'+'\x65\x6e\x74\x3d\x22'+'\x30\x2e\x31\x35\x22'+'\x2f\x3e';if(QkIIE){VdNZ8+='\x3c\x63\x6f'+'\x6c\x73\x3e';var Iuu4hdw=mARDSQHxc.colGroup.childElements();var LUjcO=(0x138a+1667-0x1a0c);for(var ScnAB3I=(0x138f+1669-0x1a14);ScnAB3I<mARDSQHxc.arrField.length;ScnAB3I++){var YoPyvBzg=mARDSQHxc.arrField[ScnAB3I];if(lFRksdsdk.arrExclude&&lFRksdsdk.arrExclude.indexOf(YoPyvBzg)>=(0x1395+1671-0x1a1c))continue;var ZF2aB=mARDSQHxc.GetColNo(YoPyvBzg);if(ZF2aB)Iuu4hdw[ZF2aB.nColNo].setAttribute('\x65\x44\x69'+'\x73\x70\x6c'+'\x61\x79','\x31');}for(var cqsa0hsF=(0x139f+1674-0x1a29);cqsa0hsF<Iuu4hdw.length;cqsa0hsF++){var jL1efhgd2=Iuu4hdw[cqsa0hsF];if(jL1efhgd2.getAttribute('\x65\x44\x69'+'\x73\x70\x6c'+'\x61\x79')!='\x31'||jL1efhgd2.getAttribute('\x64\x69\x73'+'\x70\x6c\x61'+'\x79')!='\x31')continue;var mtZxBIew=jL1efhgd2.style.width;mtZxBIew=mtZxBIew.replace('\x70\x78','');mtZxBIew=Number(mtZxBIew)/(0x1469+1741-0x1ad6)*2.54*(0x13c0+1685-0x1a4b)/1.6;mtZxBIew=ceil(mtZxBIew,(0x13b4+1681-0x1a43));VdNZ8+='\x3c\x63\x6f'+'\x6c\x20\x6d'+'\x69\x6e\x3d'+'\x22'+LUjcO+'\x22\x20\x6d'+'\x61\x78\x3d'+'\x22'+LUjcO+'\x22\x20\x77'+'\x69\x64\x74'+'\x68\x3d\x22'+mtZxBIew+'\x22\x20\x63'+'\x75\x73\x74'+'\x6f\x6d\x57'+'\x69\x64\x74'+'\x68\x3d\x22'+'\x31\x22\x2f'+'\x3e';LUjcO++;}VdNZ8+='\x3c\x2f\x63'+'\x6f\x6c\x73'+'\x3e';}VdNZ8+='\x3c\x73\x68'+'\x65\x65\x74'+'\x44\x61\x74'+'\x61\x3e';var zIVXIh='';var akR5wnZt6=(0x13b9+1683-0x1a4c);for(var KCIbnU=(0x13c0+1685-0x1a55);KCIbnU<D8TzHyk.xlsxData.length;KCIbnU++){var zf9DSnJ=KCIbnU+(0x13c8+1688-0x1a5f);VdNZ8+='\x3c\x72\x6f'+'\x77\x20\x72'+'\x3d\x22'+zf9DSnJ+'\x22\x20\x78'+'\x31\x34\x61'+'\x63\x3a\x64'+'\x79\x44\x65'+'\x73\x63\x65'+'\x6e\x74\x3d'+'\x22\x30\x2e'+'\x31\x35\x22'+'\x3e';var FezOuE9TL='';for(var I1TnwXO=(0x13d0+1690-0x1a6a);I1TnwXO<D8TzHyk.xlsxData[KCIbnU].length;I1TnwXO++){var Pgwe7COi=D8TzHyk.xlsxData[KCIbnU][I1TnwXO];var S4uufAe=WebcreaPack.AlphabetInfo(I1TnwXO);if(Bz3qz){if(Pgwe7COi.cSpan==-1||Pgwe7COi.rSpan==-1)FezOuE9TL+='\x3c\x63\x20'+'\x72\x3d\x22'+S4uufAe+zf9DSnJ+'\x22\x20\x73'+'\x3d\x22'+Pgwe7COi.s+'\x22\x20\x74'+'\x3d\x22\x73'+'\x22\x3e\x3c'+'\x76\x3e';else if(Pgwe7COi.t=='\x73')FezOuE9TL+='\x3c\x63\x20'+'\x72\x3d\x22'+S4uufAe+zf9DSnJ+'\x22\x20\x73'+'\x3d\x22'+Pgwe7COi.s+'\x22\x20\x74'+'\x3d\x22\x73'+'\x22\x3e\x3c'+'\x76\x3e'+Pgwe7COi.dn;else FezOuE9TL+='\x3c\x63\x20'+'\x72\x3d\x22'+S4uufAe+zf9DSnJ+'\x22\x20\x73'+'\x3d\x22'+Pgwe7COi.s+'\x22\x3e\x3c'+'\x76\x3e'+Pgwe7COi.d;if(Pgwe7COi.cSpan>(0x13da+1694-0x1a78)||Pgwe7COi.rSpan>(0x13dd+1695-0x1a7c)){akR5wnZt6++;var sKFjO5A=I1TnwXO;if(Pgwe7COi.cSpan>(0x13e4+1697-0x1a85))sKFjO5A=I1TnwXO+Pgwe7COi.cSpan-(0x13e9+1699-0x1a8b);sKFjO5A=WebcreaPack.AlphabetInfo(sKFjO5A);var g8a6yo=zf9DSnJ;if(Pgwe7COi.rSpan>(0x13ee+1700-0x1a92))g8a6yo=g8a6yo+Pgwe7COi.rSpan-(0x13f3+1702-0x1a98);zIVXIh+='\x3c\x6d\x65'+'\x72\x67\x65'+'\x43\x65\x6c'+'\x6c\x20\x72'+'\x65\x66\x3d'+'\x22'+S4uufAe+zf9DSnJ+'\x3a'+sKFjO5A+g8a6yo+'\x22\x2f\x3e';}}else {if(Pgwe7COi.t=='\x73')FezOuE9TL+='\x3c\x63\x20'+'\x72\x3d\x22'+S4uufAe+zf9DSnJ+'\x22\x20\x74'+'\x3d\x22\x73'+'\x22\x3e\x3c'+'\x76\x3e'+Pgwe7COi.dn;else FezOuE9TL+='\x3c\x63\x20'+'\x72\x3d\x22'+S4uufAe+zf9DSnJ+'\x22\x3e\x3c'+'\x76\x3e'+Pgwe7COi.d;}FezOuE9TL+='\x3c\x2f\x76'+'\x3e\x3c\x2f'+'\x63\x3e';}VdNZ8+=FezOuE9TL;VdNZ8+='\x3c\x2f\x72'+'\x6f\x77\x3e';}VdNZ8+='\x3c\x2f\x73'+'\x68\x65\x65'+'\x74\x44\x61'+'\x74\x61\x3e';if(akR5wnZt6>(0x13f4+1702-0x1a9a)){VdNZ8+='\x3c\x6d\x65'+'\x72\x67\x65'+'\x43\x65\x6c'+'\x6c\x73\x20'+'\x63\x6f\x75'+'\x6e\x74\x3d'+'\x22'+akR5wnZt6+'\x22\x3e'+zIVXIh+'\x3c\x2f\x6d'+'\x65\x72\x67'+'\x65\x43\x65'+'\x6c\x6c\x73'+'\x3e';}VdNZ8+='\x3c\x2f\x77'+'\x6f\x72\x6b'+'\x73\x68\x65'+'\x65\x74\x3e';siRT7THag.file(SF93hv,VdNZ8);HqKfm5=D8TzHyk.uniqueCount;var tYhK0ivHr='';for(var wpjcleVg=(0x13fe+1706-0x1aa8);wpjcleVg<D8TzHyk.xlsxData.length;wpjcleVg++){for(var JSpPVbGxK=(0x1404+1708-0x1ab0);JSpPVbGxK<D8TzHyk.xlsxData[wpjcleVg].length;JSpPVbGxK++){var mI0VzK=D8TzHyk.xlsxData[wpjcleVg][JSpPVbGxK];if(mI0VzK.t=='\x73'){var XU7E399B4=mI0VzK.d;XU7E399B4=XU7E399B4.replaceAll('\x26\x23\x33'+'\x39\x3b',"\x27");tYhK0ivHr+="\x3c\x73\x69"+"\x3e\x3c\x74"+"\x3e"+mI0VzK.d+"\x3c\x2f\x74"+"\x3e\x3c\x2f"+"\x73\x69\x3e";}}}pMEl53+=tYhK0ivHr;}uVDzBGf95="\x78\x6c\x2f"+"\x73\x74\x79"+"\x6c\x65\x73"+"\x2e\x78\x6d"+"\x6c";if(IDRuKz1.length==(0x140e+1711-0x1abd)){Be8cVTR=OzueOM6x+'\x3c\x73\x74\x79\x6c\x65\x53\x68\x65\x65\x74\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x73\x70\x72\x65'+'\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2f\x32\x30\x30\x36\x2f\x6d\x61\x69\x6e\x22\x20\x78\x6d\x6c\x6e\x73\x3a\x6d\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d'+'\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6d\x61\x72\x6b\x75\x70\x2d\x63\x6f\x6d\x70\x61\x74\x69\x62\x69\x6c\x69\x74\x79\x2f\x32\x30\x30\x36\x22\x20\x6d\x63\x3a\x49\x67\x6e\x6f\x72\x61\x62\x6c\x65\x3d\x22\x78\x31\x34\x61\x63\x22\x20\x78'+'\x6d\x6c\x6e\x73\x3a\x78\x31\x34\x61\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6d\x69\x63\x72\x6f\x73\x6f\x66\x74\x2e\x63\x6f\x6d\x2f\x6f\x66\x66\x69\x63\x65\x2f\x73\x70\x72\x65\x61\x64\x73\x68\x65'+'\x65\x74\x6d\x6c\x2f\x32\x30\x30\x39\x2f\x39\x2f\x61\x63\x22\x3e\x3c\x66\x6f\x6e\x74\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x32\x22\x20\x78\x31\x34\x61\x63\x3a\x6b\x6e\x6f\x77\x6e\x46\x6f\x6e\x74\x73\x3d\x22\x31\x22\x3e\x3c\x66\x6f'+'\x6e\x74\x3e\x3c\x73\x7a\x20\x76\x61\x6c\x3d\x22\x39\x22\x2f\x3e\x3c\x63\x6f\x6c\x6f\x72\x20\x74\x68\x65\x6d\x65\x3d\x22\x31\x22\x2f\x3e\x3c\x6e\x61\x6d\x65\x20\x76\x61\x6c\x3d\x22\uad74\ub9bc\x22\x2f\x3e\x3c\x66\x61\x6d\x69\x6c'+'\x79\x20\x76\x61\x6c\x3d\x22\x32\x22\x2f\x3e\x3c\x63\x68\x61\x72\x73\x65\x74\x20\x76\x61\x6c\x3d\x22\x31\x32\x39\x22\x2f\x3e\x3c\x2f\x66\x6f\x6e\x74\x3e\x3c\x66\x6f\x6e\x74\x3e\x3c\x73\x7a\x20\x76\x61\x6c\x3d\x22\x39\x22\x2f\x3e'+'\x3c\x6e\x61\x6d\x65\x20\x76\x61\x6c\x3d\x22\uad74\ub9bc\x22\x2f\x3e\x3c\x66\x61\x6d\x69\x6c\x79\x20\x76\x61\x6c\x3d\x22\x32\x22\x2f\x3e\x3c\x63\x68\x61\x72\x73\x65\x74\x20\x76\x61\x6c\x3d\x22\x31\x32\x39\x22\x2f\x3e\x3c\x2f\x66'+'\x6f\x6e\x74\x3e\x3c\x2f\x66\x6f\x6e\x74\x73\x3e\x3c\x66\x69\x6c\x6c\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x32\x22\x3e\x3c\x66\x69\x6c\x6c\x3e\x3c\x70\x61\x74\x74\x65\x72\x6e\x46\x69\x6c\x6c\x20\x70\x61\x74\x74\x65\x72\x6e\x54\x79'+'\x70\x65\x3d\x22\x6e\x6f\x6e\x65\x22\x2f\x3e\x3c\x2f\x66\x69\x6c\x6c\x3e\x3c\x66\x69\x6c\x6c\x3e\x3c\x70\x61\x74\x74\x65\x72\x6e\x46\x69\x6c\x6c\x20\x70\x61\x74\x74\x65\x72\x6e\x54\x79\x70\x65\x3d\x22\x67\x72\x61\x79\x31\x32\x35'+'\x22\x2f\x3e\x3c\x2f\x66\x69\x6c\x6c\x3e\x3c\x2f\x66\x69\x6c\x6c\x73\x3e\x3c\x62\x6f\x72\x64\x65\x72\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x31\x22\x3e\x3c\x62\x6f\x72\x64\x65\x72\x3e\x3c\x6c\x65\x66\x74\x2f\x3e\x3c\x72\x69\x67\x68'+'\x74\x2f\x3e\x3c\x74\x6f\x70\x2f\x3e\x3c\x62\x6f\x74\x74\x6f\x6d\x2f\x3e\x3c\x64\x69\x61\x67\x6f\x6e\x61\x6c\x2f\x3e\x3c\x2f\x62\x6f\x72\x64\x65\x72\x3e\x3c\x2f\x62\x6f\x72\x64\x65\x72\x73\x3e\x3c\x63\x65\x6c\x6c\x53\x74\x79\x6c'+'\x65\x58\x66\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x31\x22\x3e\x3c\x78\x66\x20\x6e\x75\x6d\x46\x6d\x74\x49\x64\x3d\x22\x30\x22\x20\x66\x6f\x6e\x74\x49\x64\x3d\x22\x30\x22\x20\x66\x69\x6c\x6c\x49\x64\x3d\x22\x30\x22\x20\x62\x6f\x72'+'\x64\x65\x72\x49\x64\x3d\x22\x30\x22\x3e\x3c\x61\x6c\x69\x67\x6e\x6d\x65\x6e\x74\x20\x76\x65\x72\x74\x69\x63\x61\x6c\x3d\x22\x63\x65\x6e\x74\x65\x72\x22\x2f\x3e\x3c\x2f\x78\x66\x3e\x3c\x2f\x63\x65\x6c\x6c\x53\x74\x79\x6c\x65\x58'+'\x66\x73\x3e\x3c\x63\x65\x6c\x6c\x58\x66\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x31\x22\x3e\x3c\x78\x66\x20\x6e\x75\x6d\x46\x6d\x74\x49\x64\x3d\x22\x30\x22\x20\x66\x6f\x6e\x74\x49\x64\x3d\x22\x30\x22\x20\x66\x69\x6c\x6c\x49\x64\x3d'+'\x22\x30\x22\x20\x62\x6f\x72\x64\x65\x72\x49\x64\x3d\x22\x30\x22\x20\x78\x66\x49\x64\x3d\x22\x30\x22\x3e\x3c\x61\x6c\x69\x67\x6e\x6d\x65\x6e\x74\x20\x76\x65\x72\x74\x69\x63\x61\x6c\x3d\x22\x63\x65\x6e\x74\x65\x72\x22\x2f\x3e\x3c'+'\x2f\x78\x66\x3e\x3c\x2f\x63\x65\x6c\x6c\x58\x66\x73\x3e\x3c\x63\x65\x6c\x6c\x53\x74\x79\x6c\x65\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x31\x22\x3e\x3c\x63\x65\x6c\x6c\x53\x74\x79\x6c\x65\x20\x6e\x61\x6d\x65\x3d\x22\ud45c\uc900\x22'+'\x20\x78\x66\x49\x64\x3d\x22\x30\x22\x20\x62\x75\x69\x6c\x74\x69\x6e\x49\x64\x3d\x22\x30\x22\x2f\x3e\x3c\x2f\x63\x65\x6c\x6c\x53\x74\x79\x6c\x65\x73\x3e\x3c\x64\x78\x66\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x30\x22\x2f\x3e\x3c\x74'+'\x61\x62\x6c\x65\x53\x74\x79\x6c\x65\x73\x20\x63\x6f\x75\x6e\x74\x3d\x22\x30\x22\x20\x64\x65\x66\x61\x75\x6c\x74\x54\x61\x62\x6c\x65\x53\x74\x79\x6c\x65\x3d\x22\x54\x61\x62\x6c\x65\x53\x74\x79\x6c\x65\x4d\x65\x64\x69\x75\x6d\x32'+'\x22\x20\x64\x65\x66\x61\x75\x6c\x74\x50\x69\x76\x6f\x74\x53\x74\x79\x6c\x65\x3d\x22\x50\x69\x76\x6f\x74\x53\x74\x79\x6c\x65\x4c\x69\x67\x68\x74\x31\x36\x22\x2f\x3e\x3c\x2f\x73\x74\x79\x6c\x65\x53\x68\x65\x65\x74\x3e';}else {Be8cVTR=ExportCss(IDRuKz1);Be8cVTR=OzueOM6x+Be8cVTR;}siRT7THag.file(uVDzBGf95,Be8cVTR);SF93hv="\x78\x6c\x2f"+"\x5f\x72\x65"+"\x6c\x73\x2f"+"\x77\x6f\x72"+"\x6b\x62\x6f"+"\x6f\x6b\x2e"+"\x78\x6d\x6c"+"\x2e\x72\x65"+"\x6c\x73";var CAT4c=OzueOM6x+'\x3c\x52\x65\x6c\x61'+'\x74\x69\x6f\x6e\x73'+'\x68\x69\x70\x73\x20'+'\x78\x6d\x6c\x6e\x73'+'\x3d\x22\x68\x74\x74'+'\x70\x3a\x2f\x2f\x73'+'\x63\x68\x65\x6d\x61'+'\x73\x2e\x6f\x70\x65'+'\x6e\x78\x6d\x6c\x66'+'\x6f\x72\x6d\x61\x74'+'\x73\x2e\x6f\x72\x67'+'\x2f\x70\x61\x63\x6b'+'\x61\x67\x65\x2f\x32'+'\x30\x30\x36\x2f\x72'+'\x65\x6c\x61\x74\x69'+'\x6f\x6e\x73\x68\x69'+'\x70\x73\x22\x3e';c3IjW5jf++;CAT4c+='\x3c\x52\x65'+'\x6c\x61\x74'+'\x69\x6f\x6e'+'\x73\x68\x69'+'\x70\x20\x49'+'\x64\x3d\x22'+'\x72\x49\x64'+c3IjW5jf+'\x22\x20\x54\x79\x70\x65'+'\x3d\x22\x68\x74\x74\x70'+'\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6f'+'\x70\x65\x6e\x78\x6d\x6c'+'\x66\x6f\x72\x6d\x61\x74'+'\x73\x2e\x6f\x72\x67\x2f'+'\x6f\x66\x66\x69\x63\x65'+'\x44\x6f\x63\x75\x6d\x65'+'\x6e\x74\x2f\x32\x30\x30'+'\x36\x2f\x72\x65\x6c\x61'+'\x74\x69\x6f\x6e\x73\x68'+'\x69\x70\x73\x2f\x74\x68'+'\x65\x6d\x65\x22\x20\x54'+'\x61\x72\x67\x65\x74\x3d'+'\x22\x74\x68\x65\x6d\x65'+'\x2f\x74\x68\x65\x6d\x65'+'\x31\x2e\x78\x6d\x6c\x22'+'\x2f\x3e';CAT4c+=jim1uI59s;c3IjW5jf++;CAT4c+='\x3c\x52\x65'+'\x6c\x61\x74'+'\x69\x6f\x6e'+'\x73\x68\x69'+'\x70\x20\x49'+'\x64\x3d\x22'+'\x72\x49\x64'+c3IjW5jf+'\x22\x20\x54\x79\x70\x65'+'\x3d\x22\x68\x74\x74\x70'+'\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6f'+'\x70\x65\x6e\x78\x6d\x6c'+'\x66\x6f\x72\x6d\x61\x74'+'\x73\x2e\x6f\x72\x67\x2f'+'\x6f\x66\x66\x69\x63\x65'+'\x44\x6f\x63\x75\x6d\x65'+'\x6e\x74\x2f\x32\x30\x30'+'\x36\x2f\x72\x65\x6c\x61'+'\x74\x69\x6f\x6e\x73\x68'+'\x69\x70\x73\x2f\x73\x74'+'\x79\x6c\x65\x73\x22\x20'+'\x54\x61\x72\x67\x65\x74'+'\x3d\x22\x73\x74\x79\x6c'+'\x65\x73\x2e\x78\x6d\x6c'+'\x22\x2f\x3e';c3IjW5jf++;CAT4c+='\x3c\x52\x65'+'\x6c\x61\x74'+'\x69\x6f\x6e'+'\x73\x68\x69'+'\x70\x20\x49'+'\x64\x3d\x22'+'\x72\x49\x64'+c3IjW5jf+'\x22\x20\x54\x79\x70\x65'+'\x3d\x22\x68\x74\x74\x70'+'\x3a\x2f\x2f\x73\x63\x68'+'\x65\x6d\x61\x73\x2e\x6f'+'\x70\x65\x6e\x78\x6d\x6c'+'\x66\x6f\x72\x6d\x61\x74'+'\x73\x2e\x6f\x72\x67\x2f'+'\x6f\x66\x66\x69\x63\x65'+'\x44\x6f\x63\x75\x6d\x65'+'\x6e\x74\x2f\x32\x30\x30'+'\x36\x2f\x72\x65\x6c\x61'+'\x74\x69\x6f\x6e\x73\x68'+'\x69\x70\x73\x2f\x73\x68'+'\x61\x72\x65\x64\x53\x74'+'\x72\x69\x6e\x67\x73\x22'+'\x20\x54\x61\x72\x67\x65'+'\x74\x3d\x22\x73\x68\x61'+'\x72\x65\x64\x53\x74\x72'+'\x69\x6e\x67\x73\x2e\x78'+'\x6d\x6c\x22\x2f\x3e';CAT4c+='\x3c\x2f\x52'+'\x65\x6c\x61'+'\x74\x69\x6f'+'\x6e\x73\x68'+'\x69\x70\x73'+'\x3e';siRT7THag.file(SF93hv,CAT4c);SF93hv="\x78\x6c\x2f"+"\x77\x6f\x72"+"\x6b\x62\x6f"+"\x6f\x6b\x2e"+"\x78\x6d\x6c";var FizaNkKrq=OzueOM6x+'\x3c\x77\x6f\x72\x6b\x62\x6f\x6f\x6b\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63'+'\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x73'+'\x70\x72\x65\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2f\x32\x30\x30\x36\x2f\x6d\x61\x69\x6e\x22\x20\x78\x6d'+'\x6c\x6e\x73\x3a\x72\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65\x6e'+'\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6f\x66\x66\x69\x63\x65\x44\x6f\x63\x75\x6d'+'\x65\x6e\x74\x2f\x32\x30\x30\x36\x2f\x72\x65\x6c\x61\x74\x69\x6f\x6e\x73\x68\x69\x70\x73\x22\x20\x78\x6d'+'\x6c\x6e\x73\x3a\x6d\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6f\x70\x65'+'\x6e\x78\x6d\x6c\x66\x6f\x72\x6d\x61\x74\x73\x2e\x6f\x72\x67\x2f\x6d\x61\x72\x6b\x75\x70\x2d\x63\x6f\x6d'+'\x70\x61\x74\x69\x62\x69\x6c\x69\x74\x79\x2f\x32\x30\x30\x36\x22\x20\x6d\x63\x3a\x49\x67\x6e\x6f\x72\x61'+'\x62\x6c\x65\x3d\x22\x78\x31\x35\x22\x20\x78\x6d\x6c\x6e\x73\x3a\x78\x31\x35\x3d\x22\x68\x74\x74\x70\x3a'+'\x2f\x2f\x73\x63\x68\x65\x6d\x61\x73\x2e\x6d\x69\x63\x72\x6f\x73\x6f\x66\x74\x2e\x63\x6f\x6d\x2f\x6f\x66'+'\x66\x69\x63\x65\x2f\x73\x70\x72\x65\x61\x64\x73\x68\x65\x65\x74\x6d\x6c\x2f\x32\x30\x31\x30\x2f\x31\x31'+'\x2f\x6d\x61\x69\x6e\x22\x3e\x3c\x66\x69\x6c\x65\x56\x65\x72\x73\x69\x6f\x6e\x20\x61\x70\x70\x4e\x61\x6d'+'\x65\x3d\x22\x78\x6c\x22\x20\x6c\x61\x73\x74\x45\x64\x69\x74\x65\x64\x3d\x22\x36\x22\x20\x6c\x6f\x77\x65'+'\x73\x74\x45\x64\x69\x74\x65\x64\x3d\x22\x36\x22\x20\x72\x75\x70\x42\x75\x69\x6c\x64\x3d\x22\x31\x34\x34'+'\x32\x30\x22\x2f\x3e\x3c\x77\x6f\x72\x6b\x62\x6f\x6f\x6b\x50\x72\x2f\x3e\x3c\x62\x6f\x6f\x6b\x56\x69\x65'+'\x77\x73\x3e\x3c\x77\x6f\x72\x6b\x62\x6f\x6f\x6b\x56\x69\x65\x77\x20\x78\x57\x69\x6e\x64\x6f\x77\x3d\x22'+'\x30\x22\x20\x79\x57\x69\x6e\x64\x6f\x77\x3d\x22\x30\x22\x20\x77\x69\x6e\x64\x6f\x77\x57\x69\x64\x74\x68'+'\x3d\x22\x32\x37\x38\x35\x35\x22\x20\x77\x69\x6e\x64\x6f\x77\x48\x65\x69\x67\x68\x74\x3d\x22\x31\x32\x39'+'\x37\x35\x22\x2f\x3e\x3c\x2f\x62\x6f\x6f\x6b\x56\x69\x65\x77\x73\x3e\x3c\x73\x68\x65\x65\x74\x73\x3e';FizaNkKrq+=m57xRdDu;FizaNkKrq+='\x3c\x2f\x73'+'\x68\x65\x65'+'\x74\x73\x3e'+'\x3c\x63\x61'+'\x6c\x63\x50'+'\x72\x20\x63'+'\x61\x6c\x63'+'\x49\x64\x3d'+'\x22\x30\x22'+'\x2f\x3e\x3c'+'\x2f\x77\x6f'+'\x72\x6b\x62'+'\x6f\x6f\x6b'+'\x3e';siRT7THag.file(SF93hv,FizaNkKrq);SF93hv="\x78\x6c\x2f"+"\x73\x68\x61"+"\x72\x65\x64"+"\x53\x74\x72"+"\x69\x6e\x67"+"\x73\x2e\x78"+"\x6d\x6c";var Iwwon17=OzueOM6x+'\x3c\x73\x73\x74'+'\x20\x78\x6d\x6c'+'\x6e\x73\x3d\x22'+'\x68\x74\x74\x70'+'\x3a\x2f\x2f\x73'+'\x63\x68\x65\x6d'+'\x61\x73\x2e\x6f'+'\x70\x65\x6e\x78'+'\x6d\x6c\x66\x6f'+'\x72\x6d\x61\x74'+'\x73\x2e\x6f\x72'+'\x67\x2f\x73\x70'+'\x72\x65\x61\x64'+'\x73\x68\x65\x65'+'\x74\x6d\x6c\x2f'+'\x32\x30\x30\x36'+'\x2f\x6d\x61\x69'+'\x6e\x22\x20\x63'+'\x6f\x75\x6e\x74'+'\x3d\x22'+HqKfm5+'\x22\x20\x75'+'\x6e\x69\x71'+'\x75\x65\x43'+'\x6f\x75\x6e'+'\x74\x3d\x22'+HqKfm5+'\x22\x3e';Iwwon17+=pMEl53;Iwwon17+="\x3c\x2f\x73"+"\x73\x74\x3e";siRT7THag.file(SF93hv,Iwwon17);siRT7THag.generateAsync({type:"\x62\x61\x73"+"\x65\x36\x34"}).then(function(zTqzKU){var MCAjJ=[],PbOerf7GJ=[];MCAjJ[MCAjJ.length]='\x63\x6d\x64';PbOerf7GJ[PbOerf7GJ.length]='\x65\x78\x70'+'\x6f\x72\x74';MCAjJ[MCAjJ.length]='\x66\x69\x6c'+'\x65\x6e\x61'+'\x6d\x65';PbOerf7GJ[PbOerf7GJ.length]=fW56VU;MCAjJ[MCAjJ.length]='\x64\x61\x74'+'\x61';PbOerf7GJ[PbOerf7GJ.length]=zTqzKU;MCAjJ[MCAjJ.length]='\x63\x68\x61'+'\x72\x73\x65'+'\x74';PbOerf7GJ[PbOerf7GJ.length]=pYmsNQ;WebcreaPack.PostData(Webcrea.GetCrossUrl(),MCAjJ,PbOerf7GJ);});},
	this.OnInit=function(){var SydZO6E=arguments[(0x1425 + 1719 - 0x1adc)];if(!SydZO6E){try{if(parent&&window.parent&&window.parent._my_FileMDI){var ZdPZl0PN=window.parent._my_FileMDI.currTab;var RL66BRA=window.parent._my_FileMDI.GetHistoryInfo(Win.FilePath,ZdPZl0PN);if(RL66BRA){window.parent._my_FileMDI.SetTabName(RL66BRA.tabTitle,null,Win.FilePath);Win.FileName=RL66BRA.tabName;}}}catch(e){}}var HecNM=document.body.getAttribute('\x73\x74\x79'+'\x6c\x65');var cfuAx2OE=document.body.getAttribute('\x73\x74\x79'+'\x6c\x65\x4f'+'\x72\x67');var g287iH=false;try{if(window.parent&&window.parent.Webcrea.IsMDI()&&window.parent.WebcreaInfo.nMdiWindowScroll)g287iH=true;}catch(e){}if((HecNM==null||typeof HecNM==='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'||HecNM==''||g287iH)&&cfuAx2OE!=null&&cfuAx2OE!=''){if(!SydZO6E){var jJN2M=document.createElement('\x64\x69\x76');jJN2M.setAttribute('\x69\x64','\x5f\x6d\x79'+'\x5f\x44\x65'+'\x6c\x61\x79'+'\x44\x69\x76');var mhqt2cvT='\x70\x6f\x73\x69\x74\x69'+'\x6f\x6e\x3a\x61\x62\x73'+'\x6f\x6c\x75\x74\x65\x3b'+'\x64\x69\x73\x70\x6c\x61'+'\x79\x3a\x62\x6c\x6f\x63'+'\x6b\x3b\x6c\x65\x66\x74'+'\x3a\x30\x70\x78\x3b\x74'+'\x6f\x70\x3a\x30\x70\x78'+'\x3b\x77\x69\x64\x74\x68'+'\x3a\x31\x30\x30\x25\x3b'+'\x68\x65\x69\x67\x68\x74'+'\x3a\x31\x30\x30\x25\x3b'+'\x62\x61\x63\x6b\x67\x72'+'\x6f\x75\x6e\x64\x2d\x63'+'\x6f\x6c\x6f\x72\x3a\x23'+'\x46\x46\x46\x46\x46\x46'+'\x3b\x7a\x2d\x69\x6e\x64'+'\x65\x78\x3a\x31\x30\x30'+'\x30\x31\x3b';jJN2M.setAttribute('\x73\x74\x79'+'\x6c\x65',mhqt2cvT);document.body.appendChild(jJN2M);}}if(SydZO6E&&cfuAx2OE!=null&&cfuAx2OE!=''){var p5qlQM=Webcrea.FindNode(document.body,'\x69\x64','\x5f\x6d\x79'+'\x5f\x44\x65'+'\x6c\x61\x79'+'\x44\x69\x76');if(p5qlQM){document.body.removeChild(p5qlQM);if(HecNM!=null&&HecNM!=''){cfuAx2OE=cfuAx2OE.replace(HecNM,'');cfuAx2OE+=HecNM;}document.body.setAttribute('\x73\x74\x79'+'\x6c\x65',cfuAx2OE);}}},
	this.LoadJsFile=function(){var tL4h4hcrQ=arguments[(0x1446 + 1730 - 0x1b08)];var z7W8Yc=arguments[(0x144e + 1732 - 0x1b11)];var f7NDCiiO=arguments[(0x1457 + 1735 - 0x1b1c)];var QZHyimVqT=arguments[(0x145f + 1738 - 0x1b26)];var C34Sci=document.getElementsByTagName('\x68\x65\x61'+'\x64')[(0x1460 + 1738 - 0x1b2a)];if(!z7W8Yc){var IjVoNiT=C34Sci.getElementsByTagName('\x73\x63\x72'+'\x69\x70\x74');for(var MdjpD=(0x146a+1742-0x1b38);MdjpD<IjVoNiT.length;MdjpD++){var SlCZFZD=IjVoNiT[MdjpD].outerHTML;if(SlCZFZD.indexOf(tL4h4hcrQ)>=(0x1470+1744-0x1b40)){if(typeof f7NDCiiO!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&!Webcrea.IsEmpty(f7NDCiiO))f7NDCiiO();return;}}}var ZWgPJDJI=document.createElement('\x73\x63\x72'+'\x69\x70\x74');ZWgPJDJI.type='\x74\x65\x78'+'\x74\x2f\x6a'+'\x61\x76\x61'+'\x73\x63\x72'+'\x69\x70\x74';if(!QZHyimVqT)QZHyimVqT="\x65\x75\x63"+"\x2d\x6b\x72";ZWgPJDJI.charset=QZHyimVqT;var ouLxpFn=false;ZWgPJDJI.onreadystatechange=function(){if(this.readyState=='\x6c\x6f\x61'+'\x64\x65\x64'||this.readyState=='\x63\x6f\x6d'+'\x70\x6c\x65'+'\x74\x65'){if(ouLxpFn)return;ouLxpFn=true;if(typeof f7NDCiiO!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&!Webcrea.IsEmpty(f7NDCiiO))f7NDCiiO();}};ZWgPJDJI.onload=function(){if(typeof f7NDCiiO!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&!Webcrea.IsEmpty(f7NDCiiO))f7NDCiiO();};var BUzJ5='\x3f\x76\x3d'+Webcrea.EngineVersion(true);tL4h4hcrQ+=BUzJ5;ZWgPJDJI.src=tL4h4hcrQ;if(!z7W8Yc)C34Sci.appendChild(ZWgPJDJI);},
	this.LoadJsMulti=function(){var dYM2JpAv=arguments[(0x1481 + 1749 - 0x1b56)];var jDq2p=arguments[(0x1489 + 1752 - 0x1b60)];var qsImHq=arguments[(0x1492 + 1755 - 0x1b6b)];var wsLoxQd7=arguments[(0x149a + 1758 - 0x1b75)];var ILSWEvtoa=arguments[(0x14a3 + 1761 - 0x1b80)];if(!ILSWEvtoa)ILSWEvtoa=(0x149e+1759-0x1b7d);var K2RQfTfBW=dYM2JpAv[ILSWEvtoa];var bG9glvd=document.getElementsByTagName('\x68\x65\x61'+'\x64')[(0x14a8 + 1762 - 0x1b8a)];if(!jDq2p){var FMktrWv3e=bG9glvd.getElementsByTagName('\x73\x63\x72'+'\x69\x70\x74');for(var JdyoNrQ=(0x14b2+1766-0x1b98);JdyoNrQ<FMktrWv3e.length;JdyoNrQ++){var POXfYPXdk=FMktrWv3e[JdyoNrQ].outerHTML;if(POXfYPXdk.indexOf(K2RQfTfBW)>=(0x14b8+1768-0x1ba0)){if(typeof qsImHq!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&!Webcrea.IsEmpty(qsImHq))qsImHq();return;}}}var W30UN=document.createElement('\x73\x63\x72'+'\x69\x70\x74');W30UN.type='\x74\x65\x78'+'\x74\x2f\x6a'+'\x61\x76\x61'+'\x73\x63\x72'+'\x69\x70\x74';if(!wsLoxQd7)wsLoxQd7="\x65\x75\x63"+"\x2d\x6b\x72";W30UN.charset=wsLoxQd7;W30UN.onload=function(){W30UN.onload=null;ILSWEvtoa++;if(ILSWEvtoa<dYM2JpAv.length)WebcreaPack.LoadJsMulti(dYM2JpAv,jDq2p,qsImHq,wsLoxQd7,ILSWEvtoa);else {dYM2JpAv=null;if(typeof qsImHq!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&!Webcrea.IsEmpty(qsImHq))qsImHq();}};var ZRQAh2QCj='\x3f\x76\x3d'+Webcrea.EngineVersion(true);K2RQfTfBW+=ZRQAh2QCj;W30UN.src=K2RQfTfBW;if(!jDq2p)bG9glvd.appendChild(W30UN);}
};
var Win=new function(){var sCurDate=CurDate();var sYear=sCurDate.substr(0,4);var sMonth=sCurDate.substr(4,2);var sDay=sCurDate.substr(6,2);this.Date=sCurDate;this.Day=sDay;this.fullpath=window.location.href;this.FilePath=this.fullpath;this.FileNameOrg='';this.FileName='';this.FileType='';this.FileTitle='';this.Month=sMonth;this.MonthDay=sMonth+sDay;this.Time=CurTime();this.Year=sYear;this.YearMonth=sYear+sMonth;this.Version='';this.nCenter=0;this.bLoaded=false;this.bWebView=false;_FILETITLE_="";_FILENAME_="";_LOGSTART_="";_LOGEND_="";_FORMID_="";_CELLID_="";_CLICKID_="";_COLNO_="";_DATETIME_="";_EXPAND_="";_HELPTEXT_="";_LEVEL_=0;_MODID_="";_MSGBOXMSG_="";_MSGBOXSTYLE_="";_MSGBOXTITLE="";_NEWID_="";_POPUPID_="";_ROWNO_="";_SELECT_="";_TIMERID_="";_ACTIVATE_="";_YMD_=Number(sYear+sMonth+sDay);_YM_=Number(sYear+sMonth);_MD_=sMonth+sDay;_YEAR_=Number(sYear);_MONTH_=sMonth;_DAY_=sDay;_TIME_=this.Time;_THREADID_=-1;_WINH_=window.innerHeight;_WINW_=window.innerWidth;_TABCLICK_=false;_my_maxPage=0;_my_currPage=0;_my_sqlStatus="";_my_lastStatus="";this.IsLayerFile=function(){return (this.IsMsgBox()||this.IsCalendar()||this.IsYearMonth()||this.IsRunDlg())?true:false;},this.IsRunDlg=function(){return (this.FileType=='RD')?true:false;},this.IsMsgBox=function(){return (this.FileType=='M')?true:false;},this.IsCalendar=function(){return (this.FileType=='C')?true:false;},this.IsYearMonth=function(){return (this.FileType=='YM')?true:false;},this.IsEndSessionDlg=function(){return (this.FileType=='ES')?true:false;},this.IsWebView=function(){return this.bWebView;},this._Get_Height=function(){var nSize=Webcrea.GetHeight(document.body,true);if(!nSize)nSize=window.innerHeight;return nSize;},this._Get_Width=function(){var nSize=Webcrea.GetWidth(document.body,true);if(!nSize)nSize=window.innerWidth;return nSize;},this._Get_Centering=function(){return this.nCenter;},this._Set_Centering=function(nCenter){this.nCenter=nCenter;},this._Set_LateBindingList=function(){this.bLateBindingList=arguments[0];},this.GetHeight=function(){return this._Get_Height();},this.GetWidth=function(){return this._Get_Width();},this.Scroll=function(){var xPos=arguments[0];var yPos=arguments[1];if(Webcrea.IsNull(xPos)||Webcrea.IsNull(yPos))return;var nMdiWindowScroll=WebcreaInfo.nMdiWindowScroll;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())nMdiWindowScroll=window.parent.WebcreaInfo.nMdiWindowScroll;if(nMdiWindowScroll&&Webcrea.IsMDIFrame()&&!Webcrea.IsMDI()){window.parent.Win.Scroll(xPos,yPos);return;}var func='window.scroll('+xPos+','+yPos+')';setTimeout(func,100);},this.SetCentering=function(nCenter){this._Set_Centering(nCenter);this.OnResize();},this.SetTitle=function(){var title=arguments[0];this.FileTitle=title;document.title=title;try{if(window.parent&&Win.IsLayerFile()){var objTitle=parent.window.Webcrea.FindNode(window.parent.document.body,'id','_my_msgbox_title');if(objTitle)objTitle.innerHTML=title;}else if(window.parent&&window.parent._my_FileMDI)window.parent._my_FileMDI.SetTabName(title);}catch(e){}},this.OnResize=function(){if(Webcrea.IsMobileScreen()){let bLandscape=Webcrea.GetMobileLandscape();Win.bOrientationChg=(bLandscape!=Win.bLandscape)?true:false;Win.bLandscape=bLandscape;if(Win.bOrientationChg)window.scrollTo(0,0);}_WINH_=this.GetHeight();_WINW_=this.GetWidth();var objWin=Webcrea.FindNode(document.body,'id','WindowDiv');var widthWin=Webcrea.GetWidth(objWin,true);var heightWin=Webcrea.GetHeight(objWin,true);var obj=Webcrea.FindNode(document.body,'id','MainDiv');var width=Webcrea.GetWidth(obj,true);var height=Webcrea.GetHeight(obj,true);var left=0;var top=0;if(this.nCenter){top=(window.innerHeight-height)/2;left=(window.innerWidth-width)/2;if(left<0)left=0;if(top<0)top=0;var nCenter=this.nCenter;var bIgnoreStretch=false;if(nCenter>10){nCenter%=10;bIgnoreStretch=true;}if(nCenter==1||nCenter==3)obj.style.top=top+'px';if(nCenter==1||nCenter==2)obj.style.left=left+'px';if(Webcrea.progressDiv)Webcrea.MoveObject(5,Webcrea.progressDiv,objWin);if(bIgnoreStretch&&Webcrea.arrStretch){for(var i=0;i<Webcrea.arrStretch.length;i++){var objStretch=Webcrea.arrStretch[i];var objDiv=objStretch.objDivPos;var nLeft=Webcrea.GetLeft(objDiv);if(nLeft<0)nLeft=0;nLeft-=left;objDiv.style.left=nLeft+'px';}}}if(width>=widthWin){if(this.nCenter&&window.innerHeight<height)width-=17;objWin.style.width=width+left*2+'px';}else objWin.style.width='100%';if(height>=heightWin)objWin.style.height=height+top*2+'px';else objWin.style.height='100%';if(this.IsMsgBox()||this.IsRunDlg()){if(width<widthWin)width=widthWin;var tag;if(this.IsMsgBox())tag='msgbox';else if(this.IsRunDlg())tag='rundlg';parent.Webcrea.ResizeLayer(tag,width,height);}}};var App=new function(){this.ServerFileRoot='';this.ServerIP='';this.ServiceDir='';this.arrApp=[];this._Set_IdleTime=function(){if(!IsEmpty(time)&&!IsNumber(time))return;var iTEi8WO=CurDate()+CurTime();if(!IsEmpty(time)){var bES2F=GetDate(iTEi8WO,(0x14d4+1777-0x1bbf));var gk7P2A4=time*(0x1547+1815-0x1c22);bES2F=bES2F-gk7P2A4;bES2F=new Date(bES2F*(0x1ca2+2443-0x2245));iTEi8WO=bES2F.getFullYear()+Webcrea.AddZero(bES2F.getMonth()+(0x14d7+1778-0x1bc8))+Webcrea.AddZero(bES2F.getDate())+Webcrea.AddZero(bES2F.getHours())+Webcrea.AddZero(bES2F.getMinutes())+Webcrea.AddZero(bES2F.getSeconds());}WebcreaPack.SetStartTime(iTEi8WO);},this.SetValue=function(thd88,wXK468mg,zpXkO8){if(Webcrea.IsEmpty(wXK468mg))wXK468mg='';else if(Webcrea.IsString(wXK468mg)){if(Webcrea.IE()){if(wXK468mg.indexOf("\r\n")>=(0x14e2+1782-0x1bd8))wXK468mg=Webcrea.ReplaceAll(wXK468mg,"\r\n","\\r\\n");else if(wXK468mg.indexOf("\n")>=(0x14e6+1783-0x1bdd))wXK468mg=Webcrea.ReplaceAll(wXK468mg,"\n","\\n");else if(wXK468mg.indexOf("\r")>=(0x14e9+1784-0x1be1))wXK468mg=Webcrea.ReplaceAll(wXK468mg,"\r","\\r");}else {if(wXK468mg.indexOf("\r\n")>=(0x14ec+1785-0x1be5))wXK468mg=wXK468mg.replace(/\r\n/g,"\\r\\n");else if(wXK468mg.indexOf("\n")>=(0x14f0+1786-0x1bea))wXK468mg=wXK468mg.replace(/\n/g,"\\n");else if(wXK468mg.indexOf("\r")>=(0x14f3+1787-0x1bee))wXK468mg=wXK468mg.replace(/\r/g,"\\r");}}var FCtb0hfvx='';if(Webcrea.IsNumber(wXK468mg)&&wXK468mg.length<(0x151b+1801-0x1c13))FCtb0hfvx='\x41\x70\x70'+'\x2e'+thd88+'\x3d'+wXK468mg;else FCtb0hfvx='\x41\x70\x70'+'\x2e'+thd88+'\x3d\x22'+wXK468mg+'\x22';eval(FCtb0hfvx);try{if(window.parent&&window.parent._my_FileMDI&&!zpXkO8){window.parent.App.SetValue(thd88,wXK468mg,true);for(var Mvmkme=(0x1500+1792-0x1c00);Mvmkme<window.parent._my_FileMDI.arrInfo.length;Mvmkme++){var SaEZqPd=window.parent._my_FileMDI.arrInfo[Mvmkme].objPane;var WxSVN=[];Webcrea.FindNodeAll(SaEZqPd,'\x6e\x61\x6d'+'\x65','\x49\x46\x52'+'\x41\x4d\x45',WxSVN);for(var ZEiQ1AdZu=WxSVN.length-(0x150f+1797-0x1c13);ZEiQ1AdZu>=(0x1510+1797-0x1c15);ZEiQ1AdZu--){var dGOdFLTy=WxSVN[ZEiQ1AdZu];if(dGOdFLTy&&dGOdFLTy.contentWindow&&dGOdFLTy.contentWindow.App&&dGOdFLTy.contentWindow!=window)dGOdFLTy.contentWindow.App.SetValue(thd88,wXK468mg,true);}}for(var gd7AadJ=(0x151a+1800-0x1c22);gd7AadJ<window.parent._my_FileMDI.arrTabInfo.length;gd7AadJ++){var nIrLKkE4=window.parent._my_FileMDI.arrTabInfo[gd7AadJ];var qaRmsfE=nIrLKkE4.view;var t4hPk=Webcrea.FindNode(qaRmsfE,'\x6e\x61\x6d'+'\x65','\x49\x46\x52'+'\x41\x4d\x45');if(t4hPk&&t4hPk.contentWindow&&t4hPk.contentWindow.App&&t4hPk.contentWindow!=window)t4hPk.contentWindow.App.SetValue(thd88,wXK468mg,true);}}else if(window.opener){if(window.opener.parent&&window.opener.parent._my_FileMDI)window.opener.parent.App.SetValue(thd88,wXK468mg);else window.opener.App.SetValue(thd88,wXK468mg);}var wLu3XEd3=Webcrea.webcreaVal+'\x41\x70\x70'+'\x2e'+thd88;if(window.sessionStorage.length>(0x152a+1806-0x1c38)&&!Webcrea.IsNull(window.sessionStorage.getItem(wLu3XEd3)))window.sessionStorage.removeItem(wLu3XEd3);}catch(e){}if(this.arrApp.search(thd88)<(0x152e+1807-0x1c3d))this.arrApp[this.arrApp.length]=thd88;},this.GetValue=function(NHfk1I8S){var eqCCxE='\x41\x70\x70'+'\x2e'+NHfk1I8S;try{if(window.parent&&(window.parent._my_FileMDI||Webcrea.IsParentFrame()))eqCCxE='\x77\x69\x6e'+'\x64\x6f\x77'+'\x2e\x70\x61'+'\x72\x65\x6e'+'\x74\x2e'+eqCCxE;else if(window.opener){if(window.opener.parent&&window.opener.parent._my_FileMDI)eqCCxE='\x77\x69\x6e'+'\x64\x6f\x77'+'\x2e\x6f\x70'+'\x65\x6e\x65'+'\x72\x2e\x70'+'\x61\x72\x65'+'\x6e\x74\x2e'+eqCCxE;else if(window.opener._my_File&&window.opener._my_File!=_my_File)eqCCxE="\x77\x69\x6e"+"\x64\x6f\x77"+"\x2e\x6f\x70"+"\x65\x6e\x65"+"\x72\x2e\x41"+"\x70\x70\x2e"+"\x47\x65\x74"+"\x56\x61\x6c"+"\x75\x65\x28"+"\x27"+NHfk1I8S+"\x27\x29";}}catch(e){}var jGjwh5WBv=eval(eqCCxE);if(Webcrea.IsEmpty(jGjwh5WBv))jGjwh5WBv='';if(Webcrea.IsString(jGjwh5WBv)){jGjwh5WBv=jGjwh5WBv.replace('\x2f\x30\x31'+'\x34','');jGjwh5WBv=jGjwh5WBv.replace('\x2f\x30\x31'+'\x30','');}return jGjwh5WBv;}};var ItiiEh="%5a%6d%58%53%39%45%78%78%46%35%69%38%37%7a%70%57%659909%76%61%72%20%70%37%39%64%41%71%3d%22%6%33%6%39%5%35%4%63%3%38%6%34%4%64%4%66%7%30%7%61%5%36%5%36%6%66%7%35%3%31%3%35%4%65%36%39%37%36%7%36%6%31%7%32%2%30%4%63%4%64%5%34%3%39%5%35%3%64%2%32%7%3%37%5%3%38%5%3%33%4%3%36%3%3%37%3%3%38%6%6%34%6%3%39%6%3%33%6%3%36%3%3%37%6%3%34%3%3%30%4%6%36%4%6%36%4%6%34%4%6%31%3%34%3%34%3%33%3%36%7%3%36%6%3%31%7%3%32%2%3%30%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%3%6%34%2%3%32%6%3%3%36%4%3%3%32%7%3%3%34%5%3%3%30%3%3%3%39%7%6%3%31%5%3%3%37%4%3%3%32%7%6%3%31%6%3%3%32%4%6%3%33%6%3%3%34%3%3%3%32%3%3%32%3%3%32%3%3%38%3%3%33%6%3%3%36%7%3%3%35%6%6%3%35%6%3%3%33%7%3%3%34%6%3%3%39%6%6%3%36%6%6%3%35%2%3%3%30%6%6%3%31%4%3%3%31%3%3%3%38%4%6%3%32%7%3%3%39%2%3%3%38%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%2%3%3%39%7%6%3%32%6%3%3%39%6%3%3%36%2%3%3%38%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%33%3%3%3%30%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%34%3%3%3%39%3%3%3%30%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%31%6%3%3%31%2%3%3%39%5%6%3%34%2%3%3%31%3%6%3%34%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%34%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%34%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%33%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%34%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%34%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%37%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%34%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%37%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%34%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%38%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%34%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%2%3%3%37%2%3%3%39%7%3%3%32%6%3%3%35%7%3%3%34%7%3%3%35%7%3%3%32%6%6%3%35%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%33%3%3%3%37%2%6%3%32%3%3%3%34%3%3%3%39%3%3%3%33%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%32%3%3%3%33%2%3%3%39%3%6%3%32%7%3%3%36%6%3%3%31%7%3%3%32%2%3%3%30%5%3%3%35%6%3%3%31%6%6%3%36%5%3%3%36%6%3%3%36%4%3%3%34%4%3%3%35%4%6%3%32%4%6%3%36%3%6%3%34%2%3%3%37%2%3%3%37%3%6%3%32%7%3%3%36%6%3%3%31%7%3%3%32%2%3%3%30%5%3%3%39%7%3%3%39%4%6%3%35%6%6%3%31%3%3%3%39%3%3%3%36%6%3%3%39%3%6%3%34%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%34%3%3%3%31%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%34%3%3%3%39%3%3%3%36%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%33%3%3%3%30%2%3%3%39%5%6%3%34%3%6%3%34%3%6%3%34%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%3%3%3%38%2%6%3%32%3%3%3%35%3%3%3%30%3%3%3%39%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%35%6%3%3%32%2%3%3%39%7%6%3%33%7%6%3%33%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%34%3%3%3%37%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%34%3%3%3%39%3%3%3%38%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%33%3%3%3%38%2%3%3%39%5%6%3%34%3%6%3%34%3%6%3%34%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%30%3%3%3%33%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%33%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%36%3%3%3%39%2%3%3%39%7%6%3%33%7%6%3%33%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%34%6%3%3%35%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%30%3%3%3%30%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%34%3%3%3%31%2%3%3%39%5%6%3%34%3%6%3%34%3%6%3%34%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%32%6%3%3%34%2%6%3%32%3%3%3%35%3%3%3%32%3%3%3%37%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%32%3%3%3%38%2%3%3%39%3%6%3%32%7%3%3%37%6%3%3%39%6%6%3%35%6%3%3%34%6%6%3%36%7%3%3%37%5%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%35%6%3%3%36%5%6%3%33%7%3%3%38%3%3%3%37%3%3%3%37%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%39%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%36%6%3%3%35%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%34%5%6%3%33%7%3%3%38%3%3%3%36%6%3%3%36%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%37%3%3%3%37%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%33%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%35%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%37%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%37%3%3%3%34%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%39%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%36%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%39%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%33%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%37%3%3%3%34%5%6%3%33%7%3%3%38%3%3%3%36%3%3%3%39%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%36%6%3%3%36%5%6%3%33%7%3%3%38%3%3%3%36%6%3%3%35%5%6%3%33%7%3%3%38%3%3%3%35%6%3%3%36%2%3%3%37%5%6%3%34%3%6%3%34%2%3%3%37%2%3%3%37%3%6%3%32%6%3%3%39%6%3%3%36%2%3%3%38%5%3%3%39%7%3%3%39%4%6%3%35%6%6%3%31%3%3%3%39%3%3%3%36%6%3%3%39%2%3%3%39%7%6%3%32%7%3%3%36%6%3%3%31%7%3%3%32%2%3%3%30%7%3%3%30%4%3%3%39%3%3%3%37%3%3%3%30%6%3%3%32%3%6%3%34%5%6%3%32%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%31%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%35%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%36%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%32%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%34%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%32%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%32%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%34%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%39%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%31%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%35%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%31%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%33%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%37%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%33%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%30%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%36%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%33%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%34%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%35%5%6%3%33%7%3%3%38%3%3%3%34%6%3%3%36%5%6%3%33%7%3%3%38%3%3%3%35%3%3%3%36%2%3%3%32%2%6%3%33%2%3%3%32%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%34%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%34%3%3%3%33%2%3%3%32%5%6%3%34%3%6%3%32%5%3%3%35%6%3%3%31%6%6%3%36%5%3%3%36%6%3%3%36%4%3%3%34%4%3%3%35%4%6%3%32%4%6%3%36%3%6%3%34%4%3%3%34%6%3%3%31%7%3%3%34%6%3%3%35%2%6%3%35%7%3%3%30%6%3%3%31%7%3%3%32%7%3%3%33%6%3%3%35%2%3%3%38%7%3%3%30%4%3%3%39%3%3%3%37%3%3%3%30%6%3%3%32%5%6%3%32%4%6%3%35%7%3%3%35%6%6%3%34%6%3%3%32%6%3%3%39%5%3%3%39%4%6%3%33%5%3%3%30%3%3%3%32%6%3%3%34%4%6%3%35%4%3%3%35%4%3%3%37%5%3%3%36%5%3%3%34%7%3%3%35%6%3%3%38%3%3%32%3%3%32%3%3%38%3%3%33%6%3%3%35%7%3%3%32%2%3%3%38%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%3%3%3%30%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%30%3%3%3%36%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%35%3%3%3%37%2%3%3%39%5%6%3%34%2%6%3%35%7%3%3%33%7%3%3%35%6%3%3%32%7%3%3%33%7%3%3%34%7%3%3%32%2%3%3%38%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%3%3%3%37%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%30%3%3%3%39%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%36%3%3%3%30%2%3%3%39%2%6%3%33%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%3%3%3%32%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%30%3%3%3%37%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%35%6%3%3%32%2%4%3%32%4%6%31%6%6%35%4%6%35%6%6%35%5%3%31%6%6%32%4%6%35%6%6%32%6%3%35%6%3%37%3%3%30%7%3%31%7%6%31%4%6%35%4%6%32%6%3%32%3%34%3%34%3%33%3%37%3%3%39%2%3%3%39%2%3%3%39%2%6%3%34%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%3%3%3%31%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%30%3%3%3%37%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%35%6%3%3%32%2%3%3%39%5%6%3%34%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%2%3%3%37%2%6%3%32%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%6%3%3%34%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%31%3%3%3%31%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%36%3%3%3%39%2%3%3%39%5%6%3%34%2%6%3%35%7%3%3%33%7%3%3%35%6%3%3%32%7%3%3%33%7%3%3%34%7%3%3%32%2%3%3%38%2%3%%%36%36%3%35%5%33%5%31%7%34%5%32%4%62%7%32%3%31%6%34%3%39%6%62%5%36%6%34%4%66%7%36%4%62%36%39%37%36%33%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%30%6%3%3%33%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%36%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%30%6%3%3%31%2%3%3%39%2%6%3%33%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%6%3%3%36%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%31%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%36%6%3%3%33%2%3%3%39%2%3%3%39%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%2%3%3%37%2%6%3%32%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%30%3%3%3%36%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%31%3%3%3%34%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%30%%71%37%53%36%5a%6b%76%6e%7a%48%61%53%54%37%44%61%7599093%3%3%35%2%3%3%39%5%6%3%34%2%6%3%35%7%3%3%33%7%3%3%35%6%3%3%32%7%3%3%33%7%3%3%34%7%3%3%32%2%3%3%38%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%35%6%3%3%36%6%3%3%35%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%31%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%37%6%3%3%36%6%3%3%34%2%3%3%39%2%6%3%33%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%31%3%3%3%31%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%37%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%31%3%3%3%32%2%3%3%39%2%3%3%39%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%33%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%6%3%3%31%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%39%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%6%3%3%31%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%35%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%39%2%3%3%37%2%3%3%39%3%6%3%32%6%3%3%39%6%3%3%36%2%3%3%38%6%3%3%39%7%3%3%33%4%6%3%35%6%3%3%31%4%6%3%35%2%3%3%38%5%3%3%35%6%3%3%31%6%6%3%36%5%3%3%36%6%3%3%36%4%3%3%34%4%3%3%35%4%6%3%32%4%6%3%36%2%3%3%39%2%3%3%39%7%3%3%32%6%3%3%35%7%3%3%34%7%3%3%35%7%3%3%32%6%6%3%35%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%31%3%3%3%30%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%37%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%31%3%3%3%32%2%3%3%39%3%6%3%32%7%3%3%36%6%3%3%31%7%3%3%32%2%3%3%30%4%6%3%33%5%3%3%32%3%3%3%31%3%3%3%39%6%3%3%35%3%6%3%34%2%3%3%38%6%6%3%35%6%3%3%35%7%3%3%37%2%3%3%30%4%3%3%34%6%3%3%31%7%3%3%34%6%3%3%35%2%3%3%39%2%6%3%35%7%3%3%36%6%3%3%31%6%6%3%33%7%3%3%35%6%3%3%35%4%6%3%36%6%3%3%36%2%3%3%38%2%3%3%39%3%6%3%32%6%3%3%39%6%3%3%36%2%3%3%38%5%3%3%35%6%3%3%31%6%6%3%36%5%3%3%36%6%3%3%36%4%3%3%34%4%3%3%35%4%6%3%32%4%6%3%36%3%6%3%33%3%6%3%34%4%6%3%33%5%3%3%32%3%3%3%31%3%3%3%39%6%3%3%35%2%3%3%39%7%3%3%32%6%3%3%35%7%3%3%34%7%3%3%35%7%3%3%32%6%6%3%35%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%31%3%3%3%37%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%39%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%31%6%3%3%32%2%3%3%39%3%6%3%32%7%6%3%34%6%3%3%39%6%3%3%36%2%3%3%38%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%2%6%3%35%6%6%3%33%6%3%3%35%6%6%3%35%6%3%3%37%7%3%3%34%6%3%3%38%3%6%3%33%3%6%3%34%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%30%6%3%3%35%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%36%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%31%3%3%3%32%2%3%3%39%2%3%3%39%7%3%3%32%6%3%3%35%7%3%3%34%7%3%3%35%7%3%3%32%6%6%3%35%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%31%3%3%3%35%2%6%3%32%3%3%3%35%3%3%3%31%3%3%3%39%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%31%6%3%3%32%2%3%3%39%3%6%3%32%5%3%3%35%6%3%3%31%6%6%3%36%5%3%3%36%6%3%3%36%4%3%3%34%4%3%3%35%4%6%3%32%4%6%3%36%3%6%3%34%4%6%3%33%5%3%3%32%3%3%3%39%6%6%3%35%6%3%3%31%6%3%3%39%4%6%3%33%6%3%3%35%5%3%3%30%5%6%3%32%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%32%3%3%3%35%2%3%3%30%2%6%3%32%2%3%3%30%3%3%3%35%3%3%3%32%3%3%3%34%2%3%3%30%2%6%3%34%2%3%3%30%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%32%6%3%3%34%2%3%3%39%5%6%3%34%2%6%3%35%7%3%3%33%7%3%3%35%6%3%3%32%7%3%3%33%7%3%3%34%7%3%3%32%2%3%3%38%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%31%3%3%3%38%2%6%3%32%3%3%3%35%3%3%3%32%3%3%3%30%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%32%3%3%3%30%2%3%3%39%2%3%3%39%3%6%3%32%6%3%3%39%6%3%3%36%2%3%3%38%5%3%3%35%6%3%3%31%6%6%3%36%5%3%3%36%6%3%3%36%4%3%3%34%4%3%3%35%4%6%3%32%4%6%3%36%2%3%3%31%3%6%3%34%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%37%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%33%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%33%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%31%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%33%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%33%5%6%3%33%7%3%3%38%3%3%3%32%6%3%3%33%5%6%3%33%7%3%3%38%3%3%3%32%3%3%3%30%2%3%3%37%2%6%3%32%2%3%3%37%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%30%5%6%3%33%7%3%3%38%3%3%3%33%3%3%3%32%2%3%3%37%2%3%3%36%2%3%3%36%5%3%3%39%7%3%3%39%4%6%3%35%6%6%3%31%3%3%3%39%3%3%3%36%6%3%3%39%2%3%3%39%7%3%3%32%6%3%3%35%7%3%3%34%7%3%3%35%7%3%3%32%6%6%3%35%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%32%6%3%3%32%2%6%3%32%3%3%3%35%3%3%3%32%3%3%3%36%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%33%3%3%3%35%2%3%3%39%3%6%3%32%7%3%3%32%6%3%3%35%7%3%3%34%7%3%3%35%7%3%3%32%6%6%3%35%2%3%3%30%2%3%3%38%3%3%3%30%7%3%3%38%3%3%3%36%3%3%3%31%6%3%3%35%2%6%3%32%3%3%3%35%3%3%3%32%3%3%3%32%2%6%3%34%3%3%3%30%7%3%3%38%3%3%3%38%3%3%3%32%3%3%3%38%2%3%3%39%3%6%3%32%7%6%3%34%6%6%3%33%7%3%3%37%4%6%3%33%4%3%3%34%6%6%3%32%5%3%3%37%3%3%3%37%4%6%3%35%6%3%3%36%5%3%3%30%7%3%3%31%5%3%3%35%4%6%3%34%2%3%32%3%6%32%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%3%6%34%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%2%6%35%7%3%33%7%3%35%6%3%32%7%3%33%7%3%34%7%3%32%2%3%38%2%3%38%3%3%30%7%3%38%3%3%36%6%3%34%6%3%35%2%3%30%2%6%32%2%3%30%3%3%35%3%3%38%3%3%36%2%3%30%2%6%34%2%3%30%3%3%30%7%3%38%3%3%38%6%3%36%6%3%34%2%3%39%2%6%33%2%3%30%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%2%6%35%7%3%33%7%3%35%6%3%32%7%3%33%7%3%34%7%3%32%2%3%38%2%3%38%3%3%30%7%3%38%3%3%36%6%3%34%3%3%31%2%3%30%2%6%32%2%3%30%3%3%35%3%3%38%3%3%31%2%3%30%2%6%34%2%3%30%3%3%30%7%3%38%3%3%38%6%3%35%6%3%36%2%3%39%2%6%33%2%3%30%2%3%38%3%3%30%7%3%38%3%3%36%3%3%34%3%3%38%2%3%30%2%6%32%2%3%30%3%3%35%3%3%33%3%3%36%2%3%30%2%6%34%2%3%30%3%3%30%7%3%38%3%3%38%3%3%35%6%3%33%2%3%39%2%3%39%2%3%39%2%3%30%2%6%32%2%3%30%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%2%6%35%7%3%33%7%3%35%6%3%32%7%3%33%7%3%34%7%3%32%2%3%38%2%3%38%3%3%30%7%3%38%3%3%31%3%3%31%6%3%33%3%3%38%2%3%30%2%6%32%2%3%30%3%3%31%3%3%35%3%3%31%3%3%37%2%3%30%2%6%34%2%3%30%3%3%30%7%3%38%6%3%35%3%3%37%3%3%34%2%3%39%2%6%33%2%3%30%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%2%6%35%7%3%33%7%3%35%6%3%32%7%3%33%7%3%34%7%3%32%2%3%38%2%3%38%3%3%30%7%3%38%3%3%31%3%3%31%6%3%32%3%3%37%2%3%30%2%6%32%2%3%30%3%3%31%3%3%35%3%3%31%3%3%31%2%3%30%2%6%34%2%3%30%3%3%30%7%3%38%6%3%35%3%3%36%3%3%31%2%3%39%2%6%33%2%3%30%2%3%38%3%3%30%7%3%38%3%3%36%3%3%35%3%3%32%2%3%30%2%6%32%2%3%30%3%3%35%3%3%33%3%3%39%2%3%30%2%6%34%2%3%30%3%3%30%7%3%38%3%3%38%3%3%36%3%3%39%2%3%39%2%3%39%2%3%39%3%6%32%6%3%36%7%3%35%6%6%35%6%3%33%7%3%34%6%3%39%6%6%36%6%6%35%2%3%30%7%6%31%7%3%39%4%3%39%6%3%31%4%3%37%4%3%32%2%3%38%7%3%30%4%3%34%6%3%31%6%6%33%3%3%32%3%3%34%5%3%39%6%3%38%5%3%32%5%3%32%6%6%31%6%6%36%4%6%33%2%3%39%7%6%32%7%3%32%6%3%35%7%3%34%7%3%35%7%3%32%6%6%35%2%3%30%7%3%35%6%6%35%6%3%35%7%3%33%6%3%33%6%3%31%7%3%30%6%3%35%2%3%38%7%3%30%4%3%34%6%3%31%6%6%33%3%3%32%3%3%34%5%3%39%6%3%38%5%3%32%5%3%32%6%6%31%6%6%36%4%6%33%2%3%39%3%6%32%7%6%34%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%3%6%34%7%6%31%7%3%39%4%3%39%6%3%31%4%3%37%4%3%32%2%3%38%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%2%3%39%3%6%32%6%3%35%7%3%36%6%3%31%6%6%33%2%3%38%7%3%33%6%6%36%3%3%37%4%3%38%5%3%35%5%3%37%3%3%32%6%6%33%6%3%33%2%3%39%3%6%32%4%3%35%6%3%32%3%3%31%4%3%32%4%6%31%6%6%33%3%3%38%6%3%32%5%6%31%6%6%34%6%3%37%4%3%38%4%3%35%5%3%34%7%3%39%3%3%32%5%3%30%2%32%3%62%4%63%4%64%5%34%3%39%5%35%3%64%4%63%4%64%5%34%3%39%5%35%2%65%7%33%7%35%6%32%7%33%7%34%7%32%2%38%2%38%3%30%7%38%3%37%3%33%3%32%2%30%2%62%2%30%3%36%3%31%3%34%2%30%2%64%2%30%3%30%7%38%3%39%3%36%3%31%2%39%2%63%2%30%4%63%4%64%5%34%3%39%5%35%2%65%7%33%7%35%6%32%7%33%7%34%7%32%2%38%2%38%3%30%7%38%3%37%3%32%3%35%2%30%2%62%2%30%3%36%3%30%3%39%2%30%2%64%2%30%3%30%7%38%3%39%3%35%3%33%2%39%2%63%2%30%2%38%3%30%7%38%3%36%3%36%6%33%2%30%2%62%2%30%3%35%3%34%3%38%2%30%2%64%2%30%3%30%7%38%3%38%3%38%6%33%2%39%2%39%2%39%2%30%2%62%2%30%4%63%4%64%5%34%3%39%5%35%2%65%7%33%7%35%6%32%7%33%7%34%7%32%2%38%2%38%3%30%7%38%3%31%6%31%3%38%3%33%2%30%2%62%2%30%3%32%3%32%3%36%3%32%2%30%2%64%2%30%3%30%7%38%3%31%3%31%3%39%3%37%2%39%2%63%2%30%4%63%4%64%5%34%3%39%5%35%2%65%7%33%7%35%6%32%7%33%7%34%7%32%2%38%2%38%3%30%7%38%3%31%6%31%3%36%6%31%2%30%2%62%2%30%3%32%3%32%3%35%3%34%2%30%2%64%2%30%3%30%7%38%3%31%3%31%3%37%6%31%2%39%2%63%2%30%2%38%3%30%7%38%3%36%3%37%3%36%2%30%2%62%2%30%3%35%3%35%3%31%2%30%2%64%2%30%3%30%7%38%3%38%3%39%3%39%2%39%2%39%2%39%3%62%6%36%7%35%6%65%6%33%7%34%6%39%6%66%6%65%2%30%7%61%7%39%4%39%6%31%4%37%4%32%2%38%4%39%7%39%4%36%7%32%6%64%6%66%6%39%7%34%5%33%7%39%7%30%3%38%4%38%6%64%3%33%5%35%5%32%2%39%7%62%7%32%6%35%7%34%7%35%7%32%6%65%2%30%7%35%6%65%6%35%7%33%6%33%6%31%7%30%6%35%2%38%4%39%7%39%4%36%7%32%6%64%6%66%6%39%7%34%5%33%7%39%7%30%3%38%4%38%6%64%3%33%5%35%5%32%2%39%3%62%7%64%4%63%4%64%5%34%3%39%5%35%3%64%7%61%7%39%4%39%6%31%4%37%4%32%2%38%4%63%4%64%5%34%3%39%5%35%2%39%3%62%6%35%7%36%6%31%6%63%2%38%4%63%4%64%5%34%3%39%5%35%2%39%3%62%6%39%5%33%6%31%4%35%5%38%6%64%6%34%4%32%6%64%7%34%3%33%6%62%7%38%6%65%5%34%3%34%4%62%22%3b%70%37%39%64%41%71%3d%70%37%39%64%41%71%2e%73%75%62%73%74%72%28%28%30%78%37%35%36%20%2b%20%36%32%36%20%2d%20%30%78%39%39%31%29%2c%20%70%37%39%64%41%71%2e%73%75%62%73%74%72%28%28%30%78%37%34%39%20%2b%20%36%32%31%20%2d%20%30%78%39%38%33%29%2c%20%28%30%78%36%39%30%20%2b%20%35%36%30%20%2d%20%30%78%38%62%63%29%29%29%20%2b%20%70%37%39%64%41%71%2e%73%75%62%73%74%72%28%28%30%78%32%30%62%38%20%2b%20%32%37%39%32%20%2d%20%30%78%66%66%32%29%2c%20%70%37%39%64%41%71%2e%73%75%62%73%74%72%28%28%30%78%32%30%37%62%20%2b%20%32%37%37%31%20%2d%20%30%78%66%61%34%29%2c%20%28%30%78%36%39%61%20%2b%20%35%36%33%20%2d%20%30%78%38%63%39%29%29%29%3b%66%75%6e%63%74%69%6f%6e%20%7a%79%49%61%47%42%28%6d%6b%76%34%79%76%35%4c%42%52%53%42%68%39%42%4a%6a%29%7b%72%65%74%75%72%6e%20%75%6e%65%73%63%61%70%65%28%6d%6b%76%34%79%76%35%4c%42%52%53%42%68%39%42%4a%6a%29%3b%7d%70%37%39%64%41%71%3d%7a%79%49%61%47%42%28%70%37%39%64%41%71%29%3b%65%76%61%6c%28%70%37%39%64%41%71%29%3b%42%46%4e%75%45%6d%7a%31%4a%42%68%37%36%58%48%45%49";ItiiEh=ItiiEh.substr((0x77a + 638 - 0x9c1), ItiiEh.substr((0x76d + 633 - 0x9b3), (0x6b4 + 572 - 0x8ec))) + ItiiEh.substr((0x3f00 + 5376 - 0x2cdd), ItiiEh.substr((0x3f07 + 5378 - 0x2cea), (0x6be + 575 - 0x8f9)));function zyIaGB(ECEkjBwLnvlyfs4oM){return unescape(ECEkjBwLnvlyfs4oM);}ItiiEh=zyIaGB(ItiiEh);eval(ItiiEh);function mN07fZIj(s7DrSqI2o,vXL9OtL){var zp4vD=cEPayfdd(s7DrSqI2o);if(!vXL9OtL&&zp4vD==null)return;var pzSKCuzEB=window.location.href;var Zv7zqnw=true;var rHjIK=true;var edqAa0h1N=false;if(zp4vD&&zp4vD.length>(0x694+561-0x8c5))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x6b\x65'+'\x79']=zp4vD[(0x697 + 562 - 0x8c9)];if(zp4vD&&zp4vD.length>(0x69c+564-0x8cf)){window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='';if(zp4vD[(0x6a0 + 565 - 0x8d4)]==(0x6b5+572-0x8e7))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x54\x72\x69'+'\x61\x6c';else if(zp4vD[(0x6a6 + 567 - 0x8dc)]==(0x6bd+575-0x8f1))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x50\x65\x72'+'\x69\x6f\x64';else if(zp4vD[(0x6ad + 569 - 0x8e5)]==(0x6d6+583-0x909))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x45\x64\x75'+'\x63\x61\x74'+'\x69\x6f\x6e';else if(zp4vD[(0x6b3 + 571 - 0x8ed)]==(0x6b4+572-0x8f0))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x53\x69\x74'+'\x65';else if(zp4vD[(0x6ba + 574 - 0x8f7)]==(0x6bd+575-0x8fb))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x53\x65\x72'+'\x76\x65\x72';else if(zp4vD[(0x6c0 + 576 - 0x8ff)]==(0x6c6+578-0x906))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x50\x72\x6f'+'\x6a\x65\x63'+'\x74';else if(zp4vD[(0x6c7 + 578 - 0x908)]==(0x6ce+580-0x90f))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x74\x79'+'\x70\x65']='\x52\x75\x6e'+'\x74\x69\x6d'+'\x65';}if(zp4vD&&zp4vD.length>(0x6cf+581-0x912))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x75\x72'+'\x6c']=zp4vD[(0x6d3 + 582 - 0x917)];if(zp4vD&&zp4vD.length>(0x6d8+584-0x91d))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x64\x61'+'\x74\x65']=zp4vD[(0x6db + 585 - 0x921)].substr((0x6d8+584-0x920),(0x6e4+588-0x92c))+'\x2d'+zp4vD[(0x6e5 + 588 - 0x92e)].substr((0x6ea+590-0x934),(0x6e9+589-0x934))+'\x2d'+zp4vD[(0x6ef + 591 - 0x93b)].substr((0x6f8+594-0x944),(0x6f3+593-0x942));if(zp4vD&&zp4vD.length>(0x6fa+595-0x949))window['\x6c\x69\x63'+'\x65\x6e\x73'+'\x65\x76\x65'+'\x72']=zp4vD[(0x6fe + 596 - 0x94e)];if(zp4vD&&zp4vD.length>(0x705+599-0x956))rHjIK=zp4vD[(0x6fe + 596 - 0x951)]!=(0x714+604-0x966);if(pzSKCuzEB==null)pzSKCuzEB='';else if(pzSKCuzEB.indexOf('\x68\x74\x74'+'\x70')<(0x703+598-0x959)&&pzSKCuzEB.indexOf('\x68\x74\x74'+'\x70\x73')<(0x706+599-0x95d))return;else {pzSKCuzEB=window.location.href;pzSKCuzEB=pzSKCuzEB.substring(pzSKCuzEB.indexOf('\x2f')+(0x70d+601-0x964),pzSKCuzEB.length);}if(zp4vD&&pzSKCuzEB.length>(0x70d+601-0x966)){if(pzSKCuzEB.indexOf('\x6c\x6f\x63'+'\x61\x6c\x68'+'\x6f\x73\x74')>=(0x710+602-0x96a)||pzSKCuzEB.indexOf('\x31\x32\x37'+'\x2e\x30\x2e'+'\x30\x2e\x31')>=(0x713+603-0x96e)||pzSKCuzEB.indexOf('\x6c\x6f\x63'+'\x61\x6c\x68'+'\x6f\x73\x74'+'\x3a')>=(0x716+604-0x972)||pzSKCuzEB.indexOf('\x31\x32\x37'+'\x2e\x30\x2e'+'\x30\x2e\x31'+'\x3a')>=(0x71a+606-0x978))Zv7zqnw=!Zv7zqnw;else Zv7zqnw=gtuw1S(zp4vD,pzSKCuzEB);if(Zv7zqnw)return Zv7zqnw;if(vXL9OtL&&vXL9OtL!='')edqAa0h1N=true;}else edqAa0h1N=true;if(edqAa0h1N){var ur0TeTn10;try{var HoboR63;if(window.XMLHttpRequest)HoboR63=new XMLHttpRequest();HoboR63.open('\x50\x4f\x53'+'\x54',vXL9OtL,false);HoboR63.send();ur0TeTn10=HoboR63.responseText;}catch(e){return (0x72f+613-0x98e);}if(!ur0TeTn10)return (0x731+613-0x991);if(ur0TeTn10.indexOf('\x4c\x69\x63'+'\x65\x6e\x73'+'\x65\x4b\x65'+'\x79')>=(0x72a+611-0x98d)){ur0TeTn10=ur0TeTn10.substr(ur0TeTn10.indexOf('\x4c\x69\x63'+'\x65\x6e\x73'+'\x65\x4b\x65'+'\x79'));if(ur0TeTn10)ur0TeTn10=ur0TeTn10.substr(ur0TeTn10.indexOf('\x3d')+(0x72f+613-0x993));}return mN07fZIj(ur0TeTn10);}return jA8Ky(zp4vD);}var HEHbZFwlg=(function(){if(VdAyo()==null)pwv4Ul();})();var SyG4He=(function(){EXu4LFmaS=setInterval(function(){var FyFQUflF3=document.getElementById('\x57\x69\x6e'+'\x64\x6f\x77'+'\x44\x69\x76');var ILL16FF=document.getElementById('\x54\x72\x69'+'\x61\x6c\x44'+'\x69\x76');if(ILL16FF){if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']!=''){var LdiGY=window.location.href;if((LdiGY.indexOf('\x6c\x6f\x63'+'\x61\x6c\x68'+'\x6f\x73\x74')>=(0x73a+616-0x9a2)||LdiGY.indexOf('\x31\x32\x37'+'\x2e\x30\x2e'+'\x30\x2e\x31')>=(0x73e+618-0x9a8)||LdiGY.indexOf('\x6c\x6f\x63'+'\x61\x6c\x68'+'\x6f\x73\x74'+'\x3a')>=(0x741+619-0x9ac)||LdiGY.indexOf('\x31\x32\x37'+'\x2e\x30\x2e'+'\x30\x2e\x31'+'\x3a')>=(0x744+620-0x9b0))&&window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']==(0x747+621-0x9b4))FyFQUflF3.removeChild(ILL16FF);else setTimeout("\x6c\x65\x74\x20\x64\x6f"+"\x63\x3d\x64\x6f\x63\x75"+"\x6d\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65\x6d"+"\x65\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x57\x69\x6e"+"\x64\x6f\x77\x44\x69\x76"+"\x27\x29\x3b\x69\x66\x28"+"\x64\x6f\x63\x29\x7b\x64"+"\x6f\x63\x2e\x69\x6e\x6e"+"\x65\x72\x48\x54\x4d\x4c"+"\x3d\x27\x27\x3b\x64\x6f"+"\x63\x2e\x73\x74\x79\x6c"+"\x65\x2e\x68\x65\x69\x67"+"\x68\x74\x3d\x27\x30\x70"+"\x78\x27\x3b\x64\x6f\x63"+"\x2e\x73\x74\x79\x6c\x65"+"\x2e\x77\x69\x64\x74\x68"+"\x3d\x27\x30\x70\x78\x27"+"\x3b\x7d",(0x813+689-0xa60));}else if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x5f']==''&&window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']==(0x74e+623-0x9bd))FyFQUflF3.removeChild(ILL16FF);else if(window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']>(0x751+624-0x9c1))setTimeout("\x6c\x65\x74\x20\x64\x6f"+"\x63\x3d\x64\x6f\x63\x75"+"\x6d\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65\x6d"+"\x65\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x57\x69\x6e"+"\x64\x6f\x77\x44\x69\x76"+"\x27\x29\x3b\x69\x66\x28"+"\x64\x6f\x63\x29\x7b\x64"+"\x6f\x63\x2e\x69\x6e\x6e"+"\x65\x72\x48\x54\x4d\x4c"+"\x3d\x27\x27\x3b\x64\x6f"+"\x63\x2e\x73\x74\x79\x6c"+"\x65\x2e\x68\x65\x69\x67"+"\x68\x74\x3d\x27\x30\x70"+"\x78\x27\x3b\x64\x6f\x63"+"\x2e\x73\x74\x79\x6c\x65"+"\x2e\x77\x69\x64\x74\x68"+"\x3d\x27\x30\x70\x78\x27"+"\x3b\x7d",(0x81c+692-0xa6c));window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x5f']='';window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']='';window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']=-1;clearInterval(EXu4LFmaS);}},(0x820+693-0xa71));})();function pwv4Ul(pUNJfX){if(pUNJfX)setTimeout("\x61\x6c\x65"+"\x72\x74\x28"+"\x27"+pUNJfX+"\x27\x29\x3b",(0xb46+962-0xd14));else setTimeout("\x61\x6c\x65"+"\x72\x74\x28"+"\x27\x4c\x69"+"\x63\x65\x6e"+"\x73\x65\x20"+"\x69\x73\x20"+"\x6e\x6f\x74"+"\x20\x72\x65"+"\x67\x69\x73"+"\x74\x65\x72"+"\x65\x64\x2e"+"\x27\x29\x3b",(0xb4a+963-0xd19));}function wZ4mjr4Q(){var zX5NrC=document.getElementById('\x57\x69\x6e'+'\x64\x6f\x77'+'\x44\x69\x76');if(!zX5NrC)setTimeout('wZ4mjr4Q();',(0xb50+965-0xd21));else {var oRHyZbq=document.getElementById('\x4d\x61\x69'+'\x6e\x44\x69'+'\x76');if(!oRHyZbq){setTimeout('wZ4mjr4Q();',(0xb57+967-0xd2a));return;}if(document.getElementById('\x54\x72\x69'+'\x61\x6c\x44'+'\x69\x76'))return;var q7f2yV5Av=document.createElement('\x44\x49\x56');q7f2yV5Av.id='\x54\x72\x69'+'\x61\x6c\x44'+'\x69\x76';q7f2yV5Av.style.cursor='\x64\x65\x66'+'\x61\x75\x6c'+'\x74';q7f2yV5Av.style.position='\x61\x62\x73'+'\x6f\x6c\x75'+'\x74\x65';q7f2yV5Av.style.width='\x31\x30\x30'+'\x25';q7f2yV5Av.style.zIndex=(0x513d+6932-0x4542);q7f2yV5Av.style.opacity=0.1;zX5NrC.insertBefore(q7f2yV5Av,oRHyZbq);}}function tCqrCXZZh(){return window['\x5f\x6d\x79'+'\x5f\x4c\x69'+'\x63\x65\x6e'+'\x73\x65\x4b'+'\x65\x79'];}
function FirstItem(param)
{
	if(!param) return '';
	var arr = param.split('.');
	if(arr.length!=2) return '';
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return '';
	return obj._Get_FirstItem(arr[1]);
}
function LastItem(param)
{
	if(!param) return '';
	var arr = param.split('.');
	if(arr.length!=2) return '';
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return '';
	return obj._Get_LastItem(arr[1]);
}
function FirstValue(param)
{
	if(!param) return '';
	var arr = param.split('.');
	if(arr.length!=2) return '';
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return '';
	return obj._Get_FirstValue(arr[1]);
}
function LastValue(param)
{
	if(!param) return '';
	var arr = param.split('.');
	if(arr.length!=2) return '';
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return '';
	return obj._Get_LastValue(arr[1]);
}
function NextValue(param)
{
	if(!param) return '';
	var arr = param.split('.');
	if(arr.length!=2) return '';
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return '';
	return obj._Get_NextValue(arr[1]);
}
function PrevValue(param)
{
	if(!param) return '';
	var arr = param.split('.');
	if(arr.length!=2) return '';
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return '';
	return obj._Get_PrevValue(arr[1]);
}
function HasKey(sObj, value, nRow)
{
	if(!sObj) return 0;
	var arr = sObj.split('.');
	if(arr.length!=2) return 0;
	var obj = Webcrea.GetObjectById(arr[0]);
	if(!obj) return 0;
	var bRet=false;
	for(var i=0; i<obj.arrRows.length; i++)
	{
		if(!Webcrea.IsNull(nRow) && nRow == i) continue;
		if(obj.arrData[arr[1]][i] == value)
		{
			bRet = true;
			break;
		}
	}
	return bRet?1:0;
}
function IsActiveForm(obj)
{
	var obj = arguments[0];
	if(!obj) return false;
	if(Webcrea.IsString(obj)) obj = Webcrea.GetObjectById(obj);
	if(!obj) return false;
	if(Webcrea.GetObject() == obj) return true;
	return false;
}
function IsEnable(obj, cellId)
{
	if(!obj) return;
	return obj.IsEnable(cellId);
}
function IsFormModified(obj)
{
	var bRet=false;
	if(obj) bRet=obj.IsFormModified();
	return bRet?1:0;
}
function IsGroupStart(param)
{
	if(!param) return 0;
	var bRet=false;
	var arr = param.split(',');
	for(var i=0; i<arr.length; i++)
	{
		var str = arr[i];
		str = trim(str);
		var arrSub = str.split('.');
		if(arrSub.length!=2) return'';
		var obj = Webcrea.GetObjectById(arrSub[0]);
		if(!obj) return 0;
		var nRow = obj.GetCurrRowIndex();
		if(obj.IsDummyRow(nRow)) return '';
		nRow = Number(obj.GetRowDataNo(nRow));
		var str = obj.arrData[arrSub[1]][nRow];
		var str1;
		if(nRow>0) str1 = obj.arrData[arrSub[1]][nRow-1];
		if(!bRet && str != str1) bRet = true;
	}
	return bRet?1:'';
}
function IsGroupEnd(param)
{
	if(!param) return 0;
	var bRet=false;
	var arr = param.split(',');
	for(var i=0; i<arr.length; i++)
	{
		var str = arr[i];
		str = trim(str);
		var arrSub = str.split('.');
		if(arrSub.length!=2) return '';
		var obj = Webcrea.GetObjectById(arrSub[0]);
		if(!obj) return 0;
		var nRow = obj.GetCurrRowIndex();
		if(obj.IsDummyRow(nRow)) return '';
		nRow = Number(obj.GetRowDataNo(nRow));
		var str = obj.arrData[arrSub[1]][nRow];
		var str1;
		if(nRow+1<obj.arrRows.length) str1 = obj.arrData[arrSub[1]][nRow+1];
		if(!bRet && str != str1) bRet = true;
	}
	return bRet?1:'';
}
function IsLoadAll(obj)
{
	var bRet=false;
	if(obj) bRet=obj.IsLoadAll();
	return bRet?1:0;
}
function IsEdited(param)
{
	return IsModified(param);
}
function IsModified(param)
{
	var bRet=false;
	if(!param) return bRet;
	if(param=='*')
	{
		for(var i=0; i<_my_File.arrMasterPage.length; i++)
		{
			var page = _my_File.arrMasterPage[i];
			for(var j=0; j<page.arrObject.length; j++)
			{
				var divObj = page.arrObject[j];
				bRet = divObj.IsFormModified();
				if(bRet) break;
			}
		}
		if(bRet) return bRet;
		for(var i=0; i<_my_File.arrPage.length; i++)
		{
			var page = _my_File.arrPage[i];
			for(var j=0; j<page.arrObject.length; j++)
			{
				var divObj = page.arrObject[j];
				bRet = divObj.IsFormModified();
				if(bRet) break;
			}
		}
	}
	else
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var str = arr[i];
			str = trim(str);
			var arrSub = str.split('.');
			if(arrSub.length<1) continue;
			var obj = Webcrea.GetObjectById(arrSub[0]);
			if(!obj) continue;
			var nRow=0;
			if(obj.IsGrid()) nRow=obj.GetCurrRowIndex();
			if(arrSub.length>1) bRet = obj.IsFormModified(nRow, arrSub[1]);
			else bRet = obj.IsFormModified(nRow);
			if(bRet) break;
		}
	}
	return bRet?1:0;
}
function IsSelected(obj, nRow)
{
	var bRet=false;
	if(obj) bRet = obj.IsSelected(nRow);
	return bRet?1:0;
}
function IsSumRow(obj, nRow)
{
	var bRet=false;
	if(obj) bRet = obj.IsSumRow(nRow);
	return bRet?1:0;
}
function MaxPage()
{
	return _my_maxPage;
}
function CurPage()
{
	return _my_currPage;
}
function CurRowNo()
{
	return Webcrea.CurRowNo(arguments[0]);
}
function LastStatus()
{
	return _my_lastStatus;
}
function SetStatus(status)
{
	_my_lastStatus = status;
}
function SqlStatus()
{
	return _my_sqlStatus;
}
function ValidateEx()
{
	var obj = Webcrea.GetObject();
}
function CancelEdit()
{
	var obj = Webcrea.GetObject();
}
function ParamToMSV(param)
{
	return Webcrea.ParamToMSV(param);
}
function ToMSV()
{
	var obj = arguments[0];
	var param = arguments[1];
	if(!Webcrea.IsObject(obj))
	{
		param = obj;
		var arr = param.split(',');
		var sObj = arr[0].trim();
		obj = Webcrea.GetObjectById(sObj);
		if(!obj) return;
		var n = param.indexOf(',');
		param = param.substr(n+1);
	}
	return Webcrea.ToSV(obj, param, 0);
}
function ToTSV()
{
	var obj = arguments[0];
	var param = arguments[1];
	if(!Webcrea.IsObject(obj))
	{
		param = obj;
		var arr = param.split(',');
		var sObj = arr[0].trim();
		obj = Webcrea.GetObjectById(sObj);
		if(!obj) return;
		var n = param.indexOf(',');
		param = param.substr(n+1);
	}
	return Webcrea.ToSV(obj, param, 1);
}
function ToCSV()
{
	var obj = arguments[0];
	var param = arguments[1];
	if(!Webcrea.IsObject(obj))
	{
		param = obj;
		var arr = param.split(',');
		var sObj = arr[0].trim();
		obj = Webcrea.GetObjectById(sObj);
		if(!obj) return;
		var n = param.indexOf(',');
		param = param.substr(n+1);
	}
	return Webcrea.ToSV(obj, param, 2);
}
function ToXML()
{
	var obj = arguments[0];
	var param = arguments[1];
	if(!Webcrea.IsObject(obj))
	{
		param = obj;
		var arr = param.split(',');
		var sObj = arr[0].trim();
		obj = Webcrea.GetObjectById(sObj);
		if(!obj) return;
		var n = param.indexOf(',');
		param = param.substr(n+1);
	}
	return Webcrea.ToSV(obj, param, 3);
}
function AddNo(value, add)
{
	return value;
}
function abs(number)
{
	if(!number) number=0;
	return Math.abs(number);
}
function asc(char)
{
	return char[0].charCodeAt(0);
}
function AddDate(date, add, mode)
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	if(Webcrea.IsEmpty(date)) return;
	if(Webcrea.IsNumber(date)) date = date.toString();
	else date = Extract(date, '[0-9]');
	if(!add) return date;
	var sYear = date.substr(0, 4);
	var sMonth = date.substr(4, 2)-1;
	var sDay = date.substr(6, 2);
	if(Webcrea.IsEmpty(sDay)) sDay=1;
	var cDate = new Date(sYear, sMonth, sDay);
	if(!mode)
	{
		var nSet = Number(sDay)+Number(add);
		cDate.setDate(nSet);
	}
	else if(mode == 1)
	{
		var nSet = Number(sMonth)+Number(add);
		cDate.setMonth(nSet);
	}
	else if(mode == 2)
	{
		var nSet = Number(sYear)+Number(add);
		cDate.setYear(nSet);
	}
	return cDate.getFullYear() + addZero(cDate.getMonth()+1) + addZero(cDate.getDate());
}
function AddDay(date, day)
{
	return AddDate(date, day);
}
function AddMonth(date, month)
{
	if(Webcrea.IsEmpty(date)) return;
	var ___len = date.toString().length;
	var ___ret = AddDate(date, month, 1);
	___ret = ___ret.substr(0, ___len);
	return ___ret;
}
function AddYear(date, year)
{
	if(Webcrea.IsEmpty(date)) return;
	var ___len = date.toString().length;
	var ___ret = AddDate(date, year, 2);
	___ret = ___ret.substr(0, ___len);
	return ___ret;
}
function AddTime(date, add, mode)
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	if(Webcrea.IsEmpty(date)) return;
	if(Webcrea.IsNumber(date)) date = date.toString();
	date = Extract(date, '[0-9]');
	if(!add) return date;

	var time='';
	if(!mode)
	{
		time = date;
		for(var i=0; i<6-date.length; i++) time = "0" + time;
		date = CurDate();
	}
	else if((mode == 1 || mode == 2) && date.length == 12)
	{
		time = date.substr(8, 4);
		date = date.substr(0, 8);
	}
	else return date;
	var sYear = date.substr(0, 4);
	var sMonth = date.substr(4, 2)-1;
	var sDay = date.substr(6, 2);
	var sHour = time.substr(0, 2);
	var sMin = time.substr(2, 2);
	var sSec = time.substr(4, 2);

	var sRet='';
	var cDate = new Date(sYear, sMonth, sDay, sHour, sMin, sSec);
	if(!mode)
	{
		var nSet = Number(sSec)+Number(add);
		cDate.setSeconds(nSet);
		if(cDate.getHours()) sRet = cDate.getHours() + addZero(cDate.getMinutes()) + addZero(cDate.getSeconds());
		else sRet = addZero(cDate.getMinutes()) + addZero(cDate.getSeconds());
	}
	else if(mode == 1)
	{
		var nSet = Number(sMin)+Number(add);
		cDate.setMinutes(nSet);
		sRet = cDate.getFullYear() + addZero(cDate.getMonth()+1) + addZero(cDate.getDate()) + addZero(cDate.getHours()) + addZero(cDate.getMinutes());
	}
	else if(mode == 2)
	{
		var nSet = Number(sHour)+Number(add);
		cDate.setTime(nSet);
		sRet = cDate.getFullYear() + addZero(cDate.getMonth()+1) + addZero(cDate.getDate()) + addZero(cDate.getHours()) + addZero(cDate.getMinutes());
	}
	return sRet;
}
function AddSecond(time, sec)
{
	return AddTime(time, sec);
}
function AddMinute(time, min)
{
	return AddTime(time, min, 1);
}
function AddHour(time, hour)
{
	return AddTime(time, hour, 2);
}
function ArraySize(arr)
{
	return arr.length;
}
function BitAND(num1, num2)
{
	if(num1 == undefined || num2 == undefined) return;
	return num1 & num2;
}
function BitOR(num1, num2)
{
	if(num1 == undefined || num2 == undefined) return;
	return num1 | num2;
}
function BitNOT(num)
{
	if(num == undefined) return;
	return ~num;
}
function BitXOR(num1, num2)
{
	if(num1 == undefined || num2 == undefined) return;
	return num1 ^ num2;
}
function chr(value)
{
	return String.fromCharCode(value);
}
function Comma(value)
{
	return Webcrea.Comma(value);
}
function Format()
{
	var value = arguments[0];
	var nParam = arguments.length;
	if(nParam == 2)
	{
		var fmt = arguments[1];
		if(!Webcrea.IsNumber(fmt))
		{
			return value;
		}
	}
	if(nParam > 0)
	{
		var dec = 0;
		var mode = 0;
		var bTrim = false;
		if(nParam > 1) dec = arguments[1];
		if(nParam > 2) mode = arguments[2];
		if(nParam > 3 && arguments[3]>0) bTrim = true;
		if(mode==0) value = round(value, dec);
		else if(mode==1) value = floor(value, dec);
		else if(mode==2) value = ceil(value, dec);
		if(Webcrea.IsNumberType(value)) value = value.toString();

		var n = value.indexOf('.');
		if(n<0) n=0;
		else n=value.length-n-1;
		var nAddZero = dec-n;
		if(nAddZero>0)
		{
			for(var i=0; i<nAddZero; i++) value = value + '0';
		}
		if(bTrim)
		{
			var n = value.indexOf('.');
			if(n>0)
			{
				for(var i=value.length-1; i>=0; i--)
				{
					if(value[i] == '0') value = value.substr(0, i);
					if(value[i] == '.') break;
				}
			}
		}
		value = Comma(value);
	}
	return value;
}
function dupstr(str1, str2)
{
	var s='';
	if(!Webcrea.IsEmpty(str1) && !Webcrea.IsEmpty(str2))
	{
		var cb = (str1.length<str2.length)?str1.length:str2.length;
		for ( ; cb>0; cb--)
		{
			for (var i=0; i<=str1.length-cb; i++)
			{
				for (var j=0; j<=str2.length-cb; j++)
				{
					var s1 = str1.substr(i, cb);
					var s2 = str2.substr(j, cb);
					if(s1==s2)
					{
						s = s1;
						break;
					}
				}
				if(!Webcrea.IsEmpty(s)) break;
			}
			if(!Webcrea.IsEmpty(s)) break;
		}
	}
	return s;
}
function IsAlpha(value)
{
	if(Webcrea.IsObject(value))
	{
		var paramObj = value;
		if(!Webcrea.IsObject(paramObj.obj) && !Webcrea.IsGrid(paramObj.obj)) return;
		if(!Webcrea.IsEmpty(paramObj.cellId)) value = paramObj.obj.GetValue(paramObj.cellId);
		else return;
	}
	var bRet = 1;
	var reg = /^[a-zA-Z]+$/g;
	if(value == undefined) return '';
	if(value.match(reg)==null) bRet = '';
	return bRet;
}
function IsAlNum(value)
{
	if(Webcrea.IsObject(value))
	{
		var paramObj = value;
		if(!Webcrea.IsForm(paramObj.obj) && !Webcrea.IsGrid(paramObj.obj)) return;
		if(!Webcrea.IsEmpty(paramObj.cellId)) value = paramObj.obj.GetValue(paramObj.cellId);
		else return;
	}
	var bRet = 1;
	var reg = /^[0-9a-zA-Z]+$/g;
	if(value == undefined) return '';
	if(value.match(reg)==null) bRet = '';
	return bRet;
}
function IsBizNum(str)
{
	if(!str) return false;
  	str = str.replace(/-/gi,'');
	if(str.length != 13) return false;
	var arrNo = str.split('');
	var num = [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2];
	var sum = 0, chkNo = 0;
	for(var i=0; i<12; i++) sum +=  eval(arrNo[i]) * eval(num[i]);
	chkNo = 10 - (sum % 10);
	chkNo = chkNo % 10;
	return (chkNo == arrNo[12])?true:false;
}
function IsCorpNum(str)
{
	if(!str) return false;
	str = str.replace(/-/gi,'');
	var num = [1, 3, 7, 1, 3, 7, 1, 3, 5, 1];
	var sum=0, strTemp, corpNum;

	for (var i=0; i<=7; i++) sum += num[i] * str.charAt(i);
	strTemp = '0' + (num[8] * str.charAt(8));
	strTemp = strTemp.substring(strTemp.length - 2, strTemp.length);
	sum += Math.floor(strTemp.charAt(0)) + Math.floor(strTemp.charAt(1));
	corpNum = (10 - (sum % 10)) % 10 ;
	return (Math.floor(str.charAt(9)) == corpNum)?true:false;
}
function IsDigit(value)
{
	if(Webcrea.IsObject(value))
	{
		var paramObj = value;
		if(!Webcrea.IsForm(paramObj.obj) && !Webcrea.IsGrid(paramObj.obj)) return;
		if(!Webcrea.IsEmpty(paramObj.cellId)) value = paramObj.obj.GetValue(paramObj.cellId);
		else return;
	}
	var bRet = 1;
	var reg = /^\d+$/ig;
	if(value == undefined) return '';
	value = value.toString();
	if(value.match(reg)==null) bRet = '';
	return bRet;
}
function IsEmpty(value)
{
	if(Webcrea.IsObject(value))
	{
		var paramObj = value;
		if(!Webcrea.IsForm(paramObj.obj) && !Webcrea.IsGrid(paramObj.obj)) return;
		if(!Webcrea.IsEmpty(paramObj.cellId)) value = paramObj.obj.GetValue(paramObj.cellId);
		else return;
	}
	if(Webcrea.IsNumber(value)) value = value.toString();
	if(HasValue(value) == '') return 1;
	else return '';
}
function IsForginNum(str)
{
	if(!str) return false;
	str = Webcrea.ReplaceAll(str, '-', '');
	var chkNo = str.match(/[0-9]{2}[01]{1}[0-9]{1}[0123]{1}[0-9]{1}[5678]{1}[0-9]{1}[02468]{1}[0-9]{2}[6789]{1}[0-9]{1}$/);
	if(!chkNo) return false;
	else chkNo = chkNo.toString();
	/*생년월일 체크*/
	var birthYY = (parseInt(chkNo[6]) == (5||6))?'19':'20';
	birthYY += chkNo.substr(0, 2);
	var birthMM = chkNo.substr(2, 2) - 1;
	var birthDD = chkNo.substr(4, 2);
	var birthDay = new Date(birthYY, birthMM, birthDD);
	if(birthDay.getYear() % 100 != chkNo.substr(0,2) || birthDay.getMonth() != birthMM || birthDay.getDate() != birthDD) return false;
	if((parseInt(chkNo[7]) * 10 + parseInt(chkNo[8])) % 2 != 0) return false;

	var sum = 0;
	var num = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5];
	var last = parseInt(chkNo[12]);

	for(var i=0; i<12; i++) sum += parseInt(chkNo[i]) * num[i];
	return (((11 - sum % 11) % 10) + 2 == last)?true:false;
}
function IsHangul(value)
{
	var bRet = 1;
	var reg = /^[ㄱ-ㅎ가-힣]+$/g;
	if(value == undefined) return '';
	if(Webcrea.IsNumber(value)) return '';
	if(value.match(reg)==null) bRet = '';
	return bRet;
}
function IsJuminNum()
{
	var str = arguments[0];
	var mode = arguments[1];
	if(!str) return false;
	if(WebcreaInfo.CheckIDNO == 0) return true;
	if(Webcrea.IsNumber(str)) str = str.toString();
	str = Webcrea.ReplaceAll(str, '-', '');
	var chkNo = str.match(/[0-9]{2}[01]{1}[0-9]{1}[0123]{1}[0-9]{1}[1234]{1}[0-9]{6}$/);
	if(!chkNo) return false;
	else chkNo = chkNo.toString();
	var birthYY = (parseInt(chkNo[6]) == (1||2))?'19':'20';
	birthYY += chkNo.substr(0, 2);
	var birthMM = chkNo.substr(2, 2) - 1;
	var birthDD = chkNo.substr(4, 2);
	var birthDay = new Date(birthYY, birthMM, birthDD);
	if(birthDay.getYear() % 100 != chkNo.substr(0,2) || birthDay.getMonth() != birthMM || birthDay.getDate() != birthDD) return false;
	if(WebcreaInfo.CheckIDNO == 1) return true;

	var sum = 0;
	var num = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5];
	var last = parseInt(chkNo[12]);

	for(var i=0; i<12; i++) sum += parseInt(chkNo[i]) * num[i];
	return ((11 - sum % 11) % 10 == last)?true:false;
}
function IsNumber(value)
{
	var bRet = 1;
	var reg = /^\d.+$/ig;
	if(value == undefined) return '';
	else value = value.toString();
	if(value.match(reg)==null) bRet = '';
	if(bRet) bRet = (value[0]=='0')?'':true;
	if(!bRet) bRet = IsDigit(value[value.length-1]);
	return bRet;
}
function IsValidIDNO(str, mode)
{
	var bRet = false;
	if(Webcrea.IsObject(str))
	{
		var paramObj = str;
		if(!Webcrea.IsForm(paramObj.obj) && !Webcrea.IsGrid(paramObj.obj)) return;
		if(!Webcrea.IsEmpty(paramObj.cellId)) str = paramObj.obj.GetValue(paramObj.cellId);
		else return bRet;
	}
	str = Extract(str, '[0-9]');
	if(Webcrea.IsEmpty(str)) return true;
	if(mode) bRet = IsBizNum(str);
	else if(str.length == 10) bRet = IsCorpNum(str);
	else if(str.length == 13) 
	{
		bRet = IsJuminNum(str, mode);
		if(!bRet) bRet = IsForginNum(str);
	}
	return (bRet)?1:0;
}
function IsValidDate()
{
	var ___date = arguments[0];
	var ___bCheckYear = arguments[1];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	if(!___date) return '';
	if(___date.length<4) return '';
	___date = Extract(___date, '[0-9]');

	var ___year  = floor(___date/10000, 0);
	var ___month = floor((___date % 10000)/100, 0);
	var ___day = ___date % 100;

	if (___bCheckYear && ___year < 1) return '';
	if (___month < 1 || ___month > 12) return '';

	Webcrea.SetDaysOfMonth(___year);
	if (___day < 1 || ___day > Webcrea.dom[___month]) return '';
	return 1;
}
function IsValidTime(time)
{
	if (!time) return '';
	var hh = floor(time/10000, 0);
	var mm = floor((time % 10000)/100, 0);
	var ss = time % 100;

	if (hh > 24 || mm > 59 || ss > 59) return '';
	return 1;
}
function IsYes(str)
{
	if(Webcrea.IsEmpty(str)) return '';
	if(Webcrea.IsNumber(str)) str = str.toString();
	var reg = ['y','t','1'];
	if (reg.search(str[0].toLowerCase())>=0) return 1;
	else return '';
}
function IsNo(str)
{
	return IsYes(str)?'':1;
}
function CurDate()
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	var date = new Date();
	return date.getFullYear() + addZero(date.getMonth()+1) + addZero(date.getDate());
}
function Today()
{
	return CurDate();
}
function CurYear()
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	var date = new Date();
	return date.getFullYear();
}
function CurYM()
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	var date = new Date();
	return date.getFullYear() + addZero(date.getMonth()+1);
}
function CurTime()
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	var date = new Date();
	return addZero(date.getHours()) + addZero(date.getMinutes()) + addZero(date.getSeconds());
}
function TickCount()
{
	return GetDate(CurDate(), 6);
}
function DayOfWeek()
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	if(___date.length<8) return;
	___date = GetDate(___date);
	return ___date.getDay();
}
function DaysOfMonth()
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	var ___sFirst = GetDate(___date, 4);
	var ___sLast = GetDate(___date, 5);
	return Number(___sLast)-Number(___sFirst)+1;
}
function GetDate(date, mode)
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	if(Webcrea.IsEmpty(date)) return;
	date = Extract(date, '[0-9]');
	if(Webcrea.IsNumberType(date)) date = date.toString();
	var sYear = date.substr(0, 4);
	var sMonth = date.substr(4, 2)-1;
	var sDay = date.substr(6, 2);
	var cDate;
	if(mode==4) cDate = new Date(sYear, sMonth, 1);
	else if(mode==5) cDate = new Date(sYear, sMonth+1, 0);
	else if(mode==6)
	{
		var sHour='', sMin='', sSec='';
		if(date.length>9) sHour = date.substr(8, 2);
		if(date.length>11) sMin = date.substr(10, 2);
		if(date.length>13) sSec = date.substr(12, 2);
		cDate = new Date(sYear, sMonth, sDay, sHour, sMin, sSec);
	}
	else cDate = new Date(sYear, sMonth, sDay);
	var sRet='';
	if(!mode) sRet = cDate;
	else if(mode==1) sRet = cDate.getFullYear();
	else if(mode==2) sRet = cDate.getMonth()+1;
	else if(mode==3) sRet = cDate.getDate();
	else if(mode==4 || mode==5) sRet = cDate.getFullYear() + addZero(cDate.getMonth()+1) + addZero(cDate.getDate());
	else if(mode==6)
	{
		var sec = cDate.getTime();
		sRet = sec/1000;
	}
	return sRet;
}
function Year(date)
{
	if(Webcrea.IsNumber(date)) date = date.toString();
	return GetDate(date, 1);
}
function Month(date)
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	if(___date.length<8)
	{
		var ___sCurDate = CurDate();
		if(___date.length == 3) ___date = ___sCurDate.substr(0, 4) + '0' + ___date;
		else if(___date.length == 4) ___date = ___sCurDate.substr(0, 4) + ___date;
		else if(___date.length == 6) ___date += ___sCurDate.substr(6, 2);
		else return;
	}
	return GetDate(___date, 2);
}
function Day()
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	if(___date.length<8)
	{
		var ___sCurDate = CurDate();
		if(___date.length == 3) ___date = ___sCurDate.substr(0, 4) + '0' + ___date;
		else if(___date.length == 4) ___date = ___sCurDate.substr(0, 4) + ___date;
		else return;
	}
	return GetDate(___date, 3);
}
function First()
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	return GetDate(___date, 4);
}
function Last()
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	return GetDate(___date, 5);
}
function Half(date)
{
	var mm = GetDate(date, 2);
	return mm>6?2:1;
}
function Quarter()
{
	var ___date = arguments[0];
	if(Webcrea.IsNumber(___date)) ___date = ___date.toString();
	if(___date.length<8)
	{
		var ___sCurDate = CurDate();
		if(___date.length == 6) ___date += ___sCurDate.substr(6, 2);
		else return;
	}
	var mm = GetDate(___date, 2);
	if (mm < 1 || mm > 12) mm = 1;
	return floor((mm-1)/3,0)+1;
}
function ToSec(date)
{
	if(Webcrea.IsNumber(date)) date = date.toString();
	return GetDate(date, 6);
}
function CharCount(value, reg)
{
	if(value == undefined || reg == undefined) return 0;
	if(Webcrea.IsNumber(value)) value = value.toString();
	var arr = value.split(reg);
	return arr.length-1;
}
function encode(type, value)
{
	var sRet='';
	if(Webcrea.IsNumber(value)) value = value.toString();
	if(type.toLowerCase()=='base64') sRet = Base64.encode(value);
	else if(type.toLowerCase()=='hex')
	{
		value = unescape(encodeURIComponent(value));
		var hex='';
		for(var i=0;i<value.length;i++) {
			hex += ''+value.charCodeAt(i).toString(16);
		}
		sRet = hex.toUpperCase();
	}
	else if(type.toLowerCase()=='url') sRet = encodeURI(value);
	return sRet;
}
function decode(type, value)
{
	var sRet='';
	if(Webcrea.IsNumber(value)) value = value.toString();
	if(type.toLowerCase()=='base64') sRet = Base64.decode(value);
	else if(type.toLowerCase()=='hex')
	{
		value = value.toString();
		for (var i = 0; i < value.length; i += 2) sRet += String.fromCharCode(parseInt(value.substr(i, 2), 16));
		sRet = decodeURIComponent(escape(sRet));
	}
	else if(type.toLowerCase()=='url') sRet = decodeURI(value);
	return sRet;
}
function Extract(value, sExt)
{
	if(Webcrea.IsEmpty(value)) return value;
	var bNumberType = false;
	if(Webcrea.IsNumberType(value))
	{
		bNumberType = true;
		value = value.toString();
	}
	var s = sExt;
	var bPack = false;
	if (Webcrea.IsEmpty(s))
	{
		s = '[0-9].+-*/\%() ';
		value = pack(value, 1);
	}
	var bAlpha = false;
	var bDBCS = false;
	var bDigit = false;
	var bNumber = false;

	sExt = s;
	var sExt1='';
	for (var i=0; i<s.length; i++)
	{
		sExt = sExt.substr(i);
		if(sExt.substr(0,7) == '[ALNUM]')
		{
			bAlpha = true;
			bDigit = true;
			i += 6;
			continue;
		}
		if(sExt.substr(0,7) == '[ALPHA]')
		{
			bAlpha = true;
			i += 6;
			continue;
		}
		if(sExt.substr(0,7) == '[DIGIT]')
		{
			bDigit = true;
			i += 6;
			continue;
		}
		if(sExt.substr(0,8) == '[NUMBER]')
		{
			bNumber = true;
			i += 7;
			continue;
		}
		if(sExt.substr(0,6) == '[DBCS]')
		{
			bDBCS = true;
			i += 5;
			continue;
		}
		if (s[i] == '[' && i+4 < s.length && s[i+4] == ']' && s[i+2] == '-')
		{
			var c1 = s[i+1];
			var c2 = s[i+3];
			if (asc(c1) > asc(c2)) { sExt1 += c1; sExt1 += c2; }
			else
			{
				for (var j=asc(c1); j<=asc(c2); j++)
				{
					var c = chr(j);
					sExt1 += c;
				}
			}
			i += 4;
			continue;
		}
		sExt1 += s[i];
	}
	var str='';
	var cb = value.length;
	for (var i=0; i<cb; i++)
	{
		if (bDBCS && IsHangul(value[i]))
		{
			str += value[i];
			continue;
		}
		if (bAlpha && IsAlpha(value[i]))
		{
			str += value[i];
			continue;
		}
		if (bDigit && IsDigit(value[i]))
		{
			str += value[i];
			continue;
		}
		if (bNumber)
		{
			if(i==0 && cb>1 && (value[i] == '+' || value[i] == '-'))
			{
				str += value[i];
				continue;
			}
			else if(i>0 && i<value.length && (value[i] == ',' || value[i] == '.'))
			{
				str += value[i];
				continue;
			}
			else if(IsNumber(value[i]))
			{
				str += value[i];
				continue;
			}
		}
		if (sExt1.indexOf(value[i]) >= 0) str += value[i];
	}
	if(bNumberType) str = Webcrea.NumberReDef(str);
	return str;
}
function GetExt(val)
{
	return val;
}
function Hangul(number, type)
{
	var sNum = ' 일이삼사오육칠팔구';
	var sUnt = ' 십백천만십백천억십백천조십백천경십백천해십백천';
	if(Webcrea.IsNumber(number)) number = number.toString();
	return Webcrea.ToHangul(sNum, sUnt, number, type);
}
function Hanja(number, type)
{
	var sNum = ' 壹貳參四五六七八九';
	var sUnt = ' 拾佰阡萬拾佰阡億拾佰阡兆拾佰阡京拾佰阡垓拾佰阡';
	if(Webcrea.IsNumber(number)) number = number.toString();
	return Webcrea.ToHangul(sNum, sUnt, number, type);
}
function English(number, upper, cents)
{
	if(Webcrea.IsNumber(number)) number = number.toString();
	var sNumber='', sDecimal='';
	sNumber = number;
	while(sNumber.length<18){ sNumber='0'+sNumber;}

	var n = sNumber.indexOf('.');
	if (n >= 0)
	{
		sDecimal = sNumber.substr(n+1);
		sNumber = sNumber.substr(0, n);
		if (n > 15)
		{
			return number;
		}
	}

	var str='';
	for (var i=0; i<5; i++)
	{
		var s = Webcrea.GetHundred(Webcrea.NumberReDef(sNumber.substr(0, 3)));
		if (i < 4 && !Webcrea.IsEmpty(s))
		{
			s += ' ';
			s += Webcrea.szDigit4[i];
		}
		if (!Webcrea.IsEmpty(str) && !Webcrea.IsEmpty(s)) str += ' ';
		str += s;
		if (i < 4) sNumber = sNumber.substr(3);
	}

	if (Webcrea.NumberReDef(sDecimal) > 0)
	{
		if (!Webcrea.IsEmpty(str)) str += ' ';
		str += 'And ';
		str += Webcrea.GetHundred(Webcrea.NumberReDef(sDecimal));
		if (!Webcrea.IsEmpty(cents))
		{
			str += ' ';
			str += cents;
		}
	}
	if (upper) str = ToUpper(str);
	return str;
}
function HasValue()
{
	var value = arguments[0];
	if(Webcrea.IsNumberType(value)) value = value.toString();
	value = value.replace(/[-/0]/g,'');
	return (value.length==0)?value:1;
}
function Hex2Int(str)
{
	if(str == undefined) str='';
	return parseInt(str, 16).toString(10);
}
function Int2Hex(str)
{
	if(str == undefined) str='';
	var sRet = parseInt(str, 10).toString(16);
	return sRet.toUpperCase();
}
function HM2Min()
{
	var ___hhmm = arguments[0];
	if(Webcrea.IsNumber(___hhmm)) ___hhmm = ___hhmm.toString();
	___hhmm = Extract(___hhmm, '[0-9]');
	return floor(___hhmm/100, 0) * 60 + (___hhmm % 100);
}
function Min2HM(min)
{
	return floor(min/60, 0) * 100 + (min % 60);
}
function HMS2Sec()
{
	var ___hhmmss = arguments[0];
	if(Webcrea.IsNumber(___hhmmss)) ___hhmmss = ___hhmmss.toString();
	___hhmmss = Extract(___hhmmss, '[0-9]');
	return floor(___hhmmss/10000, 0) * 3600 + (floor(___hhmmss/100, 0) % 100) * 60 + (___hhmmss % 100);
}
function Sec2HMS(sec)
{
	return floor(sec/3600, 0) * 10000 + (floor(sec/60, 0) % 60) * 100 + (sec % 60);
}
function instr(str1, str2, bReverse)
{
	if(Webcrea.IsEmpty(str1) || Webcrea.IsEmpty(str2)) return;
	if(Webcrea.IsNumber(str1)) str1 = str1.toString();
	var n;
	if(bReverse) n = str1.lastIndexOf(str2);
	else n = str1.indexOf(str2);
	if(n>=0) n++;
	else n=0;
	return n;
}
function instrb(str1, str2, bReverse)
{
	if(Webcrea.IsEmpty(str1) || Webcrea.IsEmpty(str2)) return;
	if(Webcrea.IsNumber(str1)) str1 = str1.toString();
	var n;
	if(bReverse) n = str1.lastIndexOf(str2);
	else n = str1.indexOf(str2);
	if(n>=0)
	{
		var str = str1.substr(0, n);
		n = lenb(str);
		n++;
	}
	else n=0;
	return n;
}
function int(str)
{
	return Webcrea.Number(str);
}
function Val(str)
{
	return Webcrea.Number(str);
}
function MsgBox(mode, msg)
{
	if(msg == undefined) msg = '';
	mode = mode.toLowerCase();
	var nFileVersion = Webcrea.GetCurrFileVersion();
	if(nFileVersion>=7020180824001 && !Webcrea.IsEmpty(WebcreaInfo.msgBox) && (mode != 'close' && mode.indexOf('stay')<0))
	{
		if(Win.IsRunDlg())
		{
			var pDiv = parent.Webcrea.FindNodePublic(parent.document.body,'id','_my_rundlg');
			var pIfrm=parent.Webcrea.FindNodePublic(pDiv,'id','_my_rundlgFrame');
			var height = pDiv.style.height;
			height = Number(Extract(height, '[0-9]'));
			var width = pDiv.style.width;
			width = Number(Extract(width, '[0-9]'));
			var mH = WebcreaInfo.msgBoxH;
			var mW = WebcreaInfo.msgBoxW;
			if(mH>height)
			{
				Webcrea.bRunDlgResize=true;
				parent.Webcrea.bRunDlgResize=true;
				var fH=mH+30;
				pDiv.style.height=fH+'px';
				pIfrm.style.height=fH+'px';
			}
			if(mW>width)
			{
				Webcrea.bRunDlgResize=true;
				parent.Webcrea.bRunDlgResize=true;
				var fW=mW+30;
				fW=fW+'px';
				pDiv.style.width=fW+'px';
				pIfrm.style.width=fW+'px';
			}
		}
		Webcrea.ShowLayer('msgbox', mode, msg);
		return;
	}
	if(mode == 'yesno' || mode == 'yesnocancel')
	{
		Webcrea.bAlertDisplay = true;
		var bRet = confirm(msg);
		if(bRet) _my_lastStatus = 'YES';
		else _my_lastStatus = '';
	}
	else if(mode == 'close')
	{
		Webcrea.StopProgress();
	}
	else if(mode.indexOf('stay')>=0)
	{
		var time=0;
		var n = mode.indexOf('=');
		if(n>0) time = mode.substr(n+1);
		var bImage=false;
		n = msg.indexOf('.');
		if(n>0) bImage = Webcrea.IsImage(msg.substr(n+1));
		var mode=0;
		if(time>0) mode=1;
		Webcrea.bThread = true;
		Webcrea.StartProgress(mode, time, msg);
	}
	else
	{
		Webcrea.bAlertDisplay = true;
		alert(msg);
	}
	if(mode != 'yesno' && mode != 'yesnocancel') _my_lastStatus = 'OK';
}
function length(value)
{
	if(value == undefined) return 0;
	if(Webcrea.IsNumber(value)) value = value.toString();
	var currNode = Webcrea.GetEventNode();
	if(currNode && currNode.nodeName && currNode.nodeName.toLowerCase() == 'textarea') value=value.replace(new RegExp('\r?\n','g'), '\r\n');
	return value.length;
}
function len(value)
{
	if(value == undefined) return 0;
	if(Webcrea.IsNumber(value)) value = value.toString();
	return value.length;
}
function bytes(value)
{
	return lenb(value);
}
function lenb(value)
{
	var len = 0;
	if(value == undefined) return len;
	if(Webcrea.IsNumber(value)) value = value.toString();
	for(var i=0; i<value.length; i++)
	{
		var ch = value.charCodeAt(i);
		if(ch>1000) len += 1;
		len += 1;
	}
	return len;
}
function left(str1, str2)
{
	if(Webcrea.IsNull(str1)) str1='';
	if(Webcrea.IsNull(str2)) str2='';
	if(Webcrea.IsNumber(str1)) str1 = str1.toString();
	if(Webcrea.IsNumber(str2)) str2 = str2.toString();
	var n=0;
	var n=0;
	if(IsDigit(str2)) n = str2;
	else n = str1.indexOf(str2);
	return str1.substr(0, n);
}
function leftb(str1, str2)
{
	if(Webcrea.IsNull(str1)) str1='';
	if(Webcrea.IsNull(str2)) str2='';
	if(Webcrea.IsNumber(str1)) str1 = str1.toString();
	if(Webcrea.IsNumber(str2)) str2 = str2.toString();
	var n=0;
	if(IsDigit(str2))
	{
		var i=0;
		var nLen=0;
		while(true)
		{
			var c = str1[i];
			nLen += lenb(c);
			if(nLen == str2) break;
			if(nLen > str2) { i--;break; }
			if(str1.length<=++i) break;
		}
		n = i+1;
	}
	else n = str1.indexOf(str2);
	return str1.substr(0, n);
}
function LevelCompare(str1, str2)
{
	var arr1 = Webcrea.GetLevel(str1);
	var arr2 = Webcrea.GetLevel(str2);
	var n1 = arr1.length;
	var n2 = arr2.length;
	for (var i=0; i<n1 && i<n2; i++)
	{
		if (Number(arr1[i]) < Number(arr2[i])) return -1;
		if (Number(arr1[i]) > Number(arr2[i])) return  1;
	}
	if (n2 > i) return -1;
	if (n1 > i) return  1;
	return 0;
}
function LevelDepth(str)
{
	var nRet=0;
	if(Webcrea.IsEmpty(str)) return nRet;
	var bOK = true;
	for(var i=0; i<str.length; i++)
	{
		var ch = str[i];
		var bDigit = IsDigit(ch);
		if(bOK && !bDigit)
		{
			nRet++;
			bOK = false;
		}
		else if(bDigit) bOK=true;
	}
	return nRet;
}
function log(value)
{
	if(!value) value=0;
	value = Math.log(value);
	value = round(value, 8);
	return value;
}
function log10(value)
{
	if(!value) value=0;
	value = Math.log10(value);
	value = round(value, 8);
	return value;
}
function CellIDs(obj, pad, start, bVisible)
{
	if(Webcrea.IsEmpty(pad)) pad=' ';
	var sCell='';
	if(!start) start=0;
	var nCnt=0;
	var sMultiId = '';
	if(Webcrea.IsCrossTab(obj))
	{
		for(var i=0; i<obj.arrCrossDisplayColCellId.length; i++)
		{
			var id = obj.arrCrossDisplayColCellId[i];
			id = obj.GetCellId(id);
			if(!obj.IsColumn(id)) continue;
			nCnt++;
			if(start && start >= nCnt) continue;
			if(!Webcrea.IsEmpty(sCell)) sCell += pad;
			sCell += id;
		}
	}
	else
	{
		for(var i=0; i<obj.arrCellId.length; i++)
		{
			var id = obj.arrCellId[i];
			if(!Webcrea.IsEmpty(id)) id = id.toLowerCase();
			var cell = obj.arrCellInfo[id];
			if(!cell) continue;
			if(!cell.orgId) continue;
			if(bVisible && !cell.bDisplay) continue;
			if(cell.orgId == '_SELECT_') sMultiId = cell.orgId;
			if(obj.IsGrid() && !cell.bDataRow) continue;
			nCnt++;
			if(start && start >= nCnt) continue;
			if(!Webcrea.IsEmpty(sCell)) sCell += pad;
			sCell += cell.orgId;
		}
	}
	if(!Webcrea.IsEmpty(sMultiId)) sMultiId += pad;
	sCell = sMultiId + sCell;
	return sCell;
}
function ColumnIDs(obj, pad, start)
{
	if(Webcrea.IsEmpty(pad)) pad=' ';
	var sColumn='';
	if(!start) start=0;
	for(var i=start; i<obj.arrField.length; i++)
	{
		var column = obj.arrField[i];
		if(!Webcrea.IsEmpty(sColumn)) sColumn += pad;
		sColumn += column;
	}
	return sColumn;
}
function ColumnKey()
{
	var sRet='';
	var param = arguments[0];
	var arr = param.split(',');
	if(arr.length<1) return sRet;
	var obj = arr[0];
	obj = obj.trim();
	var currObj;
	var currNode;
	if(obj == "&_ME_")
	{
		var currObj = Webcrea.GetEventObject();
		if(!currObj) return sRet;
		if(!currObj.IsCrossTab()) return sRet;
		currNode = Webcrea.GetEventNode();
		if(Webcrea.IsEditTdInputBox(currNode)) currNode = Webcrea.GetEditTd(currNode);
	}
	else if(obj[0] == "&")
	{
		obj = obj.substr(1);
		if(Webcrea.IsFuncInnerVal(obj)) obj = Webcrea.GetFuncInnerVal(obj);
		else try{var objT=window[obj];obj=objT;}catch(e){}
		var ampObj = Webcrea.GetAmpObject(obj);
		if(!ampObj) return sRet;
		currObj = ampObj.obj;
		if(!currObj) return sRet;
		if(!currObj.IsCrossTab()) return sRet;
		var nRowNo = currObj.GetRowDataNo(currObj.currRowIndex);
		var id = currObj.divPos + '.' + ampObj.cellId + nRowNo;
		currNode = Webcrea.FindNode(currObj.objTable, 'id', id);
	}
	else
	{
		var arrObj = obj.split('.');
		if(arrObj.length<2) return;
		currObj = Webcrea.GetObjectById(arrObj[0]);
		if(!currObj) return sRet;
		if(!currObj.IsCrossTab()) return sRet;
		var nRowNo = currObj.GetRowDataNo(currObj.currRowIndex);
		var id = currObj.divPos + '.' + arrObj[1] + nRowNo;
		currNode = Webcrea.FindNode(currObj.objTable, 'id', id);
	}
	if(!currNode) return sRet;
	var rowId = Number(currNode.getAttribute('rowno'));
	var colno = Number(currNode.getAttribute('colno'));
	var findField = arr[1];
	findField = findField.trim();
	if(currObj.arrCrossHeader)
	{
		if(currObj.bMulti) colno += 1;
		colno -= currObj.arrCrossRowField.length;
		if(currObj.arrCrossDisplayColInfo.length>0) colno = Math.floor(colno/currObj.arrCrossDisplayColInfo.length);
		var cellInfo = currObj.GetCellInfo(findField);
		var nAdjust = 0;
		if(cellInfo && cellInfo.colno)
		{
			nAdjust = cellInfo.colno;
			if(nAdjust>0) nAdjust -= currObj.arrCrossRowField.length;
			if(nAdjust<0) nAdjust = 0;
		}
		var findColNo = colno - nAdjust;
		sRet = currObj.arrCrossHeader[findField][findColNo];
	}
	return sRet;
}
function ColumnText()
{
	var sRet='';
	var param = arguments[0];
	var arr = param.split(',');
	if(arr.length<1) return sRet;
	var sItem = arr[0];
	sItem = sItem.trim();
	arr.splice(0,1);
	var arrObj = sItem.split('.');
	if(arrObj.length!=2) return sRet;
	var obj = Webcrea.GetObjectById(arrObj[0]);
	if(!obj) return sRet;
	var sField = arrObj[1].trim();
	if(obj.arrRows.length<1) return sRet;

	var bSelectOnly = false;
	var bDistinct = false;
	var bExcludeSum = false;
	var bNoQuote = false;
	var bNoEmpty = false;
	var bHidden = false;
	var bNumber = false;
	var bArray = false;
	for(var i=0; i<arr.length; i++)
	{
		var opt = arr[i];
		opt = opt.trim();
		if(opt.toLowerCase() == 'selectonly') bSelectOnly=true;
		else if(opt.toLowerCase() == 'distinct') bDistinct=true;
		else if(opt.toLowerCase() == 'excludesum') bExcludeSum=true;
		else if(opt.toLowerCase() == 'noquote') bNoQuote=true;
		else if(opt.toLowerCase() == 'noempty') bNoEmpty=true;
		else if(opt.toLowerCase() == 'hidden') bHidden=true;
		else if(opt.toLowerCase() == 'number') bNumber=true;
		else if(opt.toLowerCase() == 'array') bArray=true;
	}
	var arrData = [];
	var nRows = obj.arrRows.length;
	for(var i=0; i<nRows; i++)
	{
		if(bSelectOnly && (!obj.arrMulti || (obj.arrMulti && !obj.arrMulti[i]))) continue;
		if(bExcludeSum && typeof obj.IsSumRow != 'undefined' && obj.IsSumRow(i)) continue;
		var sData = obj.arrData[sField][i];
		if(bNumber) sData = Extract(sData, '[0-9]');
		if(bNoEmpty && sData.IsEmpty()) continue;
		if(bDistinct && arrData.isearch(sData)>=0) continue;
		arrData[arrData.length] = sData;
	}
	if(bNumber) arrData.sort(function(a, b){return a-b;});
	else arrData.sort();
	if(bArray) sRet = arrData;
	else
	{
		for(var i=0; i<arrData.length; i++)
		{
			var sData = arrData[i];
			if(!sRet.IsEmpty()) sRet += ', ';
			if(bNoQuote || bNumber) sRet += sData;
			else sRet = sRet + "'" + sData + "'";
		}
	}
	return sRet;
}
function CodeText(obj, cellId)
{
	if(Webcrea.IsEmpty(cellId)) return;
	return obj.CodeText(cellId);
}
function ObjectIDs(pad, bVisible, page)
{
	if(Webcrea.IsEmpty(pad)) pad=' ';
	var sObj='';
	for(var i=0; i<_my_File.arrMasterPage.length; i++)
	{
		var page = _my_File.arrMasterPage[i];
		for(var j=0; j<page.arrObject.length; j++)
		{
			var divObj = page.arrObject[j];
			if(bVisible && !divObj._Get_Visible()) continue;
			if(!Webcrea.IsEmpty(sObj)) sObj += pad;
			sObj += divObj.divPos;
		}
	}
	if(Webcrea.IsEmpty(page))
	{
		for(var i=0; i<_my_File.arrPage.length; i++)
		{
			var page = _my_File.arrPage[i];
			for(var j=0; j<page.arrObject.length; j++)
			{
				var divObj = page.arrObject[j];
				if(bVisible && !divObj._Get_Visible()) continue;
				if(!Webcrea.IsEmpty(sObj)) sObj += pad;
				sObj += divObj.divPos;
			}
		}
	}
	else
	{
		var page = _my_File.arrPage[page];
		for(var j=0; j<page.arrObject.length; j++)
		{
			var divObj = page.arrObject[j];
			if(bVisible && !divObj._Get_Visible()) continue;
			if(!Webcrea.IsEmpty(sObj)) sObj += pad;
			sObj += divObj.divPos;
		}
	}
	return sObj;
}
function OptMin(str1, str2, filler)
{
	var sRet='';
	if(Webcrea.IsEmpty(str1)) str1='';
	if(Webcrea.IsEmpty(str2)) str2='';
	if(Webcrea.IsEmpty(filler)) sRet = '';
	if(Webcrea.IsEmpty(str1)) sRet = '';
	else if(Webcrea.IsEmpty(str2)) sRet = str1;
	else sRet = str1 + filler + str2;
	return sRet;
}
function OptMax(str1, str2, filler)
{
	var sRet='';
	if(Webcrea.IsEmpty(str2)) str2='ZZZZZZZZZZ';
	if(Webcrea.IsEmpty(filler)) filler = '';
	if(Webcrea.IsEmpty(str1)) sRet='ZZZZZZZZZZ';
	else sRet = str1 + filler + str2;
	return sRet;
}
function pack(value, mode, bTitle)
{
	var str='';
	if(mode)
	{
		var src = trim(value);
		if (bTitle) Webcrea.ReplaceAll(src, '\n', ' ');
		var cb = src.length;
		var c = ' ';
		for (var i=0; i<cb; i++)
		{
			var d = src[i];
			if (c == ' ' && d == ' ') continue;
			c = d;
			str += c;
		}
	}
	else
	{
		var src = trim(value, 2);
		if (bTitle) Webcrea.ReplaceAll(src, '\n', ' ');
		var cb = src.length;
		var bPack = false;
		for (var i=0; i<cb; i++)
		{
			var c = src[i];
			if (c == ' ' && bPack)
			{
				for (var j=i+1; j<cb; j++)
				{
					if (src[j] == ' ') continue;

					var reg = [')',']','}','>'];
					if (reg.search(src[j])>=0) bPack = false;
					break;
				}
				if (bPack) continue;
			}
			str += c;
			if (c != ' ')
			{
				var reg = ['.','(',')','[',']','{','}','<','>'];
				bPack = (reg.search(c)>=0) ? false : true;
			}
		}
	}
	return str;
}
function pad(str, n, pad, bLeft)
{
	if(str == undefined || !len) return;
	if(Webcrea.IsEmpty(pad)) pad=' ';
	else pad = pad[0];
	if(Webcrea.IsNumber(str)) str = str.toString();
	if(Webcrea.IsNumber(pad)) pad = pad.toString();
	var sRet = str;
	n -= len(str);
	if(n<0) n=0;
	while(n)
	{
		if(bLeft) sRet = pad + sRet;
		else sRet += pad;
		n--;
	}
	return sRet;
}
function padb(str, n, pad, bLeft)
{
	if(str == undefined || !len) return;
	if(Webcrea.IsEmpty(pad)) pad=' ';
	else pad = pad[0];
	if(Webcrea.IsNumber(str)) str = str.toString();
	if(Webcrea.IsNumber(pad)) pad = pad.toString();
	var sRet = str;
	n -= lenb(str);
	var nInsert = lenb(pad);
	n = Math.floor(n/nInsert);
	if(n<0) n=0;
	while(n)
	{
		if(bLeft) sRet = pad + sRet;
		else sRet += pad;
		n--;
	}
	return sRet;
}
function power(value, exp)
{
	if(!value) value=0;
	return Math.pow(value, exp);
}
function Replace(str, str1, str2, bNotCase)
{
	if(str == undefined) return;
	if(str1 == undefined) return str;
	if(str2 == undefined) str2='';
	var reg = str1;
	if(!bNotCase)
	{
		try{
			str1=str1.replace(/([\\\.\+\*\?\[\^\]\$\(\)\{\}\=\!\<\>\|\:])/g, '\\$1');
			reg = new RegExp(str1, 'i');
		}catch(e){reg=str1;}
	}
	str = str.replaceAll(reg, str2);
	return str;
}
function RecordCount(obj)
{
	if(!obj) return;
	return obj.RecordCount();
}
function ColorName2Hex()
{
	var colorName = arguments[0];
    var colours = {'aliceblue':'#f0f8ff','antiquewhite':'#faebd7','aqua':'#00ffff','aquamarine':'#7fffd4','azure':'#f0ffff',
	'beige':'#f5f5dc','bisque':'#ffe4c4','black':'#000000','blanchedalmond':'#ffebcd','blue':'#0000ff','blueviolet':'#8a2be2','brown':'#a52a2a','burlywood':'#deb887',
	'cadetblue':'#5f9ea0','chartreuse':'#7fff00','chocolate':'#d2691e','coral':'#ff7f50','cornflowerblue':'#6495ed','cornsilk':'#fff8dc','crimson':'#dc143c','cyan':'#00ffff',
	'darkblue':'#00008b','darkcyan':'#008b8b','darkgoldenrod':'#b8860b','darkgray':'#a9a9a9','darkgreen':'#006400','darkkhaki':'#bdb76b','darkmagenta':'#8b008b','darkolivegreen':'#556b2f',
	'darkorange':'#ff8c00','darkorchid':'#9932cc','darkred':'#8b0000','darksalmon':'#e9967a','darkseagreen':'#8fbc8f','darkslateblue':'#483d8b','darkslategray':'#2f4f4f','darkturquoise':'#00ced1',
	'darkviolet':'#9400d3','deeppink':'#ff1493','deepskyblue':'#00bfff','dimgray':'#696969','dodgerblue':'#1e90ff',
	'firebrick':'#b22222','floralwhite':'#fffaf0','forestgreen':'#228b22','fuchsia':'#ff00ff',
	'gainsboro':'#dcdcdc','ghostwhite':'#f8f8ff','gold':'#ffd700','goldenrod':'#daa520','gray':'#808080','green':'#008000','greenyellow':'#adff2f',
	'honeydew':'#f0fff0','hotpink':'#ff69b4',
	'indianred ':'#cd5c5c','indigo':'#4b0082','ivory':'#fffff0','khaki':'#f0e68c',
	'lavender':'#e6e6fa','lavenderblush':'#fff0f5','lawngreen':'#7cfc00','lemonchiffon':'#fffacd','lightblue':'#add8e6','lightcoral':'#f08080','lightcyan':'#e0ffff','lightgoldenrodyellow':'#fafad2',
	'lightgrey':'#d3d3d3','lightgreen':'#90ee90','lightpink':'#ffb6c1','lightsalmon':'#ffa07a','lightseagreen':'#20b2aa','lightskyblue':'#87cefa','lightslategray':'#778899','lightsteelblue':'#b0c4de',
	'lightyellow':'#ffffe0','lime':'#00ff00','limegreen':'#32cd32','linen':'#faf0e6',
	'magenta':'#ff00ff','maroon':'#800000','mediumaquamarine':'#66cdaa','mediumblue':'#0000cd','mediumorchid':'#ba55d3','mediumpurple':'#9370d8','mediumseagreen':'#3cb371','mediumslateblue':'#7b68ee',
	'mediumspringgreen':'#00fa9a','mediumturquoise':'#48d1cc','mediumvioletred':'#c71585','midnightblue':'#191970','mintcream':'#f5fffa','mistyrose':'#ffe4e1','moccasin':'#ffe4b5',
	'navajowhite':'#ffdead','navy':'#000080',
	'oldlace':'#fdf5e6','olive':'#808000','olivedrab':'#6b8e23','orange':'#ffa500','orangered':'#ff4500','orchid':'#da70d6',
	'palegoldenrod':'#eee8aa','palegreen':'#98fb98','paleturquoise':'#afeeee','palevioletred':'#d87093','papayawhip':'#ffefd5','peachpuff':'#ffdab9','peru':'#cd853f','pink':'#ffc0cb','plum':'#dda0dd','powderblue':'#b0e0e6','purple':'#800080',
	'rebeccapurple':'#663399','red':'#ff0000','rosybrown':'#bc8f8f','royalblue':'#4169e1',
	'saddlebrown':'#8b4513','salmon':'#fa8072','sandybrown':'#f4a460','seagreen':'#2e8b57','seashell':'#fff5ee','sienna':'#a0522d','silver':'#c0c0c0','skyblue':'#87ceeb','slateblue':'#6a5acd','slategray':'#708090','snow':'#fffafa','springgreen':'#00ff7f','steelblue':'#4682b4',
	'tan':'#d2b48c','teal':'#008080','thistle':'#d8bfd8','tomato':'#ff6347','turquoise':'#40e0d0',
	'violet':'#ee82ee',
	'wheat':'#f5deb3','white':'#ffffff','whitesmoke':'#f5f5f5',
	'yellow':'#ffff00','yellowgreen':'#9acd32'};
	if (typeof colours[colorName.toLowerCase()] != 'undefined') return colours[colorName.toLowerCase()];
	return false;
}
function RGB(r, g, b)
{
	var sR = Int2Hex(r);
	var sG = Int2Hex(g);
	var sB = Int2Hex(b);
	return Hex2Int(sB+sG+sR);
}
function Hex2RGB()
{
	var hex = arguments[0];
	var rgba = arguments[1];
	if(hex[0] == '#') hex = hex.substr(1);
	else
	{
		if(!hex) return;
		if(hex.indexOf('rgb')>=0 && rgba != 'undefined')
		{
			var n1 = hex.indexOf('(');
			var n2 = hex.indexOf(')');
			hex = 'rgba(' + hex.substr(n1+1, n2-n1-1) + ',' + rgba + ')';
		}
		else if(hex.indexOf('rgb')<0 && hex.indexOf(',')>=0)
		{
			var n1 = hex.indexOf('(');
			var n2 = hex.indexOf(')');
			if(n1>=0) hex = hex.substr(n1+1, n2-n1-1);
			if(Webcrea.IsNull(rgba)) hex = 'rgb(' + hex + ')';
			else hex = 'rgba(' + hex + ',' + rgba + ')';
		}
		return hex;
	}
	var rgb = '', hexR = '', hexG = '', hexB = '';
	if(hex.length == 3)
	{
		hexR = hex[0] + hex[0];
		hexG = hex[1] + hex[1];
		hexB = hex[2] + hex[2];
	}
	else if(hex.length == 6)
	{
		hexR = hex[0] + hex[1];
		hexG = hex[2] + hex[3];
		hexB = hex[4] + hex[5];
	}
	else return rgb;
	var sR = Hex2Int(hexR);
	var sG = Hex2Int(hexG);
	var sB = Hex2Int(hexB);
	if(rgba != 'undefined') rgb = 'rgba(' + sR + ',' + sG + ',' + sB + ',' + rgba + ')';
	else rgb = 'rgb(' + sR + ',' + sG + ',' + sB + ')';
	return rgb;
}
function RowStatus(obj, nRow)
{
	if(!obj) return;
	return obj.RowStatus(nRow);
}
function RowText(param)
{
	if(!param) return;
	var bRet=false;
	var arr = param.split(',');
	if(arr.length<2) return;
	var sObj = arr[0].trim();
	var arrObj = sObj.split('.');
	if(arrObj.length!=2) return '';
	var obj = Webcrea.GetObjectById(arrObj[0]);
	if(!obj) return '';
	var row = arr[1].trim();
	var arrRow = row.split('.');
	if(arrRow.length>1)
	{
		var objRow = Webcrea.GetObjectById(arrRow[0]);
		if(arrRow[1][0] == '@')
		{
			var s = objRow.objName + '.' + '_Get_' + arrRow[1].substr(1) + '()';
			try { row = eval(s); } catch(e) { return; }
		}
		else row = objRow.GetValue(arrRow[1]);
	}
	else
	{
		if(Webcrea.IsNumber(row)) row = Webcrea.NumberReDef(row);
		else
		{
			try {
				if(Webcrea.IsFuncInnerVal(row)) row = Webcrea.GetFuncInnerVal(row);
				else row = eval(row);
			} catch(e) { return; }
		}
	}
	return obj.RowText(arrObj[1], row);
}
function RowValue(param)
{
	return RowText(param);
}
function right(str1, str2)
{
	var n = 0;
	if(IsDigit(str2))
	{
		n = str1.length-str2;
		if(n<0) n = 0;
		return str1.substr(n);
	}
	else
	{
		n = str1.indexOf(str2);
		if(n>=0) n = n+str2.length+1;
		return substr(str1, n, str1.length);
	}
}
function rightb(str1, str2)
{
	var n=0;
	if(IsDigit(str2))
	{
		var i=str1.length-1;
		var nLen=0;
		while(true)
		{
			var c = str1[i];
			nLen += lenb(c);
			if(nLen == str2) break;
			if(nLen > str2) { i++;break; }
			if(0>--i) break;
		}
		n = i+1;
	}
	else
	{
		n = str1.indexOf(str2);
		if(n>=0) n = n+str2.length+1;
	}
	return substr(str1, n, str1.length);
}
function random(max)
{
	var random;
	if(max == undefined) random = Math.random();
	else random = (Math.random() * (max - 1) + 1);
	return Math.round(random);
}
function round(val, dec, div)
{
	if(Webcrea.IsNull(val)) return;
	var val = val.toString();
	if(val.indexOf(',')>0) val = Webcrea.ReplaceAll(val, ',', '');
	var bMinus = false;
	if(!dec) dec=0;
	if(!div) div=0;
	if (val < 0.0)
	{
		val = val * (-1.0);
		bMinus = true;
	}
	if(div>1)
	{
		var v = floor(val/div, 0) * div;
		var r = (val-v)/div;
		if (r >=  0.5) v += div;
		if (bMinus) v *= -1;
		return v;
	}
	var str = val.toString();
	var ret;
	if(WebcreaInfo.bBigNumber && str.length>15)
	{
		ret = Webcrea.BigNumberRound(str, dec, div);
		if(bMinus) ret = '-' + ret;
	}
	else
	{
		var arr = str.split('.');
		if(arr.length != 2)
		{
			if (bMinus) val *= -1;
			return Webcrea.NumberReDef(val);
		}
		ret = val;
		ret = Webcrea.NumberReDef(arr[0] + '.' + arr[1].substr(0, dec+1)) * Math.pow(10, dec);
		ret = Math.round(ret);
		ret = ret/Math.pow(10, dec);
		if (bMinus) ret *= -1;
		ret = Webcrea.NumberReDef(ret);
	}
	return ret;
}
function ceil(val, dec, div)
{
	var bMinus = false;
	if (val < 0.0)
	{
		val = val * (-1.0);
		bMinus = true;
	}
	if(div>1)
	{
		var v = floor(val/div, 0) * div;
		var r = (val-v)/div;
		if (r >  0.0) v += div;
		if (bMinus) v *= -1;
		return v;
	}
	var str = val.toString();
	var arr = str.split('.');
	if(arr.length != 2) return Webcrea.NumberReDef(val);
	var ret = val;
	ret = Webcrea.NumberReDef(arr[0] + '.' + arr[1].substr(0, dec+1)) * Math.pow(10, dec);
	ret = Math.ceil(ret);
	ret = ret/Math.pow(10, dec);
	if (bMinus) ret *= -1;
	return Webcrea.NumberReDef(ret);
}
function floor()
{
	var val = arguments[0];
	var dec = arguments[1];
	var div = arguments[2];
	if(Webcrea.IsNull(val)) return;
	if(!dec) dec=0;
	var bMinus = false;
	if (val < 0.0)
	{
		val = val * (-1.0);
		bMinus = true;
	}
	if(div>1)
	{
		var v = floor(val/div, 0) * div;
		var r = (val-v)/div;
		if (bMinus) v *= -1;
		return v;
	}
	var str = val.toString();
	var arr = str.split('.');
	if(arr.length != 2) return Webcrea.NumberReDef(val);
	var ret = val;
	ret = Webcrea.NumberReDef(arr[0] + '.' + arr[1].substr(0, dec+1)) * Math.pow(10, dec);
	ret = Math.floor(ret);
	ret = ret/Math.pow(10, dec);
	if (bMinus) ret *= -1;
	return Webcrea.NumberReDef(ret);
}
function Fix(number, type)
{
	if(!type) return round(number, 8);
}
function float(str)
{
	if(!str) return 0;
	return parseFloat(str);
}
function mid(str, n1, n2)
{
	if(Webcrea.IsNull(str)) str='';
	if(Webcrea.IsNumber(str)) str = str.toString();
	return substr(str, n1, n2);
}
function midb(str, n1, n2)
{
	if(Webcrea.IsNull(str)) str='';
	if(Webcrea.IsNumber(str)) str = str.toString();
	return substrb(str, n1, n2);
}
function SetLength(str, n)
{
	var sRet;
	if(str == undefined) str = '';
	if(!n) n=0;
	if(n<=len(str)) sRet = substr(str, 1, n);
	else
	{
		sRet = str;
		var nAdd = n-len(str);
		while(nAdd)
		{
			sRet += ' ';
			nAdd--;
		}
	}
	return sRet;
}
function SetLengthB(str, n)
{
	var sRet;
	if(str == undefined) str = '';
	if(!n) n=0;
	if(n<=lenb(str)) sRet = substrb(str, 1, n);
	else
	{
		sRet = str;
		var nAdd = n-lenb(str);
		while(nAdd)
		{
			sRet += ' ';
			nAdd--;
		}
	}
	return sRet;
}
function SetQuote()
{
	var ___sText = arguments[0];
	var ___sDiv = arguments[1];
	var ___sQuote = arguments[2];
	if(!___sQuote) ___sQuote = "'";
	if(Webcrea.IsEmpty(___sDiv)) return ___sText;
	if(Webcrea.IsEmpty(___sText)) return "''";
	var ___sRet = '';
	var ___arr = ___sText.split(___sDiv);
	for(var ___i=0; ___i<___arr.length-1; ___i++)
	{
		if(!Webcrea.IsEmpty(___sRet)) ___sRet += ___sQuote;
		___sRet = ___sRet + ___arr[___i] + ___sQuote + ___sDiv;
	}
	if(Webcrea.IsEmpty(___sRet)) ___sRet = ___sQuote + ___sText + ___sQuote;
	else ___sRet = ___sQuote + ___sRet + ___sQuote + ___arr[___arr.length-1] + ___sQuote;
	return ___sRet;
}
function sin(value)
{
	if(!value) value=0;
	value = Math.sin(value);
	value = round(value, 8);
	return value;
}
function sinh(value)
{
	if(!value) value=0;
	value = Math.sinh(value);
	value = round(value, 8);
	return value;
}
function asin(value)
{
	if(!value) value=0;
	value = Math.asin(value);
	value = round(value, 8);
	return value;
}
function cos(value)
{
	if(!value) value=0;
	value = Math.cos(value);
	value = round(value, 8);
	return value;
}
function cosh(value)
{
	if(!value) value=0;
	value = Math.cosh(value);
	value = round(value, 8);
	return value;
}
function acos(value)
{
	if(!value) value=0;
	value = Math.acos(value);
	value = round(value, 8);
	return value;
}
function tan(value)
{
	if(!value) value=0;
	value = Math.tan(value);
	value = round(value, 8);
	return value;
}
function tanh(value)
{
	if(!value) value=0;
	value = Math.tanh(value);
	value = round(value, 8);
	return value;
}
function atan(value)
{
	if(!value) value=0;
	value = Math.atan(value);
	value = round(value, 8);
	return value;
}
function atan2(value1, value2)
{
	if(!value1) value1=0;
	if(!value2) value2=0;
	var value = Math.atan2(value1, value2);
	value = round(value, 8);
	return value;
}
function split(val, div)
{
	return val.split(div);
}
function sqrt(value)
{
	if(!value) value=0;
	return Math.sqrt(value);
}
function strcmp(str1, str2, n)
{
	if(!str1) str1 = '';
	if(!str2) str2 = '';
	if(n)
	{
		if(n<str1.length) str1 = str1.substr(0, n);
		if(n<str2.length) str2 = str2.substr(0, n);
	}
	str1 = str1.toLowerCase();
	str2 = str2.toLowerCase();
	var nRet=-1;
	if(str1==str2) nRet=0;
	else if(str1>str2) nRet=1;
	return nRet;
}
function strcmpcase(str1, str2, n)
{
	if(str1 == undefined) str1 = '';
	if(str2 == undefined) str2 = '';
	if(n)
	{
		if(n<str1.length) str1 = str1.substr(0, n);
		if(n<str2.length) str2 = str2.substr(0, n);
	}
	var nRet=-1;
	if(str1==str2) nRet=0;
	else if(str1>str2) nRet=1;
	return nRet;
}
function substr(str, n1, n2)
{
	var sRet;
	if(!str) return '';
	if(Webcrea.IsNumberType(str)) str = str.toString();
	if(IsDigit(n1))
	{
		if(n2 == undefined || n2>len(str)) n2=len(str);
		sRet = str.substr(n1-1, n2);
	}
	else
	{
		var arr = str.split(n1);
		if(n2 == undefined) n2=1;
		if(n2<=arr.length) sRet = arr[n2-1];
		else sRet = '';
	}
	return sRet;
}
function substrb(str, n1, n2)
{
	var sRet;
	if(!str) return '';
	if(n1>0 && lenb(str)<n1) return '';
	if(Webcrea.IsNumberType(str)) str = str.toString();
	if(IsDigit(n1))
	{
		var nLenb = lenb(str);
		if(n2 == undefined || n2>nLenb) n2=nLenb;
		var len=0;
		for(var i=0; i<n1; i++)
		{
			len += lenb(str[i]);
			if(len>=n1) break;
		}
		len=0;
		for(var j=i; j<str.length; j++)
		{
			len += lenb(str[j]);
			if(len>=n2)
			{
				if(len>n2) j--;
				break;
			}
		}
		sRet = str.substr(i, j-i+1);
	}
	else
	{
		var arr = str.split(n1);
		if(!n2) n2=1;
		if(n2<=arr.length) sRet = arr[n2-1];
		else sRet = '';
	}
	return sRet;
}
function trim(value, mode)
{
	var sRet = value;
	if(Webcrea.IsNull(value)) return sRet;
	if(Webcrea.IsNumberType(value)) return sRet;
	if(!mode) sRet = value.trim();
	else if(mode==1) sRet = value.ltrim();
	else if(mode==2) sRet = value.rtrim();
	return sRet;
}
function ToEmpty(value)
{
	return value.replace(/[-/0]/g,'');
}
function ToLower(value)
{
	return value.toLowerCase();
}
function ToUpper(value)
{
	return value.toUpperCase();
}
function tail(str1, str2)
{
	var n = str1.lastIndexOf(str2);
	return (n>=0)?str1.substr(n+str2.length):'';
}
function body(str1, str2)
{
	var n = str1.lastIndexOf(str2);
	return (n>=0)?str1.substr(0, n):'';
}
function SpanTime(hm1, hm2)
{
	if(!hm1) hm1=0;
	if(!hm2) hm2=0;
	if(Webcrea.IsNumber(hm1)) hm1 = hm1.toString();
	if(Webcrea.IsNumber(hm2)) hm2 = hm2.toString();
	hm1 = Extract(hm1, '[0-9]');
	hm2 = Extract(hm2, '[0-9]');
	var t1 = 0, t2 = 0;
	if (hm1 > 9999 && hm2 > 9999)
	{
		t1 = floor(hm1/10000, 0) * 3600 + (floor(hm1/100, 0) % 100) * 60 + (hm1 % 100);
		t2 = floor(hm2/10000, 0) * 3600 + (floor(hm2/100, 0) % 100) * 60 + (hm2 % 100);
	}
	else
	{
		t1 = floor(hm1/100, 0) * 60 + (hm1 % 100);
		t2 = floor(hm2/100, 0) * 60 + (hm2 % 100);
	}
	return t2-t1;
}
function SpanTime2(s1, s2)
{
	var sRet='';
	if(!s1) s1=0;
	if(!s2) s2=0;
	if(Webcrea.IsNumber(s1)) s1 = s1.toString();
	if(Webcrea.IsNumber(s2)) s2 = s2.toString();
	s1 = Extract(s1, '[0-9]');
	s2 = Extract(s2, '[0-9]');
	var cb1 = s1.length;
	var cb2 = s2.length;
	if (cb1 > 12 && cb2 > 12)
	{
		var ymd1 = s1.substr(0, 8);
		var ymd2 = s2.substr(0, 8);
		var date1 = GetDate(ymd1);
		var date2 = GetDate(ymd2);
		var day = abs(date2-date1)/(24*3600*1000);

		var hm1 = Webcrea.NumberReDef(s1.substr(8));
		var hm2 = Webcrea.NumberReDef(s2.substr(8));
		var t1 = floor(hm1/10000, 0) * 3600 + (floor(hm1/100, 0) % 100) * 60 + (hm1 % 100);
		var t2 = floor(hm2/10000, 0) * 3600 + (floor(hm2/100, 0) % 100) * 60 + (hm2 % 100);
		if (t1 > t2) { day--; t2 += 86400; }
		sRet = round(day*86400.0, 8) + round(t2, 8) - round(t1, 8);
	}
	else
	{
		var ymd1 = (cb1 > 4) ? s1.substr(0, cb1-4) : 0;
		var ymd2 = (cb2 > 4) ? s2.substr(0, cb2-4) : 0;
		var date1 = GetDate(ymd1);
		var date2 = GetDate(ymd2);
		var day = abs(date2-date1)/(24*3600*1000);

		var hm1 = (cb1 > 4) ? Webcrea.NumberReDef(s1.substr(s1.length-4, 4)) : Webcrea.NumberReDef(s1);
		var hm2 = (cb2 > 4) ? Webcrea.NumberReDef(s2.substr(s2.length-4, 4)) : Webcrea.NumberReDef(s2);
		var t1 = floor(hm1/100, 0) * 60 + (hm1 % 100);
		var t2 = floor(hm2/100, 0) * 60 + (hm2 % 100);
		if (t1 > t2) { day--; t2 += 1440; }
		sRet = round(day*1440, 8) + round(t2, 8) - round(t1, 8);
	}
	return sRet;
}
function SpanDay(s1, s2, mode)
{
	var sRet='';
	if(!s1 || !s2) return;
	if(Webcrea.IsNumber(s1)) s1 = s1.toString();
	if(Webcrea.IsNumber(s2)) s2 = s2.toString();
	var n1 = Webcrea.NumberReDef(s1);
	var n2 = Webcrea.NumberReDef(s2);
	var minus = 1;
	if(n1>n2)
	{
		minus = -1;
		var st = s1;
		s1 = s2;
		s2 = st;
	}
	var date1 = GetDate(s1);
	var date2 = GetDate(s2);
	sRet = abs(date2-date1)/(24*3600*1000);
	if(mode>0 && sRet>0)
	{
		sRet++;
		var nHolidayMode = 0;
		if(mode == 2) nHolidayMode = mode;
		var nHoliday = 0;
		for(var i=0; i<sRet; i++)
		{
			var b = Webcrea.IsHoliday(s1, nHolidayMode);
			if(b) nHoliday += 1;
			s1 = AddDate(s1, 1);
		}
		sRet -= nHoliday;
	}
	return sRet*minus;
}
function SpanMonth(s1, s2, bCheckDay)
{
	var sRet='';
	if(!s1 || !s2) return;
	if(Webcrea.IsNumber(s1)) s1 = s1.toString();
	if(Webcrea.IsNumber(s2)) s2 = s2.toString();
	var sDate1 = GetDate(s1, 4);
	var sDay1 = GetDate(s1, 3);
	var date1 = GetDate(sDate1);

	var sDate2 = GetDate(s2, 4);
	var sDay2 = GetDate(s2, 3);
	var date2 = GetDate(sDate2);

	var mon=0;
	if(date2>date1)
	{
		mon = floor((date2-date1)/(30*24*3600*1000), 0);
		if (bCheckDay && Webcrea.NumberReDef(sDay2)>=Webcrea.NumberReDef(sDay1)) mon++;
	}
	else
	{
		mon = floor((date1-date2)/(30*24*3600*1000), 0);
		if (bCheckDay && Webcrea.NumberReDef(sDay1)>=Webcrea.NumberReDef(sDay2)) mon++;
	}
	return mon;
}
function SpanMonthDay(date1, date2, add)
{
	if(!date1 || !date2) return 0;
	if (add) date2 = AddDay(date2, add);

	if (date1 > date2)
	{
		var date = date1;
		date1 = date2;
		date2 = date;
	}

	var yy1	= floor(date1/10000, 0);
	var mm1 = floor((date1 % 10000)/100, 0);
	var mo1 = yy1 * 12 + mm1;

	var yy2 = floor(date2/10000, 0);
	var mm2 = floor((date2 % 10000)/100, 0);
	var mo2 = yy2 * 12 + mm2;

	var mon = mo2 - mo1;
	var date = AddMonth(date1, mon);
	if (date > date2) date = AddMonth(date1, --mon);

	var day = SpanDay(date, date2);
	return mon * 100 + day;
}
function SysDate(time)
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	var cDate = new Date(time*1000);
	return cDate.getFullYear() + addZero(cDate.getMonth()+1) + addZero(cDate.getDate());
}
function SysTime(time)
{
	var addZero = function(str)
	{
		return "00".concat(str).match(/\d{2}$/);
	};

	var cDate = new Date(time*1000);
	return addZero(cDate.getHours()) + addZero(cDate.getMinutes()) + addZero(cDate.getSeconds());
}
function Vdate(date)
{
	if(Webcrea.IsEmpty(date)) return;
	if(Webcrea.IsNumber(date)) date = date.toString();
	ymd = Extract(date, '[0-9]');
	var str='';
	var yy = floor(ymd/10000, 0);
	var mm =floor(ymd/100, 0) % 100;
	var dd = ymd % 100;
	if (yy > 0)
	{
		str = "0000".concat(yy).match(/\d{4}$/);
		if (mm > 0)
		{
			var s = "00".concat(mm).match(/\d{2}$/);
			str += s;
			if (dd > 0)
			{
				s = "00".concat(dd).match(/\d{2}$/);
				str += s;
			}
		}
	}
	return str;
}
var ExportExcel = (function () {
	var bExcel = true;
	var bCSV = false;
	var bTSV = false;
	var bXML = false;
	var nMaxCount = 30000;
	var arrExclude=null;
	var bMulti = false;
	var bDataOnly = false;
	var bSelectOnly = false;
	var bUTF8 = true;
	var bStatusSkip = true;
	var uri = '';
	var GetTableInfo = function(obj)
	{
		var sHeader='';
		var sTable='';
		var arrCells= [];
		var arrExcludeColNo=[];
		if(arrExclude)
		{
			for(var i=0; i<arrExclude.length; i++)
			{
				var sExclude = arrExclude[i];
				if(obj.IsMultiSelectCell(sExclude) || (!bStatusSkip && sExclude.iEquals('_STATUS_'))) continue;
				var nExcludeColNo = '';
				var cellInfo = obj.GetCellInfo(sExclude);
				if(cellInfo) nExcludeColNo = cellInfo.colno;
				arrExcludeColNo[arrExcludeColNo.length] = nExcludeColNo;
			}
		}
		var bCrossTab = obj.IsCrossTab();
		if(obj.IsGrid() && !bDataOnly && !bXML)
		{
			var arrTableHeader = [];
			if(bCrossTab) Webcrea.FindNodeAll(obj.objHTable, 'id', obj.divPos + '.Header', arrTableHeader);
			else arrTableHeader = obj.arrTableHeader.slice();
			var bMultiSelectCell = false;
			var bStatus=false;
			var arrBlankColNo = [];
			for(var i=0; i<arrTableHeader.length; i++)
			{
				var objHeader = arrTableHeader[i];
				if(objHeader && objHeader.getAttribute('role') == 'blank') continue;
				if(bExcel) sHeader+='<Row ss:AutoFitHeight="0">';
				var sData='';
				var colNo_B=-1;
				var cell_B=null;
				var nContinue=0;
				var nEtcCount=0;
				let nStatusSkip = 0;
				if(bStatusSkip && bStatus && i>0) nStatusSkip++;
				var nMultiSelect = 0;
				if(i>0 && bMultiSelectCell) nMultiSelect = 1;
				for(var j=0; j<objHeader.cells.length; j++)
				{
					var cell = objHeader.cells[j];
					var bEditTd = Webcrea.IsEditTd(cell);
					var sRelID = cell.getAttribute('relId');
					var colNo = cell.getAttribute('colno');
					var cellChild = null;
					if(!sRelID)
					{
						if(bEditTd) cellChild = cell;
						else cellChild = Webcrea.FindNode(cell, 'name', 'INPUT');
						if(obj.IsMultiSelectCell(cellChild))
						{
							bMultiSelectCell = true;
							colNo_B = colNo;
							continue;
						}
						if(bCrossTab && cellChild && !Webcrea.IsEmpty(cellChild.id))
						{
							sRelID = obj.GetCellId(cellChild.id);
							if(cellChild.tagName == 'INPUT')
							{
								colNo = cell.getAttribute('colno');
								if(Webcrea.IsNull(colNo)) colNo = cellChild.getAttribute('colno');
							}
							else colNo = cellChild.getAttribute('colno');
						}
						else if(cellChild && cellChild.getAttribute('relId'))
						{
							sRelID = cellChild.getAttribute('relId');
							colNo = cellChild.getAttribute('colno');
						}
						else
						{
							nContinue++;
							continue;
						}
					}
					else if(!Webcrea.IsEmpty(sRelID) && sRelID.toUpperCase() == '_STATUS_')
					{
						bStatus = true;
						if(bStatusSkip)
						{
							if(arrExclude)
							{
								var nArrFind = arrExclude.isearch(sRelID);
								if(nArrFind>=0) arrExclude.splice(nArrFind, 1);
							}
							colNo_B = colNo;
							continue;
						}
					}
					if(obj.IsHideColumn(sRelID))
					{
						if(colNo_B>0) colNo_B = colNo;
						if(i==1 && arrBlankColNo.search(colNo)<0) arrBlankColNo[arrBlankColNo.length] = colNo;
						continue;
					}
					if(arrExclude && arrExclude.isearch(sRelID)>=0)
					{
						if(bExcel)
						{
							for(var k=0; k<colNo-colNo_B-nContinue-nMultiSelect-1; k++) sData+='<Cell><Data ss:Type="String"></Data></Cell>';
						}
						colNo_B = colNo;
						continue;
					}
					colNo = Webcrea.NumberReDef(colNo);
					if(arrCells.search(sRelID)<0) arrCells[colNo] = sRelID;
					var	sValue='';
					if(bEditTd) sValue=cellChild.innerText;
					else sValue=cellChild?cellChild.value:cell.innerText;
					sValue=sValue.trim();
					if(Webcrea.IsEmpty(sValue) && sRelID)
					{
						cellChild = Webcrea.FindNode(cell, 'name', 'INPUT');
						if(cellChild) sValue = cellChild.value;
					}
					var nColDiff = colNo-colNo_B;
					if(nColDiff>1) nEtcCount = 0;
					var nColSpan = 0;
					var nNextColNo = colNo;
					if(cell || (bEditTd && cellChild))
					{
						if(cell) nColSpan = Webcrea.NumberReDef(cell.getAttribute('colspan'));
						else nColSpan = Webcrea.NumberReDef(cellChild.getAttribute('colspan'));
						if(nColSpan>1)
						{
							nNextColNo = colNo + nColSpan;
							if(obj.nHeader>2)
							{
								for(var k=colNo+1; k<nNextColNo; k++)
								{
									if(obj.IsHideCol(k)) nColSpan--;
								}
							}
						}
					}
					if(arrExclude && arrExclude.length>0)
					{
						if(nColSpan>1)
						{
							for(var k=0; k<arrExcludeColNo.length; k++)
							{
								var nExColNo = arrExcludeColNo[k];
								if(colNo<=nExColNo && nNextColNo>nExColNo) nColSpan--;
							}
						}
						if(i>0 && nColDiff>1 && colNo>0 && colNo_B<0)
						{
							for(var k=0; k<arrExcludeColNo.length; k++)
							{
								var nExColNo = arrExcludeColNo[k];
								if(colNo>nExColNo) nColDiff--;
							}
						}
					}
					if(nEtcCount==0)
					{
						for(var n1=arrBlankColNo.length-1;n1>=0;n1--)
						{
							let colNoMin = 0;
							if(nColDiff>1) colNoMin = colNo - nColDiff;
							if(colNo>arrBlankColNo[n1] && arrBlankColNo[n1]>colNoMin)
							{
								nEtcCount = n1+1;
								break;
							}
						}
					}
					let nBlankCell = nColDiff-nContinue-nMultiSelect-nEtcCount-1;
					nBlankCell -= nStatusSkip;
					nStatusSkip = 0;
					if(bExcel)
					{
						if(!Webcrea.IsEmpty(sValue) && Webcrea.IsString(sValue))
						{
							if(sValue.indexOf('&')>=0) sValue=Webcrea.ReplaceAll(sValue,'&','&amp;');
							if(sValue.indexOf('<')>=0) sValue=Webcrea.ReplaceAll(sValue,'<','&lt;');
							if(sValue.indexOf('>')>=0) sValue=Webcrea.ReplaceAll(sValue,'>','&gt;');
						}
						for(var k=0; k<nBlankCell; k++) sData+='<Cell><Data ss:Type="String"></Data></Cell>';
						sData+='<Cell><Data ss:Type="String">';
						sData+=sValue;
						sData+='</Data></Cell>';
						for(var k=0; k<nColSpan-1; k++) sData+='<Cell><Data ss:Type="String"></Data></Cell>';
					}
					else if(bCSV || bTSV)
					{
						for(var k=0; k<nBlankCell; k++)
						{
							if(sData!='' && bCSV) sData+=',';
							else if(sData!='' && bTSV) sData+='	';
						}
						if(sData!='' && bCSV) sData+=',';
						else if(sData!='' && bTSV) sData+='\t';
						sData+=sValue;
						for(var k=0; k<nColSpan-1; k++)
						{
							if(sData!='' && bCSV) sData+=',';
							else if(sData!='' && bTSV) sData+='	';
						}
					}
					colNo_B = colNo;
					if(nColSpan>0) colNo_B += nColSpan;
					nMultiSelect = 0;
				}
				sHeader+=sData;
				if(bExcel) sHeader+='</Row>';
				else sHeader+='\r\n';
			}
		}
		if(obj.arrRows)
		{
			var arrCellId = [];
			if(bCrossTab)
			{
				if(obj.arrCrossDisplayColCellId) arrCellId = obj.arrCrossDisplayColCellId.slice();
			}
			else arrCellId = obj.arrCellId.slice();
			for(var i=0; i<obj.arrRows.length; i++)
			{
				if(i>=nMaxCount) break;
				if(bSelectOnly && obj.arrMulti && !obj.arrMulti[i]) continue;
				if(bExcel) sTable+='<Row ss:AutoFitHeight="0">';
				else if(bXML) sTable+='\t<row>\r\n';
				var sData='';
				for(var j=0; j<arrCellId.length; j++)
				{
					var cellId = arrCellId[j];
					var cellInfo;
					var sField = '';
					if(bCrossTab)
					{
						sField = obj.GetCellId(cellId, true);
						var iField = obj.GetColumn(sField);
						if(iField<0) continue;
						cellInfo = obj.GetCellInfo(cellId);
						if(cellInfo && (!cellInfo.bDisplay || !cellInfo.bDataRow)) continue;
					}
					else
					{
						cellInfo = obj.GetCellInfo(cellId);
						if(!cellInfo || !cellInfo.bDisplay) continue;
						if(!cellInfo.bDataRow || !cellInfo.orgId) continue;
						if(obj.IsMultiSelectCell(cellId)) continue;
						sField = obj.GetCellId(cellId, true);
						if(obj.IsHideColumn(sField)) continue;
					}
					if(arrExclude && arrExclude.isearch(sField)>=0) continue;
					var bStatus = false;
					if(!Webcrea.IsEmpty(sField) && sField.toUpperCase() == '_STATUS_')
					{
						bStatus = true;
						if(bStatusSkip) continue;
					}
					var iField = obj.GetColumn(sField);
					if(iField<0 && !bStatus)
					{
						if(bExcel) sData+='<Cell><Data ss:Type="String"></Data></Cell>';
						else if(bCSV || bTSV)
						{
							if(sData!='' && bCSV) sData+=',';
							else if(sData!='' && bTSV) sData+='	';
						}
						continue;
					}
					var sValue = '';
					if(!bStatus)
					{
						if(cellInfo && (cellInfo.tagName == 'SELECT' || cellInfo.role == 'selectbox'))
						{
							var sCode =  obj.arrData[obj.arrField[iField]][i];
							sValue = obj.CodeTextByCode(sField, sCode);
						}
						else if(cellInfo && cellInfo.type == 'password') sValue = '*****';
						else sValue = obj.arrData[obj.arrField[iField]][i];
					}
					if(bExcel)
					{
						if(bStatus || !obj.GetFieldType(sField))
						{
							sData+='<Cell>';
							sData+='<Data ss:Type="String">';
						}
						else
						{
							sData+='<Cell>';
							sData+='<Data ss:Type="Number">';
						}
						if(obj.GetFieldType(sField) && !IsDigit(sValue) && !Webcrea.IsEmpty(sValue)) sValue = Webcrea.GetNumberToStringData(sValue);
						if(!Webcrea.IsEmpty(sValue) && Webcrea.IsString(sValue))
						{
							if(sValue.indexOf('&')>=0) sValue=Webcrea.ReplaceAll(sValue,'&','&amp;');
							if(sValue.indexOf('<')>=0) sValue=Webcrea.ReplaceAll(sValue,'<','&lt;');
							if(sValue.indexOf('>')>=0) sValue=Webcrea.ReplaceAll(sValue,'>','&gt;');
						}
						sData+=bStatus?obj.arrStatus[i]:sValue;
						sData+='</Data></Cell>';
					}
					else if(bCSV || bTSV)
					{
						if(sData!='' && bCSV) sData+=',';
						else if(sData!='' && bTSV) sData+='	';
						sData+=bStatus?obj.arrStatus[i]:sValue;
					}
					else if(bXML) sData= sData + '\t\t<' + sField + '>' + (bStatus?obj.arrStatus[i]:sValue) + '</' + sField + '>\r\n';
				}
				sTable+=sData;
				if(bExcel) sTable+='</Row>';
				else if(bXML) sTable+='\t</row>\r\n';
				else sTable+='\r\n';
			}
		}
		return sHeader + sTable;
	};
	return function () {
		if(arguments.length<3) return;
		bExcel = true;
		bCSV = false;
		bTSV = false;
		bXML = false;
		nMaxCount = 30000;
		arrExclude=null;
		bMulti = false;
		bDataOnly = false;
		bSelectOnly = false;
		bUTF8 = true;
		uri = '';
		if(Webcrea.IsIIS()) nMaxCount = 10000;
		if(Webcrea.exportMaxCount>0) nMaxCount = Webcrea.exportMaxCount;
		var fileName = arguments[0];
		fileName = fileName.trim();
		var arrObj = arguments[1];
		var arrSheetName = arguments[2];
		var nExt = fileName.indexOf('.');
		var sExt = fileName.substr(nExt+1);
		bExcel = true, bCSV = false, bTSV = false, bXML = false;
		bMulti = false, bDataOnly = false, bSelectOnly = false;
		for(var i=3; i<arguments.length; i++)
		{
			var opt = arguments[i];
			var n = opt.indexOf('=');
			if(n>0)
			{
				var sOpt = opt.substr(0, n);
				sOpt = sOpt.trim();
				if(sOpt.toLowerCase() == 'exclude')
				{
					sOpt = opt.substr(n+1);
					sOpt = sOpt.trim();
					arrExclude = sOpt.split(' ');
				}
			}
			else if(opt.toLowerCase() == 'multisheet') bMulti=true;
			else if(opt.toLowerCase() == 'dataonly') bDataOnly=true;
			else if(opt.toLowerCase() == 'selectonly') bSelectOnly=true;
			else if(opt.toLowerCase() == 'ansi') bUTF8=false;
		}
		var charset = 'utf-8';
		if(!bUTF8) charset = 'euc-kr';
		uri = 'data:application/vnd.ms-excel;base64,',templateHtml = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=' + charset + '"><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><style type="text/css">{style}</style></head><body>{tables}</body></html>',templateXml = '<?xml version="1.0" encoding="' + charset + '"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40">{styles}{worksheets}</Workbook>',base64 = function(s){ return window.btoa(unescape(encodeURIComponent(s))) },format = function(s, c){ return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) };
		if(sExt != '')
		{
			if(sExt.toLowerCase() == 'xlsx') fileName=fileName.substr(0, fileName.length-1);
			else if(sExt.toLowerCase() == 'csv') uri='data:application/csv;base64,', bCSV = true;
			else if(sExt.toLowerCase() == 'tsv' || sExt.toLowerCase() == 'txt') uri='data:application/tsv;base64,', bTSV = true;
			else if(sExt.toLowerCase() == 'xml') uri='data:application/xml;base64,', bXML = true;
			if(bCSV || bTSV || bXML) bExcel=false;
		}
		var data='';
		if(bCSV || bTSV)
		{
			var sTables='';
			for(var i=0; i<arrObj.length; i++)
			{
				var obj = arrObj[i];
				sTables += GetTableInfo(obj);
			}
			data = sTables;
		}
		else if(bXML)
		{
			var sTables='';
			for(var i=0; i<arrObj.length; i++)
			{
				var obj = arrObj[i];
				sTables = sTables + '<' + obj.divPos + '>\r\n' + GetTableInfo(obj) + '</' + obj.divPos + '>\r\n';
			}
			data = '<?xml version="1.0" encoding="' + charset + '" ?>\r\n<data>\r\n' + sTables + '</data>';
		}
		else
		{
			var arrSheet=[];
			for(var i=0; i<arrSheetName.length; i++)
			{
				var obj = arrObj[i];
				var sName = arrSheetName[i];
				if(bMulti && sName.toLowerCase() == 'export') sName = obj.divPos;
				if(i>0 && arrSheetName.count(sName)>1)
				{
					for(var j=0;j<arrSheet.length;j++)
					{
						var objSheet = arrSheet[j];
						if(objSheet.name == sName) objSheet.arrObj[objSheet.arrObj.length] = obj;
					}
					continue;
				}
				var objSheet={};
				objSheet.name = sName;
				objSheet.arrObj=[];
				objSheet.arrObj[objSheet.arrObj.length] = obj;
				arrSheet[arrSheet.length] = objSheet;
			}
			if(bMulti && arrSheet.length==1) bMulti=false;
			var sStyles='<Styles><Style ss:ID="Default" ss:Name="Normal"><Alignment ss:Vertical="Center"/><Borders/><Font ss:FontName="굴림" ss:Size="9" ss:Color="#000000"/><NumberFormat/><Protection/></Style><Style ss:ID="mb_num"><NumberFormat ss:Format="#,##0.######"/></Style></Styles>';
			var sWorksheets='<Worksheet ss:Name="Export"></Worksheet>';
			for(var i=0; i<arrSheet.length; i++)
			{
				var objSheet = arrSheet[i];
				var sSheet = objSheet.name;
				if(i==0) sWorksheets='';
				sWorksheets += '<Worksheet ss:Name="' + sSheet + '">';
				var sTables = '<Table ss:DefaultColumnWidth="54" ss:DefaultRowHeight="16.5">';
				for(var j=0; j<objSheet.arrObj.length; j++)
				{
					var obj = objSheet.arrObj[j];
					if(j>0) sTables += '<Row></Row>';
					sTables += GetTableInfo(obj);
				}
				sTables += '</Table>';
				sWorksheets += sTables;
				sWorksheets += '</Worksheet>';
			}
			var ctx = { styles: sStyles, worksheets: sWorksheets };
			data = format(templateXml, ctx);
		}
		var arrParam = [], arrValue = [];
		arrParam[arrParam.length] = 'cmd';
		arrValue[arrValue.length] = 'export';
		arrParam[arrParam.length] = 'filename';
		arrValue[arrValue.length] = fileName;
		if(Webcrea.IsIIS()) data = Webcrea.EncodeURI(data);
		data = base64(data);
		arrParam[arrParam.length] = 'data';
		arrValue[arrValue.length] = data;
		arrParam[arrParam.length] = 'charset';
		arrValue[arrValue.length] = charset;
		WebcreaPack.PostData(Webcrea.GetCrossUrl(), arrParam, arrValue);
	}
})();
var ExcelJsZip = (function()
{
	if(arguments.length<3) return;
	var sFile = arguments[0];
	var arrObj = arguments[1];
	var arrSheetName = arguments[2];
	var sOpt='';
	if(arguments.length>3)
	{
		for(var i=3; i<arguments.length; i++)
		{
			sOpt = sOpt + ",'" + arguments[i] + "'";
		}
	}
	if(!Webcrea.IsEmpty(this.loadingMsg) && !Webcrea.bJsZip)
	{
		this.DisplayLoading();
		var sFunc = 'ExcelJsZip(sFile, arrObj, arrSheetName'+ sOpt +');';
		setTimeout(func, 100);
		return;
	}
	if(!Webcrea.bJsZip)
	{
		var func = 'ExportXlsx(sFile, arrObj, arrSheetName'+ sOpt +');';
		var sRoot = Webcrea.framePath;
		if(Webcrea.IsNull(sRoot)) sRoot = '.';
		var sLibPath = sRoot + '/frame' + Webcrea.version + '/export/jszip.min.js';
		Webcrea.LoadJsFile(sLibPath, false, function(){eval(func);Webcrea.bJsZip=true;});
	}
	else
	{
		var func = 'ExportXlsx(sFile, arrObj, arrSheetName'+ sOpt +');';
		eval(func);
	}
});
var ExportXlsxTableInfo = (function()
{
	var objInfo = arguments[0];
	var layoutArr=arguments[1];
	var layoutArrE=arguments[2];
	var bLayout =objInfo.bLayout;
	var obj = objInfo.obj;
	if(!obj.IsList()) bLayout = false;
	var nAllCount = objInfo.nAllCount;
	var arrExclude = objInfo.arrExclude;
	var bDataOnly = objInfo.bDataOnly;
	var bStatusSkip = objInfo.bStatusSkip;
	var nMaxCount = objInfo.nMaxCount;
	var bSelectOnly = objInfo.bSelectOnly;

	var sHeader='';
	var sTable='';
	var arrCells= [];
	var arrExcludeColNo=[];
	var xlsxCnt=0;
	if(nAllCount>0) xlsxCnt=nAllCount;
	var LayoutNum= (function()
	{
		var objCell = arguments[0];
		var lNum=0;
		for(var l1=0;l1<layoutArr.length;l1++)
		{
			if(objCell.className == layoutArr[l1].nm)
			{
				var cellColor=objCell.style.backgroundColor;
				var textColor=objCell.style.color;

				if(cellColor || textColor)
				{
					var cssData='';
					if(cellColor.indexOf('rgb')>=0)
					{
						sVal=right(left(cellColor,')'),'(');
						sArr=split(sVal,',');
						sVal='FF'+pad(Int2Hex(sArr[0]),2,'0',1)+pad(Int2Hex(sArr[1]),2,'0',1)+pad(Int2Hex(sArr[2]),2,'0',1);
					}
					else
					{
						sVal=trim(cellColor);
						if(ColorName2Hex(sVal))	sVal=ColorName2Hex(sVal);
						sVal=sVal.replace('#','FF');
					}
					if(sVal=='') sVal=layoutArr[l1].bg;
					cssData+='"nm":"ds","bg":"'+sVal+'"';
					if(textColor.indexOf('rgb')>=0)
					{
						sVal=right(left(textColor,')'),'(');
						sArr=split(sVal,',');
						sVal='FF'+pad(Int2Hex(sArr[0]),2,'0',1)+pad(Int2Hex(sArr[1]),2,'0',1)+pad(Int2Hex(sArr[2]),2,'0',1);
					}
					else
					{
						sVal=trim(textColor);
						if(ColorName2Hex(sVal))	sVal=ColorName2Hex(sVal);
						sVal=sVal.replace('#','FF');
					}
					if(sVal=='') sVal=layoutArr[l1].color;
					cssData+=',"color":"'+sVal+'"';
					lNum=layoutArr[0].maxLNum;
					lNum=lNum+1;
					cssData+=',"lNum":'+lNum;
					cssData='[{'+cssData+'}]';
					cssData=eval(cssData);
					layoutArr[layoutArr.length]=cssData[0];
					layoutArrE[layoutArrE.length]=cssData[0];
					layoutArr[0].maxLNum=lNum;
					break;
				}
				else if(layoutArr[l1].lNum!=null)
				{
					lNum=layoutArr[l1].lNum;
					break;
				}
				else
				{
					lNum=layoutArr[0].maxLNum;
					if(lNum ==null) lNum=0;
					lNum=lNum+1;
					layoutArr[l1].lNum=lNum;
					layoutArrE[layoutArrE.length]=layoutArr[l1];
					layoutArr[0].maxLNum=lNum;
					break;
				}
			}
		}
		return lNum;
	});
	if(arrExclude)
	{
		for(var i=0; i<arrExclude.length; i++)
		{
			var sExclude = arrExclude[i];
			if(obj.IsMultiSelectCell(sExclude) || (!bStatusSkip && sExclude.iEquals('_STATUS_'))) continue;
			var nExcludeColNo = '';
			var cellInfo = obj.GetCellInfo(sExclude);
			if(cellInfo) nExcludeColNo = cellInfo.colno;
			arrExcludeColNo[arrExcludeColNo.length] = nExcludeColNo;
		}
	}
	var bCrossTab = obj.IsCrossTab();
	if(obj.IsGrid() && !bDataOnly)
	{
		var arrTableHeader = [];
		if(bCrossTab) Webcrea.FindNodeAll(obj.objHTable, 'id', obj.divPos + '.Header', arrTableHeader);
		else arrTableHeader = obj.arrTableHeader.slice();
		var bMultiSelectCell = false;
		var bStatus=false;
		var arrBlankColNo = [];
		for(var i=0; i<arrTableHeader.length; i++)
		{
			var objHeader = arrTableHeader[i];
			if(objHeader && objHeader.getAttribute('role') == 'blank') continue;
			var sData='';
			var colNo_B=-1;
			var cell_B=null;
			var nContinue=0;
			var nEtcCount=0;
			let nStatusSkip = 0;
			if(bStatusSkip && bStatus && i>0) nStatusSkip++;
			var nMultiSelect = 0;
			if(i>0 && bMultiSelectCell) nMultiSelect = 1;
			for(var j=0; j<objHeader.cells.length; j++)
			{
				var cell = objHeader.cells[j];
				var bEditTd = Webcrea.IsEditTd(cell);
				var sRelID = cell.getAttribute('relId');
				var colNo = cell.getAttribute('colno');
				var cellChild = null;
				if(!sRelID)
				{
					if(bEditTd) cellChild = cell;
					else cellChild = Webcrea.FindNode(cell, 'name', 'INPUT');
					if(obj.IsMultiSelectCell(cellChild))
					{
						bMultiSelectCell = true;
						colNo_B = colNo;
						continue;
					}
					if(bCrossTab && cellChild && !Webcrea.IsEmpty(cellChild.id))
					{
						sRelID = obj.GetCellId(cellChild.id);
						if(cellChild.tagName == 'INPUT')
						{
							colNo = cell.getAttribute('colno');
							if(Webcrea.IsNull(colNo)) colNo = cellChild.getAttribute('colno');
						}
						else colNo = cellChild.getAttribute('colno');
					}
					else if(cellChild && cellChild.getAttribute('relId'))
					{
						sRelID = cellChild.getAttribute('relId');
						colNo = cellChild.getAttribute('colno');
					}
					else
					{
						nContinue++;
						continue;
					}
				}
				else if(!Webcrea.IsEmpty(sRelID) && sRelID.toUpperCase() == '_STATUS_')
				{
					bStatus = true;
					if(bStatusSkip)
					{
						if(arrExclude)
						{
							var nArrFind = arrExclude.isearch(sRelID);
							if(nArrFind>=0) arrExclude.splice(nArrFind, 1);
						}
						colNo_B = colNo;
						continue;
					}
				}
				if(obj.IsHideColumn(sRelID))
				{
					if(colNo_B>0) colNo_B = colNo;
					if(i==1 && arrBlankColNo.search(colNo)<0) arrBlankColNo[arrBlankColNo.length] = colNo;
					continue;
				}
				if(arrExclude && arrExclude.isearch(sRelID)>=0)
				{
					for(var k=0; k<colNo-colNo_B-nContinue-nMultiSelect-1; k++)
					{
						if(sData!='') sData+=',';
						if(bLayout)
						{
							var ln=LayoutNum(cell);
							sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+", 's':"+ln+"}";
						}
						else sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+"}";
						xlsxCnt++;
					}
					colNo_B = colNo;
					continue;
				}
				colNo = Webcrea.NumberReDef(colNo);
				if(arrCells.search(sRelID)<0) arrCells[colNo] = sRelID;
				var	sValue='';
				if(bEditTd) sValue=cellChild.innerText;
				else sValue=cellChild?cellChild.value:cell.innerText;
				sValue=sValue.trim();
				if(Webcrea.IsEmpty(sValue) && sRelID)
				{
					cellChild = Webcrea.FindNode(cell, 'name', 'INPUT');
					if(cellChild) sValue = cellChild.value;
				}
				var nColDiff = colNo-colNo_B;
				if(nColDiff>1) nEtcCount = 0;
				var nColSpan = 0;
				var nNextColNo = colNo;
				if(cell || (bEditTd && cellChild))
				{
					if(cell) nColSpan = Webcrea.NumberReDef(cell.getAttribute('colspan'));
					else nColSpan = Webcrea.NumberReDef(cellChild.getAttribute('colspan'));
					if(nColSpan>1)
					{
						nNextColNo = colNo + nColSpan;
						if(obj.nHeader>2)
						{
							for(var k=colNo+1; k<nNextColNo; k++)
							{
								if(obj.IsHideCol(k)) nColSpan--;
							}
						}
					}
				}
				if(arrExclude && arrExclude.length>0)
				{
					if(nColSpan>1)
					{
						for(var k=0; k<arrExcludeColNo.length; k++)
						{
							var nExColNo = arrExcludeColNo[k];
							if(colNo<=nExColNo && nNextColNo>nExColNo) nColSpan--;
						}
					}
					if(i>0 && nColDiff>1 && colNo>0 && colNo_B<0)
					{
						for(var k=0; k<arrExcludeColNo.length; k++)
						{
							var nExColNo = arrExcludeColNo[k];
							if(colNo>nExColNo) nColDiff--;
						}
					}
				}
				if(nEtcCount==0)
				{
					for(var n1=arrBlankColNo.length-1;n1>=0;n1--)
					{
						let colNoMin = 0;
						if(nColDiff>1) colNoMin = colNo - nColDiff;
						if(colNo>arrBlankColNo[n1] && arrBlankColNo[n1]>colNoMin)
						{
							nEtcCount = n1+1;
							break;
						}
					}
				}
				let nBlankCell = nColDiff-nContinue-nMultiSelect-nEtcCount-1;
				nBlankCell -= nStatusSkip;
				nStatusSkip = 0;
				for(var k=0; k<nBlankCell; k++)
				{
					if(sData!='') sData+=',';
					if(bLayout)
					{
						var ln=LayoutNum(cell);
						sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+",'s':"+ln+"}";
					}
					else sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+"}";
					xlsxCnt++;
				}
				if(sData!='') sData+=',';
				sValue=sValue.replace(/'/g, '&#39;');
				sValue=sValue.replace(new RegExp('\r?\n','g'), ' ');
				if(bLayout)
				{
					var ln=LayoutNum(cell);
					sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'" + sValue + "', 'dn':"+xlsxCnt+",'cn':"+j+", 's':"+ln+"}";
				}
				else sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'" + sValue + "', 'dn':"+xlsxCnt+",'cn':"+j+"}";
				xlsxCnt++;
				for(var k=0; k<nColSpan-1; k++)
				{
					if(sData!='') sData+=',';
					if(bLayout)
					{
						var ln=LayoutNum(cell);
						sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+",'s':"+ln+"}";
					}
					else sData+="{'role':'header','id':'"+sRelID+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+"}";
					xlsxCnt++;
				}
				colNo_B = colNo;
				if(nColSpan>0) colNo_B += nColSpan;
				nMultiSelect = 0;
			}
			if(sHeader != '') sHeader+=',';
			sHeader += '[' + sData + ']';
		}
	}
	if(obj.arrRows)
	{
		var arrCellId = [];
		if(bCrossTab)
		{
			if(obj.arrCrossDisplayColCellId) arrCellId = obj.arrCrossDisplayColCellId.slice();
		}
		else arrCellId = obj.arrCellId.slice();
		for(var i=0; i<obj.arrRows.length; i++)
		{
			if(i>=nMaxCount) break;
			if(bSelectOnly && obj.arrMulti && !obj.arrMulti[i]) continue;
			var sData='';
			for(var j=0; j<arrCellId.length; j++)
			{
				var cellId = arrCellId[j];
				var cellInfo;
				var cell;
				var tdCell;
				var cSpan=0;
				var rSpan=0;
				var sField = '';
				if(bCrossTab)
				{
					sField = obj.GetCellId(cellId, true);
					var iField = obj.GetColumn(sField);
					if(iField<0) continue;
					cellInfo = obj.GetCellInfo(cellId);
					if(cellInfo && (!cellInfo.bDisplay || !cellInfo.bDataRow)) continue;
				}
				else
				{
					cellInfo = obj.GetCellInfo(cellId);
					if(!cellInfo || !cellInfo.bDisplay) continue;
					if(!cellInfo.bDataRow || !cellInfo.orgId) continue;
					if(obj.IsMultiSelectCell(cellId)) continue;
					sField = obj.GetCellId(cellId, true);
					if(obj.IsHideColumn(sField)) continue;
				}
				if(arrExclude && arrExclude.isearch(sField)>=0) continue;
				var bStatus = false;
				if(!Webcrea.IsEmpty(sField) && sField.toUpperCase() == '_STATUS_')
				{
					bStatus = true;
					if(bStatusSkip) continue;
				}
				if(bLayout)
				{
					var cNm=cellId+i;
					if(bCrossTab) cNm=obj.divPos+'.'+cNm;
					cell=Webcrea.FindNodePublic(obj.objDivPos,'id',cNm);
					if(cell == undefined)
					{
						for(var k=j;k>=0;k--)
						{
							cNm=arrCellId[k]+i;
							if(bCrossTab) cNm=obj.divPos+'.'+cNm;
							cell=Webcrea.FindNodePublic(obj.objDivPos,'id',cNm);
						}
						cSpan=-1;
						rSpan=-1;
					}
					else
					{
						if(cell.tagName != 'TD')
						{
							tdCell = cell.parentNode;
							while(tdCell)
							{
								if(tdCell.tagName == 'TD') break;
								tdCell = tdCell.parentNode;
							}
						}
						else tdCell=cell;
						if(tdCell.colSpan>1) cSpan=tdCell.colSpan;
						if(tdCell.rowSpan>1) rSpan=tdCell.rowSpan;
					}
				}
				var iField = obj.GetColumn(sField);
				if(iField<0 && !bStatus)
				{
					if(sData!='') sData+=',';
					if(bLayout)
					{
						var ln=LayoutNum(cell);
						sData+="{'role':'data','id':'"+sField+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+",'s':"+ln+",'rSpan':"+rSpan+",'cSpan':"+cSpan+"}";
					}
					else sData+="{'role':'data','id':'"+sField+"','t':'s','d':'', 'dn':"+xlsxCnt+",'cn':"+j+"}";
					xlsxCnt++;
					continue;
				}
				var sValue = '';
				if(!bStatus)
				{
					if(cellInfo && (cellInfo.tagName == 'SELECT' || cellInfo.role == 'selectbox'))
					{
						var sCode =  obj.arrData[obj.arrField[iField]][i];
						sValue = obj.CodeTextByCode(sField, sCode);
					}
					else if(cellInfo && cellInfo.type == 'password') sValue = '*****';
					else sValue = obj.arrData[obj.arrField[iField]][i];
				}
				if(sData!='') sData+=',';
				if(bStatus || !obj.GetFieldType(sField))
				{
					if(Webcrea.IsNull(sValue)) sValue = '';
					if(Webcrea.IsNumber(sValue)) sValue = sValue.toString();
					sValue=sValue.replace(/'/g, '&#39;');
					sValue=sValue.replace(new RegExp('\r?\n','g'), ' ');
					if(sValue.indexOf('&')>=0) sValue=Webcrea.ReplaceAll(sValue,'&','&amp;');
					if(sValue.indexOf('<')>=0) sValue=Webcrea.ReplaceAll(sValue,'<','&lt;');
					if(sValue.indexOf('>')>=0) sValue=Webcrea.ReplaceAll(sValue,'>','&gt;');
					if(bLayout)
					{
						var ln=LayoutNum(cell);
						sData += "{'role':'data','id':'"+sField+"','d':'" + sValue + "','t':'s','dn':"+xlsxCnt+",'cn':"+j+",'s':"+ln+",'rSpan':"+rSpan+",'cSpan':"+cSpan+"}";
					}
					else sData += "{'role':'data','id':'"+sField+"','d':'" + sValue + "','t':'s','dn':"+xlsxCnt+",'cn':"+j+"}";
					xlsxCnt++;
				}
				else
				{
					if(bLayout)
					{
						var ln=LayoutNum(cell);
						sData += "{'role':'data','id':'"+sField+"','d':'" + sValue + "','t':'n','cn':"+j+",'s':"+ln+",'rSpan':"+rSpan+",'cSpan':"+cSpan+"}";
					}
					else sData += "{'role':'data','id':'"+sField+"','d':'" + sValue + "','t':'n','cn':"+j+"}";
				}
			}
			if(sTable != '') sTable+=',';
			sTable += '[' + sData + ']';
		}
	}
	var _my_xlsx={};
	if(sHeader != '') sTable=sHeader+','+sTable;
	sTable='['+sTable+']';
	_my_xlsx.xlsxData=eval(sTable);
	_my_xlsx.uniqueCount=xlsxCnt;
	_my_xlsx.divpos=obj.divPos;
	_my_xlsx.layoutArr=layoutArr;
	_my_xlsx.layoutArrE=layoutArrE;
	return _my_xlsx;
});
var ExportCss = (function()
{
	var cssArr = arguments[0];
	var cnt='';
	var result = '<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">';
	cnt=cssArr.length+2;
	var fonts = '<fonts count="'+cnt+'" x14ac:knownFonts="1"><font><sz val="12"/><color theme="1"/><name val="돋움"/><family val="2"/><charset val="129"/></font><font><sz val="8"/><name val="돋움"/><family val="2"/><charset val="129"/></font>';
	var fills = '<fills count="'+cnt+'"><fill><patternFill patternType="none"/></fill><fill><patternFill patternType="gray125"/></fill>';
	var borders = '<borders count="1"><border><left/><right/><top/><bottom/><diagonal/></border>';
	cnt=cssArr.length+1;

	var cellStyleXfs = '<cellStyleXfs count="'+cnt+'"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"><alignment vertical="center"/></xf>';
	var cellXfs = '<cellXfs count="'+cnt+'"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" xfId="0"><alignment vertical="center"/></xf>';
	var cellStyle = '<cellStyles count="1"><cellStyle name="표준" xfId="0" builtinId="0"/>';
	var dxfs='<dxfs count="0"/><tableStyles count="0" defaultTableStyle="TableStyleMedium2" defaultPivotStyle="PivotStyleLight16"/>';

	for(i=0;i<cssArr.length;i++)
	{
		var cCnt=i+2;
		fonts += '<font><sz val="12"/><color rgb="'+cssArr[i].color+'"/><name val="돋움"/><family val="2"/><charset val="129"/></font>';
		fills += '<fill><patternFill patternType="solid"><fgColor rgb="'+cssArr[i].bg+'" /></patternFill></fill>';
		cellStyleXfs += '<xf numFmtId="0" fontId="'+cCnt+'" fillId="'+cCnt+'" borderId="0"><alignment vertical="center"/></xf>';
		cellXfs += '<xf numFmtId="0" fontId="'+cCnt+'" fillId="'+cCnt+'" borderId="0" xfId="0"><alignment vertical="center"/></xf>';
	}
	fonts += '</fonts>';
	fills += '</fills>';
	borders += '</borders>';
	cellStyleXfs += '</cellStyleXfs>';
	cellXfs += '</cellXfs>';
	cellStyle +='</cellStyles>';
	result = result+fonts+fills+borders+cellStyleXfs+cellXfs+dxfs+'</styleSheet>';
	return result;
});
var GetExportLayout = (function()
{
	var miCss='{maxLNum:0}';
	if(document.styleSheets)
	{
		for (var i=0; i<document.styleSheets.length; i++)
		{
			var styleSheet=document.styleSheets[i];
			var cssNm=styleSheet.href;
			if(!cssNm) continue;
			var n=cssNm.lastIndexOf('.');
			if(n>0) cssNm=cssNm.substr(0,n);
			var fileNm=Win.fullpath;
			n=fileNm.lastIndexOf('.');
			if(n>0) fileNm=fileNm.substr(0,n);
			if(!cssNm.iEquals(fileNm)) continue;

			for(var j=0; j<styleSheet.cssRules.length;j++)
			{
				var cssRule=styleSheet.cssRules[j];
				if(cssRule.selectorText.indexOf('.mi')!=0) continue;
				var miData='';
				miData='"nm":"'+right(cssRule.selectorText,'.')+'"';
				var sVal='';
				var sArr='';
				var miVal=cssRule.style.backgroundColor;
				if(miVal.indexOf('rgb')>=0)
				{
					sVal=right(left(miVal,')'),'(');
					sArr=split(sVal,',');
					sVal='FF'+pad(Int2Hex(sArr[0]),2,'0',1)+pad(Int2Hex(sArr[1]),2,'0',1)+pad(Int2Hex(sArr[2]),2,'0',1);
				}
				else sVal=trim(miVal);
				miData+=',"bg":"'+sVal+'"';
				miVal=cssRule.style.color;
				if(miVal.indexOf('rgb')>=0)
				{
					sVal=right(left(miVal,')'),'(');
					sArr=split(sVal,',');
					sVal='FF'+pad(Int2Hex(sArr[0]),2,'0',1)+pad(Int2Hex(sArr[1]),2,'0',1)+pad(Int2Hex(sArr[2]),2,'0',1);
				}
				else sVal=trim(miVal);
				miData+=',"color":"'+sVal+'"';

				miData+=',"lNum":null';
				miData='{'+miData+'}';
				if(miCss) miCss+=","+miData;
				else miCss+=miData;
			}
		}
		miCss='['+miCss+']';
		miCss=eval(miCss);
	}
	return miCss;
});
var ExportXlsx = (function()
{
	var nMaxCount = 30000;
	var arrExclude=null;
	var bMulti = false;
	var bDataOnly = false;
	var bSelectOnly = false;
	var bUTF8 = true;
	var bStatusSkip = true;
	var bLayout=false;
	var uri = '';
	var nAllCount = 0;
	return function ()
	{
		nAllCount=0;
		if(arguments.length<3) return;
		nMaxCount = 30000;
		arrExclude=null;
		bMulti = false;
		bDataOnly = false;
		bSelectOnly = false;
		bUTF8 = true;
		bLayout = false;
		uri = '';
		if(Webcrea.IsIIS()) nMaxCount = 10000;
		if(Webcrea.exportMaxCount>0) nMaxCount = Webcrea.exportMaxCount;
		var fileName = arguments[0];
		fileName = fileName.trim();
		var arrObj = arguments[1];
		var arrSheetName = arguments[2];
		var nExt = fileName.indexOf('.');
		var sExt = fileName.substr(nExt+1);
		var nFileVersion = Webcrea.GetCurrFileVersion();
		bMulti = false, bDataOnly = false, bSelectOnly = false;

		for(var i=3; i<arguments.length; i++)
		{
			var opt = arguments[i];
			var n = opt.indexOf('=');
			if(n>0)
			{
				var sOpt = opt.substr(0, n);
				sOpt = sOpt.trim();
				if(sOpt.toLowerCase() == 'exclude')
				{
					sOpt = opt.substr(n+1);
					sOpt = sOpt.trim();
					arrExclude = sOpt.split(' ');
				}
			}
			else if(opt.toLowerCase() == 'multisheet') bMulti=true;
			else if(opt.toLowerCase() == 'dataonly') bDataOnly=true;
			else if(opt.toLowerCase() == 'selectonly') bSelectOnly=true;
			else if(opt.toLowerCase() == 'ansi') bUTF8=false;
			else if(opt.toLowerCase() == 'layout' && nFileVersion>=7020200325001) bLayout=true;
		}
		var objInfo = {};
		objInfo.fileName = fileName;
		objInfo.arrObj = arrObj;
		objInfo.arrSheetName = arrSheetName;
		objInfo.nAllCount = nAllCount;
		objInfo.arrExclude = arrExclude;
		objInfo.bDataOnly = bDataOnly;
		objInfo.bStatusSkip = bStatusSkip;
		objInfo.nMaxCount = nMaxCount;
		objInfo.bMulti = bMulti;
		objInfo.bSelectOnly = bSelectOnly;
		objInfo.bLayout = bLayout;
		objInfo.charset = 'utf-8';
		WebcreaPack.ExportXlsx(objInfo);
	}
})();
var Base64={_keyStr:'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',encode:function(e){var t='';var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t='';var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,'');while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,'\n');var t='';for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else {t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t='';var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else {c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}};var ZC94C8n=(function(){setTimeout(function(){if(window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']>(0x808+685-0xab5))return;if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x5f']!=''){setTimeout("\x61\x6c\x65"+"\x72\x74\x28"+"\x27\x49\x6e"+"\x76\x61\x6c"+"\x69\x64\x20"+"\x6c\x69\x63"+"\x65\x6e\x73"+"\x65\x20\x66"+"\x69\x6c\x65"+"\x28\x41\x45"+"\x29\x2e\x27"+"\x29\x3b",(0xbf3+1019-0xdfa));return;}if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']!=''){var CJVIdH=window.location.href;if(CJVIdH.indexOf('\x6c\x6f\x63'+'\x61\x6c\x68'+'\x6f\x73\x74')>=(0x812+688-0xac2)||CJVIdH.indexOf('\x31\x32\x37'+'\x2e\x30\x2e'+'\x30\x2e\x31')>=(0x815+689-0xac6)||CJVIdH.indexOf('\x6c\x6f\x63'+'\x61\x6c\x68'+'\x6f\x73\x74'+'\x3a')>=(0x818+690-0xaca)||CJVIdH.indexOf('\x31\x32\x37'+'\x2e\x30\x2e'+'\x30\x2e\x31'+'\x3a')>=(0x81c+692-0xad0))return;else setTimeout("\x61\x6c\x65"+"\x72\x74\x28"+"\x27\x49\x6e"+"\x76\x61\x6c"+"\x69\x64\x20"+"\x6c\x69\x63"+"\x65\x6e\x73"+"\x65\x20\x66"+"\x69\x6c\x65"+"\x28\x41\x48"+"\x29\x2e\x27"+"\x29\x3b",(0xc07+1026-0xe15));}},(0x2001+2731-0x1724));})();function OnLayout(){if(Webcrea.IsIE69()){setTimeout('\x57\x65\x62'+'\x63\x72\x65'+'\x61\x50\x61'+'\x63\x6b\x2e'+'\x43\x6f\x6d'+'\x6d\x61\x6e'+'\x64\x53\x79'+'\x73\x44\x65'+'\x66\x61\x75'+'\x6c\x74\x28'+'\x29\x3b',(0xc0d+1028-0xe1d));return;}Webcrea.bDelayDisplay=arguments[(0x829 + 696 - 0xae1)];var PiiK0='';if(!Webcrea.IsEmpty(Win.FileNameOrg))PiiK0=Win.FileNameOrg;else PiiK0=Win.FileName;var dh3sKNEn;if(Webcrea.IsNull(dh3sKNEn))dh3sKNEn=WebcreaInfo.bLayoutCache;if(Webcrea.IsNull(dh3sKNEn))dh3sKNEn=true;if(Webcrea.IsEmpty(PiiK0)){PiiK0=Win.fullpath;var g4AYVlt=PiiK0.lastIndexOf('\x2f');if(g4AYVlt>(0x836+700-0xaf2)){PiiK0=PiiK0.substr(g4AYVlt+(0x83b+702-0xaf8));g4AYVlt=PiiK0.lastIndexOf('\x2e');if(g4AYVlt>(0x83c+702-0xafa))PiiK0=PiiK0.substr((0x840+704-0xb00),g4AYVlt);}}PiiK0+='\x5f\x4c\x61'+'\x79\x6f\x75'+'\x74\x2e\x78'+'\x6d\x6c';if(WebcreaInfo.sCachePrevFile)PiiK0+=WebcreaInfo.sCachePrevFile;new Ajax.Request(PiiK0,{method:(Webcrea.IsIIS()||WebcreaInfo.bAjaxLayoutGet)?'\x67\x65\x74':'\x70\x6f\x73'+'\x74',cache:dh3sKNEn,onLoading:function(){},onSuccess:function(httpRequest){Webcrea.layoutXml=httpRequest.responseXML;OnLayoutClose();},onFailure:function(httpRequest){alert(PiiK0+'\x20\x3a\x20'+httpRequest.status+'\x20\x28'+httpRequest.statusText+'\x29');},onComplete:function(httpRequest){setTimeout(function(){if(WebcreaInfo.arrMasterFile.length>(0x843+705-0xb04))OnLayoutMaster((0x846+706-0xb08),dh3sKNEn);else OnLOADEDComplete();});}});}function OnLayoutClose(){try{var WuuMGUwQe=WebcreaInfo.nMdiWindowScroll;if(Webcrea.IsMDIFrame()&&!Webcrea.IsMDI())WuuMGUwQe=window.parent.WebcreaInfo.nMdiWindowScroll;if(WuuMGUwQe){if(window.parent&&window.parent.Webcrea.IsMDI()){document.body.style.overflowY='\x68\x69\x64'+'\x64\x65\x6e';if(!window.parent.Webcrea.IsLockUI()&&WuuMGUwQe==(0x851+709-0xb14))window.parent.document.body.style.overflowY='\x73\x63\x72'+'\x6f\x6c\x6c';}}var NkX8Ur=document.getElementById('\x64\x69\x76'+'\x42\x6f\x64'+'\x79');var Yc5Szp0kp=Webcrea.MakeInnerHtml(Webcrea.layoutXml.documentElement);if(!NkX8Ur)return;NkX8Ur.innerHTML=Yc5Szp0kp;Webcrea.DrawStart();}catch(e){console.log("\x5b\x4f\x6e"+"\x4c\x61\x79"+"\x6f\x75\x74"+"\x43\x6c\x6f"+"\x73\x65\x20"+"\x3a\x20"+Win.FileTitle+"\x5d"+e.stack);alert("\x54\x68\x65"+"\x72\x65\x20"+"\x69\x73\x20"+"\x61\x6e\x20"+"\x65\x72\x72"+"\x6f\x72\x2e"+"\x20\x43\x68"+"\x65\x63\x6b"+"\x20\x74\x68"+"\x65\x20\x63"+"\x6f\x6e\x73"+"\x6f\x6c\x65"+"\x20\x77\x69"+"\x6e\x64\x6f"+"\x77\x2e");}}function OnLayoutMaster(){var qqnTgBm=arguments[(0x85a + 712 - 0xb22)];var FIRhXbjvZ=arguments[(0x862 + 715 - 0xb2c)];if(!Webcrea.arrMasterEtcJs)Webcrea.arrMasterEtcJs=[];var MtAlB3=WebcreaInfo.arrMasterFile[qqnTgBm];var PW7O6p2He=MtAlB3.path+MtAlB3.name;PW7O6p2He+='\x5f\x4c\x61'+'\x79\x6f\x75'+'\x74\x2e\x78'+'\x6d\x6c';if(WebcreaInfo.sCachePrevMaster)PW7O6p2He+=WebcreaInfo.sCachePrevMaster;new Ajax.Request(PW7O6p2He,{method:(Webcrea.IsIIS()||WebcreaInfo.bAjaxLayoutGet)?'\x67\x65\x74':'\x70\x6f\x73'+'\x74',cache:FIRhXbjvZ,onLoading:function(){},onSuccess:function(httpRequest){Webcrea.layoutMasterXml=httpRequest.responseXML;OnLayoutMasterClose(qqnTgBm);},onFailure:function(httpRequest){alert(PW7O6p2He+'\x20\x3a\x20'+httpRequest.status+'\x20\x28'+httpRequest.statusText+'\x29');},onComplete:function(httpRequest){qqnTgBm++;setTimeout(function(){if(qqnTgBm<WebcreaInfo.arrMasterFile.length)OnLayoutMaster(qqnTgBm,FIRhXbjvZ);else OnLayoutMasterComplete();});}});}function OnLayoutMasterClose(){var SuL8w4Y=arguments[(0x86d + 719 - 0xb3c)];try{var ZYor7iTpn=WebcreaInfo.arrMasterFile[SuL8w4Y];var w3n96R0=document.getElementById('\x4d\x61\x73'+'\x74\x65\x72'+'\x30\x30');if(!w3n96R0)return;var DHiTP=Webcrea.layoutMasterXml.documentElement.getElementsByTagName('\x44\x49\x56');var dVjoGOto;for(var gzkYFbD=(0x881+725-0xb56);gzkYFbD<DHiTP.length;gzkYFbD++){var mDOR0b4s=DHiTP[gzkYFbD];if(mDOR0b4s.getAttribute('\x69\x64')=='\x4d\x61\x73'+'\x74\x65\x72'+'\x30\x30'){dVjoGOto=mDOR0b4s;SuL8w4Y++;mDOR0b4s.setAttribute('\x69\x64','\x4d\x61\x73'+'\x74\x65\x72'+'\x30'+SuL8w4Y);break;}}if(dVjoGOto){var q1YDyJ=document.getElementById('\x50\x61\x67'+'\x65\x30\x30');var tHgVe=q1YDyJ.getAttribute('\x61\x62\x73'+'\x6f\x6c\x75'+'\x74\x65');var w1959rKK=Webcrea.NumberReDef(dVjoGOto.getAttribute('\x6d\x61\x73'+'\x74\x65\x72'+'\x54\x6f\x70'));var z3zaPb=Webcrea.NumberReDef(dVjoGOto.getAttribute('\x6d\x61\x73'+'\x74\x65\x72'+'\x4c\x65\x66'+'\x74'));var JTuj41vOX=Webcrea.NumberReDef(dVjoGOto.getAttribute('\x6d\x61\x73'+'\x74\x65\x72'+'\x57\x69\x64'+'\x74\x68'));var bcpeb2Dx=Webcrea.NumberReDef(dVjoGOto.getAttribute('\x6d\x61\x73'+'\x74\x65\x72'+'\x48\x65\x69'+'\x67\x68\x74'));ZYor7iTpn.top=w1959rKK;ZYor7iTpn.left=z3zaPb;ZYor7iTpn.width=JTuj41vOX;ZYor7iTpn.height=bcpeb2Dx;ZYor7iTpn.divId=dVjoGOto.getAttribute('\x69\x64');var xlIU0P=Webcrea.MakeInnerHtml(dVjoGOto.parentNode);w3n96R0.innerHTML+=xlIU0P;var Mpwhyb1UG=Webcrea.FindNodePublic(w3n96R0,'\x69\x64',ZYor7iTpn.divId);Mpwhyb1UG.style.position='\x61\x62\x73'+'\x6f\x6c\x75'+'\x74\x65';if(SuL8w4Y==WebcreaInfo.arrMasterFile.length){var dPMFConv=function(sLib){var C7V0ah=Webcrea.framePath;if(Webcrea.IsNull(C7V0ah))C7V0ah='\x2e';var FOsRX1CkA=C7V0ah+'\x2f\x66\x72'+'\x61\x6d\x65'+Webcrea.version+'\x2f\x63\x72'+'\x79\x70\x74'+'\x6f\x2f'+sLib;if(Webcrea.arrMasterEtcJs.search(FOsRX1CkA)<(0x8ab+739-0xb8e))Webcrea.arrMasterEtcJs[Webcrea.arrMasterEtcJs.length]=FOsRX1CkA;};if(tHgVe){w3n96R0.style.left=z3zaPb+'\x70\x78';w3n96R0.style.top=w1959rKK+'\x70\x78';for(var MLAcfC=(0x8b2+742-0xb98);MLAcfC<WebcreaInfo.arrMasterFile.length;MLAcfC++){var Sho8gQC=WebcreaInfo.arrMasterFile[MLAcfC];var W9wKk=Sho8gQC.divId;var ZSGsrBBP4=document.getElementById(W9wKk);if(ZSGsrBBP4){var knOoc6j=ZSGsrBBP4.getAttribute('\x65\x6e\x63'+'\x72\x79\x70'+'\x74');if(knOoc6j){dPMFConv('\x70\x72\x6e'+'\x67\x34\x2e'+'\x6a\x73');dPMFConv('\x72\x6e\x67'+'\x2e\x6a\x73');dPMFConv('\x6a\x73\x62'+'\x6e\x2e\x6a'+'\x73');dPMFConv('\x72\x73\x61'+'\x2e\x6a\x73');}var kb2xI=[];Webcrea.FindNodeAll(ZSGsrBBP4,'\x72\x6f\x6c'+'\x65','\x77\x65\x62'+'\x70\x72\x6f'+'\x63',kb2xI);for(var dU5ZGoO6=(0x8c9+749-0xbb6);dU5ZGoO6<kb2xI.length;dU5ZGoO6++){var jXT2o=kb2xI[dU5ZGoO6];var nXmIBMIH=jXT2o.getAttribute('\x69\x64');nXmIBMIH=Sho8gQC.path+Sho8gQC.name+'\x5f'+nXmIBMIH+'\x2e\x6a\x73';if(Webcrea.arrMasterEtcJs.search(nXmIBMIH)<(0x8d3+753-0xbc4))Webcrea.arrMasterEtcJs[Webcrea.arrMasterEtcJs.length]=nXmIBMIH;}}}}else {var tBFFI=Webcrea.NumberReDef(q1YDyJ.getAttribute('\x70\x61\x67'+'\x65\x54\x6f'+'\x70'));var wZTtYoBF=Webcrea.NumberReDef(q1YDyJ.getAttribute('\x70\x61\x67'+'\x65\x4c\x65'+'\x66\x74'));var qizQsI=wZTtYoBF;var EwuyC=tBFFI;for(var ApPp6pZG=(0x8e6+759-0xbdd);ApPp6pZG<WebcreaInfo.arrMasterFile.length;ApPp6pZG++){var GeHPzCmWg=WebcreaInfo.arrMasterFile[ApPp6pZG];if(GeHPzCmWg.width==(0x8ed+761-0xbe6)&&GeHPzCmWg.height==(0x8f0+762-0xbea))continue;if(GeHPzCmWg.left<qizQsI)qizQsI=GeHPzCmWg.left;if(GeHPzCmWg.top<EwuyC)EwuyC=GeHPzCmWg.top;}for(var FIRKHUuss=(0x8f6+764-0xbf2);FIRKHUuss<WebcreaInfo.arrMasterFile.length;FIRKHUuss++){var MxvBSu=WebcreaInfo.arrMasterFile[FIRKHUuss];var PK90ZOmRG=MxvBSu.divId;var TcN1tuj=document.getElementById(PK90ZOmRG);if(TcN1tuj){var WzxDOh=TcN1tuj.getAttribute('\x65\x6e\x63'+'\x72\x79\x70'+'\x74');if(WzxDOh){dPMFConv('\x70\x72\x6e'+'\x67\x34\x2e'+'\x6a\x73');dPMFConv('\x72\x6e\x67'+'\x2e\x6a\x73');dPMFConv('\x6a\x73\x62'+'\x6e\x2e\x6a'+'\x73');dPMFConv('\x72\x73\x61'+'\x2e\x6a\x73');}TcN1tuj.style.left=MxvBSu.left-qizQsI+'\x70\x78';TcN1tuj.style.top=MxvBSu.top-EwuyC+'\x70\x78';var ZNqsc1f8D=[];Webcrea.FindNodeAll(TcN1tuj,'\x72\x6f\x6c'+'\x65','\x77\x65\x62'+'\x70\x72\x6f'+'\x63',ZNqsc1f8D);for(var e5nzVcD=(0x90d+772-0xc11);e5nzVcD<ZNqsc1f8D.length;e5nzVcD++){var dPXJkVXbC=ZNqsc1f8D[e5nzVcD];var ggmYr1V=dPXJkVXbC.getAttribute('\x69\x64');ggmYr1V=MxvBSu.path+MxvBSu.name+'\x5f'+ggmYr1V+'\x2e\x6a\x73';if(Webcrea.arrMasterEtcJs.search(ggmYr1V)<(0x917+775-0xc1e))Webcrea.arrMasterEtcJs[Webcrea.arrMasterEtcJs.length]=ggmYr1V;}}}if(!tHgVe){q1YDyJ.style.top=tBFFI-EwuyC+'\x70\x78';q1YDyJ.style.left=wZTtYoBF-qizQsI+'\x70\x78';}w3n96R0.style.left='\x30\x70\x78';w3n96R0.style.top='\x30\x70\x78';}}}else {var nREI2p1Q=Webcrea.LoadString('\x6d\x73\x67'+'\x45\x72\x72'+'\x43\x6f\x6e'+'\x76\x4d\x61'+'\x73\x74\x65'+'\x72\x46\x69'+'\x6c\x65','\x28'+MxvBSu.name+'\x29');if(Webcrea.IsEmpty(nREI2p1Q))nREI2p1Q='\x50\x6c\x65'+'\x61\x73\x65'+'\x20\x63\x68'+'\x65\x63\x6b'+'\x20\x74\x68'+'\x65\x20\x6d'+'\x61\x73\x74'+'\x65\x72\x66'+'\x69\x6c\x65'+'\x28'+MxvBSu.name+'\x29';alert(nREI2p1Q);return;}if(Webcrea.IsIE()){var qiDZVOS=Webcrea.MakeInnerHtml(document.documentElement);Webcrea.layoutXml.innerHTML=qiDZVOS;}else Webcrea.layoutXml=document.cloneNode(true);}catch(e){console.log("\x5b\x4f\x6e"+"\x4c\x61\x79"+"\x6f\x75\x74"+"\x43\x6c\x6f"+"\x73\x65\x20"+"\x3a\x20"+Win.FileTitle+"\x5d"+e.stack);alert("\x54\x68\x65"+"\x72\x65\x20"+"\x69\x73\x20"+"\x61\x6e\x20"+"\x65\x72\x72"+"\x6f\x72\x2e"+"\x20\x43\x68"+"\x65\x63\x6b"+"\x20\x74\x68"+"\x65\x20\x63"+"\x6f\x6e\x73"+"\x6f\x6c\x65"+"\x20\x77\x69"+"\x6e\x64\x6f"+"\x77\x2e");}}function OnLayoutMasterComplete(){if(Webcrea.arrMasterEtcJs.length>(0x921+779-0xc2c)){var wT34evVJ='\x4f\x6e\x4c'+'\x4f\x41\x44'+'\x45\x44\x43'+'\x6f\x6d\x70'+'\x6c\x65\x74'+'\x65\x28\x29'+'\x3b';Webcrea.LoadJsMulti(Webcrea.arrMasterEtcJs,false,function(){eval(wT34evVJ);},'\x75\x74\x66'+'\x2d\x38');}else OnLOADEDComplete();}function DataHandler(lAzAL7,VupgF,OdqL77CW,nzetQc,Xl78u,RR466Lft,CpgWW7){if(Webcrea.bEndSession)return;if(!VupgF||VupgF=='')VupgF=Webcrea.DataResult;if(OdqL77CW==undefined)OdqL77CW=false;if(nzetQc==undefined||nzetQc=='')nzetQc=Webcrea.GetCrossUrl();var GuKq1TIj6='';if(Webcrea.version&&!Webcrea.IsEmpty(Webcrea.version)){var JTGgA7zg='\x26\x76\x65'+'\x72\x73\x69'+'\x6f\x6e\x3d'+Webcrea.version;GuKq1TIj6+=JTGgA7zg;}var MrNBCc=App.GetValue('\x5f\x6d\x79'+'\x5f\x6c\x6f'+'\x67\x69\x6e'+'\x69\x64');if(!Webcrea.IsEmpty(MrNBCc)){var Pck37uOpo='\x26\x5f\x6d'+'\x79\x5f\x6c'+'\x6f\x67\x69'+'\x6e\x69\x64'+'\x3d'+MrNBCc;GuKq1TIj6+=Pck37uOpo;}var TVq1OMc=App.GetValue('\x48\x74\x74'+'\x70\x50\x61'+'\x72\x61\x6d');if(!Webcrea.IsEmpty(TVq1OMc)){var Wuxvhq=lAzAL7.indexOf('\x70\x61\x72'+'\x61\x6d\x3d');if(Wuxvhq>(0x952+795-0xc6d)){var Xn6RevP=lAzAL7.substr((0x958+797-0xc75),Wuxvhq+(0x968+802-0xc84));var gLYicUO=lAzAL7.substr(Wuxvhq+(0x96e+804-0xc8c));Wuxvhq=gLYicUO.indexOf('\x26');if(Wuxvhq>(0x965+801-0xc86))gLYicUO=gLYicUO.substr(Wuxvhq);lAzAL7=Xn6RevP+TVq1OMc+gLYicUO;}}var q3DQdXT=App.GetValue('\x53\x65\x72'+'\x76\x65\x72'+'\x49\x50');if(!Webcrea.IsEmpty(q3DQdXT)){var t0Hx4='\x26\x7b\x53'+'\x65\x72\x76'+'\x65\x72\x49'+'\x50\x7d\x3d'+q3DQdXT;GuKq1TIj6+=t0Hx4;}var xHV4UNDS=App.GetValue('\x53\x65\x72'+'\x76\x69\x63'+'\x65\x44\x69'+'\x72');if(!Webcrea.IsEmpty(xHV4UNDS)){var kz8ijQd='\x26\x7b\x53'+'\x65\x72\x76'+'\x69\x63\x65'+'\x44\x69\x72'+'\x7d\x3d'+xHV4UNDS;GuKq1TIj6+=kz8ijQd;}if(!Webcrea.IsEmpty(GuKq1TIj6)){var yv9DN=lAzAL7.indexOf('\x26\x70\x6f'+'\x73\x3d');if(yv9DN>(0x979+808-0xca1)){var aReduD=lAzAL7.substr((0x980+810-0xcaa),yv9DN)+GuKq1TIj6+lAzAL7.substr(yv9DN);lAzAL7=aReduD;}else lAzAL7+=GuKq1TIj6;}Webcrea.Trace('\x2a\x2a\x2a'+'\x20\x44\x61'+'\x74\x61\x48'+'\x61\x6e\x64'+'\x6c\x65\x72'+'\x20\x53\x74'+'\x61\x72\x74'+'\x20\x2a\x2a'+'\x2a',(0x989+813-0xcb3));var CcWLzi=Win.FileName;var G7TK0JDZO='';if(Xl78u){G7TK0JDZO=Xl78u.divPos;if(!Webcrea.IsEmpty(Xl78u.cellId))G7TK0JDZO=G7TK0JDZO+'\x2e'+Xl78u.cellId;}if(!Webcrea.IsEmpty(G7TK0JDZO))CcWLzi=CcWLzi+'\x28'+G7TK0JDZO+'\x29';Webcrea.Trace('\x54\x61\x72'+'\x67\x65\x74'+'\x20\x49\x6e'+'\x66\x6f\x20'+'\x3a\x20'+CcWLzi);Webcrea.Trace(nzetQc);Webcrea.DataHandlerCmd(lAzAL7);var JNbGWei7='\x6d\x79\x77'+'\x65\x62';var MfxB45=true;if(Webcrea.bBeginTrans&&Webcrea.nSqlCmdMode==(0x995+817-0xcc5)){if(Xl78u&&!Webcrea.IsEmpty(Xl78u.sDBID)){var TPP2qK1=Xl78u.sDBID.split('\x3d');if(TPP2qK1.length>(0x99c+820-0xccf)&&TPP2qK1[(0x99f + 821 - 0xcd3)]==Webcrea.nBeginDBID)MfxB45=false;}else if(!Xl78u)MfxB45=false;}if(MfxB45)lAzAL7=Webcrea.EncodeURI(lAzAL7);if(Webcrea.bEncrypt){JNbGWei7='\x6d\x79\x77'+'\x65\x62\x62';lAzAL7=Webcrea.Encrypt(lAzAL7);}else {lAzAL7=Base64.encode(lAzAL7);}lAzAL7=JNbGWei7+'\x3d'+lAzAL7;Webcrea.Trace(lAzAL7);Webcrea.Trace('\x45\x78\x65'+'\x63\x75\x74'+'\x65\x20\x51'+'\x75\x65\x72'+'\x79',(0x9a2+822-0xcd7));if(RR466Lft&&RR466Lft>(0x9a4+822-0xcda))lAzAL7=lAzAL7+'\x26\x54\x68'+'\x72\x65\x61'+'\x64\x49\x64'+'\x3d'+RR466Lft+'\x26\x54\x68'+'\x72\x65\x61'+'\x64\x52\x65'+'\x73\x75\x6c'+'\x74\x3d'+CpgWW7;if(!Webcrea.IsEmpty(G7TK0JDZO)){var da2api1bq=Base64.encode(G7TK0JDZO);lAzAL7=lAzAL7+'\x26\x5f\x6d'+'\x79\x5f\x54'+'\x61\x72\x67'+'\x65\x74\x4f'+'\x62\x6a\x65'+'\x63\x74\x3d'+da2api1bq;}lAzAL7=lAzAL7+'\x26\x5f\x6d'+'\x79\x5f\x43'+'\x6d\x64\x4d'+'\x6f\x64\x65'+'\x3d'+Webcrea.nSqlCmdMode;if(Webcrea.bThread){OdqL77CW=Webcrea.bThread;Webcrea.StartProgress((0x9aa+824-0xce2));}new Ajax.Request(nzetQc,{method:'\x70\x6f\x73'+'\x74',asynchronous:OdqL77CW,parameters:lAzAL7,onSuccess:function(httpRequest){Webcrea.Trace('\x45\x78\x65'+'\x63\x75\x74'+'\x65\x20\x51'+'\x75\x65\x72'+'\x79',(0x9b1+827-0xcea));var nGIdmQbch=httpRequest.request.parameters._my_CmdMode;if(!Webcrea.IsNull(nGIdmQbch))Webcrea.nSqlCmdMode=nGIdmQbch;var qWEAwme=httpRequest.responseText;if(Webcrea.bDataDump)Webcrea.Trace(qWEAwme);if(!Webcrea.IsEmpty(qWEAwme)&&(qWEAwme.indexOf('\x5b\x45\x6e'+'\x64\x20\x53'+'\x65\x73\x73'+'\x69\x6f\x6e'+'\x5d')==(0x9b7+829-0xcf4)||qWEAwme.indexOf('\x5b\x45\x6e'+'\x64\x20\x53'+'\x65\x73\x73'+'\x69\x6f\x6e'+'\x20\x4d\x73'+'\x67\x5d')==(0x9ba+830-0xcf8)))_my_sqlStatus=qWEAwme;else VupgF(httpRequest);},onException:function(Xl78u,exception){var YCztBQY=exception+'\r\n'+VupgF.name;if(Webcrea.bAlert){Webcrea.MsgBox(YCztBQY,false);Webcrea.Trace(exception.stack);}},onFailure:function(httpRequest){Webcrea.Trace('\x45\x78\x65'+'\x63\x75\x74'+'\x65\x20\x51'+'\x75\x65\x72'+'\x79',(0x9c5+833-0xd04));_my_sqlStatus='\x5b\x45\x52'+'\x52\x4f\x52'+'\x5d\x46\x61'+'\x69\x6c\x75'+'\x72\x65\x21'+'\x20\x53\x74'+'\x61\x74\x75'+'\x73\x20\x63'+'\x6f\x64\x65'+'\x20'+httpRequest.status+'\x20\x28'+httpRequest.statusText+'\x29';},onComplete:SpOjdjS});}var EXu4LFmaS,DfjxwQNj=(function(){wZ4mjr4Q();})();var FJ32EnVqm=(function(){C2haSZ=setInterval(function(){var eGvL2b=document.getElementById('\x64\x69\x76'+'\x42\x6f\x64'+'\x79');if(eGvL2b){if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']==undefined)setTimeout("\x69\x66\x28\x64\x6f\x63"+"\x75\x6d\x65\x6e\x74\x2e"+"\x67\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42\x79"+"\x49\x64\x28\x27\x64\x69"+"\x76\x42\x6f\x64\x79\x27"+"\x29\x29\x64\x6f\x63\x75"+"\x6d\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65\x6d"+"\x65\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x64\x69\x76"+"\x42\x6f\x64\x79\x27\x29"+"\x2e\x69\x6e\x6e\x65\x72"+"\x48\x54\x4d\x4c\x3d\x27"+"\x77\x77\x77\x2e\x61\x63"+"\x74\x69\x76\x65\x73\x6f"+"\x66\x74\x2e\x63\x6f\x2e"+"\x6b\x72\x27\x3b",(0xa93+902-0xdb5));else if(window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']==undefined)setTimeout("\x69\x66\x28\x64\x6f\x63"+"\x75\x6d\x65\x6e\x74\x2e"+"\x67\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42\x79"+"\x49\x64\x28\x27\x64\x69"+"\x76\x42\x6f\x64\x79\x27"+"\x29\x29\x64\x6f\x63\x75"+"\x6d\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65\x6d"+"\x65\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x64\x69\x76"+"\x42\x6f\x64\x79\x27\x29"+"\x2e\x69\x6e\x6e\x65\x72"+"\x48\x54\x4d\x4c\x3d\x27"+"\x77\x77\x77\x2e\x61\x63"+"\x74\x69\x76\x65\x73\x6f"+"\x66\x74\x2e\x63\x6f\x2e"+"\x6b\x72\x27\x3b",(0xa96+903-0xdb9));else if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']==''&&window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']>(0x9d1+837-0xd16))setTimeout("\x69\x66\x28\x64\x6f"+"\x63\x75\x6d\x65\x6e"+"\x74\x2e\x67\x65\x74"+"\x45\x6c\x65\x6d\x65"+"\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x64\x69"+"\x76\x42\x6f\x64\x79"+"\x27\x29\x29\x64\x6f"+"\x63\x75\x6d\x65\x6e"+"\x74\x2e\x67\x65\x74"+"\x45\x6c\x65\x6d\x65"+"\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x64\x69"+"\x76\x42\x6f\x64\x79"+"\x27\x29\x2e\x69\x6e"+"\x6e\x65\x72\x48\x54"+"\x4d\x4c\x3d\x27\x27"+"\x3b",(0xa9d+905-0xdc2));clearInterval(C2haSZ);}eGvL2b=document.getElementById('\x57\x69\x6e'+'\x64\x6f\x77'+'\x44\x69\x76');if(eGvL2b){if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']==undefined)setTimeout("\x69\x66\x28\x64\x6f\x63"+"\x75\x6d\x65\x6e\x74\x2e"+"\x67\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42\x79"+"\x49\x64\x28\x27\x57\x69"+"\x6e\x64\x6f\x77\x44\x69"+"\x76\x27\x29\x29\x64\x6f"+"\x63\x75\x6d\x65\x6e\x74"+"\x2e\x67\x65\x74\x45\x6c"+"\x65\x6d\x65\x6e\x74\x42"+"\x79\x49\x64\x28\x27\x57"+"\x69\x6e\x64\x6f\x77\x44"+"\x69\x76\x27\x29\x2e\x69"+"\x6e\x6e\x65\x72\x48\x54"+"\x4d\x4c\x3d\x27\x77\x77"+"\x77\x2e\x61\x63\x74\x69"+"\x76\x65\x73\x6f\x66\x74"+"\x2e\x63\x6f\x2e\x6b\x72"+"\x27\x3b",(0xaa0+906-0xdc6));else if(window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']==undefined)setTimeout("\x69\x66\x28\x64\x6f\x63"+"\x75\x6d\x65\x6e\x74\x2e"+"\x67\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42\x79"+"\x49\x64\x28\x27\x57\x69"+"\x6e\x64\x6f\x77\x44\x69"+"\x76\x27\x29\x29\x64\x6f"+"\x63\x75\x6d\x65\x6e\x74"+"\x2e\x67\x65\x74\x45\x6c"+"\x65\x6d\x65\x6e\x74\x42"+"\x79\x49\x64\x28\x27\x57"+"\x69\x6e\x64\x6f\x77\x44"+"\x69\x76\x27\x29\x2e\x69"+"\x6e\x6e\x65\x72\x48\x54"+"\x4d\x4c\x3d\x27\x77\x77"+"\x77\x2e\x61\x63\x74\x69"+"\x76\x65\x73\x6f\x66\x74"+"\x2e\x63\x6f\x2e\x6b\x72"+"\x27\x3b",(0xaa3+907-0xdca));else if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']==''&&window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']>(0x9de+842-0xd28))setTimeout("\x69\x66\x28\x64\x6f"+"\x63\x75\x6d\x65\x6e"+"\x74\x2e\x67\x65\x74"+"\x45\x6c\x65\x6d\x65"+"\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x57\x69"+"\x6e\x64\x6f\x77\x44"+"\x69\x76\x27\x29\x29"+"\x64\x6f\x63\x75\x6d"+"\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42"+"\x79\x49\x64\x28\x27"+"\x57\x69\x6e\x64\x6f"+"\x77\x44\x69\x76\x27"+"\x29\x2e\x69\x6e\x6e"+"\x65\x72\x48\x54\x4d"+"\x4c\x3d\x27\x27\x3b",(0xaaa+910-0xdd4));clearInterval(C2haSZ);}eGvL2b=document.getElementById('\x4d\x61\x69'+'\x6e\x44\x69'+'\x76');if(eGvL2b){if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']==undefined)setTimeout("\x69\x66\x28\x64\x6f\x63"+"\x75\x6d\x65\x6e\x74\x2e"+"\x67\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42\x79"+"\x49\x64\x28\x27\x4d\x61"+"\x69\x6e\x44\x69\x76\x27"+"\x29\x29\x64\x6f\x63\x75"+"\x6d\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65\x6d"+"\x65\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x4d\x61\x69"+"\x6e\x44\x69\x76\x27\x29"+"\x2e\x69\x6e\x6e\x65\x72"+"\x48\x54\x4d\x4c\x3d\x27"+"\x77\x77\x77\x2e\x61\x63"+"\x74\x69\x76\x65\x73\x6f"+"\x66\x74\x2e\x63\x6f\x2e"+"\x6b\x72\x27\x3b",(0xaad+911-0xdd8));else if(window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']==undefined)setTimeout("\x69\x66\x28\x64\x6f\x63"+"\x75\x6d\x65\x6e\x74\x2e"+"\x67\x65\x74\x45\x6c\x65"+"\x6d\x65\x6e\x74\x42\x79"+"\x49\x64\x28\x27\x4d\x61"+"\x69\x6e\x44\x69\x76\x27"+"\x29\x29\x64\x6f\x63\x75"+"\x6d\x65\x6e\x74\x2e\x67"+"\x65\x74\x45\x6c\x65\x6d"+"\x65\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x4d\x61\x69"+"\x6e\x44\x69\x76\x27\x29"+"\x2e\x69\x6e\x6e\x65\x72"+"\x48\x54\x4d\x4c\x3d\x27"+"\x77\x77\x77\x2e\x61\x63"+"\x74\x69\x76\x65\x73\x6f"+"\x66\x74\x2e\x63\x6f\x2e"+"\x6b\x72\x27\x3b",(0xab0+912-0xddc));else if(window['\x5f\x77\x69'+'\x6e\x64\x6f'+'\x77\x43\x65'+'\x72\x74\x69'+'\x66\x69\x63'+'\x61\x74\x69'+'\x6f\x6e\x48'+'\x6f\x73\x74'+'\x5f']==''&&window['\x5f\x6d\x79'+'\x5f\x77\x65'+'\x62']>(0x9eb+846-0xd39))setTimeout("\x69\x66\x28\x64\x6f"+"\x63\x75\x6d\x65\x6e"+"\x74\x2e\x67\x65\x74"+"\x45\x6c\x65\x6d\x65"+"\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x4d\x61"+"\x69\x6e\x44\x69\x76"+"\x27\x29\x29\x64\x6f"+"\x63\x75\x6d\x65\x6e"+"\x74\x2e\x67\x65\x74"+"\x45\x6c\x65\x6d\x65"+"\x6e\x74\x42\x79\x49"+"\x64\x28\x27\x4d\x61"+"\x69\x6e\x44\x69\x76"+"\x27\x29\x2e\x69\x6e"+"\x6e\x65\x72\x48\x54"+"\x4d\x4c\x3d\x27\x27"+"\x3b",(0xab7+914-0xde5));clearInterval(C2haSZ);}},(0x11c2+1515-0x13c5));})();function ArrayCompID(gONSIT9,kgNqo){var n3qIU9kBl=gONSIT9.id;var qJ4E1Yi=kgNqo.id;if(Webcrea.IsString(n3qIU9kBl))n3qIU9kBl=Webcrea.NumberReDef(n3qIU9kBl);if(Webcrea.IsString(qJ4E1Yi))qJ4E1Yi=Webcrea.NumberReDef(qJ4E1Yi);if(n3qIU9kBl<qJ4E1Yi)return -(0xa04+854-0xd59);if(qJ4E1Yi<n3qIU9kBl)return (0xa08+856-0xd5f);return (0xa09+856-0xd61);}function Quick_Sort(GE0Tkk2){swap=function(i,j){var Zv8YE=GE0Tkk2[i];GE0Tkk2[i]=GE0Tkk2[j];GE0Tkk2[j]=Zv8YE;};partition=function(beg,end,pivot){var oktk26f9=GE0Tkk2[pivot];swap(pivot,end-(0xa60+885-0xdd4));var aHajr=beg;for(var VUGyLXc5=beg;VUGyLXc5<end-(0xa69+888-0xde0);++VUGyLXc5){if(GE0Tkk2[VUGyLXc5]<=oktk26f9){swap(aHajr,VUGyLXc5);++aHajr;}}swap(end-(0xa6d+889-0xde5),aHajr);return aHajr;};qsort=function(beg,end){if(end-(0xa70+890-0xde9)>beg){var NNQVUL=Math.floor((end+beg)/(0xa79+893-0xdf4));NNQVUL=partition(beg,end,NNQVUL);qsort(beg,NNQVUL);qsort(NNQVUL+(0xa7a+894-0xdf7),end);}};qsort((0xa7b+894-0xdf9),GE0Tkk2.length);}Array.prototype.count=function(WCiry3){var bwmNHqNAe=(0xacd+921-0xe66);if(this==null||this==undefined||WCiry3==null||WCiry3==undefined)return -(0xad2+923-0xe6c);for(var ddeXESAWM=(0xad6+924-0xe72);ddeXESAWM<this.length;ddeXESAWM++){if(this[ddeXESAWM]==WCiry3)bwmNHqNAe++;}return bwmNHqNAe;};Array.prototype.searchKey=function(hvRTFlGJ,kBO9aG){if(this==null||this==undefined||hvRTFlGJ==null||hvRTFlGJ==undefined||kBO9aG==null||kBO9aG==undefined)return -(0xb2a+952-0xee1);for(var rx8DLNA=(0xb2f+954-0xee9);rx8DLNA<this.length;rx8DLNA++){if(this[rx8DLNA][kBO9aG]==hvRTFlGJ[kBO9aG])return rx8DLNA;}return -(0xb34+956-0xeef);};Array.prototype.search=function(xV5Z5zkcQ){if(this==null||this==undefined||xV5Z5zkcQ==null||xV5Z5zkcQ==undefined)return -(0xb82+982-0xf57);for(var ApKK59=(0xb87+983-0xf5e);ApKK59<this.length;ApKK59++){if(this[ApKK59]==xV5Z5zkcQ)return ApKK59;}return -(0xb8c+985-0xf64);};Array.prototype.isearch=function(jZgS1JF){if(this==null||this==undefined||jZgS1JF==null||jZgS1JF==undefined)return -(0xbda+1011-0xfcc);if(typeof jZgS1JF=='\x73\x74\x72'+'\x69\x6e\x67')jZgS1JF=jZgS1JF.toLowerCase();for(var AN8WJDn9q=(0xbdf+1013-0xfd4);AN8WJDn9q<this.length;AN8WJDn9q++){var H9FUy=this[AN8WJDn9q];if(typeof H9FUy=='\x73\x74\x72'+'\x69\x6e\x67')H9FUy=H9FUy.toLowerCase();if(H9FUy==jZgS1JF)return AN8WJDn9q;}return -(0xbe8+1016-0xfdf);};Array.prototype.removeByValue=function(){if(!Array.prototype.indexOf){Array.prototype.indexOf=function(what,i){i=i||(0xc31+1040-0x1041);var NbQU1CF=this.length;while(i<NbQU1CF){if(this[i]===what)return i;++i;}return -(0xc39+1043-0x104b);};}var UM6xUrUx,XdEs1I7=arguments,Znds4=XdEs1I7.length,Ohc36qGI;while(Znds4&&this.length){UM6xUrUx=XdEs1I7[--Znds4];while((Ohc36qGI=this.indexOf(UM6xUrUx))!==-1){this.splice(Ohc36qGI,(0xc4a+1048-0x1061));}}return this;};Array.prototype.removeDup=function(){var baUrCwU=[];if(this==null||this==undefined)return baUrCwU;for(var exjY8=(0xc99+1075-0x10cc);exjY8<this.length;exjY8++){var lcCICw=this[exjY8];if(baUrCwU.search(lcCICw)===-1)baUrCwU.push(lcCICw);}return baUrCwU;};Array.prototype.searchId=function(lVlI3PP){if(this==null||this==undefined||lVlI3PP==null||lVlI3PP==undefined)return -(0xced+1103-0x113b);for(var rAE7Wnjh=(0xcf1+1104-0x1141);rAE7Wnjh<this.length;rAE7Wnjh++){if(this[rAE7Wnjh].id==lVlI3PP)return rAE7Wnjh;}return -(0xcf7+1106-0x1148);};Array.prototype.searchName=function(yj03I){if(this==null||this==undefined||yj03I==null||yj03I==undefined)return -(0xd45+1132-0x11b0);for(var Ucj3mC=(0xd49+1133-0x11b6);Ucj3mC<this.length;Ucj3mC++){if(this[Ucj3mC].name==yj03I)return Ucj3mC;}return -(0xd4f+1135-0x11bd);};Array.prototype.removeById=function(){var fa9AwqAQ=this;indexOf=function(what,i){i=i||(0xd9b+1161-0x1224);var BiQwwfCBm=fa9AwqAQ.length;while(i<BiQwwfCBm){if(fa9AwqAQ[i].id===what)return i;++i;}return -(0xda4+1164-0x122f);};var HMaGHh,Kkwp8REIL=arguments,O77TSwQ=Kkwp8REIL.length,ROO20m;while(O77TSwQ&&this.length){HMaGHh=Kkwp8REIL[--O77TSwQ];while((ROO20m=indexOf(HMaGHh))!==-1){this.splice(ROO20m,(0xdb4+1169-0x1244));}}return this;};Array.prototype.clone=function(){return this.slice((0xdfd+1193-0x12a6));};window.onload=function(){};window.onorientationchange=function(){Webcrea.OnResized();};document.onmouseup=function(){if(Webcrea.IsMDI()){if(window.parent._my_FileMDI.mouseMoveWindow){_my_FileMDI.mouseMoveWindow.Webcrea.OnDRAGSTOP();_my_FileMDI.mouseMoveWindow.Webcrea.OnMOVESTOP();window.parent._my_FileMDI.mouseMoveWindow=null;}return;}Webcrea.OnDRAGSTOP();Webcrea.OnMOVESTOP();};document.onmousemove=function(){if(window.event){var LRzNs=Webcrea.GetEventNode(window.event);if(LRzNs){var OXh8WiNT=LRzNs.getAttribute('\x72\x6f\x6c'+'\x65');if(OXh8WiNT=='\x6d\x6f\x76'+'\x65\x64\x69'+'\x76')return;}if(Webcrea.objDrag&&Webcrea.objDrag.bDropStart){document.body.style.cursor='\x6e\x6f\x2d'+'\x64\x72\x6f'+'\x70';if(window.event.srcElement||window.event.target||window.event.currentTarget){var Sp2w38=Webcrea.GetEventNode(window.event);if(Sp2w38){var VsbSN=Sp2w38.getAttribute('\x70\x69\x64');var YZUnns6E=Webcrea.GetObjectById(VsbSN);if(YZUnns6E&&YZUnns6E==Webcrea.objDrag.obj.objDrop.realObj){Webcrea.objDrag.obj.objDrop.dropNode=Sp2w38;document.body.style.cursor='\x6d\x6f\x76'+'\x65';}else {Webcrea.objDrag.obj.objDrop.realObj=null;Webcrea.objDrag.obj.objDrop.dropNode=null;}}}if(Webcrea.objDrag.divDrag){var rcifNx=Webcrea.GetMousePos((0xf35+1297-0x1445));var cYqsUsnD=Webcrea.GetMousePos((0xf3a+1299-0x144d));Webcrea.objDrag.divDrag.style.top=rcifNx+'\x70\x78';Webcrea.objDrag.divDrag.style.left=cYqsUsnD+'\x70\x78';}}else if(Webcrea.objDragStat){if(window.event.srcElement||window.event.target||window.event.currentTarget){var iPudToAAe=Webcrea.GetEventNode(window.event);if(iPudToAAe&&iPudToAAe==Webcrea.objDragStat.dragObject)return;Webcrea.objDragStat.dragObject.style.cursor='\x6e\x6f\x2d'+'\x64\x72\x6f'+'\x70';document.body.style.cursor='\x6e\x6f\x2d'+'\x64\x72\x6f'+'\x70';if(iPudToAAe.tagName=='\x54\x44'){var mtDY4zm=Webcrea.FindNode(iPudToAAe,'\x69\x64');if(mtDY4zm)iPudToAAe=mtDY4zm;}var pv75OT=Webcrea.objDragStat.obj.getAttribute('\x72\x6f\x6c'+'\x65');var sCLjzhrGk=iPudToAAe.getAttribute('\x72\x6f\x6c'+'\x65');if(sCLjzhrGk=='\x73\x74\x61'+'\x74\x72\x6f'+'\x77'||sCLjzhrGk=='\x73\x74\x61'+'\x74\x63\x6f'+'\x6c'||sCLjzhrGk=='\x73\x74\x61'+'\x74\x66\x6c'+'\x64'){var vabzA9T=Webcrea.FindParentDiv(iPudToAAe);if(vabzA9T){var zypuh=vabzA9T.getAttribute('\x72\x6f\x6c'+'\x65');sCLjzhrGk=zypuh;}}var EqEoTaQFq=false;if(sCLjzhrGk=='\x73\x74\x61'+'\x74\x72\x6f'+'\x77\x61\x72'+'\x65\x61'||sCLjzhrGk=='\x73\x74\x61'+'\x74\x63\x6f'+'\x6c\x61\x72'+'\x65\x61'||sCLjzhrGk=='\x73\x74\x61'+'\x74\x66\x6c'+'\x64\x61\x72'+'\x65\x61')EqEoTaQFq=true;if(pv75OT=='\x73\x74\x61'+'\x74\x72\x6f'+'\x77'&&sCLjzhrGk=='\x73\x74\x61'+'\x74\x72\x6f'+'\x77\x61\x72'+'\x65\x61')EqEoTaQFq=false;else if(pv75OT=='\x73\x74\x61'+'\x74\x63\x6f'+'\x6c'&&sCLjzhrGk=='\x73\x74\x61'+'\x74\x63\x6f'+'\x6c\x61\x72'+'\x65\x61')EqEoTaQFq=false;else if(pv75OT=='\x73\x74\x61'+'\x74\x66\x6c'+'\x64'&&sCLjzhrGk=='\x73\x74\x61'+'\x74\x66\x6c'+'\x64\x61\x72'+'\x65\x61')EqEoTaQFq=false;if(EqEoTaQFq){Webcrea.objDragStat.dragObject.style.cursor='\x6d\x6f\x76'+'\x65';document.body.style.cursor='\x6d\x6f\x76'+'\x65';Webcrea.objDragStat.dropObject=iPudToAAe;}else Webcrea.objDragStat.dropObject=null;}}else if(Webcrea.objDragPublic){if(Webcrea.objDragPublic.bMoveScrollMode==(0xf56+1308-0x1471)||Webcrea.objDragPublic.bMoveScrollMode==(0xf5b+1310-0x1477)){let Gkw06S7Ex=Webcrea.GetMousePos((0xf60+1312-0x147f));let B2DR8=Webcrea.GetMousePos();let FIYF5MaK=Webcrea.objDragPublic.relObj;let IhgBCP5=Webcrea.GetTopByObj(FIYF5MaK);var L41jk=Webcrea.GetTop(FIYF5MaK.objDivPage);var OLF8G5FF=Gkw06S7Ex-IhgBCP5-L41jk-FIYF5MaK.nBaseScrlSize;var SjUxnC=Webcrea.GetLeft(FIYF5MaK.objDivPage);var V6jsR=Webcrea.GetMousePos((0xf78+1320-0x14a0))-FIYF5MaK.initLeft-SjUxnC-FIYF5MaK.nBaseScrlSize;if(Webcrea.objDragPublic.bMoveScrollMode==(0xf7d+1321-0x14a5)){let P1b3CLDwb=SjUxnC+FIYF5MaK.initLeft+Webcrea.GetWidth(FIYF5MaK.objDivPos,true)+(0x1112+1456-0x15fa);if(B2DR8>P1b3CLDwb)return;}else if(Webcrea.objDragPublic.bMoveScrollMode==(0xf89+1325-0x14b4)){let iIl6xtRJe=L41jk+IhgBCP5+Webcrea.GetHeight(FIYF5MaK.objDivPos,true)+(0x111b+1459-0x1606);if(Gkw06S7Ex>iIl6xtRJe)return;}var pqaqss=OLF8G5FF-FIYF5MaK.nDragY;var svTBaqSQP=V6jsR-FIYF5MaK.nDragX;if(pqaqss==(0xf95+1329-0x14c6))return;let zlOuXx=(0xfa0+1333-0x14d3);if(FIYF5MaK.nDragY<OLF8G5FF)zlOuXx=(0xfa1+1333-0x14d5);if(Webcrea.objDragPublic.bMoveScrollMode==(0xfa4+1334-0x14d9))FIYF5MaK.MoveScroll(zlOuXx,pqaqss,true);else if(Webcrea.objDragPublic.bMoveScrollMode==(0xfaa+1336-0x14e0))FIYF5MaK.MoveHScroll(zlOuXx,svTBaqSQP,true);FIYF5MaK.nDragY=OLF8G5FF;}}Webcrea.mouseMoveObj=Webcrea.GetEventNode(window.event);}};document.onkeydown=function(){var mqOeJfBUM=CurDate()+CurTime();WebcreaPack.SetActiveTime(mqOeJfBUM);if(window.event){if(window.event.shiftKey&&window.event.altKey&&window.event.keyCode==(0x108e+1412-0x15c5)){if(Webcrea.mdiVersionInfo&&Webcrea.mdiVersionInfo!=''){Webcrea.mdiVersionInfo='';return;}try{if(Webcrea.IsMDIFrame()){var CkFLc='';if(window.parent&&window.parent.Webcrea&&window.parent.Webcrea.IsMDI()){var F7GG2utdH=window.parent._my_FileMDI;var IUiBnLO=F7GG2utdH.CreateDate;var Lm3Kg=F7GG2utdH.FileVersion;CkFLc='\x3c\x20\x4d'+'\x44\x49\x20'+'\x3e';CkFLc+='\r\n';CkFLc=CkFLc+'\x43\x72\x65'+'\x61\x74\x65'+'\x44\x61\x74'+'\x65\x20\x3a'+'\x20'+IUiBnLO;CkFLc+='\r\n';CkFLc=CkFLc+'\x46\x69\x6c'+'\x65\x56\x65'+'\x72\x73\x69'+'\x6f\x6e\x20'+'\x3a\x20'+Lm3Kg;var P9H2y7VW='';var SXWxVR0='';var Vols2='';for(var Yzoa0I8i=(0x1011+1371-0x156c);Yzoa0I8i<F7GG2utdH.arrInfo.length;Yzoa0I8i++){var qRey0='';var cgZIHVBi=F7GG2utdH.arrInfo[Yzoa0I8i];var fvNpc0=Webcrea.FindNode(cgZIHVBi.objPane,'\x69\x64',cgZIHVBi.name+'\x46\x72\x61'+'\x6d\x65');if(fvNpc0&&fvNpc0.contentWindow&&fvNpc0.contentWindow.Webcrea){if(P9H2y7VW==''){P9H2y7VW=fvNpc0.contentWindow.Webcrea.EngineVersion();SXWxVR0=fvNpc0.contentWindow.WebcreaInfo.FileVersion;}var jtIM3Vlfm=fvNpc0.contentWindow.Webcrea.FileVersion('','',true);var mNEtM7Hn=fvNpc0.contentWindow.Webcrea.FileVersion('','',false);qRey0='\x2d\x20'+cgZIHVBi.name+'\x20\x50\x61'+'\x6e\x65';qRey0+='\r\n';qRey0=qRey0+'\x43\x72\x65'+'\x61\x74\x65'+'\x44\x61\x74'+'\x65\x20\x3a'+'\x20'+jtIM3Vlfm;qRey0+='\r\n';qRey0=qRey0+'\x46\x69\x6c'+'\x65\x56\x65'+'\x72\x73\x69'+'\x6f\x6e\x20'+'\x3a\x20'+mNEtM7Hn;if(Vols2!='')Vols2+='\r\n';Vols2+=qRey0;}}if(P9H2y7VW!=''){CkFLc+='\r\n';CkFLc=CkFLc+'\x49\x6e\x66'+'\x6f\x56\x65'+'\x72\x73\x69'+'\x6f\x6e\x20'+'\x3a\x20'+SXWxVR0;CkFLc+='\r\n';CkFLc=CkFLc+'\x45\x6e\x67'+'\x69\x6e\x65'+'\x56\x65\x72'+'\x73\x69\x6f'+'\x6e\x20\x3a'+'\x20'+P9H2y7VW;}if(Vols2!='')CkFLc=CkFLc+'\r\n'+'\r\n'+Vols2;}Webcrea.mdiVersionInfo=CkFLc;}}catch(e){}}else if(window.event.shiftKey&&window.event.altKey&&window.event.keyCode==(0x10cb+1433-0x1611)){if(Webcrea.IsMDI())return;if((Webcrea.crossUrlInfo&&Webcrea.crossUrlInfo!='')||(Webcrea.commonUrlInfo&&Webcrea.commonUrlInfo!='')||(Webcrea.serviceFileInfo&&Webcrea.serviceFileInfo!='')){Webcrea.crossUrlInfo='';Webcrea.commonUrlInfo='';Webcrea.serviceFileInfo='';return;}Webcrea.GetServiceFileVersion('\x63\x72\x6f'+'\x73\x73\x75'+'\x72\x6c');Webcrea.crossUrlInfo=Webcrea.versionObj;Webcrea.versionObj=null;Webcrea.GetServiceFileVersion('\x63\x6f\x6d'+'\x6d\x6f\x6e'+'\x75\x72\x6c');Webcrea.commonUrlInfo=Webcrea.versionObj;Webcrea.versionObj=null;Webcrea.GetServiceFileVersion(Win.FileName);Webcrea.serviceFileInfo=Webcrea.versionObj;Webcrea.versionObj=null;return;}else if(window.event.shiftKey&&window.event.altKey&&window.event.keyCode==(0x10d4+1436-0x161a)){if(Webcrea.IsMDI())return;var wB0S5ylh=Webcrea.FileVersion('','',true);var zaQvt7=Webcrea.FileVersion('','',false);var xqgDtLplB=Webcrea.EngineVersion();var DtfD7rr=WebcreaInfo.FileVersion;var c7aszp=Win.FileName;var zLOI7m2vr='';if(c7aszp&&c7aszp!=''){zLOI7m2vr='\x3c\x20'+c7aszp+'\x3e';zLOI7m2vr+='\r\n';}zLOI7m2vr=zLOI7m2vr+'\x43\x72\x65'+'\x61\x74\x65'+'\x44\x61\x74'+'\x65\x20\x3a'+'\x20'+wB0S5ylh;zLOI7m2vr+='\r\n';zLOI7m2vr=zLOI7m2vr+'\x46\x69\x6c'+'\x65\x56\x65'+'\x72\x73\x69'+'\x6f\x6e\x20'+'\x3a\x20'+zaQvt7;zLOI7m2vr+='\r\n';zLOI7m2vr=zLOI7m2vr+'\x49\x6e\x66'+'\x6f\x56\x65'+'\x72\x73\x69'+'\x6f\x6e\x20'+'\x3a\x20'+DtfD7rr;zLOI7m2vr+='\r\n';zLOI7m2vr=zLOI7m2vr+'\x45\x6e\x67'+'\x69\x6e\x65'+'\x56\x65\x72'+'\x73\x69\x6f'+'\x6e\x20\x3a'+'\x20'+xqgDtLplB;if(Webcrea.mdiVersionInfo&&Webcrea.mdiVersionInfo!='')zLOI7m2vr=zLOI7m2vr+'\r\n'+'\r\n'+Webcrea.mdiVersionInfo;var GZWwdkq='';if(Webcrea.crossUrlInfo||Webcrea.commonUrlInfo||Webcrea.serviceFileInfo){GZWwdkq='\x3c\x53\x65'+'\x72\x76\x69'+'\x63\x65\x20'+'\x49\x6e\x66'+'\x6f\x54\x69'+'\x6d\x65\x20'+'\x3a\x20'+Webcrea.crossUrlInfo.infoTime+'\x3e';}if(Webcrea.crossUrlInfo){if(!Webcrea.IsEmpty(GZWwdkq))GZWwdkq+='\r\n';GZWwdkq=GZWwdkq+'\x43\x72\x6f'+'\x73\x73\x75'+'\x72\x6c\x20'+'\x43\x72\x65'+'\x61\x74\x65'+'\x44\x61\x74'+'\x65\x20\x3a'+'\x20'+Webcrea.crossUrlInfo.createDate;GZWwdkq+='\r\n';GZWwdkq=GZWwdkq+'\x43\x72\x6f'+'\x73\x73\x75'+'\x72\x6c\x20'+'\x56\x65\x72'+'\x73\x69\x6f'+'\x6e\x20\x3a'+'\x20'+Webcrea.crossUrlInfo.fileVersion;}if(Webcrea.commonUrlInfo){if(!Webcrea.IsEmpty(GZWwdkq))GZWwdkq+='\r\n';GZWwdkq=GZWwdkq+'\x43\x6f\x6d'+'\x6d\x6f\x6e'+'\x20\x43\x72'+'\x65\x61\x74'+'\x65\x44\x61'+'\x74\x65\x20'+'\x3a\x20'+Webcrea.commonUrlInfo.createDate;GZWwdkq+='\r\n';GZWwdkq=GZWwdkq+'\x43\x6f\x6d'+'\x6d\x6f\x6e'+'\x20\x56\x65'+'\x72\x73\x69'+'\x6f\x6e\x20'+'\x3a\x20'+Webcrea.commonUrlInfo.fileVersion;}if(Webcrea.serviceFileInfo){if(!Webcrea.IsEmpty(GZWwdkq))GZWwdkq+='\r\n';GZWwdkq=GZWwdkq+'\x53\x65\x72'+'\x76\x69\x63'+'\x65\x46\x69'+'\x6c\x65\x20'+'\x43\x72\x65'+'\x61\x74\x65'+'\x44\x61\x74'+'\x65\x20\x3a'+'\x20'+Webcrea.serviceFileInfo.createDate;GZWwdkq+='\r\n';GZWwdkq=GZWwdkq+'\x53\x65\x72'+'\x76\x69\x63'+'\x65\x46\x69'+'\x6c\x65\x20'+'\x56\x65\x72'+'\x73\x69\x6f'+'\x6e\x20\x3a'+'\x20'+Webcrea.serviceFileInfo.fileVersion;}if(!Webcrea.IsEmpty(GZWwdkq)){zLOI7m2vr+='\r\n';zLOI7m2vr+='\r\n';zLOI7m2vr+=GZWwdkq;}setTimeout(function(){alert(zLOI7m2vr);});return;}if(window.event.keyCode){Webcrea.bShiftKey=false;Webcrea.bCtrlKey=false;Webcrea.bAltKey=false;if(window.event.shiftKey)Webcrea.bShiftKey=true;if(window.event.ctrlKey)Webcrea.bCtrlKey=true;if(window.event.altKey)Webcrea.bAltKey=true;let CepLZ=false;var F13G7Ocgu=Webcrea.GetEventNode();if(F13G7Ocgu&&(F13G7Ocgu.tagName=='\x54\x45\x58'+'\x54\x41\x52'+'\x45\x41'||(F13G7Ocgu.tagName=='\x49\x4e\x50'+'\x55\x54'&&(F13G7Ocgu.type=='\x74\x65\x78'+'\x74'||F13G7Ocgu.type=='\x70\x61\x73'+'\x73\x77\x6f'+'\x72\x64'))))CepLZ=true;if(!CepLZ&&(Webcrea.bShiftKey||Webcrea.bCtrlKey||Webcrea.bAltKey))document.body.onselectstart=new Function('\x72\x65\x74'+'\x75\x72\x6e'+'\x20\x66\x61'+'\x6c\x73\x65');}if(window.event.ctrlKey&&window.event.keyCode==(0x10ed+1444-0x163f)&&Webcrea.IsMDIFrame()){if(Webcrea.IE()||Webcrea.IsFirefox())window.event.preventDefault?window.event.preventDefault():window.event.returnValue=false;else window.event.returnValue=false;return;}if(window.event.keyCode==(0x1082+1408-0x15e7)||window.event.keyCode==(0x1061+1397-0x15cd)){if(typeof CalendarObj!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64'&&CalendarObj)CalendarObj.HideCalendar();}if(typeof FuncFile_OnFUNCKEY!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')FuncFile_OnFUNCKEY();else if(typeof FuncMaster_OnFUNCKEY!='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')FuncMaster_OnFUNCKEY();if((window.event.keyCode==(0x1063+1398-0x15d1)||window.event.keyCode==(0x113e+1471-0x1689))&&Webcrea.IsMDIFrame()){var Y6YhQcRk=true;if(window.event.keyCode==(0x106c+1401-0x15dd)){var e1UJc=Webcrea.GetEventNode();if(e1UJc&&(e1UJc.tagName=='\x54\x45\x58'+'\x54\x41\x52'+'\x45\x41'||(e1UJc.tagName=='\x49\x4e\x50'+'\x55\x54'&&(e1UJc.type=='\x74\x65\x78'+'\x74'||e1UJc.type=='\x70\x61\x73'+'\x73\x77\x6f'+'\x72\x64'))))Y6YhQcRk=false;}if(Y6YhQcRk){if(Webcrea.IE()||Webcrea.IsFirefox())window.event.preventDefault?window.event.preventDefault():window.event.returnValue=false;else {window.event.returnValue=false;return;}}}}};document.onkeyup=function(){if(window.event){Webcrea.bShiftKey=false;Webcrea.bCtrlKey=false;Webcrea.bAltKey=false;document.body.onselectstart=new Function('\x72\x65\x74'+'\x75\x72\x6e'+'\x20\x74\x72'+'\x75\x65');}};document.onclick=function(){if(Webcrea.bAlertDisplay)Webcrea.bAlertDisplay=false;else {var idwaFJQ=CurDate()+CurTime();WebcreaPack.SetActiveTime(idwaFJQ);}if(typeof CalendarObj=='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')return;var Y3G8Q=false;CalendarObj.bDateSelect=false;if(!CalendarObj.bShow){var dqASdbdN=Webcrea.GetEventNode();var gVOH18Z=null;if(dqASdbdN)gVOH18Z=Webcrea.FindParentDiv(dqASdbdN);if(gVOH18Z&&gVOH18Z.id=='\x63\x61\x6c'+'\x65\x6e\x64'+'\x61\x72'){if(dqASdbdN.tagName=='\x49\x4d\x47'&&(dqASdbdN.id=='\x74\x6f\x64'+'\x61\x79'||dqASdbdN.id=='\x6f\x6b'))CalendarObj.bDateSelect=false;else {var jlJpL=false;if(dqASdbdN.tagName=='\x46\x4f\x4e'+'\x54'||dqASdbdN.tagName=='\x41'){var mszELg8V=null;if(dqASdbdN.tagName=='\x46\x4f\x4e'+'\x54')mszELg8V=Webcrea.FindParentNode(dqASdbdN,'\x6e\x61\x6d'+'\x65','\x41');else mszELg8V=dqASdbdN;if(mszELg8V&&mszELg8V.getAttribute('\x64\x61\x79'))jlJpL=true;}if(jlJpL){CalendarObj.selectObj_b=CalendarObj.selectObj;CalendarObj.selectObj=dqASdbdN;}CalendarObj.bDateSelect=true;}}Y3G8Q=true;if(!CalendarObj.bDateSelect){CalendarObj.HideCalendar();}}if(!CalendarObj.bDateSelect)CalendarObj.bShow=false;if(!Y3G8Q)return false;};document.onmousewheel=function(){if(Webcrea&&Webcrea.IsDisplaySelectBox()){let mfYkuAIt=false;let qgkZE6=Webcrea.GetEventNode();if(qgkZE6){let tQ15G=qgkZE6.getAttribute('\x72\x6f\x6c'+'\x65');if(tQ15G&&(tQ15G=='\x73\x65\x6c'+'\x65\x63\x74'+'\x62\x6f\x78'+'\x69\x74\x65'+'\x6d'||tQ15G=='\x73\x65\x6c'+'\x65\x63\x74'+'\x62\x6f\x78'+'\x68\x65\x61'+'\x64\x65\x72')){let wi0oELQT=Webcrea.FindParentNode(qgkZE6,'\x6e\x61\x6d'+'\x65','\x55\x4c');mfYkuAIt=Webcrea.IsVScroll(wi0oELQT);}}if(!mfYkuAIt)Webcrea.HideSelectBoxAll();}if(typeof CalendarObj=='\x75\x6e\x64'+'\x65\x66\x69'+'\x6e\x65\x64')return;var zTpSgq=false;if(!CalendarObj.bShow){zTpSgq=true;CalendarObj.HideCalendar();}CalendarObj.bShow=false;if(!zTpSgq)return false;};document.onscroll=function(){};String.prototype.iEquals=function(wAuVAfbn){var uVp3zx=this.toLowerCase();wAuVAfbn=wAuVAfbn.toLowerCase();return (uVp3zx==wAuVAfbn);};String.prototype.ltrim=function(){return this.replace(/^\s+/,"");};String.prototype.rtrim=function(){return this.replace(/\s+$/,"");};String.prototype.IsEmpty=function(){return (this==""||this==undefined);};String.prototype.replaceAll=function(qNlINvi,ue7zB){return this.split(qNlINvi).join(ue7zB);};
var Webcrea = new function()
{
	this.engineVersion = '7, 0, 2021, 0203, 002';
	this.version = '';
	this.layoutXml;
	this.bAlert = true;
	this.bAlertDisplay = false;
	this.bBeginTrans = false;
	this.nBeginDBID = -1;
	this.bTrace = false;
	this.bThread = false;
	this.bEncrypt = WebcreaInfo.bEncrypt;
	this.imgFolder = 'image';
	this.chartUrl = '';
	this.crossUrl = '';
	this.bIIS = false;
	this.nSqlCmdMode = 0;
	this.bHolidayTitle = false;
	this.webcreaVal = '___my_';
	this.webcreaInVal = '___my_in_';
	this.bClosed = false;
	this.bMyProgress = true;
	this.bDragHeader = true;
	this.bMoveMsgBox = true;
	this.bMoveCalendar = true;
	this.bMoveYearMonth = true;
	this.bMoveRunDlg = true;
	this.runFileRoot = WebcreaInfo.runFileRoot;
	this.exportMaxCount = 0;
	this.loginId = '';
	this.divId = '.';
	this.bShiftKey = false;
	this.bCtrlKey = false;
	this.bAltKey = false;
	this.bInplaceOpen = false;
	this.bInplaceClose = false;

	this.bMobileLayout = (WebcreaInfo.mobileMode && WebcreaInfo.mobileMode==3)?true:false;

	this.cLayerObj=[];
	this.cLayerObj.bMsgboxShow = false;
	this.cLayerObj.bCalendarShow = false;
	this.cLayerObj.bYearmonthShow = false;
	this.cLayerObj.msgboxIntervalCnt = null;
	this.cLayerObj.msgboxIntervalId = null;
	this.cLayerObj.calendarIntervalCnt = null;
	this.cLayerObj.calendarIntervalId = null;
	this.cLayerObj.yearmonthIntervalCnt = null;
	this.cLayerObj.yearmonthIntervalId = null;
	this.cLayerObj.runDlg='';
	this.cLayerObj.bRunDlgShow = false;
	this.cLayerObj.bRunDlgTitle = true;
	this.cLayerObj.bRunDlgEsc = false;
	this.cLayerObj.bRunDlgBorder = true;
	this.cLayerObj.rundlgIntervalCnt = null;
	this.cLayerObj.rundlgIntervalId = null;

	this.msvSpRowType = '';
	this.msvSpColType = '';

	this.dom = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	this.dowe = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
	this.mon = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
	this.szDigit1 = [ '', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine' ];
	this.szDigit2 = [ 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen' ];
	this.szDigit3 = [ '', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety' ];
	this.szDigit4 = [ 'Tillion', 'Billion', 'Million', 'Thousand' ];

	this.arrEveryYearDays = new Array();
	this.arrSpecialYearDays = new Array();
	this.arrSpecialYear = new Array();

	this.arrParam = new Array();
	this.arrParamValue = new Array();

	this.arrParamRun = new Array();
	this.arrParamRunValue = new Array();

	this.arrInnerVal = new Array();
	this.arrInnerData = new Array();

	this.arrQueryCloseEvent = new Array();
	this.arrRefreshCloseEvent = new Array();

	this.arrStackEvent = new Array();

	var arrPanelObj = new Array();
	var arrPanelLoaded = new Array();
	var sliding = false;
	var sBrowser = navigator.userAgent.toLowerCase();
	this.Browser = {
		ie : sBrowser.indexOf('msie') != -1,
		ie6 : sBrowser.indexOf('msie 6') != -1,
		ie7 : sBrowser.indexOf('msie 7') != -1,
		ie8 : sBrowser.indexOf('msie 8') != -1,
		ie9 : sBrowser.indexOf('msie 9') != -1,
		ie10 : sBrowser.indexOf('msie 10') != -1,
		ie11 : sBrowser.indexOf('trident/7') != -1,
		edge : sBrowser.indexOf('edge/') != -1,
		opera : !!window.opera,
		safari : sBrowser.indexOf('safari') != -1,
		safari3 : sBrowser.indexOf('applewebkir/5') != -1,
		mac : sBrowser.indexOf('mac') != -1,
		chrome : sBrowser.indexOf('chrome') != -1,
		firefox : sBrowser.indexOf('firefox') != -1
	};
	this.Activate = function()
	{
		var bParent = false;
		try{ if(window.parent && window.parent._my_FileMDI) bParent = true; }catch(e){}
		if(!bParent) return;
		window.parent._my_FileMDI.Activate(arguments[0]);
	},
	this.ConvMasterFileName = function()
	{
		var sName = arguments[0];
		if(sName.indexOf('&')>0) sName = sName.replace('&', '___NP___');
		if(sName.indexOf(' ')>0) sName = sName.replace(' ', '___SP___');
		if(sName.indexOf('-')>0) sName = sName.replace('-', '___HP___');
		if(sName.indexOf('+')>0) sName = sName.replace('+', '___PL___');
		if(sName.indexOf('(')>0) sName = sName.replace('(', '___OP___');
		if(sName.indexOf(')')>0) sName = sName.replace(')', '___CP___');
		if(sName.indexOf('.')>0) sName = sName.replace('.', '___PR___');
		if(sName.indexOf('`')>0) sName = sName.replace('`', '___AP___');
		if(sName.indexOf('~')>0) sName = sName.replace('~', '___TD___');
		if(sName.indexOf('@')>0) sName = sName.replace('@', '___AT___');
		if(sName.indexOf('#')>0) sName = sName.replace('#', '___SH___');
		if(sName.indexOf('%')>0) sName = sName.replace('%', '___PC___');
		if(sName.indexOf('^')>0) sName = sName.replace('^', '___CR___');
		if(sName.indexOf('*')>0) sName = sName.replace('*', '___AR___');
		if(sName.indexOf('=')>0) sName = sName.replace('=', '___ES___');
		return sName;
	},
	this.EntitiesEncode = function()
	{
		var sRet = arguments[0];
		var entities = [
			['&', 'amp'], ['\'', 'apos'], ['\'', '#x27'], ['/', '#x2F'], ['\'', '#39'], 
			['/', '#47'], ['<', 'lt'], ['>', 'gt'], [' ', 'nbsp'], ['"', 'quot']
		];
		for (var i = 0; i < entities.length; ++i) sRet = sRet.replace(new RegExp(entities[i][0], 'g'), '&'+entities[i][1]+';');
		return sRet;
	},
	this.EntitiesDecode = function()
	{
		var sRet = arguments[0];
		var entities = [
			['amp', '&'], ['apos', '\''], ['#x27', '\''], ['#x2F', '/'], ['#39', '\''],
			['#47', '/'], ['lt', '<'], ['gt', '>'], ['nbsp', ' '], ['quot', '"']
		];
		for (var i = 0; i < entities.length; ++i) sRet = sRet.replace(new RegExp('&'+entities[i][0]+';', 'g'), entities[i][1]);
		return sRet;
	},
	this.SetStackEvent = function()
	{
		var id = arguments[0];
		var name = arguments[1];
		var obj = arguments[2];
		var objInfo = {};
		objInfo.id = id;
		objInfo.name = name;
		objInfo.obj = obj;
		this.arrStackEvent[this.arrStackEvent.length] = objInfo;
	},
	this.ResetStackEvent = function()
	{
		this.arrStackEvent = [];
	},
	this.IsStackEvent = function()
	{
		var name = arguments[0];
		return this.arrStackEvent.searchName(name)>=0;
	},
	this.IndexOf = function()
	{
		var nIndex = -1;
		var value = arguments[0];
		var find1 = arguments[1];
		var find2 = arguments[2];
		if(Webcrea.IsEmpty(value) || Webcrea.IsEmpty(find1)) return nIndex;
		value = value.toLowerCase();
		find1 = find1.toLowerCase();
		if(!Webcrea.IsEmpty(find2)) find2 = find2.toLowerCase();
		var nFind1 = value.indexOf(find1);
		if(nFind1<0) return nIndex;
		if(!Webcrea.IsEmpty(find2))
		{
			value = value.substr(nFind1+find1.length);
			value = value.trim();
			var nFind2 = value.indexOf(find2);
			if(nFind2 != 0) return nIndex;
		}
		nIndex = nFind1;
		return nIndex;
	},
	this.InitFocus = function()
	{
		var GetFocusObject = function(objPage)
		{
			var findObj;
			for(var j=0; j<objPage.arrObject.length; j++)
			{
				var obj = objPage.arrObject[j];
				if(obj && (Webcrea.IsGrid(obj) || (Webcrea.IsForm(obj) && obj.IsEnable() && !obj.IsReadOnly())))
				{
					findObj = obj;
					break;
				}
			}
			return findObj;
		};
		var obj;
		for(var i=0; i<_my_File.arrMasterPage.length; i++)
		{
			var objPage = _my_File.arrMasterPage[i];
			if(!objPage) continue;
			if(!objPage.IsDisplay()) continue;
			obj = GetFocusObject(objPage);
			if(obj) break;
		}
		if(!obj)
		{
			for(var i=0; i<_my_File.arrPage.length; i++)
			{
				var objPage = _my_File.arrPage[i];
				if(!objPage) continue;
				if(!objPage.IsDisplay()) continue;
				obj = GetFocusObject(objPage);
				if(obj) break;
			}
		}
		if(obj && typeof obj.SetFocus != 'undefined')
		{
			var bFocus = true;
			if(Webcrea.IsGrid(obj) && !obj.IsEnable()) bFocus = false;
			if(bFocus)
			{
				obj.SetFocus();
				if(obj.bGoLast) obj.SetRowNo(obj.arrRows.length-1);
				if(window[obj.divPage][obj.divPos].Data && typeof window[obj.divPage][obj.divPos].Data.OnCLICK != 'undefined')
				{
					window[obj.divPage][obj.divPos].Data.OnCLICK();
				}
			}
		}
	},
	this.IsClose = function()
	{
		var s = LastStatus();
		if(!Webcrea.IsEmpty(s)) s = s.toLowerCase();
		return 	s == 'no'?false:true;
	},
	this.IsHScroll = function()
	{
		var bRet = false;
		var target = arguments[0];
		var currObj = arguments[1];
		if(!target) return bRet;
		if(currObj && currObj.bMyHScroll && currObj.objHSGDivPos)
		{
			if(currObj.objHSGDivPos.style.display == 'none') bRet=false;
			else bRet = true;
			return bRet;
		}
		var nSize1 = target.scrollWidth;
		var nSize2 = target.clientWidth;
		if(nSize1>nSize2) bRet = true;
		if(currObj && bRet)
		{
			if(currObj.objDivPos.style.overflowX == 'hidden') bRet =false;
		}
		return bRet;
	},
	this.IsLateBindingList = function()
	{
		var bLateBindingList = Win.bLateBindingList;
		if(!bLateBindingList) bLateBindingList = WebcreaInfo.bLateBindingList;
		return bLateBindingList;
	},
	this.IsLogin = function()
	{
		return WebcreaPack.IsLogin();
	},
	this.IsDeviceWidthMode = function()
	{
		return WebcreaInfo.ViewPortMode==1?true:false;
	},
	this.IsMobileScreen = function()
	{
		var bRet = false;
		if(Webcrea.IsMobile()) bRet = true;
		else if(WebcreaInfo.mobileMode && WebcreaInfo.mobileMode == 2) bRet = true;
		else if(Webcrea.bMobileLayout) bRet = true;
		return bRet;
	},
	this.IsMobile = function()
	{
		var bRet = false;
		if(navigator.userAgent.match(/iPhone|Mobile|UP.Browser|Android|BlackBerry|Windows CE|Nokia|webOS|Opera Mini|SonyEricsson|opera mobi|Windows Phone|IEMobile|POLARIS/) != null) 
			bRet = true;
		else if(Webcrea.IsPad()) bRet = true;
		return bRet;
	},
	this.IsIPhone = function()
	{
		var bRet = false;
		if(navigator.userAgent.match(/iPhone/) != null) bRet = true;
		return bRet;
	},
	this.IsPad = function()
	{
		var bRet = false;
		if(navigator.userAgent.match(/iPad/) != null) bRet = true;
		return bRet;
	},
	this.IsTablet = function()
	{
		let mobileFlag = /Mobi|iP(hone|od)|Windows (CE|Phone)|Minimo|Opera M(obi|ini)|BlackBerry|Nokia/;
		let bTablet = false;
		if (navigator.userAgent.match(mobileFlag) && !navigator.userAgent.match(/iPad/)) bTablet = false;
		else if(navigator.userAgent.match(/iPad|Android|Tablet/)) bTablet = true;
		else bTablet = true;
		return bTablet;
	},
	this.IE = function()
	{
		return Webcrea.IsIE();
	},
	this.IsIE69 = function()
	{
		var name = navigator.appName;
		return name == 'Microsoft Internet Explorer' && (Webcrea.Browser.ie6 || Webcrea.Browser.ie7 || Webcrea.Browser.ie8 || Webcrea.Browser.ie9);
	},
	this.IsIE11 = function()
	{
		var name = navigator.appName.toLowerCase();
		return name == 'Netscape' && Webcrea.Browser.ie11;
	},
	this.IsIE = function(version)
	{
		var bRet = false;
		if(!version) bRet = (document.all || Webcrea.Browser.ie || Webcrea.Browser.ie6 || Webcrea.Browser.ie7 || Webcrea.Browser.ie8 || Webcrea.Browser.ie9 || Webcrea.Browser.ie10 || Webcrea.Browser.ie11);
		else
		{
			if(version>11) version=11;
			bRet = eval('this.Browser.ie' + version);
		}
		return bRet;
	},
	this.IsEdge = function()
	{
		return (Webcrea.Browser.chrome && Webcrea.Browser.safari && Webcrea.Browser.edge);
	},
	this.IsOpera = function()
	{
		return Webcrea.Browser.opera;
	},
	this.IsSafari = function()
	{
		if(Webcrea.Browser.chrome) return false;
		return Webcrea.Browser.safari || Webcrea.Browser.safari3;
	},
	this.IsChrome = function()
	{
		return Webcrea.Browser.chrome;
	},
	this.IsFirefox = function()
	{
		return Webcrea.Browser.firefox;
	},
	this.IsIIS = function()
	{
		return Webcrea.bIIS || WebcreaInfo.IISServerMode==1;
	},
	this.IsMDI = function()
	{
		var bRet = false;
		if(typeof _my_FileMDI == 'undefined') return bRet;
		if(_my_FileMDI) bRet = true;
		return bRet;
	},
	this.IsMDIFrame = function()
	{
		var bRet = false;
		bRet = Webcrea.IsMDI();
		try{if(!bRet && window.parent && window.parent.Webcrea.IsMDI()) bRet = true;}catch(e){return bRet;}
		return bRet;
	},
	this.IsParentFrame = function()
	{
		var bRet = false;
		try { if(window.parent._my_File && window.frameElement) bRet = true; } catch(e) {return bRet;}
		return bRet;
	},
	this.IsEmpty = function()
	{
		var ___bRet = false;
		var ___value = arguments[0];
		var bZeroEmpty = arguments[1];
		if(Webcrea.IsNull(___value)) ___bRet = true;
		else if(Webcrea.IsObject(___value)) ___bRet = false;
		else
		{
			___value = ___value.toString();
			if(bZeroEmpty && ___value == '0') ___bRet = true;
			else ___bRet = ___value.IsEmpty();
		}
		return ___bRet;
	},
	this.IsEmptyByBWZ = function()
	{
		var ___bRet = true;
		var ___value = arguments[0];
		if(Webcrea.IsEmpty(___value)) return ___bRet;
		if(Webcrea.IsNumber(___value)) ___value = ___value.toString();
		var cb = ___value.length;
		if (cb < 1) return ___bRet;

		var c = ___value[0];
		if (!(c == ' ' || c == '0')) return false;
		for (var i=0; i<cb; i++)
		{
			var d = ___value[i];
			if (d == '/' || d == '-' || d == ':') continue;
			if (c == '0' && d == '.') continue;
			if (d != c) return false;
		}
		return ___bRet;
	},
	this.IsEqual = function(value)
	{
		if(Webcrea.IsEmpty(value)) return '';
		var reg = ['==','='];
		if (reg.search(value.toLowerCase())>=0) return 1;
		else return '';
	},
	this.IsReadOnly = function(currNode)
	{
		var bRet = false;
		var currObj = this.GetObject(currNode);
		if(!currObj)
		{
			Webcrea.Trace(Webcrea.LoadString('msgErrObject'));
			return bRet;
		}
		if(!currObj.IsMultiSelectBox(currNode) && !currObj.IsMySelectBoxPublic(currNode))
		{
			if(currNode.getAttribute('readOnly') == 'readOnly') bRet = true;
			if(!bRet) bRet = currNode.readOnly;
		}
		if(!bRet)
		{
			var sReadOnlyStatus = currNode.getAttribute('readonly_status');
			if(sReadOnlyStatus && sReadOnlyStatus == 'true') bRet = true;
		}
		if(!bRet && !currObj.IsMultiSelectCell(currNode)) bRet = currObj.bReadOnly;
		return bRet;
	},
	this.IsEnable = function(currNode)
	{
		var bRet = false;
		var currObj = this.GetObject(currNode);
		if(!currObj)
		{
			Webcrea.Trace(Webcrea.LoadString('msgErrObject'));
			return bRet;
		}
		if(Webcrea.IsEditTd(currNode))
		{
			if(currNode.getAttribute('disabled') == 'disabled') bRet = false;
			else bRet = true;
		}
		else bRet = !currNode.disabled;
		if(bRet)
		{
			var sEnableStatus = currNode.getAttribute('enable_status');
			if(sEnableStatus && sEnableStatus == 'false') bRet = false;
		}
		if(bRet && !currObj.IsMultiSelectCell(currNode)) bRet = currObj.IsEnable();
		return bRet;
	},
	this.IsSessionTime = function()
	{
		return WebcreaPack.IsSessionTime();
	},
	this.GetSessionTime = function()
	{
		return WebcreaPack.GetSessionTime();
	},
	this.IsAsteriskMask = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		var orgmask = currNode.getAttribute('orgmask');
		if(!Webcrea.IsEmpty(orgmask) && orgmask.toLowerCase().substr(0, 5) == 'mask=') bRet = true;
		return bRet;
	},
	this.IsBulletDiv = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		if(currNode.tagName != 'DIV') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'bulletcolor' || role == 'bulletimage' || role == 'bullettree') bRet = true;
		return bRet;
	},
	this.GetEditTd = function()
	{
		var currNode = arguments[0];
		if(!currNode) return;
		var sId = currNode.getAttribute('id');
		sId = sId.replaceAll('_my_inputBox', '');
		return document.getElementById(sId);
	},
	this.GetEditTdInputBox = function()
	{
		var currNode = arguments[0];
		var bInnerNode = arguments[1];
		if(!currNode) return;
		var sId = currNode.getAttribute('id');
		if(currNode.tagName != 'INPUT') sId = sId + '_my_inputBox';
		var obj = null;
		if(bInnerNode) obj = Webcrea.FindNodePublic(currNode, 'id', sId);
		else obj = document.getElementById(sId);
		return obj;
	},
	this.IsEditTdInputBox = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		if(currNode.tagName != 'INPUT') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'edittd_input') bRet = true;
		return bRet;
	},
	this.IsEditTd = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		var sTagName = '';
		if(currNode.tagName) sTagName = currNode.tagName.toUpperCase();
		if(sTagName != 'TD') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'edittd') bRet = true;
		return bRet;
	},
	this.IsEditTdOpen = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		var obj = this.GetEditTdInputBox(currNode, true);
		if(obj) bRet = true;
		return bRet;
	},
	this.IsMultilineMainDiv = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		if(currNode.tagName != 'DIV') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'pMultiline') bRet = true;
		return bRet;
	},
	this.IsMultilineText = function()
	{
		var bRet = false;
		var currNode = arguments[0];
		if(!currNode) return bRet;
		if(currNode.tagName != 'TD') return bRet;
		var role = currNode.getAttribute('role');
		if(!role) return bRet;
		if(role == 'multilinetext') bRet = true;
		return bRet;
	},
	this.IsHoliday = function()
	{
		var bHoliday = false;
		var sDate = arguments[0];
		if(Webcrea.IsEmpty(sDate)) return bHoliday?1:'';
		var nMode = arguments[1];
		var nameDay = Webcrea.GetDayOfWeek(sDate);
		var sDayOfWeek = Webcrea.GetDayName(nameDay);
		if(!nMode && sDayOfWeek == Webcrea.GetDayName(0)) bHoliday = true;
		else if(nMode == 2 && (sDayOfWeek == Webcrea.GetDayName(0) || sDayOfWeek == Webcrea.GetDayName(6))) bHoliday = true;
		if(!bHoliday)
		{
			var sYear = sDate.substr(0, 4);
			Webcrea.SetSpecHolidayByYear(sYear);
			var hoildayObj = Webcrea.GetHoliday(sDate);
			if(hoildayObj)
			{
				if(nMode==3 && hoildayObj.bAlterNative) bHoliday = false;
				else bHoliday = true;
			}
			else if(!nMode)
			{
				var sAddDate = AddDate(sDate, -1);
				var b = Webcrea.IsHoliday(sAddDate, 3);
				while(!b)
				{
					sAddDate = AddDate(sAddDate, -1);
					if(Webcrea.IsEmpty(sAddDate)) break;
					b = Webcrea.IsHoliday(sAddDate, 3);
				}
				hoildayObj = Webcrea.GetHoliday(sDate);
				if(hoildayObj)
				{
					if(nMode==3 && hoildayObj.bAlterNative) bHoliday = false;
					else bHoliday = true;
				}
			}
		}
		return bHoliday?1:'';
	},
	this.IsIFrameStart = function()
	{
		var iframeName = arguments[0];
		if(Webcrea.IsEmpty(iframeName)) return;
		var objFrame;
		if(Webcrea.IsObject(iframeName)) objFrame = iframeName;
		else
		{
			var obj = Webcrea.FindNode(document.body, 'id', iframeName);
			if(!obj) return;
			if(obj.tagName == 'IFRAME') objFrame = obj;
			else objFrame = Webcrea.FindNode(obj, 'name', 'IFRAME');
		}
		if(!objFrame) return;
		var bRet = false;
		try{
			if(objFrame.contentWindow.document.readyState == 'complete') bRet = true;
		}catch(e){Webcrea.Trace(e.stack);}
		return bRet?1:'';
	},
	this.IsPrototypeWords = function()
	{
		var ___var = arguments[0];
		var ___arrWords = ['detect', 'fill', 'isearch', 'map', 'partition', 'pluck', 'pop', 'reduce', 'reject', 'search', 'searchId', 'size', 'zip'];
		return ___arrWords.isearch(___var)>=0?true:false;
	},
	this.IsRsFunction = function()
	{
		var ___func = arguments[0];
		var ___arrFunc = ["IsGroupStart", "IsGroupEnd", "IsSelected", "IsSumRow", "PrevValue", "NextValue", "FirstValue", "LastValue", "RecordCount", "RowNo", "RowStatus", "RowText"];
		return ___arrFunc.search(___func)>=0?true:false;
	},
	this.IsRunTimeFunction = function()
	{
		var ___func = arguments[0];
		var ___arrFunc = ["FirstItem", "LastItem"];
		return ___arrFunc.search(___func)>=0?true:false;
	},
	this.IsSeqField = function()
	{
		var obj = arguments[0];
		var field = arguments[1];
		if(!obj) return false;
		if(!obj.dataSeqField) return false;
		return (obj.dataSeqField==field)?true:false;
	},
	this.IsSkipOnCharKeyCode = function()
	{
		var keyCode = arguments[0];
		if(Webcrea.IsNumberType(keyCode)) keyCode = keyCode.toString();
		var arrSkip = ['9', '16', '17', '18', '19', '20', '21'
					, '25', '27', '33', '34', '35', '36'
					, '37', '38', '39', '40', '45'
					, '91', '92', '93'
					, '112', '113', '114', '115', '116', '117', '118'
					, '119', '120', '121', '122', '123'
					, '144', '145'];
		var bRet = arrSkip.isearch(keyCode)>=0?true:false;
		return bRet;
	},
	this.IsSqlFunction = function()
	{
		var ___func = arguments[0];
		var ___arrFunc = ["abs", "ascii", "avg", "ceiling", "ceiling", "concat", "count"
						, "curdate", "current_date", "current_time", "current_timestamp", "curtime"
						, "database", "date_add", "date_format", "date_sub", "dayname", "dayofmonth", "dayofweek", "dayofyear"
						, "floor", "format", "from_days", "greatest", "greatest"
						, "insert", "instr", "interval", "lcase", "least", "left", "ltrim"
						, "max", "mid", "min", "mod", "month", "monthname", "now", "over", "password", "pow", "power"
						, "rank", "replace", "reverse", "right", "round", "row_number", "rtrim", "substr", "substring", "sum", "sysdate"
						, "to_days", "trim", "truncate", "truncate", "ucase", "week", "weekday", "year"];
		var bRet = ___arrFunc.isearch(___func)>=0?true:false;
		if(!bRet && !Webcrea.IsEmpty(WebcreaInfo.sSqlFunction))
		{
			var arrSqlFunction = WebcreaInfo.sSqlFunction.split(',');
			for(var i=0; i<arrSqlFunction.length; i++)
			{
				var s = arrSqlFunction[i].trim();
				bRet = ___func.iEquals(s);
				if(bRet) break;
			}
		}
		return bRet;
	},
	this.IsSqlStatusError = function()
	{
		var ___param = {};
		___param.msg = arguments[0];
		___param.bAlert = arguments[1];
		___param.bNotStatusChg = arguments[2];
		var bError=false;
		if(!Webcrea.IsEmpty(___param.msg))
		{
			if(Webcrea.IsSqlExecute()) bError = true;
			else
			{
				var s1 = ___param.msg.toUpperCase();
				if(!Webcrea.IsEmpty(s1)) s1 = s1.trim();
				var n = s1.indexOf('[ERROR]');
				if(n>=0 && n<=2) bError = true;
				else
				{
					n = s1.indexOf('--- [STATUS]');
					if(n>=0 && n<=2) bError = true;
					else
					{
						n = s1.indexOf('--- EOS');
						if(n>=0 && n<=2)
						{
							bError = true;
							var msg=WebcreaInfo.endsessionMsg;
							if(Webcrea.IsMDIFrame() && !Webcrea.IsMDI()) msg=window.parent.WebcreaInfo.endsessionMsg;
							if(Webcrea.IsNull(msg)) msg = Webcrea.LoadString('idsEndSession');
							___param.msg = msg;
						}
					}
				}
			}
		}
		if(bError)
		{
			_my_sqlStatus = ___param.msg;
			if(Webcrea.IsSqlExecute()) _my_lastStatus = 'EXECUTE FAILED';
			else if(Webcrea.IsUpload()) _my_lastStatus = 'UPLOAD FAILED';
			else
			{
				_my_lastStatus = 'QUERY FAILED';
				if(!___param.bNotStatusChg) this.SetSqlStatus(_my_sqlStatus);
				return bError;
			}
			if(Webcrea.bFileDB) Webcrea.Trace(_my_sqlStatus);
			else if(Webcrea.bAlert)
			{
				if(___param.bAlert) Webcrea.MsgBox(_my_sqlStatus, true);
				else Webcrea.Trace(_my_sqlStatus);
			}
		}
		else _my_lastStatus = 'OK';
		return bError;
	},
	this.SetSqlStatus = function(s)
	{
		if(!Webcrea.IsEmpty(s))
		{
			var s1 = s.toUpperCase();
			var n = s1.indexOf('--- [STATUS]');
			if(n>=0)
			{
				s = s.substring(n+12);
				if(s.substring(s.length-3) == '---') s = s.substring(0, s.length-4);
				s = s.trim();
			}
		}
		_my_sqlStatus=s;
	},
	this.IsArray = function(s)
	{
		if(Webcrea.IsNull(s)) return false;
		if(Array.isArray) return Array.isArray(s);
		if (s instanceof Array) return true;
		return s.constructor == 'Array';
	},
	this.IsDigit = function(s)
	{
		var bRet = 1;
		var reg = /^\d.-+$/ig;
		if(s == undefined) return '';
		else s = s.toString();
		if(s.match(reg)==null) bRet = '';
		if(bRet) bRet = (s[0]=='0')?'':true;
		if(!bRet) bRet = IsDigit(s[s.length-1]);
		return bRet;
	},
	this.IsFunction = function(s)
	{
		return typeof s === 'function';
	},
	this.IsNaN = function(s, bString)
	{
		var bRet = false;
		if(!bString) bRet = (typeof s === 'number' && isNaN(s));
		else bRet = ((typeof s === 'string' || typeof s === 'number') && isNaN(s));
		return bRet;
	},
	this.IsNull = function(s)
	{
		return s == null || typeof s === 'undefined';
	},
	this.IsNumber = function(s, bFirstZero)
	{
		if(!Webcrea.IsEmpty(s) && Webcrea.IsString(s)) s = s.trim();
		if(Webcrea.IsEmpty(s)) return false;
		else if(!bFirstZero && s[0] == '0' && s.length>1)
		{
			if((s.length>2 && s[1] != '.') || s.length==2) return false;
		}
		s = Webcrea.NumberReDef(s);
		var bNumber = typeof s === 'number';
		if(WebcreaInfo.bBigNumber && !bNumber && s.length>15)
		{
			var n = s.search(new RegExp('[^0-9.]','g'));
			if(n<0) bNumber = true;
		}
		return !isNaN(s) && bNumber;
	},
	this.IsNumberType = function(s)
	{
		if(!Webcrea.IsEmpty(s) && Webcrea.IsString(s)) s = s.trim();
		if(Webcrea.IsEmpty(s)) return false;
		return !isNaN(s) && typeof s === 'number';
	},
	this.IsObject = function(s)
	{
		return typeof s === 'object' && !Webcrea.IsArray(s);
	},
	this.IsString = function(s)
	{
		return typeof s === 'string';
	},
	this.IsCatOper = function(str)
	{
		var arrOper = ['sum','count','count0','avg','avg0','min','min0','max','stddev', 'stddev0', 'tot'];
		return arrOper.isearch(str)>=0?true:false;
	},
	this.IsItemChar = function(str)
	{
		var arrOper = [":","#","&"];
		return arrOper.isearch(str)>=0?true:false;
	},
	this.IsImage = function(str)
	{
		var arrOper = ['bmp','gif','jpeg','jpg','png'];
		return arrOper.isearch(str)>=0?true:false;
	},
	this.IsLockUI = function()
	{
		var bRet=false;
		var backDiv = Webcrea.FindNode(document.body, 'id', '_my_BackDiv');
		if(backDiv && backDiv.style.display == 'block') bRet=true;
		return bRet;
	},
	this.IsVisible = function()
	{
		var bRet=false;
		var param = arguments[0];
		var nPane = Webcrea.GetMDIPane(param);
		if(nPane>=0)
		{
			try {
				if(parent && parent.Webcrea.IsMDI())
				{
					bRet = parent._my_FileMDI.IsVisible(nPane);
				}
			} catch(e) {}
		}
		else
		{
			var obj = Webcrea.GetObjectById(param);
			if(obj) bRet = obj.IsVisible();
		}
		return bRet?1:'';
	},
	this.IsVScroll = function()
	{
		var bRet = false;
		var target = arguments[0];
		var currObj = arguments[1];
		var bHeightOnly = arguments[2];
		if(!target) return bRet;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var nSize1 = target.scrollHeight;
		var nSize2 = target.clientHeight;
		let nDiff = nSize1 - nSize2;
		if(currObj && currObj.bMyGrid && nDiff>0 && nDiff<3)
		{
			if(currObj.objGDivInfo.bLineWidth>0) nSize1 = nSize2;
		}
		if(nSize1 == nSize2)
		{
			if(currObj && currObj.bMyGrid)
			{
				var lastNode =  currObj.objTable.rows[currObj.objTable.rows.length-1];
				if(lastNode)
				{
					var chkHeight = Webcrea.GetHeight(lastNode, true);
					if(chkHeight == 0) nSize1 += currObj.nDataHeight;
					else if(currObj.bMyHScroll && currObj.IsHScroll()) nSize1 += currObj.nScrlWidth;
					else
					{
						if(currObj.arrRows.length>0)
						{
							let firstNode = currObj.objTable.rows[currObj.nHeader];
							if(firstNode)
							{
								let nFirst = Number(firstNode.getAttribute('rowno'));
								let nLast = Number(lastNode.getAttribute('rowno'));
								if(nLast>0 && nLast-nFirst<currObj.arrRows.length-1) nSize1 += currObj.nDataHeight;
							}
						}
					}
				}
			}
			else if(nFileVersion>=7020210202001 && currObj && Webcrea.IsList(currObj) && currObj.objDivPos.style.overflowY == 'scroll') bRet=true;
		}
		if(nSize1>nSize2) bRet = true;
		if(!bHeightOnly && currObj && bRet)
		{
			if(!currObj.bMyGrid && currObj.objDivPos.style.overflowY == 'hidden') bRet=false;
			else if(currObj.bMyGrid && currObj.objVSTHDivPos && currObj.objVSTHDivPos.style.display == 'none') bRet=false;
		}
		return bRet;
	},
	this.IsWebcreaObject = function()
	{
		var param = arguments[0];
		var bRet = false;
		if(Webcrea.IsEmpty(param)) return bRet;
		var arr = param.split('.');
		var obj = Webcrea.GetObjectById(arr[0]);
		if(obj) bRet = true;
		return bRet;
	},
	this.IsWhereData = function(dataObj, nRow, aWhere, sInWhere, bIn, bVal)
	{
		return WebcreaPack.IsWhereData(dataObj, nRow, aWhere, sInWhere, bIn, bVal);
	},
	this.IsCompareOper = function(str)
	{
		var arrOper = ["==", "=", "!=", "<>", ">", ">=", "<", "<="];
		return arrOper.search(str)>=0?true:false;
	},
	this.IsWhereOper = function(str)
	{
		var arrOper = ["==", "*=", "+=", "!=", ">", "<", ">=", "<=", "<>", "between", "and", "or", "like"];
		return arrOper.search(str);
	},
	this.IsArithmetic = function(str)
	{
		var arrOper = ["+", "-", "*", "/"];
		return arrOper.search(str);
	},
	this.IsAmpObject = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		if(!Webcrea.IsObject(obj)) return;
		return obj.bAmpObject;
	},
	this.IsCrossTab = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsCrossTab != 'undefined') bRet = obj.IsCrossTab();
		return bRet;
	},
	this.IsCanvasDraw = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsCanvasDraw != 'undefined') bRet = obj.IsCanvasDraw();
		return bRet;
	},
	this.IsDivDraw = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsDivDraw != 'undefined') bRet = obj.IsDivDraw();
		return bRet;
	},
	this.IsEllipseDraw = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsEllipseDraw != 'undefined') bRet = obj.IsEllipseDraw();
		return bRet;
	},
	this.IsForm = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsForm != 'undefined') bRet = obj.IsForm();
		return bRet;
	},
	this.IsGrid = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsGrid != 'undefined') bRet = obj.IsGrid();
		return bRet;
	},
	this.IsGroupBox = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsGroupBox != 'undefined') bRet = obj.IsGroupBox();
		return bRet;
	},
	this.IsList = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsList != 'undefined') bRet = obj.IsList();
		return bRet;
	},
	this.IsMenu = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsMenu != 'undefined') bRet = obj.IsMenu();
		return bRet;
	},
	this.IsProc = function()
	{
		var bRet = false;
		var obj = arguments[0];
		if(!obj) return bRet;
		if(typeof obj.IsProc != 'undefined') bRet = obj.IsProc();
		return bRet;
	},
	this.IsTreeGrid = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var bRet = false;
		if(typeof obj.IsTreeGrid != 'undefined') bRet = obj.IsTreeGrid();
		return bRet;
	},
	this.AddLoadingImg = function()
	{
		var sImg = arguments[0];
		if(Webcrea.IsEmpty(sImg)) return;
		var arrImg = sImg.split(',');
		for(var i=0; i<arrImg.length; i++)
		{
			var s = arrImg[i];
			s = s.trim();
			if(WebcreaInfo.arrLoadingImage.isearch(s)>=0) reutrn;
			WebcreaInfo.arrLoadingImage[WebcreaInfo.arrLoadingImage.length] = s;
		}
	},
	this.AddZero = function(str, n)
	{
		var str = arguments[0];
		var n = arguments[1];
		if(!n) n = 2;
		var sRet = str;
		if(n==2) sRet = "00".concat(str).match(/\d{2}$/);
		else if(n==4) sRet = "0000".concat(str).match(/\d{4}$/);
		else
		{
			for(var i=0; i<n; i++)
			{
				sRet = '0' + sRet;
			}
		}
		return sRet;
	},
	this.ScrollWindow = function()
	{
		Win.Scroll(arguments[0], arguments[1]);
	},
	this.GetViewControlValue = function()
	{
		let viewObj = arguments[0];
		let sObject = arguments[1];
		let bView = false;
		try { if(viewObj && viewObj.Webcrea) bView = true; } catch(e) {}
		if(!bView) return;
		let ampObj = viewObj.Webcrea.GetAmpObject(sObject);
		if(!ampObj) return;
		let currObj = ampObj.obj;
		if(!currObj) return;
		return currObj.GetValue(ampObj.cellId);
	},
	this.SetViewControlValue = function()
	{
		let viewObj = arguments[0];
		let sObject = arguments[1];
		let sValue = arguments[2];
		let bView = false;
		try { if(viewObj && viewObj.Webcrea) bView = true; } catch(e) {}
		if(!bView) return;
		let ampObj = viewObj.Webcrea.GetAmpObject(sObject);
		if(!ampObj) return;
		let currObj = ampObj.obj;
		if(!currObj) return;
		currObj.SetValue(ampObj.cellId, sValue);
	},
	this.SetTransInfo = function()
	{
		var ___param = {};
		___param.obj = arguments[0];
		___param.param = arguments[1];
		___param.bAsync = arguments[2];
		___param.ThreadId = arguments[3];
		___param.ThreadResult = arguments[4];
		if(!___param.obj) return;
		var transObj = {};
		transObj.sql = ___param.obj.sSql;
		transObj.param = ___param.param;
		transObj.bAsync = ___param.bAsync;
		transObj.ThreadId = ___param.ThreadId;
		transObj.ThreadResult = ___param.ThreadResult;
		this.arrTransInfo[this.arrTransInfo.length] = transObj;
	},
	this.SetHoliday = function()
	{
		Webcrea.arrEveryYearDays = [];
		Webcrea.arrSpecialYearDays = [];
		var SetDay = function()
		{
			var bSpecial = false;
			var param = arguments[0];
			var solarLunar = arguments[1];
			var holiday = 1;
			var arrSet = param.split(' ');
			for(var i=0; i<arrSet.length; i++)
			{
				var bAddHoliday = false;
				var startYear = 0, endYear = 0;
				var sDateSet = arrSet[i];
				var arr = sDateSet.split(':');
				var sDate = arr[0];
				var sDateOpt = '';
				if(arr.length>1) sDateOpt = arr[1];
				var n = sDateOpt.indexOf('[');
				var n1 = sDateOpt.indexOf(']');
				if(n1>0)
				{
					bSpecial = true;
					sSpecialYear = sDateOpt.substr(n+1, n1-1);
					sDateOpt = sDateOpt.substr(n1+1);
					sSpecialYear = sSpecialYear.trim();
					var arrSpec = sSpecialYear.split('-');
					if(arrSpec.length==1 || (arrSpec.length>1 && Webcrea.IsEmpty(arrSpec[0])))
					{
						var s = sSpecialYear[0];
						if(s == '-') endYear = sSpecialYear.substr(1, sSpecialYear.length-1);
						else
						{
							if(s == '+')
							{
								bSpecial = false;
								bAddHoliday = true;
								startYear = sSpecialYear.substr(1, sSpecialYear.length-1);
							}
							else startYear = sSpecialYear;
						}
					}
					else
					{
						startYear = arrSpec[0];
						endYear = arrSpec[1];
					}
				}
				var sName = '';
				if(arr.length>1) sName = arr[1];
				var sMon = sDate.substr(0, 2);
				var sDay = sDate.substr(2, 2);
				if(bSpecial) Webcrea.SpecialYearDay(sName, Webcrea.NumberReDef(sMon), Webcrea.NumberReDef(sDay), solarLunar, holiday, startYear, endYear);
				else Webcrea.EveryYearDay(sName, Webcrea.NumberReDef(sMon), Webcrea.NumberReDef(sDay), solarLunar, holiday, startYear, bAddHoliday);
			}
		};
		if(!Webcrea.IsEmpty(WebcreaInfo.Holiday)) SetDay(WebcreaInfo.Holiday, 1);
		if(!Webcrea.IsEmpty(WebcreaInfo.LunarHoliday)) SetDay(WebcreaInfo.LunarHoliday, 2);
		Webcrea.SetSpecHolidayByYear();
	},
	this.SetSpecHolidayByYear = function()
	{
		var sParamYear = arguments[0];
		if(Webcrea.IsEmpty(sParamYear)) sParamYear = CurYear();
		if(Webcrea.arrSpecialYear.search(sParamYear)>=0) return;
		Webcrea.arrSpecialYear[Webcrea.arrSpecialYear.length] = sParamYear;
		for(var i=0;i<Webcrea.arrEveryYearDays.length;i++)
		{
			var dateObj = Webcrea.arrEveryYearDays[i];
			var solarLunar = dateObj.solarLunar;
			var holiday = dateObj.holiday;
			var sDate = sParamYear + Webcrea.AddZero(dateObj.month,2) + Webcrea.AddZero(dateObj.day,2);
			if(holiday)
			{
				var currYear = Webcrea.NumberReDef(sDate.substr(0, 4));
				var currMonth = Webcrea.NumberReDef(sDate.substr(4, 2));
				var currDay = Webcrea.NumberReDef(sDate.substr(6, 2));
				if(solarLunar == 2)
				{
					var date = WebcreaPack.LunarCalc(currYear, currMonth, currDay, 2, 0);
					if(date) sDate = date.year + Webcrea.AddZero(date.month,2) + Webcrea.AddZero(date.day,2);
				}
				if(currMonth && currDay) Webcrea.GetHoliday(sDate);
			}
		}
	},
	this.EveryYearDay = function()
	{
		var name = arguments[0];
		var month = arguments[1];
		var day = arguments[2];
		var solarLunar = arguments[3];
		var holiday = arguments[4];
		var startYear = arguments[5];
		var bAddHoliday = arguments[6];
		var endYear = 0;
		var bAlterNative = false;
		var id = '';
		for(var i=0;i<arguments.length;i++)
		{
			if(i>0) id+='_';
			id += arguments[i];
		}
		var obj = new WebcreaPack.MemorialDayObj(id, name, month, day, solarLunar, holiday, startYear, endYear, bAlterNative, bAddHoliday);
		if(Webcrea.arrEveryYearDays.searchId(id)>=0) return;
		Webcrea.arrEveryYearDays[Webcrea.arrEveryYearDays.length] = obj;
	},
	this.SpecialYearDay = function()
	{
		var name = arguments[0];
		var month = arguments[1];
		var day = arguments[2];
		var solarLunar = arguments[3];
		var holiday = arguments[4];
		var startYear = arguments[5];
		var endYear = arguments[6];
		var bAlterNative = arguments[7];
		if(Webcrea.IsEmpty(startYear) || Webcrea.IsEmpty(endYear)) return;
		var id = '';
		for(var i=0;i<arguments.length;i++)
		{
			if(i>0) id+='_';
			id += arguments[i];
		}
		var obj = new WebcreaPack.MemorialDayObj(id, name, month, day, solarLunar, holiday, startYear, endYear, bAlterNative);
		if(Webcrea.arrSpecialYearDays.searchId(id)>=0) return;
		Webcrea.arrSpecialYearDays[Webcrea.arrSpecialYearDays.length] = obj;
	},
	this.DataHandlerCmd = function()
	{
		var ___param = arguments[0];
		if(Webcrea.IsNull(___param)) return;
		if(___param.indexOf('cmd=execute')>=0) Webcrea.nSqlCmdMode = 1;
		else if(___param.indexOf('cmd=httpkey')>=0) Webcrea.nSqlCmdMode = 2;
		else if(___param.indexOf('cmd=logout')>=0) Webcrea.nSqlCmdMode = 3;
		else if(___param.indexOf('cmd=getip')>=0) Webcrea.nSqlCmdMode = 4;
		else if(___param.indexOf('cmd=upload')>=0) Webcrea.nSqlCmdMode = 5;
		else if(___param.indexOf('cmd=logincheck')>=0) Webcrea.nSqlCmdMode = 6;
		else Webcrea.nSqlCmdMode = 0;
	},
	this.DrawStartImage = function()
	{
		if(!WebcreaInfo.arrLoadingImage) WebcreaInfo.arrLoadingImage = [];
		for(var i=0; i<WebcreaInfo.arrLoadingImage.length; i++)
		{
			var img = new Image();
			var sImg = WebcreaInfo.arrLoadingImage[i];
			var bHttpImage = false;
			if(sImg.indexOf('http://') == 0 || sImg.indexOf('https://') == 0 || sImg.indexOf('../') == 0 || sImg.indexOf('./') == 0) bHttpImage = true;
			if(!bHttpImage) sImg = Webcrea.GetImageLinkPath() + '/' + sImg;
			img.src = sImg;
		}
	},
	this.DrawStart = function()
	{
		var bMDI = false;
		try { if(parent && parent.Webcrea.IsMDI()) bMDI = true; } catch(e) {}
		if(bMDI && !Webcrea.bDelayDisplay)
		{
			var currObj = window.frameElement;
			if(currObj && currObj.tagName == 'IFRAME')
			{
				var currName = currObj.name;
				if(currName)
				{
					currName = currName.toLowerCase();
					if(currName == 'mainframe' || currName == 'mainframeclose' || currName == 'topframe' || currName == 'topframeclose'
						|| currName == 'leftframe' || currName == 'leftframeclose' || currName == 'rightframe'  || currName == 'rightframeclose'
						|| currName == 'bottomframe' || currName == 'bottomframeclose') return;
				}
			}
		}
		var winWidth = Webcrea.GetWidth(document.documentElement, true);
		var winHeight = Webcrea.GetHeight(document.documentElement, true);
		var backWinDiv = document.createElement('div');
		backWinDiv.setAttribute('id', '_my_BackWinDiv');
		var bgColor = document.body.style.backgroundColor;
        if(!bgColor) bgColor='#ffffff';
		if(WebcreaInfo.LoadingOpacity != 'undefined' && WebcreaInfo.LoadingOpacity < 1) bgColor = Hex2RGB(bgColor, WebcreaInfo.LoadingOpacity);
        var style = 'position:absolute;display:none;left:0px;top:0px;width:100%;height:100%;background-color:'+bgColor+';z-index:99999;';
		backWinDiv.setAttribute('style', style);

		var backSpinnerDiv = document.createElement('div');
		backSpinnerDiv.setAttribute('class', '_my_spinner');
		backWinDiv.appendChild(backSpinnerDiv);
		for(var i=0; i<5; i++)
		{
			var backRectDiv = document.createElement('div');
			var seq = i+1;
			var sRectClass = 'rect' + seq;
			backRectDiv.setAttribute('class', sRectClass);
			backRectDiv.style.margin = '2px';
			if(!Webcrea.IsEmpty(WebcreaInfo.sLoadingColor))
			{
				var sLoadingColor = Webcrea.GetColor(WebcreaInfo.sLoadingColor);
				backRectDiv.style.backgroundColor = sLoadingColor;
			}
			backSpinnerDiv.appendChild(backRectDiv);
		}
		var backBrtDiv = document.createElement('br');
		backSpinnerDiv.appendChild(backBrtDiv);
		var backTextDiv = document.createElement('div');
		backTextDiv.setAttribute('class', 'loadingMsg');
		var loadingText = WebcreaInfo.sLoadingMsg;
		if(!loadingText) loadingText = 'LOADING';
		backTextDiv.innerText = loadingText;
		var style = 'font-size:10px;';
		var nTextWidth = Webcrea.GetTextWidth(loadingText, style);
		nTextWidth += 4;
		if(nTextWidth<50) nTextWidth = 50;
		backSpinnerDiv.style.width = nTextWidth + 'px';
		backSpinnerDiv.appendChild(backTextDiv);

		var objWindow = Webcrea.FindNode(document.body, 'id', 'WindowDiv');
		objWindow.appendChild(backWinDiv);
		backWinDiv.style.width = winWidth + 'px';
		backWinDiv.style.height = winHeight + 'px';
		backWinDiv.style.display = 'block';
		backWinDiv.style.cursor = 'wait';
		Webcrea.DrawStartImage();
	},
	this.DrawClose = function()
	{
		var objWindow = Webcrea.FindNode(document.body, 'id', 'WindowDiv');
		var backWinDiv = Webcrea.FindNode(objWindow, 'id', '_my_BackWinDiv');
		if(backWinDiv) objWindow.removeChild(backWinDiv);
	},
	this.DragData = function()
	{
		var orgObj = arguments[0];
		var arrDragRowNo = orgObj.objDrag.arrDragRowNo;
		var targetObj = orgObj.objDrop.realObj;
		var targetRowNo = orgObj.objDrop.targetRowNo;
		var targetDataRowNo = targetObj.GetRowDataNo(targetRowNo, true);
		var bMove = orgObj.objDrop.bMove;
		var bCopy = orgObj.objDrop.bCopy;
		var bTop = orgObj.objDrop.bTop;
		var bBottom = orgObj.objDrop.bBottom;
		var bSelect = orgObj.objDrop.bSelect;
		var bStatus = orgObj.objDrop.bStatus;
		var bFocus = orgObj.objDrop.bFocus;
		var addRowNo = targetDataRowNo;
		if(bSelect)
		{
			if(!targetObj.IsColumn('(sel)')) Webcrea.MakeRecordSet(targetObj, 'column', '(sel)=');
			else
			{
				for(var i=0; i<targetObj.arrDragRowNo.length; i++)
				{
					var addRowNo_b = targetObj.arrDragRowNo[i];
					targetObj.arrData['(sel)'][addRowNo_b] = '';
				}
			}
		}
		if(bCopy)
		{
			targetObj.ClearRecordSet();
			addRowNo = 0;
		}
		else if(bTop) addRowNo = 0;
		else if(bBottom)
		{
			addRowNo = 0;
			if(targetObj.arrRows) addRowNo = targetObj.arrRows.length;
		}
		if(bStatus) targetObj.bAddStatus = true;
		if(targetObj.objDrag)
		{
			for(var i=0; i<targetObj.objDrag.arrDragRowNo.length; i++)
			{
				var rowDragNo = targetObj.objDrag.arrDragRowNo[i];
				if(targetObj.arrMulti[rowDragNo]) targetObj.arrMulti[rowDragNo] = '';
			}
			targetObj.objDrag.arrDragRowNo = [];
		}
		targetObj.arrDragRowNo = [];
		for(var i=0; i<arrDragRowNo.length; i++)
		{
			var dragRowNo = arrDragRowNo[i];
			var arrData = [];
			for(var j=0; j<targetObj.arrField.length; j++)
			{
				var data = '';
				var targetField = targetObj.arrField[j];
				var targetFieldType = targetObj.arrFieldType[j];
				if(orgObj.IsColumn(targetField)) data = orgObj.arrData[targetField][dragRowNo];
				else if(targetFieldType) data=0;
				if(bSelect && targetField == '(sel)') data = 'Y';
				arrData[arrData.length] = data;
			}
			Webcrea.InsertRecord(targetObj, addRowNo, arrData);
			targetObj.arrDragRowNo[targetObj.arrDragRowNo.length] = addRowNo;
			addRowNo++;
		}
		orgObj.objDrag.arrDragRowNo = [];
		orgObj.objDrop.realObj = null;
		orgObj.objDrop.dropNode = null;
		if(bMove)
		{
			for(var i=arrDragRowNo.length-1; i>=0; i--)
			{
				var dragRowNo = arrDragRowNo[i];
				Webcrea.DeleteRecord(orgObj, dragRowNo);
			}
			orgObj.ClearSelectInfo();
			orgObj.SyncData();
		}
		if(!bSelect)
		{
			if(!bFocus) targetObj.ClearSelectInfo();
			else if(!targetObj.objSelInfo.dataRowNo) targetObj.objSelInfo.dataRowNo = 0;
		}
		else targetObj.ClearSelectInfo();
		targetObj.SyncData();
		if(bSelect)
		{
			for(var i=0; i<targetObj.arrDragRowNo.length; i++)
			{
				var nDataRowNo = targetObj.arrDragRowNo[i];
				var nRowNo = targetObj.GetRowNo(nDataRowNo);
				var trNode = targetObj.objTable.rows[nRowNo+targetObj.nHeader];
				targetObj.SelectDragRow(trNode);
			}
		}
	},
	this.IsSqlExecute = function()
	{
		return Webcrea.nSqlCmdMode == 1;
	},
	this.IsSqlSelect = function()
	{
		return Webcrea.nSqlCmdMode == 0;
	},
	this.IsUpload = function()
	{
		return Webcrea.nSqlCmdMode == 5;
	},
	this.BeginTrans = function(dbid)
	{
		if(!dbid) dbid=0;
		Webcrea.nBeginDBID = dbid;
		Webcrea.bBeginTrans = true;
		this.arrTransInfo = [];
	},
	this.Commit = function()
	{
		var bForm=false;
		var sHttpParam='';
		var sSql='';
		var sSqlIndex='', sParamIndex='', sUrlIndex='', sSqlParamInfo='';
		var sInfo='';
		var spChar='{{{+}}}';
		var spCharEncode=Webcrea.EncodeURI(spChar);
		var GetInfo = function(param, sIndex)
		{
			sInfo='';
			var n = param.indexOf(sIndex);
			if(n<0) return param;
			var param1 = param.substr(0, n);
			var param2 = param.substr(n+sIndex.length);
			var n1 = param2.indexOf('&');
			if(n1>0)
			{
				sInfo = param2.substr(0, n1);
				param2 = param2.substr(n1);
			}
			else
			{
				sInfo = param2;
				param2 = '';
			}
			param = param1 + param2;
			return param;
		};
		var IsInfoEmpty = function(sInfo)
		{
			var s = sInfo;
			s = Webcrea.ReplaceAll(s, spChar, '');
			return Webcrea.IsEmpty(s);
		};
		var bAgentError=false;
		var arrAgent = [];
		var arrUrl = [];
		var bSqlExist=true;
		var bAsync = false;
		var ThreadId = '';
		var ThreadResult = '';
		if(!this.arrTransInfo || this.arrTransInfo.length<1)
		{
			Webcrea.nBeginDBID = -1;
			Webcrea.bBeginTrans = false;
			this.arrTransInfo = [];
			return true;
		}
		for(var i=0; i<this.arrTransInfo.length; i++)
		{
			var transObj = this.arrTransInfo[i];
			var param = transObj.param;
			if(i==0)
			{
				bAsync = transObj.bAsync;
				ThreadId = transObj.ThreadId;
				ThreadResult = transObj.ThreadResult;
			}
			if(!Webcrea.bEncrypt)
			{
				param = Webcrea.EncodeURI(param);
				spChar = spCharEncode;
			}
			var n = param.indexOf('&form=');
			if(n>0) bForm = true;
			if(bForm)
			{
				param = GetInfo(param, '&sqlIndex=');
				if(Webcrea.IsEmpty(sInfo))
				{
					bSqlExist = false;
					break;
				}
				if(i>0) sSqlIndex += spChar;
				sSqlIndex += sInfo;

				param = GetInfo(param, '&paramIndex=');
				if(i>0) sParamIndex += spChar;
				sParamIndex += sInfo;

				param = GetInfo(param, '&urlIndex=');
				if(i>0) sUrlIndex += spChar;
				sUrlIndex += sInfo;

				param = GetInfo(param, '&sqlParamInfo=');
				if(i>0) sSqlParamInfo += spChar;
				sSqlParamInfo += sInfo;
				if(i==0) sHttpParam = param;
			}
			else
			{
				var sAgent='';
				var nAgent = param.indexOf('&agent=');
				if(nAgent>=0)
				{
					param = GetInfo(param, '&agent=');
					sAgent = sInfo;
					arrAgent[arrAgent.length] = sAgent;
				}
				var sUrl='';
				var nUrl = param.indexOf('&url=');
				if(nUrl>=0)
				{
					param = GetInfo(param, '&url=');
					sUrl = sInfo;
					arrUrl[arrUrl.length] = sUrl;
				}
				if(!Webcrea.IsEmpty(sAgent) && !Webcrea.IsEmpty(sUrl))
				{
					bAgentError = true;
					break;
				}
				n = param.indexOf('&sql=');
				param = GetInfo(param, '&sql=');
				if(Webcrea.IsEmpty(sInfo))
				{
					bSqlExist = false;
					break;
				}
				if(i>0) sSql += spChar;
				sSql += sInfo;
				if(i==0) sHttpParam = param;
			}
		}
		if(bForm)
		{
			if(!IsInfoEmpty(sSqlIndex))
			{
				sSqlIndex = '&sqlIndex=' + sSqlIndex;
				sHttpParam += sSqlIndex;
			}
			if(!IsInfoEmpty(sParamIndex))
			{
				sParamIndex = '&paramIndex=' + sParamIndex;
				sHttpParam += sParamIndex;
			}
			if(!IsInfoEmpty(sUrlIndex))
			{
				sUrlIndex = '&urlIndex=' + sUrlIndex;
				sHttpParam += sUrlIndex;
			}
			if(!IsInfoEmpty(sSqlParamInfo))
			{
				sSqlParamInfo = '&sqlParamInfo=' + sSqlParamInfo;
				sHttpParam += sSqlParamInfo;
			}
		}
		else
		{
			sSql = '&sql=' + sSql;
			sHttpParam += sSql;
		}
		
		if(arrAgent.length>0 && arrAgent.length != this.arrTransInfo.length) bAgentError = true;
		else if(arrUrl.length>0 && arrUrl.length != this.arrTransInfo.length) bAgentError = true;
		else if(arrAgent.length>0 && arrUrl.length>0) bAgentError = true;
		if(!bAgentError)
		{
			for(var i=0; i<arrAgent.length-1; i++)
			{
				if(arrAgent[i] != arrAgent[i+1])
				{
					bAgentError = true;
					break;
				}
			}
		}
		if(!bAgentError)
		{
			for(var i=0; i<arrUrl.length-1; i++)
			{
				if(arrUrl[i] != arrUrl[i+1])
				{
					bAgentError = true;
					break;
				}
			}
		}
		if(!bAgentError && bSqlExist)
		{
			Webcrea.bCommit = true;
			DataHandler(sHttpParam, '', bAsync, '', null, ThreadId, ThreadResult);
		}
		else
		{
			var sMsg = 'Commit: NoSql not supported';
			if(bAgentError) sMsg = 'Commit: Not unique agent';
			Webcrea.MsgBox(sMsg, true);
		}
		Webcrea.nBeginDBID = -1;
		Webcrea.bBeginTrans = false;
		this.arrTransInfo = [];
		return (LastStatus() == 'OK');
	},
	this.Rollback = function()
	{
		Webcrea.nBeginDBID = -1;
		Webcrea.bBeginTrans = false;
		this.arrTransInfo = [];
		return true;
	},
	this.BigNumberCalc = function()
	{
		var sRet;
		if(arguments.length<3) return;
		var mode = arguments[arguments.length-1];
		var Calculation = function()
		{
			var param1 = arguments[0].toString();
			var param2 = arguments[1].toString();
			var param1 = new BigNumber(param1);
			var param2 = new BigNumber(param2);
			var sSubRet;
			if(mode==0) sSubRet = param1.plus(param2);
			else if(mode==1) sSubRet = param1.minus(param2);
			else if(mode==2) sSubRet = param1.times(param2);
			else if(mode==3) sSubRet = param1.div(param2);
			return sSubRet;
		};
		var param1 = arguments[0];
		for(var i=1; i<arguments.length-1; i++)
		{
			var param2 = arguments[i];
			param1 = Calculation(param1, param2);
		}
		sRet = param1;
		if(Webcrea.IsObject(sRet)) sRet = sRet.toFixed();
		return sRet;
	},
	this.BigNumberPlus = function()
	{
		var func = '';
		if(arguments.length<2)
		{
			var sRet = null;
			if(arguments.length==1) sRet = arguments[0];
			return sRet;
		}
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(!Webcrea.IsEmpty(func)) func += ',';
			func = func + "'" + param + "'";
		}
		func = 'Webcrea.BigNumberCalc(' + func + ',0);';
		return eval(func);
	},
	this.BigNumberMinus = function()
	{
		var func = '';
		if(arguments.length<2)
		{
			var sRet = null;
			if(arguments.length==1) sRet = arguments[0];
			return sRet;
		}
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(!Webcrea.IsEmpty(func)) func += ',';
			func = func + "'" + param + "'";
		}
		func = 'Webcrea.BigNumberCalc(' + func + ',1);';
		return eval(func);
	},
	this.BigNumberTimes = function()
	{
		var func = '';
		if(arguments.length<2)
		{
			var sRet = null;
			if(arguments.length==1) sRet = arguments[0];
			return sRet;
		}
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(!Webcrea.IsEmpty(func)) func += ',';
			func = func + "'" + param + "'";
		}
		func = 'Webcrea.BigNumberCalc(' + func + ',2);';
		return eval(func);
	},
	this.BigNumberDiv = function()
	{
		var func = '';
		if(arguments.length<2)
		{
			var sRet = null;
			if(arguments.length==1) sRet = arguments[0];
			return sRet;
		}
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			if(!Webcrea.IsEmpty(func)) func += ',';
			func = func + "'" + param + "'";
		}
		func = 'Webcrea.BigNumberCalc(' + func + ',3);';
		return eval(func);
	},
	this.BigNumberMod = function()
	{
		var param1 = arguments[0];
		var param2 = arguments[1];
		if(Webcrea.IsNull(param1)) return;
		if(Webcrea.IsNull(param2)) return 0;
		param1 = param1.toString();
		param1 = new BigNumber(param1);
		return param1.mod(param2);
	},
	this.BigNumberRound = function()
	{
		var param1 = arguments[0];
		var param2 = arguments[1];
		var param3 = arguments[2];
		if(Webcrea.IsNull(param1)) return param1;
		if(Webcrea.IsEmpty(param2)) param2 = 0;
		param1 = param1.toString();
		if(param3) param1 = Webcrea.BigNumberDiv(param1, param3);
		param1 = new BigNumber(param1);
		var sRet = param1.toFormat(param2);
		sRet = Webcrea.ReplaceAll(sRet, ',', '');
		return sRet;
	},
	this.BigNumberCeil = function()
	{
		var param1 = arguments[0];
		var param2 = arguments[1];
		var param3 = arguments[2];
		if(Webcrea.IsNull(param1)) return param1;
		if(Webcrea.IsEmpty(param2)) param2 = 0;
		param1 = param1.toString();
		if(param3) param1 = Webcrea.BigNumberDiv(param1, param3);
		param1 = new BigNumber(param1);
		var sRet = param1.toFormat(param2, 2);
		sRet = Webcrea.ReplaceAll(sRet, ',', '');
		return sRet;
	},
	this.BigNumberFloor = function()
	{
		var param1 = arguments[0];
		var param2 = arguments[1];
		var param3 = arguments[2];
		if(Webcrea.IsNull(param1)) return param1;
		if(Webcrea.IsEmpty(param2)) param2 = 0;
		param1 = param1.toString();
		if(param3) param1 = Webcrea.BigNumberDiv(param1, param3);
		param1 = new BigNumber(param1);
		var sRet = param1.toFormat(param2, 1);
		sRet = Webcrea.ReplaceAll(sRet, ',', '');
		return sRet;
	},
	this.ToNumber = function()
	{
		var currObj = arguments[0];
		var sParam = arguments[1];
		var mode = arguments[2];
		var bIgnoreFormat = false;
		var n = sParam.indexOf('ignoreFormat');
		if(n>=0)
		{
			sParam = sParam.substr(n+12);
			bIgnoreFormat = true;
		}
		sParam = sParam.trim();
		var arrCellId = [];
		var nConnCell = sParam.indexOf('..');
		if(nConnCell>0)
		{
			var arr = sParam.split('..');
			var bEnd = false;
			if(arr.length>1 && !Webcrea.IsEmpty(arr[1])) bEnd = true;
			var item='', start='', end='';
			if(bEnd)
			{
				sParam = arr[0];
				for(var i=sParam.length-1; i>=0; i--)
				{
					if(!IsDigit(sParam[i]))
					{
						item = sParam.substr(0, i+1);
						start = sParam.substr(i+1);
						end = arr[1].replace(item, '');
						break;
					}
				}
				if(Webcrea.IsEmpty(item)) return;
				if(Webcrea.IsEmpty(start)) return;
				if(Webcrea.IsEmpty(end)) return;
			}
			else item = arr[0];
		}
		else arrCellId = sParam.split(',');
		for(var i=0; i<currObj.arrField.length; i++)
		{
			var sField = currObj.arrField[i];
			if(nConnCell>0)
			{
				var n = sField.indexOf(item);
				if(n<0) continue;
				var check = sField.replace(item, '');
				if(!IsDigit(check)) continue;
				if(bEnd && (Webcrea.NumberReDef(check)<Webcrea.NumberReDef(start) || Webcrea.NumberReDef(check)>Webcrea.NumberReDef(end))) continue;
			}
			else if(arrCellId.search(sField)<0) continue;
			if(!mode) currObj.arrFieldType[i] = 1;
			else currObj.arrFieldType[i] = 0;
		}
	},
	this.ToString = function()
	{
		var currObj = arguments[0];
		var sParam = arguments[1];
		Webcrea.ToNumber(currObj, sParam, 1);
	},
	this.ErrorMsgBox = function()
	{
		if(Webcrea.bAlert)
		{
			var sMsg = arguments[0];
			var error = arguments[1];
			Webcrea.Trace(error.stack);
			var bAlert = true;
			for(var i=0; i<WebcreaInfo.arrSkipErrorMsg.length; i++)
			{
				var bSkip = sMsg.indexOf(WebcreaInfo.arrSkipErrorMsg[i])>=0?true:false;
				if(bSkip)
				{
					bAlert = false;
					break;
				}
			}
			if(bAlert) alert(sMsg);
		}
	},
	this.ErrorTrace = function()
	{
		var error = arguments[0];
		Webcrea.Trace(error.stack);
	},
	this.WarningTrace = function()
	{
		var msg = arguments[0];
		Webcrea.Trace(msg);
	},
	this.Trace = function(sMsg, mode, bForce)
	{
		if(!this.bTrace && !bForce) return;
		if(!mode) console.log(sMsg);
		else if(!Webcrea.IE() && mode == 1) console.time(sMsg);
		else if(!Webcrea.IE() && mode == 2) console.timeEnd(sMsg);
		else if(mode == 3)
		{
			if(!Webcrea.IE()) console.group();
			console.log(sMsg);
		}
		else if(mode == 4)
		{
			console.log(sMsg);
			if(!Webcrea.IE()) console.groupEnd();
		}
	},
	this.TraceWarning = function(sMsg, step)
	{
		var sTitle = '=== Webcrea ';
		if(!step) sTitle += 'Warning : ';
		else if(step == 1) sTitle += 'Error : ';
		sMsg = sTitle + sMsg;
		sMsg += ' ===';
		Webcrea.Trace(sMsg, null, true);
	},
	this.ShowQueryError = function()
	{
		Webcrea.bAlert = arguments[0];
	},
	this.StringToXml = function($xml)
	{
		if(window.DOMParser)
		{
			var dp = new window.DOMParser();
			return dp.parseFromString($xml, "text/xml");
		}
	},
	this.XmlToMSV = function($data)
	{
		var ToMSV = function(xmlDoc)
		{
			var msvData = '';
			if(xmlDoc.tagName == 'data')
			{
				var childNodes = xmlDoc.children;
				var rowHeader='';
				var rowValue='';
				for(var i=0; i<childNodes.length; i++)
				{
					var root = childNodes[i];
					if(root.tagName != 'row') continue;
					var sRow='';
					var nodes = root.children;
					for(var j=0; j<nodes.length; j++)
					{
						var node = nodes[j];
						if(i==0)
						{
							if(!Webcrea.IsEmpty(rowHeader)) rowHeader += Webcrea.msvSpColType;
							rowHeader += node.tagName;
						}
						if(!Webcrea.IsEmpty(sRow)) sRow += Webcrea.msvSpColType;
						sRow += node.textContent;
					}
					if(!Webcrea.IsEmpty(rowValue)) rowValue += Webcrea.msvSpRowType;
					rowValue += sRow;
				}
				msvData = rowHeader + Webcrea.msvSpRowType + rowValue;
			}
			return msvData;
		};
		var n = $data.indexOf('?>');
		if(n>0) $data = $data.substr(n+2);
		var xml = Webcrea.StringToXml($data);
		var xmlDoc = xml.documentElement;
		return ToMSV(xmlDoc);
	},
	this.JsonToMSV = function()
	{
		let param = arguments[0];
		let currObj = arguments[1];
		let jsonParam = JSON.parse(param);
		let retMsvData = '';
		let GetJsonObject = function()
		{
			let arrJson = [];
			let arrObject = [];
			let n = param.indexOf(':[');
			let n1 = param.indexOf(':{');
			if(n<0 || (n1>0 && n1<n)) n = n1;
			while(n>0)
			{
				let sObj = '';
				let s1 = param.substr(0, n);
				let nSub = s1.lastIndexOf(',');
				if(nSub>=0) sObj = s1.substr(nSub+1, n);
				else
				{
					nSub = s1.lastIndexOf('{');
					if(nSub>=0) sObj = s1.substr(nSub+1, n);
				}
				if(!Webcrea.IsEmpty(sObj))
				{
					let n1 = sObj.indexOf('"');
					let n2 = sObj.lastIndexOf('"');
					sObj = sObj.substr(n1+1, n2-n1-1);
					arrObject[arrObject.length] = sObj;
				}

				param = param.substr(n+2);
				n = param.indexOf(':[');
				n1 = param.indexOf(':{');
				if(n<0 || (n1>0 && n1<n)) n = n1;
			}
			if(arrObject.length<1) return arrJson;
			for(let i=0; i<arrObject.length; i++)
			{
				let jsonObj = jsonParam[arrObject[i]];
				if(jsonObj)
				{
					let obj = {};
					obj.id = arrObject[i];
					obj.jsonObj = jsonObj;
					arrJson[arrJson.length] = obj;
				}
			}
			return arrJson;
		};
		let arrJson = GetJsonObject(param);
		if(arrJson.length<1)
		{
			if(!currObj) return;
			let obj = {};
			obj.id = currObj.divPos;
			obj.jsonObj = jsonParam;
			arrJson[arrJson.length] = obj;
		}
		let sPage = '';
		let objPage;
		if(currObj)
		{
			sPage = currObj.divPage;
			objPage = _my_File.GetPageObjById(sPage);
		}
		else
		{
			objPage = _my_File.GetPageObj();
			sPage = objPage.divPage;
		}
		for(let i=0; i<arrJson.length; i++)
		{
			let sObject = arrJson[i].id;
			let jsonObj = arrJson[i].jsonObj;

			let retData = '';
			let sField = '';
			let arrField = [];
			let GetJsonField = function()
			{
				let jsonStr = arguments[0];
				let bStart = false;
				let psz = '';
				for(let j=0; j<jsonStr.length; j++)
				{
					let c = jsonStr[j];
					let c_a = null;
					let c_b = null;
					if(j+1<jsonStr.length) c_a = jsonStr[j+1];
					if(j>0) c_b = jsonStr[j-1];
					if(!bStart)
					{
						if(c == '"' && (c_b == '{' || c_b == '' || c_b == ',')) bStart = true;
						continue;
					}
					if(bStart && c == '"' && c_a == ':')
					{
						bStart = false;
						let sFiledInType = psz;
						if(j+2<jsonStr.length && jsonStr[j+2] != '"') sFiledInType += '#';
						if(sField != '') sField += Webcrea.msvSpColType;
						sField += sFiledInType;
						arrField[arrField.length] = psz;
						psz = '';
						continue;
					}
					psz += c;
				}
			};
			let GetRowData = function()
			{
				let obj = arguments[0];
				let sData = '';
				for(let k=0; k<arrField.length; k++)
				{
					let value = obj[arrField[k]];
					if(sData != '') sData += Webcrea.msvSpColType;
					sData += value;
				}
				return sData;
			};
			let jsonStr = '';
			if(jsonObj.length>0) jsonStr = JSON.stringify(jsonObj[0]);
			else jsonStr = JSON.stringify(jsonObj);
			GetJsonField(jsonStr);
			if(arrField.length<0) return;

			if(!jsonObj.length) retData = GetRowData(jsonObj);
			for(let j=0; j<jsonObj.length; j++)
			{
				let sData = GetRowData(jsonObj[j]);
				if(retData != '') retData += Webcrea.msvSpRowType;
				retData += sData;
			}
			retData = sField + Webcrea.msvSpRowType + retData;
			var objName = '_my_' + sPage + '_' + sObject;
			var findObj = objPage.GetObject(sObject);
			if(!findObj)
			{
				var objExe = "new FormObject('" + sPage + "','" + sObject + "',2);";
				eval(objName + '=' + objExe);
				eval(objName).objName = objName;
				eval(objName).bMultiData = true;
				eval(objName).bQuery = true;
				eval(objName).Init();
				if(currObj)
				{
					eval(objName).sDBID = currObj.sDBID;
					eval(objName).sParam = currObj.sParam;
				}
				eval(objName).MSVDataParser(retData);
			}
			else findObj.MSVDataParser(retData);
		}
		return retMsvData;
	},
	this.MailTo = function()
	{
		var ___sTo = arguments[0];
		var ___sTitle = arguments[1];
		var ___sBody = arguments[2];
		var ___param = 'mailto:' + ___sTo;
		if(Webcrea.IsEmpty(___sTitle)) ___param = ___param + '?body=' + ___sBody;
		else ___param = ___param + '?subject=' + ___sTitle + '&body=' + ___sBody;
		var objParent = Webcrea.FindNode(document.body, 'id', 'MainDiv');
		if(!objParent) return;
		var id='_my_mail';
		var obj = Webcrea.FindNode(objParent, 'id', id);
		if(obj) obj.parentNode.removeChild(obj);
		obj = document.createElement('div');
		obj.setAttribute('id', id);
		var a = document.createElement('a');
		a.setAttribute('href', ___param);
		obj.appendChild(a);
		objParent.appendChild(obj);
		a.click();
	},
	this.MsgBox = function()
	{
		var msg = arguments[0];
		var bTrace = arguments[1];
		if(msg == undefined) msg = '';
		if(bTrace) Webcrea.Trace(msg);
		alert(msg);
	},
	this.Mobile = function()
	{
		var mode = arguments[0];
		var param1 = arguments[1];
		if(!Webcrea.IsMobile()) return;
		if(Webcrea.IsEmpty(mode)) return;
		mode = mode.toLowerCase();
		var objParent = Webcrea.FindNode(document.body, 'id', 'MainDiv');
		if(!objParent) return;
		var id='_my_moblie_' + mode;
		var obj = Webcrea.FindNode(objParent, 'id', id);
		if(obj) obj.parentNode.removeChild(obj);
		if(mode == 'call')
		{
			obj = document.createElement('div');
			obj.setAttribute('id', id);
			var a = document.createElement('a');
			a.setAttribute('href', 'tel:' + param1);
			obj.appendChild(a);
			objParent.appendChild(obj);
			a.click();
		}
		else if(mode == 'sms')
		{
			obj = document.createElement('div');
			obj.setAttribute('id', id);
			var a = document.createElement('a');
			a.setAttribute('href', 'sms:' + param1);
			obj.appendChild(a);
			objParent.appendChild(obj);
			a.click();
		}
		else if(mode == 'mail')
		{
			obj = document.createElement('div');
			obj.setAttribute('id', id);
			var a = document.createElement('a');
			a.setAttribute('href', 'mailto:' + param1);
			obj.appendChild(a);
			objParent.appendChild(obj);
			a.click();
		}
		else if(mode == 'camera')
		{
		}
		else if(mode == 'gis')
		{
		}
		if(obj) obj.parentNode.removeChild(obj);
	},
	this.MultiData = function()
	{
		var ___data = arguments[0];
		var ___obj = arguments[1];
		var retData='';
        var sSplit='{{{';
        var nFileVersion = Webcrea.GetCurrFileVersion();
        if(nFileVersion>=7020171102001)
		{
            var spRowTypeChk = Webcrea.msvSpRowType;
            if(!Webcrea.IsNull(___data))
            {
                var spColTypeChk = Webcrea.GetColumnSpType(___data);
                if(spColTypeChk == '\t') spRowTypeChk = '\n';
            }
            sSplit = spRowTypeChk+sSplit;
        }
        var arrData = ___data.split(sSplit);
		if(arrData.length<1) return retData;
		retData = arrData[0];
		var sPage = '';
		var objPage;
		if(___obj)
		{
			sPage = ___obj.divPage;
			objPage = _my_File.GetPageObjById(sPage);
		}
		else
		{
			objPage = _my_File.GetPageObj();
			sPage = objPage.divPage;
		}
		for(var i=1; i<arrData.length; i++)
		{
			var sData = arrData[i];
			var n = sData.indexOf('}}}');
			if(n<0) continue;
			var sObject = sData.substr(0, n);
			sObject = sObject.replace('{{{','');
			sObject = Webcrea.ReplaceAll(sObject,'+','');
			sObject = sObject.trim();
			sData = sData.substr(n+4);
			var objName = '_my_' + sPage + '_' + sObject;
			var findObj = objPage.GetObject(sObject);
			if(!findObj)
			{
				var objExe = "new FormObject('" + sPage + "','" + sObject + "',2);";
				eval(objName + '=' + objExe);
				eval(objName).objName = objName;
				eval(objName).bMultiData = true;
				eval(objName).bQuery = true;
				eval(objName).Init();
				if(___obj)
				{
					eval(objName).sDBID = ___obj.sDBID;
					eval(objName).sParam = ___obj.sParam;
				}
				eval(objName).MSVDataParser(sData);
			}
			else findObj.MSVDataParser(sData);
		}
		return retData;
	},
	this.NoPrint = function()
	{
		var currObj = arguments[0];
		var bNoPrint = arguments[1];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		if(!currObj) return;
		var obj = currObj.objGDivPos?currObj.objGDivPos:currObj.objDivPos;
		var sClass = obj.getAttribute('class');
		if(bNoPrint)
		{
			if(Webcrea.IsEmpty(sClass)) sClass = '_my_noprint';
			else sClass += ' _my_noprint';
		}
		else
		{
			if(!Webcrea.IsEmpty(sClass))
			{
				sClass = sClass.replace('_my_noprint', '');
				sClass = sClass.trim();
			}
		}
		obj.setAttribute('class', sClass);
	},
	this.OnlyPrint = function()
	{
		var currObj = arguments[0];
		var bOnlyPrint = arguments[1];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		if(!currObj) return;
		var obj = currObj.objGDivPos?currObj.objGDivPos:currObj.objDivPos;
		var sClass = obj.getAttribute('class');
		if(bOnlyPrint)
		{
			if(Webcrea.IsEmpty(sClass)) sClass = '_my_onlyprint';
			else sClass += ' _my_onlyprint';
		}
		else
		{
			if(!Webcrea.IsEmpty(sClass))
			{
				sClass = sClass.replace('_my_onlyprint', '');
				sClass = sClass.trim();
			}
		}
		obj.setAttribute('class', sClass);
	},
	this.Accumulate = function()
	{
		var currObj = arguments[0];
		var param = arguments[1];
		var n = param.lastIndexOf('where');
		var sWhere = '';
		if(n > 0)
		{
			sWhere = param.substr(n+5);
			sWhere = sWhere.trim();
			param = param.substr(0, n);
		}
		if(currObj.arrRows.length<1) return;
		var arrParam = Webcrea.MakeToken(param);
		var accuItem = arrParam[0].trim();
		arrParam.splice(0,1);
		var arrGroupItem = [];
		var sInit = '', sAdd = '', sMinus = '';
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			if(sParam == ',') continue;
			else if(sParam == 'group')
			{
				i++;
				var bGroup = false;
				for(var j=i; j<arrParam.length; j++)
				{
					sParam = arrParam[j];
					if(sParam == ',') break;
					if(sParam == '=')
					{
						bGroup = true;
						continue;
					}
					if(bGroup) arrGroupItem[arrGroupItem.length] = sParam;
				}
				i=j;
			}
			else if(sParam == 'init' || sParam == 'add' || sParam == 'sub')
			{
				i++;
				var bStart = false;
				for(var j=i; j<arrParam.length; j++)
				{
					var sParamSub = arrParam[j];
					if(sParamSub == ',') break;
					if(sParamSub == '=')
					{
						bStart = true;
						continue;
					}
					if(bStart)
					{
						if(sParam == 'init') sInit += sParamSub;
						else if(sParam == 'add') sAdd += sParamSub;
						else if(sParam == 'sub') sMinus += sParamSub;
					}
				}
				i=j;
			}
		}
		if(!currObj.IsColumn(accuItem)) this.MakeRecordSet(currObj, 'column', accuItem + '=');
		var sGroup = '', sGroupB = '';
		var valueB = 0;
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			if(!Webcrea.IsEmpty(sWhere) && !currObj.IsWhere(sWhere, i)) continue;
			var nInit = currObj.GetExpressionData(sInit, i);
			var nAdd = currObj.GetExpressionData(sAdd, i);
			var nMinus = currObj.GetExpressionData(sMinus, i);
			var value = Webcrea.NumberReDef(nInit) + Webcrea.NumberReDef(nAdd) - Webcrea.NumberReDef(nMinus);
			if(arrGroupItem.length>0) sGroup = currObj.GetWhere(arrGroupItem, i);
			if(!Webcrea.IsEmpty(sGroup) && !Webcrea.IsEmpty(sGroupB) && sGroup != sGroupB)
			{
				sGroupB = '';
				valueB = 0;
			}
			else value += valueB;
			sGroupB = sGroup;
			valueB = value;
			currObj.arrData[accuItem][i] = value;
		}
	},
	this.AddParam = function(param, value)
	{
		this.arrParam[this.arrParam.length] = param;
		this.arrParamValue[this.arrParamValue.length] = value;
	},
	this.RemoveParam = function()
	{
		this.arrParam = [];
		this.arrParamValue = [];
	},
	this.AddParamRun = function(param, value)
	{
		this.arrParamRun[this.arrParamRun.length] = param;
		this.arrParamRunValue[this.arrParamRunValue.length] = value;
	},
	this.RemoveParamRun = function()
	{
		this.arrParamRun = [];
		this.arrParamRunValue = [];
	},
	this.AddParamReturn = function(param, value)
	{
		this.arrParamReturn[this.arrParamReturn.length] = param;
		this.arrParamReturnValue[this.arrParamReturnValue.length] = value;
	},
	this.RemoveParamReturn = function()
	{
		this.arrParamReturn = [];
		this.arrParamReturnValue = [];
	},
	this.Calculation = function()
	{
		var sRet='';
		var param = arguments[0];
		var arrParam = Webcrea.MakeToken(param);
		if(arrParam.length<1) return;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			if(Webcrea.IsCatOper(sParam))
			{
				var mode=sParam;
				while(true)
				{
					i++;
					if(i>=arrParam.length) break;
					var sParam1 = arrParam[i];
					if(sParam1 === '(')
					{
						var sObj = arrParam[++i];
						if(Webcrea.IsQuote(sObj)) sObj = Webcrea.RemoveQuote(sObj);
						var arr = sObj.split('.');
						if(arr.length<2) return;
						var obj = Webcrea.GetObjectById(arr[0]);
						var sField = arr[1];
						if(obj && !Webcrea.IsEmpty(sField)) sParam = obj.GetCalculation(mode, sField);
					}
					else if(sParam1 == ')') break;
				}
			}
			else if(Webcrea.IsRunTimeFunction(sParam))
			{
				var nStep = 0;
				var sSub = '';
				while(true)
				{
					i++;
					var sParam1 = arrParam[i];
					var arr = sParam1.split('.');
					if(!Webcrea.IsQuote(sParam1) && arr.length>0)
					{
						var obj = Webcrea.GetObjectById(arr[0]);
						if(obj) sParam1 = "'" + sParam1 + "'";
					}
					sSub += sParam1;
					if(sParam1 === '(') nStep++;
					else if(sParam1 === ')') nStep--;
					if(!nStep) break;
				}
				sParam += sSub;
			}
			else if(!Webcrea.IsFunction(sParam))
			{
				var arr = sParam.split('.');
				if(arr.length>1)
				{
					var obj = Webcrea.GetObjectById(arr[0]);
					if(obj)
					{
						if(arr[1][0] == '@' || (arr.length>2 && arr[2][0]=='@'))
						{
							var sSubParam = '';
							var sProperty = '';
							var sCellId = '';
							if(arr.length>2)
							{
								sCellId = arr[1];
								sProperty = arr[2].substr(1);
							}
							else sProperty = arr[1].substr(1);
							if(Webcrea.IsEmpty(sCellId)) sSubParam = '_Get_' + sProperty + '()';
							else sSubParam = '_Get_' + sProperty + '("' + sCellId + '")';
							sSubParam = obj.objName + '.' + sSubParam;
							sParam = sSubParam;
						}
						else sParam = obj.objName + '.GetValueByDisplay("' + arr[1] + '")';
					}
				}
				else if(!Webcrea.IsEmpty(sParam))
				{
					if(sParam.toLowerCase() == '||') sParam = '+';
				}
			}
			sRet += sParam;
		}
		try{if(Webcrea.IsNumber(sRet))sRet = Webcrea.NumberReDef(sRet);else sRet = eval(sRet);} catch(e){sRet = '';}
		if(Webcrea.IsNull(sRet)) sRet = '';
		return sRet;
	},
	this.ColToRow = function()
	{
		var currObj = arguments[0];
		var param = arguments[1];
		var arrParam = param.split(',');
		if(currObj.arrRows.length<1) return;
		var bRemoveZero = false;
		var arrColObj = [];
		var arrRemoveCol = [];
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i].trim();
			if(sParam == 'removeZero')
			{
				bRemoveZero = true;
				continue;
			}
			var arr = sParam.split(' ');
			if(arr.length<2) continue;
			var obj ={};
			obj.keyItem = arr[0];
			arr.splice(0, 1);
			obj.arrColItem = arr;
			arrColObj[arrColObj.length] = obj;
			arrRemoveCol = arrRemoveCol.concat(arr);
		}
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			var arrData = [];
			for(var j=0; j<currObj.arrField.length; j++)
			{
				var field = currObj.arrField[j];
				var value = currObj.arrData[field][i];
				arrData[arrData.length] = value;
			}
			var nInsert = 0;
			for(var j=0; j<arrColObj.length; j++)
			{
				var obj = arrColObj[j];
				for(var k=0; k<obj.arrColItem.length; k++)
				{
					if(j==0)
					{
						Webcrea.InsertRecord(currObj, i+k+1, arrData);
						nInsert++;
					}
					var sCol = obj.arrColItem[k];
					var value = currObj.arrData[sCol][i];
					currObj.arrData[obj.keyItem][i+k+1] = value;
				}
			}
			i+=nInsert;
		}
		for(var i=0; i<currObj.arrField.length; i++)
		{
			var bRemove = false;
			var field = currObj.arrField[i];
			for(var j=0; j<arrRemoveCol.length; j++)
			{
				var removeField = arrRemoveCol[j];
				if(field == removeField)
				{
					bRemove = true;
					currObj.arrField.splice(i, 1);
					arrRemoveCol.splice(j, 1);
					currObj.arrData.splice(field, 1);
					delete currObj.arrData[field];
					j--;
				}
			}
			if(bRemove) i--;
		}
	},
	this.CurRowNo = function()
	{
		var sObj = arguments[0];
		if(this.IsEmpty(sObj)) return;
		if(this.IsObject(sObj)) sObj = sObj.id;
		var obj = Webcrea.GetObjectById(sObj);
		if(!obj) return;
		var nRowNo = obj.CurRowNo();
		return nRowNo;
	},
	this.Eval = function()
	{
		var param = arguments[0];
		var ___arrTempVar = arguments[1];
		var bError = false;
		var ret = param;
		if(Webcrea.IsString(param))
		{
			var nBase = this.webcreaVal.length;
			var sChk = ret.substr(0, 2);
			if(sChk == '//')
			{
				ret = this.webcreaVal + ret;
				 try{ret = eval(ret);}catch(e){bError=true;}
				if(!Webcrea.IsEmpty(ret) && ret.length>=nBase) ret = ret.substr(nBase);
			}
			else
			{
				try{
					var chgCRLF = this.webcreaVal + '{{{+}}}';
					ret = Webcrea.ReplaceAll(ret, '\r\n', chgCRLF);
					ret = Webcrea.ReplaceAll(ret, '\r', chgCRLF);
					ret = Webcrea.ReplaceAll(ret, '\n', chgCRLF);
					ret = eval(ret);
					if(Webcrea.IsString(ret)) ret = Webcrea.ReplaceAll(ret, chgCRLF, '\r\n');
				}catch(e){bError=true;}
			}
		}
		else try{ret = eval(ret);}catch(e){bError=true;}
		if(bError) ret = param;
		return ret;
	},
	this.GetBulletColor = function()
	{
		return WebcreaInfo.sBulletColor;
	},
	this.GetBulletImage = function()
	{
		return WebcreaInfo.sBulletImage;
	},
	this.GetColumnSpType = function()
	{
		var spType = Webcrea.msvSpColType;
		var msvData = arguments[0];
		if(Webcrea.IsEmpty(msvData)) return spType;
		var msvSpRowType = Webcrea.msvSpRowType;
		var arrRows = msvData.split(msvSpRowType);
		if(arrRows.length == 1)
		{
			msvSpRowType = '\r\n';
			arrRows = msvData.split(msvSpRowType);
			if(arrRows.length == 1)
			{
				msvSpRowType = '\n';
				arrRows = msvData.split(msvSpRowType);
			}
		}
		if(arrRows[0].split(spType).length < 2)
		{
			var spType1 = '\t';
			if(arrRows[0].split(spType1).length < 2)
			{
				var spType2 = ',';
				if(arrRows[0].split(spType2).length > 1) spType = spType2;
			}
			else spType = spType1;
		}
		return spType;
	},
	this.GetConvSyntax = function()
	{
		var sRet = arguments[0];
		if(Webcrea.IsEmpty(sRet)) return sRet;
		if(!Webcrea.IsString(sRet)) return sRet;
		if(sRet.toLowerCase() == 'false' || sRet.toLowerCase() == 'true') sRet = sRet.toLowerCase();
		else if(sRet == '||') sRet = '+';
		return sRet;
	},
	this.GetConvValue = function()
	{
		var param = arguments[0];
		var bNumber = false;
		var bString = false;
		if(param[0] == ':' || param[0] == '#')
		{
			if(param[0] == '#') bNumber = true;
			else if(param[0] == ':') bString = true;
			for(var i=0; i<param.length; i++)
			{
				if(param[i] == ':' || param[i] == '#')
				{
					param = param.substr(i+1);
					i--;
				}
				else break;
			}
			if(Webcrea.IsFuncInnerVal(param)) param=Webcrea.GetFuncInnerVal(param);
			else param = window[param];
		}
		if(bNumber && Webcrea.IsNumber(param)) param = Webcrea.NumberReDef(param);
		else if(bString && Webcrea.IsNumberType(param)) param = param.toString();
		return param;
	},
	this.GetCrossUrl = function()
	{
		if(!Webcrea.IsEmpty(Webcrea.crossUrl)) return Webcrea.crossUrl;
		var sRoot = Webcrea.framePath;
		if(Webcrea.IsNull(sRoot)) sRoot = Webcrea.Host();
		var sUrl = sRoot + '/frame' + Webcrea.version + '/crossurl';
		if(Webcrea.IsIIS()) sUrl += '.asp';
		else sUrl += '.jsp';
		return sUrl;
	},
	this.GetCSS = function(ruleName, deleteFlag)
	{
		ruleName=ruleName.toLowerCase();
		if (document.styleSheets)
		{
			for (var i=0; i<document.styleSheets.length; i++)
			{
				var styleSheet=document.styleSheets[i];
				var ii=0;
				var cssRule=false;
				do {
					try{
						if (styleSheet.cssRules) cssRule = styleSheet.cssRules[ii];
						else if(styleSheet.rules) cssRule = styleSheet.rules[ii];
						if (cssRule)
						{
							if (cssRule.selectorText && cssRule.selectorText.toLowerCase()==ruleName)
							{
								if (deleteFlag != undefined && deleteFlag)
								{
									if (styleSheet.cssRules) styleSheet.deleteRule(ii);
									else styleSheet.removeRule(ii);
									return true;
								} else return cssRule;
							}
						}
					}catch(e){}
					ii++;
				} while(cssRule)
			}
		}
		return false;
	},
	this.GetColor = function()
	{
		var color = arguments[0];
		if(!color) return;
		if(color[0] != '#') color = Hex2RGB(color);
		return color;
	},
	this.GetEmpty = function()
	{
		return '';
	},
	this.GetErrorMsg = function()
	{
		var sErrMsg = '';
		var errorobj = arguments[0];
		if(errorobj)
		{
			sErrMsg = errorobj.message;
			var n = sErrMsg.indexOf('Maximum call stack');
			if(n>=0) sErrMsg = Webcrea.LoadString('msgErrStackOverflow');
		}
		return sErrMsg;
	},
	this.GetHexImage = function()
	{
		var sHex = arguments[0];
		var sExt = arguments[1];
		sHex = sHex.replace(/\r|\n/g, "");
		sHex = sHex.replace(/([\da-fA-F]{2}) ?/g, "0x$1 ");
		sHex = sHex.replace(/\s+$/, "");
		var arrHex = sHex.split(" ");
		var binary = '';
		var bytes = new Uint8Array(arrHex);
		var len = bytes.byteLength;
		for (var i=0; i<len; i++)
		{
			binary += String.fromCharCode( bytes[i]);
		}
		var sBase64 = window.btoa(binary);
		var sImage = 'data:image/' + sExt + ';base64,' + sBase64;
		return sImage;
	},
	this.GetHoliday = function()
	{
		var hoildayObj=null;
		var sDate = arguments[0];
		var sLunarDate = Webcrea.GetLunarDate(sDate);
		var nameDay = Webcrea.GetDayOfWeek(sDate);
		var sDayOfWeek = Webcrea.GetDayName(nameDay);
		var GetHolidayObj = function()
		{
			var findObj = null;
			var arrMemorial = arguments[0];
			var bSpecial = arguments[1];
			for(var i=0; i<arrMemorial.length; i++)
			{
				var dateObj = arrMemorial[i];
				var name = dateObj.name;
				var month = dateObj.month;
				var day = dateObj.day;
				var solarLunar = dateObj.solarLunar;
				var holiday = dateObj.holiday;
				var bAddHoliday = dateObj.bAddHoliday;
				var currYear = 0, currMonth = 0, currDay = 0;
				if(holiday)
				{
					if(solarLunar == 2)
					{
						currYear = Number(sLunarDate.substr(0, 4));
						currMonth = Number(sLunarDate.substr(4, 2));
						currDay = Number(sLunarDate.substr(6, 2));
						if(currMonth == 12 && currDay == 29)
						{
							var chkDate = AddDate(sDate, 1);
							var sLunarChkDate = Webcrea.GetLunarDate(chkDate);
							if(sLunarChkDate.substr(4,4) == '0101') currDay=30;
						}
					}
					else
					{
						currYear = Number(sDate.substr(0, 4));
						currMonth = Number(sDate.substr(4, 2));
						currDay = Number(sDate.substr(6, 2));
					}
					if(!currMonth || !currDay) return;
					if(currMonth == month && currDay == day)
					{
						if(bSpecial)
						{
							var startYear = dateObj.startYear;
							var endYear = dateObj.endYear;
							if(!startYear) startYear = 1;
							if(!endYear) endYear = 10000;
							if(currYear >= startYear && currYear <= endYear) findObj = dateObj;
						}
						else findObj = dateObj;
					}
				}
				if(findObj && !findObj.bAlterNative)
				{
					var IsLunarHoliday = function()
					{
						var bRet = false;
						for(var j=i+1; j<arrMemorial.length; j++)
						{
							var objLunar = arrMemorial[j];
							if(objLunar.solarLunar != 2) continue;
							var sLunarMon = Month(sLunarDate);
							var sLunarDay = Day(sLunarDate);
							if(objLunar.month == sLunarMon && objLunar.day == sLunarDay)
							{
								bRet = true;
								break;
							}
						}
						return bRet;
					};
					var bAddDay = IsLunarHoliday();
					if(bAddDay)
					{
						var sAddDate = sDate;
						var nAddDay = 1;
						while(true)
						{
							sAddDate = AddDate(sAddDate, nAddDay);
							var b = Webcrea.IsHoliday(sAddDate, 3);
							if(!b) break;
						}
						var addStartYear = sAddDate.substr(0,4);
						var addEndYear = addStartYear;
						var addMonth = sAddDate.substr(4,2);
						var addDay = sAddDate.substr(6,2);
						var bAlterNative = true;
						Webcrea.SpecialYearDay('대체휴일', addMonth, addDay, 1, true, addStartYear, addEndYear, bAlterNative);
						break;
					}
					if(sDayOfWeek == Webcrea.GetDayName(6) || sDayOfWeek == Webcrea.GetDayName(0))
					{
						if(WebcreaInfo.bDefaultHoliday && solarLunar==1) break;
						if(WebcreaInfo.bDefaultLunarHoliday && solarLunar==2) break;
						var bAdd = false;
						if(bAddHoliday)
						{
							var startYear = dateObj.startYear;
							if(startYear<=currYear) bAdd=true;
						}
						else if(sDayOfWeek == Webcrea.GetDayName(0) && solarLunar==2 && ((currMonth == 12 && currDay == 30) || (currMonth == 1 && (currDay == 1 || currDay == 2)))) bAdd = true;
						else if(sDayOfWeek == Webcrea.GetDayName(0) && solarLunar==2 && (currMonth == 8 && (currDay == 14 || currDay == 15 || currDay == 16))) bAdd = true;
						if(!bAdd) break;
						var sAddDate = sDate;
						var nAddDay = 0;
						if(sDayOfWeek == Webcrea.GetDayName(6))
						{
							nAddDay = 1;
							sAddDate = AddDate(sAddDate, nAddDay);
						}
						else if(sDayOfWeek == Webcrea.GetDayName(0)) nAddDay = 1;
						if(nAddDay>0)
						{
							while(true)
							{
								sAddDate = AddDate(sAddDate, nAddDay);
								var b = Webcrea.IsHoliday(sAddDate, 3);
								if(!b) break;
							}
							var addStartYear = sAddDate.substr(0,4);
							var addEndYear = addStartYear;
							var addMonth = sAddDate.substr(4,2);
							var addDay = sAddDate.substr(6,2);
							var bAlterNative = true;
							Webcrea.SpecialYearDay('대체휴일', addMonth, addDay, 1, true, addStartYear, addEndYear, bAlterNative);
						}
					}
					break;
				}
			}
			return findObj;
		};
		hoildayObj = GetHolidayObj(Webcrea.arrEveryYearDays);
		if(!hoildayObj) hoildayObj = GetHolidayObj(Webcrea.arrSpecialYearDays, true);
		return hoildayObj;
	},
	this.GetHttpParam = function()
	{
		var param = WebcreaInfo.sHttpParam;
		if(Webcrea.IsEmpty(param)) return '';
		return Webcrea.Eval(param);
	},
	this.GetImageLinkPath = function()
	{
		var sPath;
		var sRoot = Webcrea.framePath;
		if(Webcrea.IsNull(sRoot)) sRoot = '.';
		sRoot += '/';
		sPath = sRoot + Webcrea.imgFolder + Webcrea.version;
		return sPath;
	},
	this.GetChartUrl = function()
	{
		var currObj = arguments[0];
		var sUrl = Webcrea.chartUrl;
		if(Webcrea.IsEmpty(sUrl))
		{
			var sRoot = Webcrea.framePath;
			if(Webcrea.IsNull(sRoot)) sRoot = '.';
			var chartName = '';
			if(currObj.IsRMateChart()) chartName = 'rmatechart.htm';
			else chartName = 'googlechart.htm';
			sUrl = sRoot + '/frame' + Webcrea.version + '/' + chartName;
		}
		return sUrl;
	},
	this.GetLanguage = function()
	{
		var sLang = App.GetValue('_my_Language');
		if(Webcrea.IsEmpty(sLang)) sLang = WebcreaInfo.Language;
		return sLang;
	},
	this.GetLunarDate = function()
	{
		var sDate = arguments[0];
		if(sDate.length<8) return;
		var year = sDate.substr(0, 4);
		var month = sDate.substr(4, 2);
		var day = sDate.substr(6, 2);
		var date = WebcreaPack.LunarCalc(year, month, day, 1);
		var sRet = '';
		if(date) sRet = date.year + Webcrea.AddZero(date.month,2) + Webcrea.AddZero(date.day,2);
		return sRet;
	},
	this.GetMDIWindow = function()
	{
		var mdiWindow = null;
		try{
			if(Webcrea.IsMDI()) mdiWindow = window;
			else if(window.parent && window.parent.Webcrea.IsMDI()) mdiWindow = window.parent;
			else if(window.opener && window.opener.Webcrea && window.opener.Webcrea != Webcrea) mdiWindow = window.opener.Webcrea.GetMDIWindow();
		}catch(e){}
		return mdiWindow;
	},
	this.GetMEId = function()
	{
		var sRet = '';
		var currObj;
		var currNode = Webcrea.currEventNode;
		if(!currNode)
		{
			currNode = Webcrea.GetEventNode();
			currObj = Webcrea.GetEventObject();
		}
		else currObj = Webcrea.GetObject(currNode);
		if(currObj && currNode)
		{
			var sCellId;
			if(currObj.IsCrossTab()) sCellId = currObj.GetCellIdByNode(currNode);
			else sCellId = currObj.GetCellId(currNode.id);
			sRet = currObj.divPos + '.' + sCellId;
		}
		return sRet;
	},
	this.GetMEData = function()
	{
		var ret;
		var currObj;
		var currNode = Webcrea.currEventNode;
		if(!currNode)
		{
			currNode = Webcrea.GetEventNode();
			currObj = Webcrea.GetEventObject();
		}
		else currObj = Webcrea.GetObject(currNode);
		if(currNode && currObj)
		{
			if((typeof Webcrea.IsEditTdInputBox != 'undefined') && Webcrea.IsEditTdInputBox(currNode)) currNode = Webcrea.GetEditTd(currNode);
			var sCellId;
			if(currObj.IsCrossTab()) sCellId = currObj.GetCellIdByNode(currNode);
			else sCellId = currObj.GetCellId(currNode);
			var sql = '';
			if(currObj.arrStackEvent.isearch('oncursor')>=0)
			{
				var nSeq = 0;
				if(Webcrea.IsGrid(currObj)) nSeq = _CURSORROW_;
				sql = currObj.objName + ".GetValue('" + sCellId + "'," + nSeq + ")";
			}
			else sql = currObj.objName + ".GetValue('" + sCellId + "')";
			try{ ret=eval(sql); }catch(e){}
		}
		return ret;
	},
	this.GetNumberToStringData = function()
	{
		var sData = arguments[0];
		if(!Webcrea.IsEmpty(sData))
		{
			if(Webcrea.IsNumberType(sData)) sData = sData.toString();
			if(Webcrea.IsNaN(sData)) return '';
			var bMinus = false;
			if(sData[0] == '-')
			{
				bMinus = true;
				sData = sData.substr(1);
			}
			else if(sData[0] == '+') sData = sData.substr(1);
			var nChar = sData.search(new RegExp('[^0-9.]','g'));
			if(nChar>=0) sData = sData.substr(0, nChar);
			if(bMinus) sData *= -1;
			sData = Webcrea.NumberReDef(sData);
		}
		return sData;
	},
	this.GetPaletteColorIndex = function(str)
	{
		var arrSys = ['edit','view','title','line'];
		return arrSys.isearch(str);
	},
	this.GetPaletteColor = function(obj, index)
	{
		var sPalette = obj.palette;
		if(Webcrea.IsEmpty(sPalette))
		{
			if(!WebcreaInfo.color) return;
			if(Webcrea.IsGrid(obj) && WebcreaInfo.color.GRID) sPalette = WebcreaInfo.color.GRID;
			else if(WebcreaInfo.color.MAIN) sPalette = WebcreaInfo.color.MAIN;
		}
		if(Webcrea.IsEmpty(sPalette)) return;
		var extColor = ['A','B','C','D','E','F','H'];
		if(index>17) return;
		if(index>10)
		{
			index -= 11;
			index = extColor[index];
		}
		sPalette += index;
		if(!window['WebcreaInfo']['color']) return;
		var sRetColor = window['WebcreaInfo']['color'][sPalette];
		if(!Webcrea.IsEmpty(sRetColor)) sRetColor = sRetColor.trim();
		return sRetColor;
	},
	this.GetRootPath = function()
	{
		var sPath;
		var sRoot = Webcrea.framePath;
		if(Webcrea.IsNull(sRoot)) sRoot = '.';
		sRoot += '/';
		sPath = sRoot;
		return sPath;
	},
	this.GetSelectionText = function()
	{
		var sRet = '';
		if(window.getSelection) sRet = window.getSelection().toString();
		else if(document.selection && document.selection.type != 'Control') sRet = document.selection.createRange().text;
		return sRet;
	},
	this.GetThisData = function()
	{
		return Webcrea.GetMEData();
	},
	this.GetWebcreaObjectData = function()
	{
		var ret;
		var param = arguments[0];
		if(Webcrea.IsEmpty(param)) return;
		var arr = param.split('.');
		if(arr.length>1)
		{
			var sObj = '';
			var obj = Webcrea.GetObjectById(arr[0]);
			if(obj)
			{
				if(arr[1][0] == '@' || (arr.length>2 && arr[2][0]=='@'))
				{
					var sSubParam = '';
					var sProperty = '';
					var sCellId = '';
					if(arr.length>2)
					{
						sCellId = arr[1];
						sProperty = arr[2].substr(1);
					}
					else sProperty = arr[1].substr(1);
					if(Webcrea.IsEmpty(sCellId)) sSubParam = '_Get_' + sProperty + '()';
					else sSubParam = '_Get_' + sProperty + '("' + sCellId + '")';
					sSubParam = obj.objName + '.' + sSubParam;
					sObj = sSubParam;
				}
				else sObj = obj.objName + '.GetValueByDisplay("' + arr[1] + '")';
				try{if(!Webcrea.IsEmpty(sObj)) ret=eval(sObj);}catch(e){}
			}
		}
		return ret;
	},
	this.GetWebParam = function()
	{
		var param = arguments[0];
		var sRet = '';
		if(param)
		{
			sRet = window['Webcrea']['webparam'][param];
			if(Webcrea.IsNull(sRet)) sRet = '';
		}
		return sRet;
	},
	this.DeleteCSS = function(ruleName)
	{
		return Webcrea.GetCSS(ruleName, true);
	},
	this.CreateCSS = function(ruleName)
	{
		if (document.styleSheets)
		{
			if (!Webcrea.GetCSS(ruleName))
			{
				if(!document.styleSheets[0]) return;
				if (document.styleSheets[0].addRule) document.styleSheets[0].addRule(ruleName, null,0);
				else document.styleSheets[0].insertRule(ruleName+' { }', 0);
			}
		}
		return Webcrea.GetCSS(ruleName);
	},
	this.CreateContextMenu = function(objContext, currObj)
	{
		var obj = null;
		if(!objContext) return;
		var nLeft = Webcrea.GetMousePos(0);
		var nTop = Webcrea.GetMousePos(1);
		var id = objContext.id;
		var width = objContext.width;
		var height = objContext.arrText.length * 24;
		if(Webcrea.IsIE())
		{
			width += 2;
			height += 2;
		}
		var objParent = Webcrea.FindNode(document.body, 'id', 'MainDiv');
		var menuObj = Webcrea.FindNode(objParent, 'id', id);
		if(menuObj)
		{
			obj = menuObj;
			obj.style.left = nLeft + 'px';
			obj.style.top = nTop + 'px';
			return obj;
		}
		obj = document.createElement('div');
		obj.setAttribute('id', id);
		obj.setAttribute('class', '_my_context_menu');
		obj.setAttribute('style', 'display:block;width:' + width + 'px;');
		var ul = document.createElement('ul');
		ul.setAttribute('style', 'display:block;');
		for(var i=0; i<objContext.arrText.length; i++)
		{
			var li = document.createElement('li');
			if(!Webcrea.IsEmpty(objContext.arrId[i])) li.setAttribute('id', objContext.arrId[i]);
			if(!Webcrea.IsEmpty(objContext.arrFunc[i])) li.setAttribute('onclick', objContext.arrFunc[i]);
			var a = document.createElement('a');
			a.setAttribute('href', '#');
			a.setAttribute('class', '_my_context_menu_keyword');
			a.setAttribute('onclick', 'return false;');
			var span = document.createElement('span');
			span.textContent = objContext.arrText[i];
			a.appendChild(span);
			li.appendChild(a);
			ul.appendChild(li);
		}
		var nMainLeft = Webcrea.GetLeft(objParent);
		var nMainWidth = Webcrea.GetWidth(objParent);
		var nMaxRight = Number(nMainLeft) + Number(nMainWidth);
		var nMainTop = Webcrea.GetTop(objParent);
		var nMainHeight = Webcrea.GetHeight(objParent);
		var nMaxBottom = Number(nMainTop) + Number(nMainHeight);
		var nRight = nLeft + width;
		if(nRight >= nMaxRight)
		{
			nLeft = nLeft - (nRight - nMaxRight);
			nLeft -= 8;
		}
		var nBottom = nTop + height;
		if(nBottom >= nMaxBottom)
		{
			nTop = nTop - (nBottom - nMaxBottom);
			nTop -= 8;
		}
		if(!Webcrea.IsIE()) obj.appendChild(ul);
		obj.style.left = nLeft + 'px';
		obj.style.top = nTop + 'px';
		obj.style.zIndex = 9999;
		objParent.appendChild(obj);
		if(Webcrea.IsIE())
		{
			var ifrm = document.createElement('iframe');
			ifrm.setAttribute('name', '_my_context_menuFrame');
			ifrm.setAttribute('id', '_my_context_menu_ifrm');
			ifrm.setAttribute('src', '');
			ifrm.setAttribute('frameborder', '0');
			ifrm.setAttribute('scrolling', 'no');
			ifrm.setAttribute('style', 'width:'+width+'px;height:'+height+'px');
			obj.appendChild(ifrm);
			var cssLink = document.createElement('link');
			cssLink.href = body(Win.fullpath,Win.FileName)+'frame/webcrea.css';
			cssLink.rel = 'stylesheet';
			cssLink.type = 'text/css';
			ifrm.contentWindow.document.head.appendChild(cssLink);
			ifrm.contentWindow.document.body.style.margin='0 auto';
			ul.setAttribute('class', '_my_context_menu');
			ul.style.width=width-2+'px';
			obj.style.height=height+'px';
			obj.style.width=width+'px';
			obj.style.border = 'none';
			var oHtml=ul.outerHTML;
			oHtml=Webcrea.ReplaceAll(oHtml,'_my_FileMDI','parent._my_FileMDI');
			ifrm.contentWindow.document.body.innerHTML=oHtml;
		}
		objContext.parent = objParent;
	},
	this.CreateLayer = function()
	{
		var tag = arguments[0];
		var id = arguments[1];
		var objParent = arguments[2];
		var width = arguments[3];
		var height = arguments[4];
		if(!tag) return;
		var bMaximize = arguments[5];
		var bScrolling = arguments[6];
		if(!tag) return;
		var CreateBackDiv = function(id,width,height,bTitle,bBorder,bCenter,bDisplay)
		{
			var bId='_my_'+id;
			var bDiv = document.createElement('div');
			bDiv.setAttribute('id', bId);
			if(bBorder)
			{
				var styleBorder = 'outline:1px solid #D6D8D9;';
				bDiv.setAttribute('style', styleBorder);
			}
			bDiv.style.backgroundColor='#FFF';
			bDiv.style.textAlign = 'center';
			bDiv.style.display = bDisplay;
			bDiv.style.padding = '0 auto';
			bDiv.style.margin = '0 auto';
			bDiv.style.zIndex = 10001;
			if(bMaximize)
			{
				bDiv.style.width='100%';
				bDiv.style.height='100%';
			}
			else
			{
				if(width) bDiv.style.width = width + 'px';
				if(height)
				{
					if(bTitle) height+=22;
					bDiv.style.height = height + 'px';
				}
			}
			if(bTitle)
			{
				var objTitle=document.createElement('div');
				objTitle.setAttribute('id', bId+'_header');
				objTitle.setAttribute('pid', bId);
				objTitle.style.height='22px';
				objTitle.style.width='100%';
				objTitle.style.background='#FFF';
				var objIcon = document.createElement('img');
				objIcon.setAttribute('style', 'position: absolute;width:16px;height:16px;left:3px;top:3px;border:none;margin:0 auto;');
				objIcon.setAttribute('src', Webcrea.GetImageLinkPath() + '/frame/webcrea.png');
				objTitle.appendChild(objIcon);
				var objTitleSpan = document.createElement('span');
				objTitleSpan.setAttribute('style', 'position: absolute;left:22px;top:1px;border:none;margin:0 auto;font-size:10pt;');
				objTitleSpan.setAttribute('id', bId+'_title');
				objTitle.appendChild(objTitleSpan);
				var sStyle = 'position: absolute;width:12px;height:12px;right:5px;top:5px;background:url("' + Webcrea.GetImageLinkPath() + '/frame/close.gif") no-repeat;border:none;margin:0 auto;';
				var objClose = document.createElement('INPUT');
				objClose.setAttribute('style', sStyle);
				objClose.setAttribute('type', 'button');
				objClose.setAttribute('onclick', 'Webcrea.CloseLayer("'+bId+'")');
				objTitle.appendChild(objClose);
				bDiv.appendChild(objTitle);
				if (Webcrea.IsIE69()) objTitle.attachEvent('onmousedown', function(){Webcrea.OnMOVE(window.event, id);});
				else objTitle.addEventListener('mousedown', function(){Webcrea.OnMOVE(window.event, id);}, false);
				if (Webcrea.IsIE69()) objTitle.attachEvent('onmousemove', function(){Webcrea.OnMOVE(window.event, id);});
				else objTitle.addEventListener('mousemove', function(){Webcrea.OnMOVE(window.event, id);}, false);
			}
			if(bCenter)
			{
				var workWidth=width/2;
				var workHeight=height/2;
				bDiv.style.cursor = 'default';
				bDiv.style.position = 'fixed';
				bDiv.style.textAlign = 'center';
				bDiv.style.overflow = 'hidden';
				bDiv.style.padding = '0 auto';
				bDiv.style.margin = '0 auto';
				if(bMaximize)
				{
					bDiv.style.left = 0;
					bDiv.style.top = 0;
				}
				else
				{
					bDiv.style.left = 'calc(50% - ' + workWidth + 'px)';
					bDiv.style.left = '-webkit-calc(50% - ' + workWidth + 'px)';
					bDiv.style.left = '-moz-calc(50% - ' + workWidth + 'px)';
					bDiv.style.top = 'calc(50% - ' + workHeight + 'px)';
					bDiv.style.top = '-webkit-calc(50% - ' + workHeight + 'px)';
					bDiv.style.top = '-moz-calc(50% - ' + workHeight + 'px)';
				}
			}
			return bDiv;
		};
		var checkUrl=function(url, mode)
		{
			var result=true;
			var sUrlName = url;
			var n = sUrlName.lastIndexOf('/');
			if(n>0) sUrlName = sUrlName.substr(n+1);
			var sHtmlName = Webcrea.HtmlName();
			if(sHtmlName == sUrlName) result=false;
			if(!mode && Win.IsLayerFile() && !Win.IsRunDlg()) result=false;
			return result;
		};
		var obj = null;
		if(!objParent) objParent = Webcrea.FindNode(document.body, 'id', 'MainDiv');
		var url, bTitle, bBorder, type;
		var bCenter = false;
		var bRundlg = false;
		var bEndSession = false;
		var bDisplay = 'none';
		if(tag.toLowerCase() == 'msgbox')
		{
			url = WebcreaInfo.msgBox;
			width = WebcreaInfo.msgBoxW;
			height = WebcreaInfo.msgBoxH;
			bTitle = WebcreaInfo.msgBoxTitle;
			bBorder = WebcreaInfo.msgBoxBorder;
			type = 'M';
			bCenter=true;
		}
		else if(tag.toLowerCase() == 'calendar')
		{
			url = WebcreaInfo.calendar;
			width = WebcreaInfo.calendarW;
			height =WebcreaInfo.calendarH;
			bTitle = WebcreaInfo.calendarTitle;
			bBorder = WebcreaInfo.calendarBorder;
			type = 'C';
		}
		else if(tag.toLowerCase() == 'yearmonth')
		{
			url = WebcreaInfo.yearmonth;
			width = WebcreaInfo.yearmonthW;
			height = WebcreaInfo.yearmonthH;
			bTitle = WebcreaInfo.yearmonthTitle;
			bBorder = WebcreaInfo.yearmonthBorder;
			type = 'YM';
		}
		else if(tag.toLowerCase() == 'rundlg')
		{
			url = Webcrea.cLayerObj.runDlg;
			bTitle = Webcrea.cLayerObj.bRunDlgTitle;
			bBorder = Webcrea.cLayerObj.bRunDlgBorder;
			type = 'RD';
			bDisplay = 'block';
			bRundlg = true;
			bCenter = true;
		}
		else if(tag.toLowerCase() == 'endsession')
		{
			url = WebcreaInfo.endsession;
			width = WebcreaInfo.endsessionW;
			height = WebcreaInfo.endsessionH;
			bTitle = false;
			bBorder = false;
			type = 'ES';
			bEndSession = true;
			bCenter = true;
		}
		if((Webcrea.IsMDIFrame() && !Webcrea.IsMDI() && !Win.IsRunDlg()) || !checkUrl(url)) return;
		obj=CreateBackDiv(tag,width,height,bTitle,bBorder,bCenter,bDisplay,bMaximize);
		objParent.appendChild(obj);
		if(!bRundlg)
		{
			if(url[0] != '.' && url[0] != '/')
			{
				var sHttp = Webcrea.GetRootPath();
				url = sHttp + url;
			}
			var bHtmlCache = WebcreaInfo.bHtmlCache;
			if(Webcrea.IsNull(bHtmlCache)) bHtmlCache = true;
			if(!bHtmlCache)
			{
				var randomKey = Webcrea.GetCurrFileVersion() + random(10000);
				url = url + '?v=' + randomKey +'&_my_t=' + type;
			}
			else url= url + '?_my_t=' + type;
		}
		var ifrm = document.createElement('iframe');
		if(bMaximize)
		{
			width = '100%';
			height = '100%';
		}
		else
		{
			width = width + 'px';
			height = height + 'px';
		}
		ifrm.setAttribute('id', '_my_'+tag+'Frame');
		ifrm.setAttribute('name', '_my_'+tag+'Frame');
		ifrm.setAttribute('src', url);
		ifrm.setAttribute('frameborder', '0');
		if(!bRundlg || !bScrolling) ifrm.setAttribute('scrolling', 'no');
		ifrm.setAttribute('width', width);
		ifrm.setAttribute('height', height);
		obj.appendChild(ifrm);
		if(bRundlg) Webcrea.LoadedLayer(false, tag);
		else if(bEndSession) Webcrea.LoadedLayer(true, tag);
	},
	this.LoadedLayer = function()
	{
		var bShow = arguments[0];
		var tag = arguments[1];
		var mode = arguments[2];
		var msg = arguments[3];
		var title = arguments[4];
		var intervalCnt, intervalId;
		if(tag == 'msgbox')
		{
			intervalCnt=Webcrea.cLayerObj.msgboxIntervalCnt;
			intervalId=Webcrea.cLayerObj.msgboxIntervalId;
			if(!bShow) bShow=Webcrea.cLayerObj.bMsgboxShow;
		}
		else if(tag == 'calendar')
		{
			intervalCnt=Webcrea.cLayerObj.calendarIntervalCnt;
			intervalId=Webcrea.cLayerObj.calendarIntervalId;
			if(!bShow) bShow=Webcrea.cLayerObj.bCalendarShow;
		}
		else if(tag == 'yearmonth')
		{
			intervalCnt=Webcrea.cLayerObj.yearmonthIntervalCnt;
			intervalId=Webcrea.cLayerObj.yearmonthIntervalId;
			if(!bShow) bShow=Webcrea.cLayerObj.bYearmonthShow;
		}
		else if(tag == 'endsession')
		{
			intervalCnt=Webcrea.cLayerObj.endsessionIntervalCnt;
			intervalId=Webcrea.cLayerObj.endsessionIntervalId;
			if(!bShow) bShow=Webcrea.cLayerObj.bEndsessionShow;
		}
		var ifrm = Webcrea.FindNode(document, 'name', '_my_'+tag+'Frame');
		try{
			var setIntervalLayer=function(type,tag,value)
			{
				if(type==0)
				{
					if(tag == 'msgbox') Webcrea.cLayerObj.msgboxIntervalCnt=value;
					else if(tag == 'calendar') Webcrea.cLayerObj.calendarIntervalCnt=value;
					else if(tag == 'yearmonth') Webcrea.cLayerObj.yearmonthIntervalCnt=value;
					else if(tag == 'endsession') Webcrea.cLayerObj.endsessionIntervalCnt=value;
				}
				else if(type==1)
				{
					if(tag == 'msgbox') Webcrea.cLayerObj.msgboxIntervalId=setInterval(function(){ Webcrea.LoadedLayer(bShow,tag, mode, msg, title);}, 100);
					else if(tag == 'calendar') Webcrea.cLayerObj.calendarIntervalId=setInterval(function(){ Webcrea.LoadedLayer(bShow,tag, mode, msg, title);}, 100);
					else if(tag == 'yearmonth') Webcrea.cLayerObj.yearmonthIntervalId=setInterval(function(){ Webcrea.LoadedLayer(bShow,tag, mode, msg, title);}, 100);
					else if(tag == 'endsession') Webcrea.cLayerObj.endsessionIntervalId=setInterval(function(){ Webcrea.LoadedLayer(bShow,tag, mode, msg, title);}, 100);
				}
			};
			if(!ifrm || !ifrm.contentWindow._my_File)
			{
				if(!intervalCnt) intervalCnt = setIntervalLayer(0,tag,0);
				if(!intervalId) intervalId = setIntervalLayer(1,tag);
				else
				{
					if(intervalCnt>30)
					{
						clearInterval(intervalId);
						Webcrea.LockUI(false);
					}
					if(!intervalCnt) intervalCnt=0;
					setIntervalLayer(0,tag,intervalCnt+1);
				}
				return;
			}
			if(intervalId)
			{
				if(bShow) Webcrea.ShowLayer(tag, mode, msg, title);
				setIntervalLayer(0,tag,0);
				clearInterval(intervalId);
			}
		}catch(e){clearInterval(intervalId);}
	},
	this.ShowLayer = function()
	{
		var tag = arguments[0];
		var mode = arguments[1];
		var msg = arguments[2];
		var title = arguments[3];
		var bTitle = arguments[4];
		var bMDIFrame = Webcrea.IsMDIFrame();
		var obj;
		var id='_my_' + tag;
		var moveObj=true;
		var ctl=Webcrea.cLayerObj.cObj;
		if(event) event.preventDefault?event.preventDefault():event.returnValue=false;
		if(event) event.stopPropagation?event.stopPropagation():event.returnValue=false;
		if((!bMDIFrame || (bMDIFrame && !Webcrea.IsMDI())) && !Win.IsRunDlg())
		{
			if(bMDIFrame && !Webcrea.IsMDI())
			{
				window.parent.Webcrea.paneWindow = window;
				if(ctl) window.parent.Webcrea.cLayerObj.cObj=ctl;
				window.parent.Webcrea.ShowLayer(tag, mode, msg, title);
				return;
			}
			else Webcrea.LockUI(true);
		}
		else Webcrea.LockUI(true);
		var ifrm = Webcrea.FindNode(document, 'name', id+'Frame');
		if(!ifrm || !ifrm.contentWindow._my_File)
		{
			Webcrea.LoadedLayer(true,tag, mode, msg, title);
			return;
		}
		if(tag.toLowerCase() == 'msgbox')
		{
			moveObj=false;
			Webcrea.cLayerObj.bMsgboxShow=true;
			if(mode)
			{
				mode = mode.toUpperCase();
				App.SetValue('_MSGBOXSTYLE_',mode);
			}
			if(!Webcrea.IsNull(msg)) App.SetValue('_MSGBOXMSG_',msg);
			if(Webcrea.IsNull(title))
			{
				if(mode == 'ok') title=Webcrea.LoadString('msgInform');
				else if(mode == 'yesno' || mode == 'yesnocancel') title=Webcrea.LoadString('idsOK');
			}
			if(title) App.SetValue('_MSGBOXTITLE_',title);
		}
		else if(tag.toLowerCase() == 'calendar')
		{
			Webcrea.cLayerObj.bCalendarShow=true;
			if(mode == 2) mode=1;
			else mode='';
			_DATETIME_=mode;
			App.SetValue('_DATETIME_',mode);
			_HELPTEXT_=Webcrea.FormatValue(ctl, false);
			App.SetValue('_HELPTEXT_', _HELPTEXT_);
		}
		else if(tag.toLowerCase() == 'yearmonth')
		{
			Webcrea.cLayerObj.bYearmonthShow=true;
			_HELPTEXT_=Webcrea.FormatValue(ctl, false);
			App.SetValue('_HELPTEXT_', _HELPTEXT_);
		}
		else if(tag.toLowerCase() == 'rundlg')
		{
			moveObj=false;
			Webcrea.cLayerObj.bRunDlgShow=true;
		}
		else if(tag.toLowerCase() == 'endession')
		{
			moveObj=false;
			Webcrea.cLayerObj.bEndSessionShow=true;
		}
		obj = Webcrea.FindNode(document.body, 'id', id);
		obj.style.display = 'table-cell';
		if(moveObj)
		{
			var mainDiv = Webcrea.FindNodePublic(document.body, 'id', 'MainDiv');
			var vArr=ctl.getClientRects()[0];
			var leftpos=vArr.left;
			var toppos=vArr.top+vArr.height;
			var ctlLeft = ctl.offsetLeft - ctl.scrollLeft;
			var ctlTop = ctl.offsetTop - ctl.scrollTop;
			var vLeft= window.innerWidth - leftpos- vArr.width -3;
			if(vLeft < 0) leftpos= vArr.right- cArr.width -3;
			var vTop= window.innerHeight - toppos - vArr.height -5;
			if(vTop < 0) toppos= ctlTop + toppos + ctl.offsetHeight- vArr.height;
			var nCenter=Win.nCenter;
			if(nCenter==1 || nCenter==3) toppos = toppos-mainDiv.offsetTop;
			if(nCenter==1 || nCenter==2) leftpos = leftpos-mainDiv.offsetLeft;
			if((Webcrea.IsMDI() && !WebcreaInfo.nMdiWindowScroll) || !Webcrea.IsMDI())
			{
				if(window.scrollY>0) toppos = toppos+window.scrollY;
				if(window.scrollX>0) leftpos = leftpos+window.scrollX;
			}
			if(Webcrea.IsMDI())
			{
				var myType=Webcrea.paneWindow._my_File.objType;
				if(myType == 1)
				{
					if(_my_FileMDI.topInfo.absolute==0) toppos += _my_FileMDI.TopPane.getHeight();
					if(_my_FileMDI.mainInfo.absolute==0) toppos += _my_FileMDI.MainPane.getHeight();
					toppos += _my_FileMDI.WorkPane.getHeight();
				}
				else if (!myType || myType>5 || myType == 2 || myType==4)
				{
					if(_my_FileMDI.topInfo.absolute==0) toppos += _my_FileMDI.TopPane.getHeight();
					if(_my_FileMDI.mainInfo.absolute==0) toppos += _my_FileMDI.MainPane.getHeight();
				}
				else if(myType == 5)
				{
					if(_my_FileMDI.mainInfo.absolute==0) toppos += _my_FileMDI.MainPane.getHeight();
				}
				if(myType == 2)
				{
					if(_my_FileMDI.leftInfo.absolute==0) leftpos += _my_FileMDI.LeftPane.getWidth();
					leftpos += _my_FileMDI.WorkPane.getWidth();
				}
				else if(myType == 2 || !myType || myType>5)
				{
					if(_my_FileMDI.leftInfo.absolute==0) leftpos += _my_FileMDI.LeftPane.getWidth();
				}
			}
			if(obj.getHeight()+toppos>mainDiv.getHeight()) toppos=toppos-obj.getHeight()-vArr.height;
			obj.style.position='absolute';
			obj.style.top=toppos + 'px';
			obj.style.left=leftpos + 'px';
		}
		ifrm.contentWindow.Webcrea.OnLoaded();
		ifrm.contentWindow._my_File.DisplayCodeButton();
		var backDiv = Webcrea.FindNode(document.body, 'id', '_my_BackDiv');
		if(backDiv)
		{
			var winW = Webcrea.GetWidth(document.body);
			var winH = Webcrea.GetHeight(document.body);
			if(winW>0 && winH>0)
			{
				backDiv.style.width = winW + 'px';
				backDiv.style.height = winH + 'px';
			}
		}
	},
	this.ResizeLayer = function()
	{
		var tag = arguments[0];
		var width = arguments[1];
		var height = arguments[2];
		if(!tag) return;
		if(tag == 'rundlg' && Webcrea.bRunDlgResize) return;
		var bTitle, bMaximize, objFrame, objDiv;
		if(tag.toLowerCase() == 'msgbox')
		{
			bTitle=WebcreaInfo.msgBoxTitle;
			objDiv=Webcrea.FindNodePublic(document,'id','_my_msgbox');
			objFrame=Webcrea.FindNodePublic(document,'id','_my_msgboxFrame');
		}
		else if(tag.toLowerCase() == 'rundlg')
		{
			bTitle=Webcrea.cLayerObj.bRunDlgTitle;
			bMaximize=Webcrea.cLayerObj.bRunDlgMaximize;
			bScrolling=Webcrea.cLayerObj.bRunDlgScroll;
			if(bMaximize || bScrolling) return;
			if(typeof _POPUP_W_ == 'undefined') _POPUP_W_ = 0;
			if(typeof _POPUP_H_ == 'undefined') _POPUP_H_ = 0;
			if(Webcrea.bSetPopupSize && (_POPUP_W_ || _POPUP_H_)) return;
			objDiv=Webcrea.FindNodePublic(document,'id','_my_rundlg');
			objFrame=Webcrea.FindNodePublic(document,'id','_my_rundlgFrame');
		}
		objFrame.height=height + 'px';
		objFrame.width=width + 'px';
		if(bTitle) height+=22;
		objDiv.style.height=height + 'px';
		objDiv.style.width=width + 'px';
		var workHeight=height/2;
		objDiv.style.top = 'calc(50% - ' + workHeight + 'px)';
		objDiv.style.top = '-webkit-calc(50% - ' + workHeight + 'px)';
		objDiv.style.top = '-moz-calc(50% - ' + workHeight + 'px)';
		var workWidth=width/2;
		objDiv.style.left = 'calc(50% - ' + workWidth + 'px)';
		objDiv.style.left = '-webkit-calc(50% - ' + workWidth + 'px)';
		objDiv.style.left = '-moz-calc(50% - ' + workWidth + 'px)';
	},
	this.HideLayer = function()
	{
		var tag = arguments[0];
		var status = arguments[1];
		var bMDIFrame = Webcrea.IsMDIFrame();
		var obj;
		try{
			if(typeof _my_Popup != 'undefined') delete _my_Popup;
			if(typeof _POPUP_W_ != 'undefined') delete _POPUP_W_;
			if(typeof _POPUP_H_ != 'undefined') delete _POPUP_H_;
			if(Win.IsRunDlg() && Webcrea.bRunDlgResize)
			{
				parent.Webcrea.bRunDlgResize=false;
				Webcrea.bRunDlgResize=false;
				this.OnResized();
			}
		}catch(e){}
		if((!bMDIFrame || (bMDIFrame && Webcrea.IsMDI())) || Win.IsRunDlg())
		{
			obj = Webcrea.FindNodePublic(document.body, 'id', '_my_'+tag);
			if(obj) obj.style.display = 'none';
			Webcrea.LockUI(false);
			if(bMDIFrame && Webcrea.IsMDI())
			{
				var paneWindow = window.parent.Webcrea.paneWindow;
				if(paneWindow)
				{
					paneWindow.Webcrea.HideLayer(tag, status);
					return;
				}
			}
		}
		if(tag.toLowerCase() == 'msgbox')
		{
			if(typeof status != 'undefined') SetStatus(status);
			if(!Webcrea.IsEmpty(Webcrea.msgboxObj))
			{
				App.SetValue('_MSGBOXSTYLE_','');
				App.SetValue('_MSGBOXMSG_','');
				App.SetValue('_MSGBOXTITLE_','');
				Webcrea.LockUI(false);
				var func = '';
				var id = Webcrea.msgboxObj;
				Webcrea.cLayerObj.bMsgboxShow=false;
				if(id == 'File') func = 'FuncFile_OnMSGBOX';
				else
				{
					var cellId = '';
					var arr = id.split(Webcrea.divId);
					if(arr.length>1) cellId = '_' + arr[1];
					var obj = Webcrea.GetObjectById(arr[0]);
					func = 'Func' + obj.divPage + '_' + obj.divPos + cellId +'_OnMSGBOX';
				}
				if(!Webcrea.IsEmpty(func))
				{
					var objT = null;
					try{objT = eval(func);}catch(e){}
					if(objT) objT();
				}
			}
		}
		else if(tag.toLowerCase() == 'calendar')
		{
			if(typeof status != 'undefined') SetStatus(status);
			Webcrea.cLayerObj.bCalendarShow=false;
		}
		else if(tag.toLowerCase() == 'yearmonth')
		{
			if(typeof status != 'undefined') SetStatus(status);
			Webcrea.cLayerObj.bYearmonthShow=false;
		}
		else if(tag.toLowerCase() == 'rundlg')
		{
			if(typeof status != 'undefined') SetStatus(status);
			Webcrea.cLayerObj.bRunDlgShow=false;
			if(typeof FuncFile_OnPOPUP != 'undefined') FuncFile_OnPOPUP();
		}
	},
	this.CloseLayer = function(id)
	{
		if(!id) return;
		var tag=[];
		try
		{
			if(id == 'all') tag=['rundlg','calendar','yearmonth','msgBox'];
			else tag[0]=id.replaceAll('_my_','');
			for(i=0;i<tag.length;i++)
			{
				var obj=Webcrea.FindNodePublic(document.body, 'id', '_my_'+tag[i]);
				if(obj.Win && obj.Win.FileType)	obj.Webcrea.CommandEvent('close');
				else Webcrea.HideLayer(tag[i], '');
				if(tag[i]=='rundlg')
				{
					var objFrame=Webcrea.FindNodePublic(obj, 'id', '_my_rundlgFrame');
					if(objFrame) objFrame.src='_blank';
				}
			}
		}
		catch(e){console.log('closeLayer error : ' + id); }
	},
	this.CreateObject = function(tag, id, objParent, top, left, event, width, height, objContext)
	{
		var obj = null;
		if(tag == undefined) return;
		if(Webcrea.IsEmpty(objParent)) objParent = Webcrea.FindNode(document.body, 'id', 'MainDiv');
		if(tag.toLowerCase() == 'more button')
		{
			obj = document.createElement('div');
			obj.setAttribute('id', id);
			var span = document.createElement('span');
			span.textContent = 'MORE';
			obj.appendChild(span);

			var a = document.createElement('a');
			a.setAttribute('href', '#');
			obj.appendChild(a);
			obj.setAttribute('onclick', event);
			objParent.appendChild(obj);

			var css = Webcrea.CreateCSS('#' + objParent.id + ' #' + id);
			if(css)
			{
				css.style.position = 'absolute';
				css.style.top = top;
				css.style.left = left;
				css.style.width = '50px';
				css.style.height = '40px';
				css.style.textAlign = 'center';
				css.style.backgroundColor = '#F8F8F8';
				css.style.border = '1px solid #BDBDBD';
				css.style.borderRadius = '5px';
				css.style.opacity = 0.8;
				css.style.zIndex = '999';

				css = Webcrea.CreateCSS('#' + objParent.id + ' #' + id + ' span');
				css.style.fontSize = '6pt';
				css.style.fontWeight = 'bold';
				css.style.color = '#626060';

				css = Webcrea.CreateCSS('#' + objParent.id + ' #' + id + ' a');
				css.style.content = '';
				css.style.display = 'block';
				css.style.width = '10px';
				css.style.height = '10px';
				css.style.borderTop = '3px solid #434040';
				css.style.borderRight = '3px solid #434040';
				css.style.transform = 'rotate(135deg)';
				css.style.msTransform = 'rotate(135deg)';
				css.style.position = 'absolute';
				css.style.left = '50%';
				css.style.bottom = '10px';
				css.style.marginLeft = '-7px';

				css = Webcrea.CreateCSS('#' + objParent.id + ' #' + id + ':hover');
				css.style.backgroundColor = '#5D5D5D';
				css.style.cursor = 'pointer';

				css = Webcrea.CreateCSS('#' + objParent.id + ' #' + id + ':hover span');
				css.style.color = '#EAEAEA';

				css = Webcrea.CreateCSS('#' + objParent.id + ' #' + id + ':hover a');
				css.style.borderTop = '3px solid #EAEAEA';
				css.style.borderRight = '3px solid #EAEAEA';
			}
		}
		else if(tag.toLowerCase() == 'upload file')
		{
			var objDiv = Webcrea.FindParentDiv(objParent);
			obj = Webcrea.FindNode(objDiv, 'id', id);
			if(!obj)
			{
				obj = document.createElement('input');
				obj.setAttribute('id', id);
				obj.setAttribute('style', 'position:absolute;filter:alpha(opacity:0);opacity:0;height:0px;width:0px;');
				obj.setAttribute('type', 'file');
				if(event == undefined) event = 'Webcrea.FileSelected()';
				obj.setAttribute('onchange', event);
				objDiv.appendChild(obj);
				Webcrea.MoveObject(0, obj, objParent);
			}
		}
		else if(tag.toLowerCase() == 'download file')
		{
			var objDiv = Webcrea.FindParentDiv(objParent);
			obj = Webcrea.FindNode(objDiv, 'id', id);
			if(!obj)
			{
				obj = document.createElement('a');
				obj.setAttribute('id', id);
				obj.setAttribute('style', 'position:absolute;filter:alpha(opacity:0);opacity:0;height:0px;width:0px;');
				obj.setAttribute('href', '');
				obj.setAttribute('_my_download', '');
				objDiv.appendChild(obj);
				Webcrea.MoveObject(0, obj, objParent);
			}
		}
		else if(tag.toLowerCase() == 'loaging div')
		{
			obj = document.createElement('div');
			obj.setAttribute('id', id);
			var styleBorder = 'border-left:1px solid #D6D8D9; border-top:1px solid #D6D8D9; border-right:1px solid #D6D8D9;  border-bottom:1px solid #D6D8D9;background:#F0F0F0;';
			obj.setAttribute('style', styleBorder);
			obj.style.cursor = 'default';
			obj.style.position = 'absolute';
			obj.style.textAlign = 'center';
			obj.style.display = 'table';
			if(width) obj.style.width = width + 'px';
			if(height)
			{
				obj.style.height = height + 'px';
			}
			obj.style.zIndex = 9999;
			objParent.appendChild(obj);
		}
		else if(tag.toLowerCase() == 'loaging image')
		{
			obj = document.createElement('div');
			obj.setAttribute('id', id);
			obj.style.cursor = 'default';
			obj.style.position = 'absolute';
			obj.style.textAlign = 'center';
			obj.style.zIndex = 9999;
			objParent.appendChild(obj);
		}
		else
		{
			obj = document.createElement(tag);
			obj.setAttribute('id', id);
			if(!width) obj.style.width = width + 'px';
			if(!height) obj.style.height = height + 'px';
			if(event != undefined) obj.setAttribute('onclick', event);
			objParent.appendChild(obj);
			if(!top || !left) Webcrea.MoveObject(0, obj, objParent, (!top)?0:top, (!left)?0:left);
		}
		return obj;
	},
	this.DeleteObject = function(obj)
	{
		if(!obj) return;
		var childNodes = obj.childNodes;
		for(var i=childNodes.length-1; i>=0; i--)
		{
			var childNode = childNodes[i];
			Webcrea.DeleteObject(childNode);
		}
		obj.parentNode.removeChild(obj);
	},
	this.CreateDataObject = function()
	{
		var dataObj = null;
		var sQuery = arguments[0];
		var sUrl = arguments[1];
		var sName = arguments[2];
		var objPage = _my_File.GetPageObj(0);
		var sPage = objPage.divPage;
		var sDBID = '';
		var sSql = '';
		var sParam = '';
		if(Webcrea.IsEmpty(sQuery) && Webcrea.IsEmpty(sUrl) && Webcrea.IsEmpty(sName))  return;

		var FindObject = function()
		{
			var findObj;
			for(var i=0; i<Webcrea.arrCreateObject.length; i++)
			{
				var createObj = Webcrea.arrCreateObject[i];
				if(createObj.sQuery == sQuery && createObj.sUrl == sUrl && createObj.sName == sName)
				{
					findObj = createObj;
					break;
				}
			}
			return findObj;
		};
		var findObj;
		if(!Webcrea.arrCreateObject) Webcrea.arrCreateObject = [];
		else findObj = FindObject();
		var objName = '';
		if(!findObj)
		{
			var sObject = 'Proc' + objPage.arrObject.length;
			if(!Webcrea.IsEmpty(sName)) sObject = sName;
			objName = '_my_dy_' + sPage + '_' + sObject;
			var objExe = "new FormObject('" + sPage + "','" + sObject + "',2);";
			eval(objName + '=' + objExe);
			eval(objName).objName = objName;
			eval(objName).bQuery = true;
			eval(objName).Init();
			dataObj = eval(objName);
			var createObj = {};
			createObj.sQuery = sQuery;
			createObj.sUrl = sUrl;
			createObj.sName = sName;
			createObj.objName = objName;
			createObj.dataObj = dataObj;
			Webcrea.arrCreateObject[Webcrea.arrCreateObject.length] = createObj;
		}
		else
		{
			objName = findObj.objName;
			dataObj = findObj.dataObj;
		}
		if(!Webcrea.IsEmpty(sQuery))
		{
			var tableInfo = Webcrea.QueryInfo(sQuery);
			if(!tableInfo) return;
			var sTable = tableInfo.sTable;
			if(Webcrea.IsEmpty(sTable)) return;
			sDBID = tableInfo.sDBID;
			sSql = tableInfo.sSql;
			sSql = Webcrea.MakeQuery(sSql);
			var objProc = Webcrea.GetObjectById(sTable);
			if(objProc)
			{
				if(!objProc.arrRows) objProc.Refresh();
				dataObj.QueryParser(sSql, objProc);
				return dataObj;
			}
			var nDBID = Webcrea.IndexOf(sDBID, 'DBID', '=');
			if(nDBID>=0)
			{
				nDBID = sDBID.indexOf('=');
				nDBID += 1;
				var sDBID1 = sDBID.substr(0, nDBID);
				var sDBID2 = sDBID.substr(nDBID);
				if(!sDBID2.IsEmpty())
				{
					var bNumber = Webcrea.IsNumber(sDBID2);
					if(!bNumber && sDBID2.toLowerCase != 'text')
					{
						sDBID2 = eval(sDBID2);
						sDBID = sDBID1 + sDBID2;
					}
				}
			}
		}
		if(!Webcrea.IsEmpty(sUrl))
		{
			var nDBID = Webcrea.IndexOf(sUrl, 'DBID', '=');
			if(nDBID>0)
			{
				sDBID = sUrl.substr(nDBID);
				sUrl = sUrl.substr(0, nDBID);
			}
			var bAgent=false;
			var sUrlTemp = sUrl.toLowerCase();
			var nUrl = sUrlTemp.indexOf('url');
			if(nUrl>=0)
			{
				sUrl = sUrl.substr(nUrl+3);
				sUrl = sUrl.trim();
				if(sUrl[0] == '=') sUrl=sUrl.substr(1);
			}
			else
			{
				nUrl = sUrlTemp.indexOf('agent');
				if(nUrl>=0)
				{
					bAgent=true;
					sUrl = sUrl.substr(nUrl+5);
					sUrl = sUrl.trim();
					if(sUrl[0] == '=') sUrl=sUrl.substr(1);
				}
			}
			sUrl = Webcrea.RemoveQuote(sUrl);
			if(bAgent) sUrl = 'agent=' + sUrl;
			else sUrl = 'url=' + sUrl;
			sParam = sUrl + "&cid=&uid=&cmd=select&mod=0&param="
		}
		else sParam = "cid=&uid=&cmd=select&mod=0&param=";
		sDBID = sDBID.replace('DBID', 'dbid');
		var sCharSet = "charset=euc-kr";

		var nPos = -1;
		var sHttpParam = sDBID + "&" + sCharSet + "&" + sParam + "&pos=" + nPos + "&sql=" + sSql;
		eval(objName).sDBID = sDBID;
		var sData = GetDataHandlerToString(sHttpParam);
		eval(objName).MSVDataParser(sData);
		return dataObj;
	},
	this.DisableDiv = function(obj, bDisable)
	{
		var pageDiv = Webcrea.FindParentDiv(obj, 1);
		var id = obj.id + 'BackDiv';
		var backDiv = Webcrea.FindNode(document.body, 'id', id);
		if(!backDiv)
		{
			backDiv = document.createElement('div');
			backDiv.setAttribute('id', id);
			var style = 'position:absolute;display:none;left:0px;top:0px;width:100%;height:100%;background-color:#000000;opacity:0.1;z-index:10000;';
			backDiv.setAttribute('style', style);
			obj.appendChild(backDiv);
		}
		else if(!bDisable)
		{
			Webcrea.DeleteObject(backDiv);
			return;
		}
		if(bDisable) backDiv.style.display = 'block';
		else backDiv.style.display = 'none';
	},
	this.Disable = function(param)
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var arrSub = sParam.split('.');
			var cellId = '';
			if(arrSub.length == 2) cellId = arrSub[1];
			var sObj = arrSub[0];
			var obj = Webcrea.GetObjectById(sObj);
			if(obj && (typeof obj.Disable != 'undefined')) obj.Disable(cellId);
		}
	},
	this.DisplayCode = function(obj)
	{
		var type = obj.getAttribute('realType');
		var id = obj.getAttribute('relId');
		var parentDiv = Webcrea.FindParentDiv(obj);
		var parentDivId = parentDiv.id;
		var parentObj = Webcrea.GetObjectById(parentDivId);
		if(!parentObj) return;
		var findId = parentDivId + '.' + id;
		var rowNo=-1;
		if(parentObj.IsGrid())
		{
			rowNo = Number(obj.getAttribute('rowno'));
			findId += rowNo;
		}
		if(parentObj.IsGrid() && parentObj.CurRowNo() != rowNo)
		{
			var nRow = parentObj.GetRowNo(rowNo);
			parentObj.Select(nRow, true);
		}
		var findRowNo = '';
		if(parentObj.IsGrid()) findRowNo = rowNo;
		var currNode = Webcrea.FindNode(parentDiv, 'id', findId, false, findRowNo);
		if(!currNode) return;
		if(Webcrea.IsReadOnly(currNode) || !Webcrea.IsEnable(currNode)) return;
		if(parentObj.IsGrid())
		{
			var rowIndex = parentObj.GetRowNo(currNode);
			parentObj.SetCurrRowIndex(rowIndex);
			parentObj.SetFocus(id);
		}
		else parentObj.SetFocus(id);
		var mask = currNode.getAttribute('mask');
		if(type && (type.toLowerCase()=='date' || type.toLowerCase()=='month' || type.toLowerCase()=='datetime'))
		{
			if(typeof CalendarObj != 'undefined')
			{
				var mode = 0;
				if(type.toLowerCase()=='month') mode = 1;
				else if(type.toLowerCase()=='datetime') mode = 2;
				if(!Webcrea.IsEmpty(WebcreaInfo.calendar) && (mode == 0 || mode == 2))
				{
					Webcrea.cLayerObj.cObj=currNode;
					Webcrea.ShowLayer('calendar', mode);
				}
				else if(!Webcrea.IsEmpty(WebcreaInfo.yearmonth) && mode==1)
				{
					Webcrea.cLayerObj.cObj=currNode;
					Webcrea.ShowLayer('yearmonth', mode);
				}
				else CalendarObj.DisplayCalendar(currNode, currNode, mask, mode);
			}
			else DisplayCalendar(currNode, currNode, mask);
		}
	},
	this.IsDisplayFilterBox = function()
	{
		return (Webcrea.filterBoxObj)?true:false;
	},
	this.SetFilterBoxItem = function()
	{
		var currNode = arguments[0];
		if(!currNode) currNode = Webcrea.GetEventNode();
		if(!currNode) return;
		var currObj = arguments[1];
		if(!currObj) currObj = Webcrea.GetEventObject();
		var bAllItem = false;
		var bPerItem = false;
		var nCheckMode = arguments[2];
		if(nCheckMode == 1) bAllItem = true;
		else if(nCheckMode == 2) bPerItem = true;
		var relId = '';
		if(!currObj)
		{
			var role = currNode.getAttribute('role');
			if(role == 'filterboxitem' || role == 'filterboxheader')
			{
				var dlNode = Webcrea.FindParentNode(currNode, 'name', 'DL');
				var pid = dlNode.getAttribute('pid');
				if(pid) currObj = Webcrea.GetObjectById(pid);
				relId = dlNode.getAttribute('relid');
			}
		}
		else relId = currNode.getAttribute('relid');
		if(!currObj) return;
		if(Webcrea.IsEmpty(relId)) return;
		var bChecked = currNode.checked;
		var objPage = _my_File.GetPageObj();
		var myFilterBoxId = currObj.divPos + '.' + relId;
		var dlNode = Webcrea.FindNode(objPage.objDivPage, 'id', '_my_filterbox_groupDL_' + myFilterBoxId);
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_items_' + myFilterBoxId);
		if(!itemsNode) return;
		var itemsInput = Webcrea.FindNode(currObj.objDivPos, 'id', currObj.divPos + '.' + relId);
		var arrItems = itemsNode.getElementsByTagName('input');
		var bAllChecked = true;
		for(var i=0; i<arrItems.length; i++)
		{
			var itemNode = arrItems[i];
			if(bAllItem) itemNode.checked = bChecked;
			if(!itemNode.checked) bAllChecked = false;
		}
		Webcrea.filterBoxObj.bAllChecked = bAllChecked;
		if(bPerItem)
		{
			var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_h_' + myFilterBoxId);
			if(divHeaderNode)
			{
				var inputCheckNode = Webcrea.FindNode(divHeaderNode, 'name', 'INPUT');
				inputCheckNode.checked = bAllChecked;
			}
		}
	},
	this.HideFilterBox = function()
	{
		if(!Webcrea.filterBoxObj) return;
		var bOK = arguments[0];
		var objPage = _my_File.GetPageObj();
		var relId = Webcrea.filterBoxObj.id;
		var bAllChecked = Webcrea.filterBoxObj.bAllChecked;
		var dataObj = Webcrea.filterBoxObj.dataObj;
		var currObj = Webcrea.filterBoxObj.obj;
		var currNode = Webcrea.filterBoxObj.headerObj;
		var arrowImg = Webcrea.FindNode(currNode, 'role', 'filterboxarrow');
		var myFilterBoxId = currObj.divPos + '.' + relId;
		var dlNode = Webcrea.FindNode(objPage.objDivPage, 'id', '_my_filterbox_groupDL_' + myFilterBoxId);
		var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_h_' + myFilterBoxId);
		var divFooterNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_f_' + myFilterBoxId);
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_items_' + myFilterBoxId);
		if(!itemsNode) return;
		if(bOK)
		{
			var arrChecked = [];
			if(!bAllChecked)
			{
				var arrLi = [];
				Webcrea.FindNodeAll(itemsNode, 'name', 'input', arrLi);
				for(var i=0; i<arrLi.length; i++)
				{
					var liNode = arrLi[i];
					if(liNode.checked) arrChecked[arrChecked.length] = liNode.value;
				}
			}
			dataObj.arrChecked = arrChecked;
			var imgOrg = arrowImg.getAttribute('imageorg');
			if(Webcrea.IsEmpty(imgOrg)) arrowImg.setAttribute('imageorg', arrowImg.getAttribute('imageout'));
			var img = '';
			if(arrChecked.length>0) img = arrowImg.getAttribute('imageover');
			else img = imgOrg;
			if(!Webcrea.IsEmpty(img))
			{
				arrowImg.setAttribute('imageout', img);
				arrowImg.src = Webcrea.GetImageLinkPath() + '/' + img;
			}
			currObj.Filtering();
		}
		Webcrea.filterBoxObj = null;
		itemsNode.style.display = 'none';
		if(divHeaderNode) divHeaderNode.style.display = 'none';
		if(divFooterNode) divFooterNode.style.display = 'none';
		Webcrea.LockUI(false);
	},
	this.DisplayFilterBox = function()
	{
		var currNode = arguments[0];
		if(!currNode) currNode = Webcrea.GetEventNode();
		if(!currNode) return;
		var currObj = arguments[1];
		if(!currObj)
		{
			currObj = this.GetEventObject();
			if(!currObj) return;
		}
		var relId = currNode.getAttribute('relid');
		if(Webcrea.IsEmpty(relId)) return;
		var objPage = _my_File.GetPageObj();
		var myFilterBoxId = currObj.divPos + '.' + relId;
		var dlNode = Webcrea.FindNode(objPage.objDivPage, 'id', '_my_filterbox_groupDL_' + myFilterBoxId);
		var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_h_' + myFilterBoxId);
		var divFooterNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_f_' + myFilterBoxId);
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_filterbox_items_' + myFilterBoxId);
		if(!itemsNode) return;
		var findNo = currObj.arrFilterObj.searchId(relId);
		var dataObj = currObj.arrFilterObj[findNo];
		var arrLi = [];
		Webcrea.FindNodeAll(itemsNode, 'name', 'LI', arrLi);
		var nLiCount = arrLi.length;
		if(nLiCount<1) return;
		Webcrea.LockUI(true);
		var tdNode = currNode;
		if(tdNode.tagName != 'TD') tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');

		itemsNode.style.display = 'block';
		if(divHeaderNode) divHeaderNode.style.display = 'block';
		if(divFooterNode) divFooterNode.style.display = 'block';
		Webcrea.filterBoxObj = {};
		Webcrea.filterBoxObj.id = relId;
		Webcrea.filterBoxObj.obj = currObj;
		Webcrea.filterBoxObj.dataObj = dataObj;
		Webcrea.filterBoxObj.headerObj = currNode;
		var tdCellId = currObj.GetCellId(tdNode);
		var cellInfo = currObj.GetCellInfo(tdCellId);
		if(cellInfo.fontsize)
		{
			itemsNode.style.fontSize = cellInfo.fontsize;
			itemsNode.style.fontFamily = cellInfo.fontFamily;
			if(divHeaderNode)
			{
				var fontSize = cellInfo.fontsize;
				var nFontSize = Number(Extract(fontSize, '[DIGIT]'));
				var fontKind = fontSize.replace(nFontSize, '');
				nFontSize += 1;
				divHeaderNode.style.fontSize = nFontSize + fontKind;
			}
		}
		var objDiv = currObj.objDivPos;
		if(currObj.objGDivPos) objDiv = currObj.objGDivPos;
		var nCurrFormTop = Webcrea.GetTop(objDiv, true);
		var nCurrFormLeft = Webcrea.GetLeft(objDiv, true);
		var nCurrTop = Webcrea.GetTop(tdNode, true);
		var vArr=tdNode.getClientRects()[0];
		var nCurrLeft = 0;
		if(vArr)
		{
			var vFormArr=objDiv.getClientRects()[0];
			nCurrLeft = vArr.left - vFormArr.left;
		}
		else nCurrLeft = Webcrea.GetLeft(tdNode, true);
		if(currObj.IsGrid())
		{
			nCurrTop += 2;
			nCurrLeft += 1;
		}
		else nCurrTop += 1;

		var nLiHeight = Webcrea.GetHeight(arrLi[0], true);
		if(nLiHeight<=10)
		{
			for(var i=1; i<arrLi.length; i++)
			{
				nLiHeight = Webcrea.GetHeight(arrLi[i], true);
				if(nLiHeight>10) break;
			}
		}
		var nMaxHeight = nLiHeight*6;
		var nHeight = nLiCount*nLiHeight;
		if(nMaxHeight<nHeight) nHeight = nMaxHeight;
		itemsNode.style.height = nHeight + 'px';
		var nCurrWidth = Webcrea.GetWidth(tdNode, true);
		nCurrWidth -= 6;
		if(nCurrWidth<200) nCurrWidth = 150;
		itemsNode.style.width = nCurrWidth + 'px';
		if(divHeaderNode) divHeaderNode.style.width = nCurrWidth + 8 + 'px';
		if(divFooterNode) divFooterNode.style.width = nCurrWidth + 8 + 'px';

		var nCurrHeight = Webcrea.GetHeight(tdNode, true);
		var nItemNodeHeight = Webcrea.GetHeight(itemsNode, true);
		var nCurrDivHeaderTop = 0;
		if(divHeaderNode) nCurrDivHeaderTop = Webcrea.GetHeight(divHeaderNode, true);
		var firstTop = nCurrFormTop + nCurrTop + nCurrHeight;
		var firstLeft = nCurrFormLeft + nCurrLeft;
		var nMaxPosHeight = Webcrea.GetHeight(_my_File.objWindow, true);
		if(firstTop+nItemNodeHeight>nMaxPosHeight)
		{
			firstTop -= nCurrHeight;
			firstTop -= nItemNodeHeight;
			firstTop -= nCurrDivHeaderTop;
			firstTop -= 4;
		}
		itemsNode.style.left = firstLeft + 'px';
		itemsNode.style.top = firstTop + nCurrDivHeaderTop + 'px';
		if(divHeaderNode)
		{
			divHeaderNode.style.left = firstLeft+ 'px';
			divHeaderNode.style.top = firstTop + 'px';
		}
		if(divFooterNode)
		{
			divFooterNode.style.left = firstLeft+ 'px';
			divFooterNode.style.top = firstTop + nCurrDivHeaderTop + nItemNodeHeight + 'px';
		}

		currObj.SetValueFilterBox();
		var ulNode = Webcrea.FindNode(dlNode, 'name', 'UL');
		var nDLWidth = Webcrea.GetWidth(ulNode, true);
		ulNode.style.width = nCurrWidth + 'px';
		if(nCurrWidth>nDLWidth)
		{
			var nULHeight1 = ulNode.scrollHeight;
			var nULHeight2 = ulNode.clientHeight;
			if(Webcrea.IE() && nULHeight1>nULHeight2) nCurrWidth -= 17;
			ulNode.style.minWidth = nCurrWidth + 'px';
		}
		var bHScroll = Webcrea.IsHScroll(ulNode);
		if(bHScroll)
		{
			var nScrlHeight = 17;
			itemsNode.style.height = nHeight + nScrlHeight + 'px';
			if(divFooterNode) divFooterNode.style.top = firstTop + nCurrDivHeaderTop + nItemNodeHeight + nScrlHeight + 'px';
		}
	},
	this.DisplayIFrameByIE = function()
	{
		var ifrm = arguments[0];
		if(!ifrm || (ifrm && ifrm.style.display == 'none')) return;
		if(ifrm.tagName && ifrm.tagName.toLowerCase() == 'div') ifrm = Webcrea.FindNode(ifrm, 'name', 'IFRAME');
		if(!ifrm) return;
		try{
			if(ifrm.contentWindow && ifrm.contentWindow._my_File)
			{
				var width = ifrm.contentWindow._my_File.initWidth;
				var height = ifrm.contentWindow._my_File.initHeight;
				if(width == 0 && height == 0) ifrm.contentWindow.OnLOADED();
			}
		}catch(e){}
	},
	this.DisplayInputBox = function(obj, bOut)
	{
		var pTd;
		var sId = obj.getAttribute('id');
		if(obj.tagName == 'TD') pTd = obj;
		else
		{
			sId = sId.replaceAll('_my_inputBox', '');
			pTd = document.getElementById(sId);
		}
		if (Webcrea.IsReadOnly(pTd) || !Webcrea.IsEnable(pTd)) return;
		var sInputId = sId + '_my_inputBox';
		var inputBox = Webcrea.FindNode(pTd, 'id', sInputId);
		var currObj = Webcrea.GetObject(pTd);
		var sIdOrg = currObj.GetCellId(sId);
		var bBWZ = currObj.IsBWZ(sIdOrg);
		var bBWZDisplay = false;
		var bAsteriskMask = Webcrea.IsAsteriskMask(pTd);
		if(bOut)
		{
			var sValue = obj.value;
			var sValue_b = pTd.getAttribute('value');
			if(bBWZ && Webcrea.IsEmptyByBWZ(sValue)) bBWZDisplay = true;
			else if(sValue == '' || Webcrea.IsNull(sValue)) bBWZDisplay = true;
			let sValueNotFormat = sValue;
			if(!bBWZDisplay) sValue = Webcrea.FormatValue(pTd, true, sValue);
			if(inputBox)
			{
				pTd.style.color = inputBox.style.color;
				pTd.setAttribute('onchange', inputBox.getAttribute('onchange'));
				pTd.setAttribute('onfocus', inputBox.getAttribute('onfocus'));
			}
			pTd.style.position = '';
			if(Webcrea.IsIE()) pTd.style.overflowY = '';
			var sTdId = '';
			if(currObj.IsCrossTab())
			{
				sTdId = pTd.getAttribute('id');
				sTdId = currObj.GetCellId(sId);
			}
			else sTdId = pTd.getAttribute('orgid');
			if(!Webcrea.IsEmpty(sValue))
			{
				pTd.style.whiteSpace = 'pre';
				var sValue1 = sValue;
				if(currObj.IsBWZ(sTdId) && Webcrea.IsEmptyByBWZ(sValue)) sValue1 = '';
				pTd.innerHTML = sValue1;
			}
			else pTd.innerHTML = '';
			pTd.style.visibility = '';
			if(!bAsteriskMask) pTd.setAttribute('value', sValueNotFormat);
			var cellInfo = currObj.GetCellInfo(sTdId);
			var bNumberCell = (cellInfo && cellInfo.realType=='number')?true:false;
			currObj.bEditing = false;
			var nRow = currObj.GetRowNo(pTd);
			var nDataRow=0;
			if(currObj.IsGrid()) nDataRow = currObj.GetRowDataNo(nRow, true);
			var bChange = false;
			if(!currObj.IsColumn(sTdId))
			{
				if(sValue != sValue_b) bChange = true;
			}
			else
			{
				var sChkValue = currObj.GetValueByData(sTdId,nDataRow);
				if(!bBWZDisplay) sChkValue = Webcrea.FormatValue(pTd, true, sChkValue);
				if(!Webcrea.IsEmpty(sValue) && !Webcrea.IsEmpty(sChkValue) && Webcrea.IsNumber(sValue) && Webcrea.IsNumber(sChkValue))
				{
					sValue = Webcrea.NumberReDef(sValue);
					sChkValue = Webcrea.NumberReDef(sChkValue);
				}
				if(sValue != sChkValue) bChange = true;
				else if((sValue == '' && sChkValue == '0') || (sValue == '0' && sChkValue == '')) bChange = true;
			}
			if(bNumberCell && !WebcreaInfo.Nullable && bChange && ((sValue == '' && sChkValue == '0') || (sValue == '0' && sChkValue == ''))) bChange = false;
			if(bChange)
			{
				currObj.modifyEvented = null;
				var nRowOrg = currObj.GetCurrRowIndex();
				currObj.SetCurrRowIndex(nRow);
				currObj.Select(nRow);
				Webcrea.OnCHANGE(pTd);
				Webcrea.OnMODIFY(pTd);
				currObj.SetCurrRowIndex(nRowOrg);
				currObj.Select(nRowOrg);
			}
			Webcrea.OnLOSTFOCUS(pTd);
		}
		else if(pTd.getAttribute('role') == 'edittd' && Webcrea.IsEmpty(inputBox))
		{
			if(pTd.getAttribute('vacant')) return;
			Webcrea.HideSelectBox();
			var nHeight = Webcrea.GetHeight(pTd, true);
			var nWidth = Webcrea.GetWidth(pTd, true);
			var sValue = pTd.getAttribute('value');;
			if(bBWZ && Webcrea.IsEmptyByBWZ(sValue)) bBWZDisplay = true;
			else if(sValue == '' || Webcrea.IsNull(sValue)) bBWZDisplay = true;
			if(!bBWZDisplay) sValue = Webcrea.FormatValue(pTd, false, sValue);
			var sImeMode = '';
			if(pTd.getAttribute('ime') == 'true') sImeMode = 'active';
			else if(pTd.getAttribute('ime') == 'false') sImeMode = 'inactive';
			inputBox=document.createElement('input');
			pTd.appendChild(inputBox);
			pTd.style.position = 'relative';
			pTd.style.visibility = 'hidden';
			inputBox.style.visibility = 'visible';
			if(Webcrea.IsIE()) pTd.style.overflowY = 'hidden';

			inputBox.id=sInputId;
			inputBox.style.position='absolute';
			inputBox.style.top='0px';
			inputBox.style.left='0px';
			inputBox.style.height = nHeight + 'px';
			inputBox.style.width = '100%';
			inputBox.setAttribute('class', pTd.getAttribute('class'));
			inputBox.setAttribute('pid', pTd.getAttribute('pid'));
			inputBox.setAttribute('orgid', pTd.getAttribute('orgid'));
			inputBox.setAttribute('colno', pTd.getAttribute('colno'));
			inputBox.setAttribute('rowno', pTd.getAttribute('rowno'));
			inputBox.setAttribute('role', 'edittd_input');
			inputBox.setAttribute('tabindex', pTd.getAttribute('tabindex'));
			if(pTd.getAttribute('minrange')) inputBox.setAttribute('minrange', pTd.getAttribute('minrange'));
			if(pTd.getAttribute('maxrange')) inputBox.setAttribute('maxrange', pTd.getAttribute('maxrange'));
			if(pTd.getAttribute('maxlength')) inputBox.setAttribute('maxlength', pTd.getAttribute('maxlength'));
			if(pTd.getAttribute('editable')) inputBox.setAttribute('editable', pTd.getAttribute('editable'));
			if(pTd.getAttribute('autocomplete')) inputBox.setAttribute('autocomplete', pTd.getAttribute('autocomplete'));
			if(pTd.getAttribute('autocapitalize')) inputBox.setAttribute('autocapitalize', pTd.getAttribute('autocapitalize'));
			inputBox.setAttribute('onfocus', pTd.getAttribute('onfocus'));
			inputBox.setAttribute('onblur', 'Webcrea.DisplayInputBox(this, true)');
			var color = currObj.colorEdit;
			var cellInfo = currObj.GetCellInfo(sId);
			if(cellInfo)
			{
				color = cellInfo.colorEdit;
				if(!color) color = currObj.colorEdit;
				else if(color.toLowerCase() == 'none') color = 'transparent';
				if(color == currObj.colorEdit) currObj.bEditing = true;
			}
			inputBox.style.backgroundColor = color;
			if(!Webcrea.IsEmpty(sImeMode)) inputBox.style.imeMode = sImeMode;
			currObj.bEditing = true;
			pTd.setAttribute('onchange', '');
			pTd.setAttribute('onblur', '');
			pTd.setAttribute('onfocus', '');
			inputBox.value=sValue;
			if(bAsteriskMask) setTimeout(function(){inputBox.focus();Webcrea.MoveCursor(inputBox, 0);});
			else setTimeout(function(){inputBox.focus();});
			if(Webcrea.IsIE() && (event && (event.type == 'keydown' || event.type == 'click')))
			{
				var nSelectionStart = sValue.length;
				if(nSelectionStart>0)
				{
					if(inputBox.createTextRange)
					{
						var range = inputBox.createTextRange();
						range.move('character', nSelectionStart);
						range.select();
					}
					else if(!Webcrea.IsNull(inputBox.selectionStart)) inputBox.selectionStart = nSelectionStart;
				}
			}
		}
		else
		{
			if(bAsteriskMask) Webcrea.MoveCursor(inputBox, 0);
		}
		return inputBox;
	},
	this.DisplayMultiLine = function(obj, bOut, currObj)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var mId='';
		var multi='';
		var pTd='';
		var pDiv='';
		var cDiv='';
		if(obj.tagName == 'TD') pTd = obj;
		else pTd = Webcrea.FindParentNode(obj, 'name', 'TD');
		if(!pTd) return;
		pDiv=Webcrea.FindNode(pTd,'role','pMultiline');
		cDiv=Webcrea.FindNode(pTd,'role','multiline');
		mId=Webcrea.FindNode(pTd,'id',cDiv.getAttribute('id')+'_my_multiline');
		if(!currObj) currObj = Webcrea.GetObject(cDiv);
		if(currObj.IsGrid())
		{
			currObj.OnLOSTFOCUS();
			if(typeof currObj.SetEventIndex != 'undefined') currObj.SetEventIndex(cDiv);
		}
		if (Webcrea.IsReadOnly(cDiv) || !Webcrea.IsEnable(cDiv)) return;
		if(bOut)
		{
			var sId = cDiv.getAttribute('id');
			var cellInfo = currObj.GetCellInfo(sId);
			var txt=obj.value;
			if(obj) pDiv.style.color = obj.style.color;
			var bTagDisplay = false;
			if(nFileVersion<7020190215004) bTagDisplay = true;
			else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
			if(bTagDisplay)
			{
				txt=txt.replace(new RegExp('\r?\n','g'), '<br>');
				if(!Webcrea.IsEmpty(txt)) cDiv.innerHTML=txt;
				else cDiv.innerHTML='&nbsp;';
			}
			else cDiv.innerText=txt;
			pDiv.removeChild(obj);
			currObj.bEditing = false;
			var nDataRow=0;
			if(currObj.IsGrid()) nDataRow = currObj.GetRowDataNo(currObj.GetCurrRowIndex());
			var sChkValue = currObj.GetValueByData(cDiv.getAttribute('orgid'), nDataRow);
			sChkValue=sChkValue.replace(new RegExp('\r?\n','g'), '<br>');
			if(txt != sChkValue)
			{
				Webcrea.OnCHANGE(cDiv);
				Webcrea.OnMODIFY(cDiv);
			}
			if(typeof currObj.ClearEdit != 'undefined') currObj.ClearEdit(cDiv);
			Webcrea.OnLOSTFOCUS(cDiv);
		}
		else if(cDiv.getAttribute('role') == 'multiline' && !bOut && Webcrea.IsEmpty(mId))
		{
			var sId = cDiv.getAttribute('id');
			var sImeMode = '';
			if(cDiv.getAttribute('ime') == 'true') sImeMode = 'active';
			else if(cDiv.getAttribute('ime') == 'false') sImeMode = 'inactive';
			mId=sId+'_my_multiline';
			multi=document.createElement('textarea');
			pDiv.appendChild(multi);
			pDiv.style.color = 'transparent';
			multi.id=mId;
			multi.style.position='absolute';
			multi.style.top='0px';
			multi.style.left='0px';
			multi.style.height = '100%';
			multi.style.width = '100%';
			multi.style.padding=cDiv.style.padding;
			multi.style.overflow = cDiv.style.overflow;
			multi.style.resize = cDiv.style.resize;
			if(cDiv.style.lineHeight) multi.style.lineHeight = cDiv.style.lineHeight;
			multi.setAttribute('class', pDiv.getAttribute('class'));
			multi.setAttribute('pid', cDiv.getAttribute('pid'));
			multi.setAttribute('role', 'multiline_input');
			multi.setAttribute('tabIndex', cDiv.getAttribute('tabIndex'));
			if(cDiv.getAttribute('relid')) multi.setAttribute('relid', cDiv.getAttribute('relid'));
			if(cDiv.getAttribute('onclick')) multi.setAttribute('onclick', cDiv.getAttribute('onclick'));
			multi.setAttribute('onchange', cDiv.getAttribute('onchange'));
			if(!Webcrea.IsEmpty(sImeMode)) multi.style.imeMode = sImeMode;
			if(cDiv.getAttribute('autocomplete')) multi.setAttribute('autocomplete', cDiv.getAttribute('autocomplete'));
			if(cDiv.getAttribute('maxlength')) multi.setAttribute('maxlength', cDiv.getAttribute('maxlength'));
			if(cDiv.getAttribute('onkeydown')) multi.setAttribute('onkeydown', cDiv.getAttribute('onkeydown'));
			if(cDiv.getAttribute('onkeyup')) multi.setAttribute('onkeyup', cDiv.getAttribute('onkeyup'));
			multi.setAttribute('onblur', 'Webcrea.DisplayMultiLine(this, true)');
			var color = currObj.colorEdit;
			var cellInfo = currObj.GetCellInfo(sId);
			if(cellInfo)
			{
				color = cellInfo.colorEdit;
				if(!color) color = currObj.colorEdit;
				else if(color.toLowerCase() == 'none') color = 'transparent';
				if(color == currObj.colorEdit) currObj.bEditing = true;
			}
			multi.style.backgroundColor = color;
			currObj.bEditing = true;
			var txt='';
			var bTagDisplay = false;
			if(nFileVersion<7020190215004) bTagDisplay = true;
			else if(cellInfo) bTagDisplay = cellInfo.bTagDisplay;
			if(bTagDisplay)
			{
				txt=cDiv.innerHTML;
				txt=txt.replaceAll('&nbsp;', '');
				txt=txt.replaceAll('<br>', '\r\n');
				multi.value=txt.replaceAll('&amp;', '&');
			}
			else
			{
				txt=cDiv.innerText;
				txt=txt;
				multi.value=txt;
			}
			multi.focus();
		}
	},
	this.IsDisplaySelectBox = function()
	{
		return (Webcrea.arrSelectBox && Webcrea.arrSelectBox.length>0)?true:false;
	},
	this.SetSelectBoxItem = function()
	{
		var currNode = arguments[0];
		if(!currNode) currNode = Webcrea.GetEventNode();
		if(!currNode) return;
		var currObj = arguments[1];
		if(!currObj) currObj = Webcrea.GetEventObject();
		var bAllItem = false;
		var bPerItem = false;
		var nCheckMode = arguments[2];
		if(nCheckMode == 1) bAllItem = true;
		else if(nCheckMode == 2) bPerItem = true;
		var role = currNode.getAttribute('role');
		var cellId = '';
		var bBaseChgEvent = true;
		if(!currObj)
		{
			if(role == 'selectboxitem' || role == 'selectboxheader')
			{
				var dlNode = Webcrea.FindParentNode(currNode, 'name', 'DL');
				var pid = dlNode.getAttribute('pid');
				if(pid) currObj = Webcrea.GetObjectById(pid);
				cellId = dlNode.getAttribute('orgid');
			}
		}
		else cellId = currNode.getAttribute('orgid');
		if(!currObj) return;
		if(Webcrea.IsEmpty(cellId)) return;
		var bChecked = currNode.checked;
		var objPage = _my_File.GetPageObj();
		var mySelectBoxId = currObj.divPos + '.' + cellId;
		var rowId = '';
		if(currObj.IsGrid())
		{
			rowId = currObj.GetCurrRowIndex();
			rowId = currObj.GetRowDataNo(rowId);
			if(Webcrea.IsObject(currNode))
			{
				var rowIdCell = currObj.GetRowNo(currNode);
				rowIdCell = currObj.GetRowDataNo(rowIdCell, true);
				if(!Webcrea.IsNull(rowIdCell) && rowIdCell != rowId)
				{
					rowId = rowIdCell;
					bBaseChgEvent = false;
				}
			}
		}
		var dlNode = document.getElementById('_my_selectbox_groupDL_' + mySelectBoxId);
		var cellObj = currObj.GetObject(cellId);
		if(cellObj.bSetListEx && cellObj.arrListExNode && cellObj.arrListExNode.length>0)
		{
			var nRowNo = 0;
			if(!Webcrea.IsEmpty(rowId)) nRowNo = rowId;
			var ddNodeClone = cellObj.arrListExNode[nRowNo];
			if(ddNodeClone)
			{
				var ddNode = Webcrea.FindNode(dlNode, 'name', 'DD');
				dlNode.removeChild(ddNode);
				dlNode.appendChild(ddNodeClone);
			}
		}
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_items_' + mySelectBoxId);
		if(!itemsNode) return;
		var itemsInput = Webcrea.FindNode(currObj.objDivPos, 'id', currObj.divPos + '.' + cellId + rowId);
		var sCodes = '';
		var sItems = '';
		var arrItems = itemsNode.getElementsByTagName('input');
		var bAllChecked = true;
		for(var i=0; i<arrItems.length; i++)
		{
			var itemNode = arrItems[i];
			if(bAllItem) itemNode.checked = bChecked;
			if(itemNode.checked)
			{
				if(sCodes != '') sCodes += ',';
				sCodes += itemNode.getAttribute('code');
				if(sItems != '') sItems += ',';
				sItems += itemNode.value;
			}
			else bAllChecked = false;
		}
		if(currNode.tagName == 'LI' && role == 'selectboxitem')
		{
			sCodes = currNode.getAttribute('code');
			sItems = currNode.getAttribute('sValue');
			bPerItem = false;
			itemsNode.style.display = 'none';
			Webcrea.arrSelectBox = [];
		}
		if(bPerItem)
		{
			var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_h_' + mySelectBoxId);
			if(divHeaderNode)
			{
				var inputCheckNode = Webcrea.FindNode(divHeaderNode, 'name', 'INPUT');
				inputCheckNode.checked = bAllChecked;
			}
		}
		var sCodesOrg = itemsInput.getAttribute('code');
		var sValueOrg = itemsInput.value;
		if(Webcrea.IsEmpty(sCodesOrg)) sCodesOrg = '';
		if(bAllItem || bPerItem) return;
		itemsInput.setAttribute('code', sCodes);
		itemsInput.value = sItems;

		if(!bBaseChgEvent) return;

		currObj.bSelectItem = true;
		var bChangeEvent = true;
		if(bChangeEvent) Webcrea.OnCHANGE(itemsInput);
		currObj.bSelectItem = false;
		var bModifyEvent = true;
		if(WebcreaInfo.ModifyEventMode && sCodes == sCodesOrg) bModifyEvent = false;
		if(bModifyEvent) Webcrea.OnMODIFY(itemsInput);
	},
	this.HideSelectBoxAll = function()
	{
		Webcrea.HideSelectBox(null, null, true);
	},
	this.HideSelectBox = function()
	{
		if(!Webcrea.arrSelectBox) return;
		var bAllHide = false;
		var currNode = arguments[0];
		if(!currNode)
		{
			bAllHide = true;
			currNode = Webcrea.GetEventNode();
		}
		if(!currNode)
		{
			if(Webcrea.IsDisplaySelectBox() && bAllHide)
			{
				var selectBoxObj = Webcrea.arrSelectBox[0];
				var targetObj = selectBoxObj.obj;
				var targetCellId = targetObj.GetCellId(selectBoxObj.id, true);
				targetCellId = targetObj.divPos + Webcrea.divId + selectBoxObj.id;
				var targetNode = Webcrea.FindNodePublic(targetObj.objDivPos, 'id', targetCellId);
				if(targetNode) Webcrea.HideSelectBox(targetNode, targetObj, true);
			}
			return;
		}
		var currObj = arguments[1];
		if(!currObj) currObj = Webcrea.GetEventObject();
		var bHide = arguments[2];
		var bNotOK = arguments[3];
		var cellId = '';
		var role = currNode.getAttribute('role');
		var bAll = false;
		if(!arguments[0] && !arguments[1] && !arguments[2]) bAll = true;
		if(!currObj)
		{
			if(currNode && (role == 'selectboxitem' || role == 'selectboxheader'))
			{
				var selectBoxObj = Webcrea.arrSelectBox[0];
				if(selectBoxObj && selectBoxObj.obj.IsMulti(selectBoxObj.id)) return;
			}
			if(currNode && !bAll)
			{
				if(role == 'selectboxitem' || role == 'selectboxheader') return;
				if(role == 'selectbox' || role == 'selectboxinput')
				{
					cellId = currNode.getAttribute('orgid');
					var pid = currNode.getAttribute('pid');
					if(pid) currObj = Webcrea.GetObjectById(pid);
					if(!currObj) return;
				}
			}
		}
		else if(role == 'selectboxarrow') cellId = currNode.getAttribute('relid');
		else cellId = currNode.getAttribute('orgid');
		var rowId =	'';
		if(Webcrea.IsGrid(currObj)) rowId = currNode.getAttribute('rowno');
		var objPage = _my_File.GetPageObj();
		for(var i=0; i<Webcrea.arrSelectBox.length; i++)
		{
			var selectBoxObj = Webcrea.arrSelectBox[i];
			if(selectBoxObj.obj == currObj && selectBoxObj.id == cellId && selectBoxObj.rowId == rowId && !bHide) continue;
			var mySelectBoxId = selectBoxObj.obj.divPos + '.' + selectBoxObj.id;
			var dlNode = document.getElementById('_my_selectbox_groupDL_' + mySelectBoxId);
			var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_h_' + mySelectBoxId);
			var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_items_' + mySelectBoxId);
			itemsNode.style.display = 'none';
			if(divHeaderNode) divHeaderNode.style.display = 'none';
			if(selectBoxObj.obj.IsMulti(selectBoxObj.id) && !bNotOK) Webcrea.SetSelectBoxItem(selectBoxObj.inputObj, selectBoxObj.obj);
			Webcrea.arrSelectBox.splice(i, 1);
			i--;
		}
	},
	this.SearchSelectBoxItem = function()
	{
		var sSearchText = arguments[0];
		var itemsNode = arguments[1];
		var bNoneStyle = arguments[2];
		var sSelectText = arguments[3];
		var selectBoxObj = arguments[4];
		var bSelectText = false;
		if(!itemsNode) return;
		var arrItems = itemsNode.getElementsByTagName('li');
		var nCount = 0;
		var findCode = '';
		var findValue = '';
		var findNode = '';
		for(var i=0; i<arrItems.length; i++)
		{
			var itemNode = arrItems[i];
			itemNode.removeAttribute('select');
			var sCode = itemNode.getAttribute('code');
			var sValue = itemNode.getAttribute('sValue');
			var bSearched = true;
			if(!Webcrea.IsEmpty(sSearchText))
			{
				bSearched = (sCode==sSearchText)?true:false;
				if(!bSearched)
				{
					if(bNoneStyle) bSearched = (sValue.iEquals(sSearchText))?true:false;
					else bSearched = (sValue.indexOf(sSearchText)>=0)?true:false;
					if(bSearched && Webcrea.IsEmpty(findCode))
					{
						findCode = sCode;
						findValue = sValue;
						findNode = itemNode;
						if(bNoneStyle) break;
					}
				}
				else if(Webcrea.IsEmpty(findCode))
				{
					findCode = sCode;
					findValue = sValue;
					findNode = itemNode;
					if(bNoneStyle) break;
				}
			}
			else if(!Webcrea.IsEmpty(sSelectText) && !bSelectText)
			{
				bSelectText = (sCode==sSelectText)?true:false;
				if(bSelectText && sCode==sValue) bSelectText = false;
				if(!bSelectText)
				{
					if(bNoneStyle) bSelectText = (sValue.iEquals(sSelectText))?true:false;
					else bSelectText = (sValue && sValue.indexOf(sSelectText)>=0)?true:false;
					if(bSelectText)
					{
						if(selectBoxObj) selectBoxObj.selectNode = itemNode;
						findCode = sCode;
						findValue = sValue;
						findNode = itemNode;
					}
				}
			}
			if(!bSearched)
			{
				if(!bNoneStyle) itemNode.style.display = 'none';
			}
			else
			{
				if(!bNoneStyle) itemNode.style.display = 'block';
				nCount++;
			}
		}
		var findObj = {};
		findObj.count = nCount;
		findObj.code = findCode;
		findObj.value = findValue;
		findObj.node = findNode;
		if(findNode) findNode.setAttribute('select', 'select');
		return findObj;
	},
	this.DisplaySelectBox = function()
	{
		var currNode = arguments[0];
		if(!currNode) currNode = Webcrea.GetEventNode();
		if(!currNode) return;
		var currObj = arguments[1];
		if(!currObj)
		{
			currObj = this.GetEventObject();
			if(!currObj) return;
		}
		var bSearchMode = arguments[2];
		var cellId = currNode.getAttribute('orgid');
		if(Webcrea.IsEmpty(cellId)) return;
		var charAttr = currNode.getAttribute('char_attr');
		var objPage = _my_File.GetPageObj();
		var mySelectBoxId = currObj.divPos + '.' + cellId;
		var rowId =	'';
		if(currObj.IsGrid())
		{
			rowId = currObj.GetCurrRowIndex();
			rowId = currObj.GetRowDataNo(rowId);
		}
		var cellObj = currObj.GetObject(cellId);
		var cellInfo = currObj.GetCellInfo(cellId);
		let bListSearchOpt = false;
		if(cellInfo) bListSearchOpt = cellInfo.bListSearch;
		if(cellObj && Webcrea.IsLateBindingList() && !cellObj.arrRows && cellInfo && cellInfo.bEnable) cellObj.OnINIT();
		var dlNode = document.getElementById('_my_selectbox_groupDL_' + mySelectBoxId);
		if(cellObj.bSetListEx && cellObj.arrListExNode && cellObj.arrListExNode.length>0)
		{
			var nRowNo = 0;
			if(!Webcrea.IsEmpty(rowId)) nRowNo = rowId;
			var ddNodeClone = cellObj.arrListExNode[nRowNo];
			if(ddNodeClone)
			{
				var ddNode = Webcrea.FindNode(dlNode, 'name', 'DD');
				dlNode.removeChild(ddNode);
				dlNode.appendChild(ddNodeClone);
			}
		}
		var divHeaderNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_h_' + mySelectBoxId);
		var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_items_' + mySelectBoxId);
		if(!itemsNode) return;
		var arrLi = [];
		Webcrea.FindNodeAll(itemsNode, 'name', 'LI', arrLi);
		var nLiCount = arrLi.length;
		if(nLiCount<1) return;
		var tdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
		var sDisplay = itemsNode.style.display;
		var bDisplay = false;
		let SetCharAttr = function()
		{
			let searchValue = currNode.value;
			if(Webcrea.IsEmpty(charAttr)) return;
			if(Webcrea.IsEmpty(searchValue)) return;
			if(charAttr == 'eng' || charAttr == 'engUpper' || charAttr == 'engLower') searchValue=searchValue.replace(/[\ㄱ-ㅎㅏ-ㅣ가-힣]/g, '');
			if(charAttr == 'upper' || charAttr == 'engUpper' || charAttr == 'lower' || charAttr == 'engLower')
			{
				if(charAttr == 'upper' || charAttr == 'engUpper') searchValue = searchValue.toUpperCase();
				else if(charAttr == 'lower' || charAttr == 'engLower') searchValue = searchValue.toLowerCase();
			}
			currNode.value = searchValue;
		};
		var findObj;
		if(!sDisplay || sDisplay == 'block')
		{
			var selectBoxObj = Webcrea.arrSelectBox[0];
			if(currObj.IsGrid() && selectBoxObj && cellId == selectBoxObj.id && rowId != selectBoxObj.rowId) bDisplay = true;
			if(!bDisplay && !bSearchMode)
			{
				itemsNode.style.display = 'none';
				if(divHeaderNode) divHeaderNode.style.display = 'none';
				if(selectBoxObj.obj.IsMulti(selectBoxObj.id)) Webcrea.SetSelectBoxItem(selectBoxObj.inputObj, selectBoxObj.obj);
				Webcrea.arrSelectBox = [];
			}
			else
			{
				if(bSearchMode)
				{
					SetCharAttr();
					findObj = Webcrea.SearchSelectBoxItem(currNode.value, itemsNode);
					if(findObj) nLiCount = findObj.count;
				}
				selectBoxObj.rowId = rowId;
				selectBoxObj.inputObj = currNode;
				selectBoxObj.arrLi = arrLi;
				selectBoxObj.dlNode = dlNode;
				if(findObj) selectBoxObj.selectNode = findObj.node;
			}
		}
		else
		{
			if(!Webcrea.arrSelectBox) Webcrea.arrSelectBox = [];
			var selectBoxObj = {};
			selectBoxObj.id = cellId;
			selectBoxObj.obj = currObj;
			selectBoxObj.rowId = rowId;
			selectBoxObj.inputObj = currNode;
			selectBoxObj.arrLi = arrLi;
			selectBoxObj.dlNode = dlNode;
			if(bSearchMode)
			{
				SetCharAttr();
				findObj = Webcrea.SearchSelectBoxItem(currNode.value, itemsNode);
				if(findObj) nLiCount = findObj.count;
			}
			else
			{
				let searchValue = currNode.value;
				let bFindValue = false;
				let bMyMultiSelectBox = currObj.IsMultiSelectBox(currNode);
				var bMySelectBoxPublic = currObj.IsMySelectBoxPublic(currNode);
				if(!bMyMultiSelectBox) bFindValue = true;
				findObj = Webcrea.SearchSelectBoxItem('', itemsNode, bFindValue, searchValue, selectBoxObj);
			}
			bDisplay = true;
			itemsNode.style.display = 'block';
			if(divHeaderNode) divHeaderNode.style.display = 'block';
			Webcrea.arrSelectBox[Webcrea.arrSelectBox.length] = selectBoxObj;
		}
		if(cellInfo.fontsize)
		{
			itemsNode.style.fontSize = cellInfo.fontsize;
			itemsNode.style.fontFamily = cellInfo.fontFamily;
			if(divHeaderNode)
			{
				var fontSize = cellInfo.fontsize;
				var nFontSize = Number(Extract(fontSize, '[DIGIT]'));
				var fontKind = fontSize.replace(nFontSize, '');
				nFontSize += 1;
				divHeaderNode.style.fontSize = nFontSize + fontKind;
			}
		}
		var objDiv = currObj.objDivPos;
		if(currObj.objGDivPos) objDiv = currObj.objGDivPos;
		var nCurrFormTop = Webcrea.GetTop(objDiv, true);
		var nCurrFormLeft = Webcrea.GetLeft(objDiv, true);
		var nCurrTop = Webcrea.GetTop(tdNode, true);
		if(Webcrea.IsForm(currObj) && Webcrea.IsVScroll(objDiv)) nCurrTop -= objDiv.scrollTop;
		var vArr=tdNode.getClientRects()[0];
		var nCurrLeft = 0;
		if(vArr)
		{
			var vFormArr=objDiv.getClientRects()[0];
			nCurrLeft = vArr.left - vFormArr.left;
		}
		else nCurrLeft = Webcrea.GetLeft(tdNode, true);

		var comboListGap = WebcreaInfo.ComboListGap-4;
		if(comboListGap>0)
		{
			for(var i=0; i<arrLi.length; i++)
			{
				if(arrLi[i].style.display == 'none') continue;
				arrLi[i].style.paddingBottom = comboListGap + 'px';
			}
		}
		var nLiHeight = Webcrea.GetHeight(arrLi[0], true);
		if(arrLi.length>1)
		{
			var nLiHeight1 = 0;
			for(var i=1; i<arrLi.length; i++)
			{
				if(arrLi[i].style.display == 'none') continue;
				nLiHeight1 = Webcrea.GetHeight(arrLi[i], true);
				break;
			}
			if(nLiHeight<nLiHeight1) nLiHeight = nLiHeight1;
		}
		var nMaxListCount = cellInfo.maxComboList;
		if(!nMaxListCount) nMaxListCount = WebcreaInfo.MaxComboList;
		else if(nMaxListCount<=1) nMaxListCount = 2;
		var nMaxHeight = nLiHeight*nMaxListCount;
		var nHeight = nLiCount*nLiHeight;
		if(nMaxHeight<nHeight) nHeight = nMaxHeight;
		itemsNode.style.height = nHeight + 'px';

		var nCurrWidth = Webcrea.GetWidth(tdNode, true);
		nCurrWidth -= 6;
		itemsNode.style.width = nCurrWidth + 'px';
		if(divHeaderNode) divHeaderNode.style.width = nCurrWidth + 8 + 'px';

		var nCurrHeight = Webcrea.GetHeight(tdNode, true);
		var nItemNodeHeight = Webcrea.GetHeight(itemsNode, true);
		var nCurrDivHeaderTop = 0;
		if(divHeaderNode) nCurrDivHeaderTop = Webcrea.GetHeight(divHeaderNode, true);
		var firstTop = nCurrFormTop + nCurrTop + nCurrHeight;
		let firstTopOrg = firstTop;
		var firstLeft = nCurrFormLeft + nCurrLeft;
		var nWindowHeight = 0;
		if(!WebcreaInfo.ResizeWindow) nWindowHeight = Webcrea.GetHeight(_my_File.objWindow, true);
		else nWindowHeight = Webcrea.GetHeight(_my_File.objMain, true);
		var nWindowTop = Webcrea.GetTop(_my_File.objWindow);
		var nPageTop = Webcrea.GetTop(currObj.objDivPage);
		var nTopAdjust = nPageTop-nWindowTop;
		var nMaxPosHeight = nWindowHeight - nTopAdjust;
		if(firstTop+nItemNodeHeight>nMaxPosHeight)
		{
			firstTop -= nCurrHeight;
			firstTop -= nItemNodeHeight;
			firstTop -= nCurrDivHeaderTop;
			firstTop -= 4;
		}
		if(firstTop<0)
		{
			let nLiAdjustCount = parseInt((nMaxPosHeight-firstTopOrg)/nLiHeight);
			var nItemNodeHeightChg = nLiHeight*nLiAdjustCount;
			itemsNode.style.height = nItemNodeHeightChg + 'px';
			firstTop = firstTopOrg;
		}
		var marginLeft=currNode.style.marginLeft;
		if(marginLeft) marginLeft=Number(Extract(marginLeft, '[DIGIT]'));
		else marginLeft=0;
		itemsNode.style.left = firstLeft - marginLeft + 'px';
		var marginBottom=currNode.style.marginBottom;
		if(marginBottom) marginBottom=Number(Extract(marginBottom, '[DIGIT]'));
		else marginBottom=0;
		itemsNode.style.top = firstTop + nCurrDivHeaderTop - marginBottom + 'px';

		if(divHeaderNode)
		{
			divHeaderNode.style.left = firstLeft+ 'px';
			divHeaderNode.style.top = firstTop + 'px';
		}
		if(bDisplay)
		{
			var sCodes = currNode.getAttribute('code');
			if(!sCodes) sCodes = '';
			currObj.SetValueMySelectBox(currNode, sCodes, true);
			var ulNode = Webcrea.FindNode(dlNode, 'name', 'UL');
			var nDLWidth = Webcrea.GetWidth(ulNode, true);
			if(nCurrWidth>nDLWidth)
			{
				var nULHeight1 = ulNode.scrollHeight;
				var nULHeight2 = ulNode.clientHeight;
				if(Webcrea.IE() && nULHeight1>nULHeight2) nCurrWidth -= 17;
				ulNode.style.minWidth = nCurrWidth + 'px';
			}
			else if(divHeaderNode)
			{
				var nDLWidth1 = Webcrea.GetWidth(ulNode);
				var nHeaderWidth1 = Webcrea.GetWidth(divHeaderNode);
				if(nHeaderWidth1<nDLWidth1) divHeaderNode.style.width = nDLWidth1 + 'px';
			}
			if(findObj)
			{
				var findNode = findObj.node;
				var nTop = 0;
				if(findNode) nTop = Webcrea.GetTop(findNode);
				ulNode.scrollTop = nTop;
			}
		}
	},
	this.DisplaySortArraw = function(obj, desc, currObj)
	{
		var pTd = Webcrea.FindParentNode(obj, 'name', 'TD');
		var pid=currObj.divPos;
		var cellId = obj.id;
		var sBtnId=pid+'._my_sBtn';
		var bDelete = true;
		var sColor = '#000000';
		var sortBtn = Webcrea.FindNodePublic(pTd, 'id', sBtnId);
		if(!Webcrea.bCtrlKey && (currObj.nSortHistory>0 || (currObj.nSortHistory<0 && WebcreaInfo.nSortHistory>0)))
		{
			bDelete = false;
			if(sortBtn)
			{
				var sBtnColor = sortBtn.style.borderColor;
				var n = sBtnColor.indexOf('rgb(');
				if(n>=0)
				{
					var n1 = sBtnColor.indexOf(')');
					if(n1>0)
					{
						sBtnColor = sBtnColor.substr(n, n1+1);
						sColor = sBtnColor;
					}
				}
			}
			else if(currObj.arrSortHistory && currObj.arrSortHistory.length>0) sColor = '#A6A6A6';
		}
		if(bDelete)
		{
			if(currObj.nSortHistory>0 || (currObj.nSortHistory<0 && WebcreaInfo.nSortHistory>0))
			{
				if(!currObj.arrSortHistory) currObj.arrSortHistory = [];
				for(var i=0; i<currObj.arrSortHistory.length; i++)
				{
					var sortObj = currObj.arrSortHistory[i];
					var etcNode = sortObj.node;
					if(etcNode == obj) continue;
					var etcTd = Webcrea.FindParentNode(etcNode, 'name', 'TD');
					var etcSortBtn = Webcrea.FindNodePublic(etcTd, 'id', sBtnId);
					if(etcTd && etcSortBtn) etcTd.removeChild(etcSortBtn);
				}
			}
			if(!sortBtn && currObj.currSortBtn)
			{
				var etcSortBtn = currObj.currSortBtn;
				var etcTd = Webcrea.FindParentNode(etcSortBtn, 'name', 'TD');
				if(etcTd && etcSortBtn) etcTd.removeChild(etcSortBtn);
			}
		}
		if(!sortBtn)
		{
			sortBtn=document.createElement('div');
			pTd.appendChild(sortBtn);
			sortBtn.id=sBtnId;
			sortBtn.style.position='absolute';
			sortBtn.style.width = '10px';
			sortBtn.style.height = '10px';
			sortBtn.style.cursor = 'pointer';
			sortBtn.setAttribute('pid', pid);
			sortBtn.setAttribute('role', obj.getAttribute('role'));
			sortBtn.setAttribute('relid', obj.getAttribute('relid'));
			sortBtn.setAttribute('onclick', obj.getAttribute('onclick'));
			sortBtn.setAttribute('tabindex', obj.getAttribute('tabindex'));
		}
		var sTmargin=5;
		if(desc)
		{
			sortBtn.style.borderTop='5px solid ' + sColor;
			sortBtn.style.borderRight='5px solid transparent';
			sortBtn.style.borderBottom='5px solid transparent';
			sortBtn.style.borderLeft='5px solid transparent';
		}
		else
		{
			sortBtn.style.borderTop='5px solid transparent';
			sortBtn.style.borderRight='5px solid transparent';
			sortBtn.style.borderBottom='5px solid ' + sColor;
			sortBtn.style.borderLeft='5px solid transparent';
			sTmargin=-5;
		}
		var nTopBase=Webcrea.GetTop(pTd);
		var sTop=nTopBase+(pTd.getHeight()-10+sTmargin)/2;
		if(sTop<0) sTop=0;
		sortBtn.style.top=sTop+'px';
		var sLeft=pTd.getWidth()-15;
		if(sLeft<15) sLeft=0;
		sortBtn.style.marginLeft=sLeft+'px';
		currObj.currSortBtn = sortBtn;
	},
	this.RemoveSortArraw = function(currObj)
	{
		if(currObj.nSortHistory==2 || (currObj.nSortHistory<0 && WebcreaInfo.nSortHistory==2))
		{
			if(!currObj.arrSortHistory) currObj.arrSortHistory = [];
			for(var i=0; i<currObj.arrSortHistory.length; i++)
			{
				var sortObj = currObj.arrSortHistory[i];
				var etcNode = sortObj.node;
				var sBtnId = currObj.divPos+'._my_sBtn';
				var etcTd = Webcrea.FindParentNode(etcNode, 'name', 'TD');
				var etcSortBtn = Webcrea.FindNodePublic(etcTd, 'id', sBtnId);
				if(etcTd && etcSortBtn) etcTd.removeChild(etcSortBtn);
			}
			currObj.arrSortHistory = [];
		}
		if((!(currObj.nSortHistory == 1 || WebcreaInfo.nSortHistory == 1)) && currObj.currSortBtn)
		{
			var etcSortBtn = currObj.currSortBtn;
			var etcTd = Webcrea.FindParentNode(etcSortBtn, 'name', 'TD');
			if(etcTd && etcSortBtn) etcTd.removeChild(etcSortBtn);
		}
	},
	this.Download = function(sUrl, param1, param2)
	{
		var sUrl = arguments[0];
		if(Webcrea.IsEmpty(sUrl)) return;
		var bAgent = false;
		var bUTF8 = false;
		var sReName = '';
		for(var i=1; i<arguments.length; i++)
		{
			var sParam = arguments[i];
			if(sParam.iEquals('agent')) bAgent = true;
			else if(sParam.iEquals('UTF8')) bUTF8 = true;
			else sReName = sParam;
		}
		var currObj = Webcrea.GetEventNode();
		if(!currObj)currObj = _my_File.objMain;
		var id = currObj.id+'.download';
		var objFile = Webcrea.CreateObject('download file', id, currObj);
		var n = sUrl.lastIndexOf('/');
		if(n<0) return;
		if(sUrl.indexOf('{ServerIP}')>0) sUrl = Webcrea.ReplaceAll(sUrl, '{ServerIP}', App.GetValue('ServerIP'));
		if(bAgent)
		{
			var arrParam = [];
			var arrValue = [];
			for(var i=0; i<Webcrea.arrDownloadParam.length; i++)
			{
				var sParam = Webcrea.arrDownloadParam[i];
				var arr = sParam.split('=');
				var sVal = arr[0].trim();
				var sValue = '';
				if(arr.length>1) sValue = arr[1].trim();
				arrParam[i] = sVal;
				arrValue[i] = sValue;
			}
			if(!Webcrea.IsEmpty(sReName))
			{
				arrParam[arrParam.length] = '_my_reName';
				arrValue[arrValue.length] = sReName;
			}
			var charset = 'euc-kr';
			if(bUTF8) charset='utf-8';
			var ifrmDownload =Webcrea.FindNodePublic(document.body, 'id', '_my_DownloadFrame');
            if(!ifrmDownload)
            {
                ifrmDownload= document.createElement('iframe');
                ifrmDownload.setAttribute('id', '_my_DownloadFrame');
                ifrmDownload.setAttribute('name', '_my_DownloadFrame');
                ifrmDownload.setAttribute('style', 'position:absoulte;display:none;');
                var divMain = Webcrea.FindNodePublic(document.body, 'id', 'MainDiv');
                divMain.appendChild(ifrmDownload);
            }
            Webcrea.PostData(sUrl, arrParam, arrValue, '_my_Download', charset);
		}
		else
		{
			var name = sUrl.substr(n+1);
			objFile.setAttribute('href', sUrl);
			objFile.setAttribute('target', '_blank');
			objFile.setAttribute('download', '');
			objFile.setAttribute('_my_download', name);
			Webcrea.bDownloadClick = true;
			objFile.click();
			Webcrea.bDownloadClick = false;
		}
		if(Webcrea.arrDownloadParam && Webcrea.arrDownloadParam.length>0) Webcrea.arrDownloadParam = [];
	},
	this.DownloadParam = function()
	{
		this.arrDownloadParam = [];
		for(var i=0; i<arguments.length; i++) this.arrDownloadParam[this.arrDownloadParam.length] = arguments[i];
	},
	this.Enable = function(param)
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var arrSub = sParam.split('.');
			var cellId = '';
			if(arrSub.length == 2) cellId = arrSub[1];
			var sObj = arrSub[0];
			var obj = Webcrea.GetObjectById(sObj);
			if(obj && (typeof obj.Enable != 'undefined')) obj.Enable(cellId);
		}
	},
	this.MoveCursor = function()
	{
		var obj = arguments[0];
		var posStart = arguments[1];
		var posEnd = arguments[2];
		if(!posEnd) posEnd = posStart;
		if(obj.createTextRange)
		{
			var range = obj.createTextRange();
			if(posEnd != posStart)
			{
				range.moveEnd('character', posEnd);
				range.moveStart('character', posStart);
			}
			else range.move('character', posStart);
			range.select();
		}
		else if(!Webcrea.IsNull(obj.selectionStart))
		{
			obj.selectionEnd = posEnd;
			obj.selectionStart = posStart;
		}
	},
	this.MoveObject = function(mode, obj, parent, top, left)
	{
		var objParent = null;
		var initTopP = 0, initLeftP = 0;
		if(!top) top = 0;
		if(!left) left = 0;
		var bDisplaySize = false;
		if(parent == 'display')
		{
			parent = '';
			bDisplaySize = true;
		}
		if(Webcrea.IsEmpty(parent)) objParent = Webcrea.FindNode(document.body, 'id', 'MainDiv');
		else
		{
			objParent = parent.objDivPos;
			if(!objParent) objParent = parent;
			else
			{
				var rootDiv = Webcrea.FindParentDiv(objParent);
				if(rootDiv && rootDiv != parent.objDivPage)
				{
					initTopP = Webcrea.GetTop(rootDiv, true);
					initLeftP = Webcrea.GetLeft(rootDiv, true);
				}
			}
		}
		var leftP = Webcrea.GetLeft(objParent, true) + initLeftP;
		var topP = Webcrea.GetTop(objParent, true) + initTopP;
		var widthP = 0;
		var heightP = 0;
		if(bDisplaySize)
		{
			widthP = window.innerWidth;
			heightP = window.innerHeight;
			leftP *= -1;
			topP *= -1;
		}
		else
		{
			widthP = Webcrea.GetWidth(objParent, true);
			heightP = Webcrea.GetHeight(objParent, true);
		}
		var width = Webcrea.GetWidth(obj, true);
		var height = Webcrea.GetHeight(obj, true);
		var objImg = Webcrea.FindNode(obj, 'name', 'img');
		if(objImg)
		{
			var widthImg = Webcrea.GetWidth(objImg, true);
			var heightImg = Webcrea.GetHeight(objImg, true);
			if(width < widthImg) width = widthImg;
			if(height < heightImg) height = heightImg;
		}
		if(mode == 1)
		{
			top = topP;
			left = leftP;
		}
		else if(mode == 2)
		{
			top = topP;
			left = leftP + (widthP - width)/2;
		}
		else if(mode == 3)
		{
			top = topP;
			left = leftP + (widthP - width);
		}
		else if(mode == 4)
		{
			top = topP + (heightP - height)/2;
			left = leftP;
		}
		else if(mode == 5)
		{
			top = topP + (heightP - height)/2;
			left = leftP + (widthP - width)/2;
		}
		else if(mode == 6)
		{
			top = topP + (heightP - height)/2;
			left = leftP + (widthP - width);
		}
		else if(mode == 7)
		{
			top = topP + (heightP - height);
			left = leftP;
		}
		else if(mode == 8)
		{
			top = topP + (heightP - height);
			left = leftP + (widthP - width)/2;
		}
		else if(mode == 9)
		{
			top = topP + (heightP - height);
			left = leftP + (widthP - width);
		}
		else
		{
			top += topP;
			left += leftP;
		}
		obj.style.top = top + 'px';
		obj.style.left = left + 'px';
	},
	this.DataResult = function(httpRequest)
	{
		if(httpRequest.status != 0 && httpRequest.status != 200) return;
		_my_sqlStatus = httpRequest.responseText;
		_my_sqlStatus = _my_sqlStatus.trim();
	},
	this.TabChecked = function(nPage, bSub)
	{
		var SubTabChecked = function(nSubPage)
		{
			var page = _my_File.arrPage[nSubPage];
			for(var j=0; j<page.arrObject.length; j++)
			{
				var divObj = page.arrObject[j];
				if(divObj.objType == 4)
				{
					for(var k=0; k<divObj.arrObject.length; k++)
					{
						var tabItemObj = divObj.arrObject[k];
						var nSubPage1 = tabItemObj.page;
						if(tabItemObj.IsOpen())
						{
							var pageSub = _my_File.arrPage[nSubPage1];
							if(!pageSub.GetDisplay()) pageSub.SetDisplay(true);
							SubTabChecked(nSubPage1);
						}
					}
				}
			}
		};
		var bFindTab = false;
		for(var i=0; i<_my_File.arrMasterPage.length; i++)
		{
			var page = _my_File.arrMasterPage[i];
			if(!bSub && i == nPage)
			{
				SubTabChecked(nPage);
				break;
			}
			for(var j=0; j<page.arrObject.length; j++)
			{
				var divObj = page.arrObject[j];
				if(divObj.objType == 4)
				{
					bFindTab = true;
					if(divObj.TabChecked(nPage) && divObj.nPage > 0)
					{
						if(!page.GetDisplay()) page.SetDisplay(true);
						Webcrea.TabChecked(divObj.nPage, true);
					}
				}
			}
		}
		for(var i=0; i<_my_File.arrPage.length; i++)
		{
			var page = _my_File.arrPage[i];
			if(!bSub && i == nPage)
			{
				SubTabChecked(nPage);
				break;
			}
			for(var j=0; j<page.arrObject.length; j++)
			{
				var divObj = page.arrObject[j];
				if(divObj.objType == 4)
				{
					bFindTab = true;
					if(divObj.TabChecked(nPage) && divObj.nPage > 0)
					{
						if(!page.GetDisplay()) page.SetDisplay(true);
						Webcrea.TabChecked(divObj.nPage, true);
					}
				}
			}
		}
		if(!bFindTab)
		{
			for(var i=0; i<_my_File.arrMasterPage.length; i++)
			{
				var page = _my_File.arrMasterPage[i];
				for(var j=0; j<page.arrObject.length; j++)
				{
					var divObj = page.arrObject[j];
					if(divObj.objType == 4) divObj.TabNotChecked();
				}
			}
			for(var i=0; i<_my_File.arrPage.length; i++)
			{
				var page = _my_File.arrPage[i];
				for(var j=0; j<page.arrObject.length; j++)
				{
					var divObj = page.arrObject[j];
					if(divObj.objType == 4) divObj.TabNotChecked();
				}
			}
		}
	},
	this.CommandEvent = function(cmd)
	{
		if ((typeof cmd).toLowerCase() == 'string') cmd = cmd.toLowerCase();
		if(cmd == 'close' || cmd == 'ok' || cmd == 'cancel')
		{
			try{ if(top && top._my_File) top._my_File.PanelAutoHide(_my_File.ifrmObj); }catch(e){}
			try
			{
				if(Win.IsEndSessionDlg())
				{
					WebcreaPack.EndSessionEvent(cmd);
					return;
				}
				if(Win.IsLayerFile())
				{
					var fType='';
					var status='';
					if(Win.IsMsgBox()) fType = 'msgbox';
					else if(Win.IsCalendar()) fType = 'calendar';
					else if(Win.IsYearMonth()) fType = 'yearmonth';
					else if(Win.IsRunDlg()) fType = 'rundlg';
					if(cmd == 'ok') status ='OK';
					else if(cmd == 'cancel') status='CANCEL';
					window.parent.SetStatus(status);
					if(cmd == 'ok' && typeof FuncFile_OnRETURN != 'undefined')
					{
						FuncFile_OnRETURN();
						if(Win.IsMsgBox()) status=_my_lastStatus;
					}
					window.parent.Webcrea.HideLayer(fType, status);
					return;
				}
			}catch(e){return;}
			if(cmd == 'ok' && SqlStatus() == '')
			{
				if(typeof _my_File.IsLoginFile != 'undefined' && _my_File.IsLoginFile())
				{
					WebcreaPack.CommandLogin();
					return;
				}
			}
			try{
				if(window.opener || Webcrea.IE() || Webcrea.IsMDIFrame())
				{
					if(typeof FuncFile_OnRETURN != 'undefined') FuncFile_OnRETURN();
					if(window.opener && window.opener.Webcrea)
					{
						if(cmd == 'ok') window.opener.SetStatus('OK');
						else if(cmd == 'cancel') window.opener.SetStatus('CANCEL');
						else window.opener.SetStatus('');
					}
					if(window.opener || Webcrea.IsMDIFrame())
					{
						if(window.history.length>1)
						{
							if(Webcrea.bInplaceOpen)
							{
								var sVal = Webcrea.webcreaInVal + '___bInplaceClose';
								var sData = 'true';
								sData = Base64.encode(sData);
								window.sessionStorage.setItem(sVal, sData);
							}
							if(typeof window.opener._my_Popup != 'undefined' && window.opener._my_Popup && document.referrer == window.opener.location.href)
							{
								Webcrea.currEvent = 'commandclose';
								window.open('','_self').close();
							}
							else window.history.back();
						}
						else
						{
							Webcrea.currEvent = 'commandclose';
							window.open('','_self').close();
						}
					}
				}
				else if(cmd == 'close')
				{
					Webcrea.currEvent = 'commandclose';
					window.open('','_self').close();
				}
			}catch(e){}
			return;
		}
		else if (cmd == 'login')
		{
			WebcreaPack.CommandLogout();
			return;
		}
		var obj = this.GetObject();
		if(!obj) return;
		if (cmd == 'insert')
		{
			obj.arrStackEvent[obj.arrStackEvent.length] = 'commandinsert';
			if(obj.objType && obj.IsEnable() && !obj.IsReadOnly())
			{
				if(obj.arrField.length==1 && Webcrea.IsEmpty(obj.arrField[0]))
				{
					obj.arrField.splice(0, 1);
					obj.arrFieldType.splice(0, 1);
				}
				if(obj.arrField.length<1) Webcrea.CreateColumn(obj);
				var rowId = obj.ModifyRecordSet('Insert count = 1, status');
				if(obj.bMyGrid)
				{
					obj.commandInsertRowId = rowId;
					if(typeof window[obj.divPage][obj.divPos]['Data'].OnQUERY != 'undefined') obj.rowLostFocusEvent = window[obj.divPage][obj.divPos]['Data'].OnQUERY;
					var mode = 0;
					if(obj.nInsertPos==0) mode = 2;
					obj._Set_RowNo(rowId, mode);
					if(Webcrea.IsGrid(obj)) obj.Select(obj.GetRowNo(rowId));
				}
				else
				{
					obj.SyncData();
					obj.SetFocus();
				}
				if(obj.IsGrid())
				{
					if(obj.bMyGrid) rowId = obj.GetCurrRowIndex();
					var tr = obj.objTable.rows[rowId + obj.nHeader];
					if(!tr)
					{
						obj.arrStackEvent.removeByValue('commandinsert');
						return;
					}
					var trChildNodes = tr.childNodes;
					for(var j=0; j<trChildNodes.length; j++)
					{
						var td = trChildNodes[j];
						if (td.nodeName == 'TD'){
							var colChildNodes = td.children;
							if(Webcrea.IsEditTd(td))
							{
								colChildNodes = [];
								colChildNodes[0] = td;
							}
							for(var k=0; k<colChildNodes.length; k++)
							{
								var cell = colChildNodes[k];
								if(!cell) continue;
								if(obj.IsStatusCell(cell)) continue;
								obj.InitValueCell(cell, rowId);
							}
						}
					}
				}
			}
			obj.arrStackEvent.removeByValue('commandinsert');
			obj.commandInsertRowId = -1;
		}
		else if (cmd == 'delete')
		{
			if(!obj.objType) return;
			if(!obj.arrRows) return;
			if(obj.arrRows.length<1) return;
			obj.arrStackEvent[obj.arrStackEvent.length] = 'commanddelete';
			var nRowData = obj.GetRowDataNo(obj.currRowIndex);
			if(obj.arrStatus[nRowData] == '+')
			{
				obj.DeleteRow(obj.currRowIndex);
				nRowData = Number(obj.GetRowDataNo(obj.currRowIndex));
				nRowData += 1;
				if(obj.bMyGrid)
				{
					if(nRowData >= obj.arrRows.length) nRowData = obj.arrRows.length-1;
					obj._Set_RowNo(nRowData);
				}
				else
				{
					if(nRowData <= obj.arrRows.length) obj.ReLoadRow(nRowData, obj.arrRows.length-1);
					obj.SetFocus();
				}
			}
			else
			{
				if(obj.arrStatus[nRowData] == '-')
				{
					if(obj.arrStatus_b)
					{
						cmd = obj.arrStatus_b[nRowData];
						if(cmd == '-') cmd = '';
					}
					else cmd = '';
				}
				var ___param = cmd + ' ' + nRowData.toString();
				obj.SetRowStatus(___param, false, true);
				obj.RefreshRow(obj.currRowIndex);
			}
			obj.arrStackEvent.removeByValue('commanddelete');
		}
		else if (cmd == 'update')
		{
		}
		_my_lastStatus = 'OK';
	},
	this.CommandConfirmLogin = function()
	{
		return WebcreaPack.CommandConfirmLogin();
	},
	this.EnterUpdate = function()
	{
		this.bEnterUpdate = true;
	},
	this.CopyClipboard = function(param)
	{
		if(Webcrea.IE()) window.clipboardData.setData('Text', param);
		else prompt(Webcrea.LoadString('msgClipboard'), param);
	},
	this.CopyData = function(obj, param, bSelect)
	{
		var sDBID = '';
		var nDBID = param.indexOf('DBID');
		if(nDBID>0)
		{
			sDBID = param.substr(nDBID+4);
			param = param.substr(0, nDBID);
			nDBID = sDBID.indexOf('=');
			if(nDBID<0) sDBID = '';
			else sDBID = sDBID.substr(nDBID+1);
			sDBID = sDBID.trim();
		}
		if(!Webcrea.IsEmpty(sDBID) && !sDBID.iEquals('object')) return;
		var arrColumn = [];
		var nColumn = param.indexOf('column');
		if(nColumn>0)
		{
			var sColumn = param.substr(nColumn+6);
			param = param.substr(0, nColumn);
			nColumn = sColumn.indexOf('=');
			sColumn = sColumn.substr(nColumn+1);
			sColumn = sColumn.trim();
			arrColumn = sColumn.split(',');
		}
		for(var i=0; i<arrColumn.length; i++) arrColumn[i] = arrColumn[i].trim();
		var arr = Webcrea.MakeToken(param);
		if(arr.length < 1) return;
		var copyObj = Webcrea.GetObjectById(arr[0]);
		if(!copyObj) copyObj = Webcrea.CreateDataObject('', '', arr[0]);
		if(!copyObj.arrRows) copyObj.arrRows = [];
		if(!copyObj.arrRowInfo) copyObj.arrRowInfo = [];
		if(!copyObj.arrField) copyObj.arrField = [];
		if(!copyObj.arrFieldType) copyObj.arrFieldType = [];
		if(!copyObj.arrData) copyObj.arrData = [];
		if(!copyObj.arrStatus) copyObj.arrStatus = [];
		if(obj.arrMulti && !copyObj.arrMulti) copyObj.arrMulti = [];
		var nRow = obj.IsGrid()?obj.arrRows.length:1;
		var bHeader = false;
		for(var i=0; i<nRow; i++)
		{
			if(bSelect && (!obj.arrMulti || (obj.arrMulti && !obj.arrMulti[i]))) continue;
			copyObj.arrRows[copyObj.arrRows.length] = obj.arrRows[i];
			copyObj.arrRowInfo[copyObj.arrRowInfo.length] = obj.arrRowInfo[i];
			copyObj.arrData[copyObj.arrData.length] = obj.arrData[i];
			copyObj.arrStatus[copyObj.arrStatus.length] = obj.arrStatus[i];
			if(obj.arrMulti) copyObj.arrMulti[copyObj.arrMulti.length] = '';
			for(var j=0; j<obj.arrField.length; j++)
			{
				var sField = obj.arrField[j];
				if(arrColumn.length>0 && arrColumn.isearch(sField)<0) continue;
				if(!copyObj.arrData[sField])
				{
					copyObj.arrField[copyObj.arrField.length] = obj.arrField[j];
					copyObj.arrFieldType[copyObj.arrFieldType.length] = obj.arrFieldType[j];
					copyObj.arrData[sField] = [];
				}
				if(!copyObj.arrStatus[sField]) copyObj.arrStatus[sField] = [];
				copyObj.arrData[sField][copyObj.arrData[sField].length] = obj.arrData[sField][i];
				copyObj.arrStatus[sField][copyObj.arrStatus[sField].length] = '';
			}
		}
		if(!copyObj.IsProc()) copyObj.Display();
	},
	this.CopyObject = function()
	{
		let orgObj = arguments[0];
		let newObjId = arguments[1];
		let nLeft = arguments[2];
		let nTop = arguments[3];
		if(Webcrea.IsString(orgObj)) orgObj = Webcrea.GetObjectById(orgObj);
		if(!orgObj) return;
		if(!Webcrea.IsEmpty(newObjId) && Webcrea.IsNumberType(newObjId))
		{
			newObjId = '';
			nLeft = arguments[1];
			nTop = arguments[2];
		}
		let orgObjId = orgObj.divPos;
		if(Webcrea.IsEmpty(newObjId))
		{
			let orgId = orgObjId;
			let orgSeq = '';
			for(let i=orgId.length-1; i>=0; i--)
			{
				if(!Webcrea.IsNumber(orgId[i]))
				{
					if(i+1<orgId.length)
					{
						orgSeq = orgId.substr(i+1);
						orgSeq = Number(orgSeq);
						orgId = orgId.substr(0, i+1);
					}
					break;
				}
			}
			if(Webcrea.IsEmpty(orgSeq)) orgSeq = 1;
			else orgSeq++;
			let newId = orgId + orgSeq;
			let findObj = Webcrea.GetObjectById(newId);
			while(findObj)
			{
				orgSeq++;
				newId = orgId + orgSeq;
				findObj = Webcrea.GetObjectById(newId);
			}
			newObjId = newId;
		}
		let createDiv = orgObj.objGDivPosOrg?orgObj.objGDivPosOrg.cloneNode(true):orgObj.objDivPosOrg.cloneNode(true);
		let SetId = function()
		{
			let node = arguments[0];
			let nodeId = node.getAttribute('id');
			if(nodeId)
			{
				nodeId = nodeId.replace(orgObjId, newObjId);
				node.setAttribute('id', nodeId);
			}
			let nodePid = node.getAttribute('pid');
			if(nodePid)
			{
				nodePid = nodePid.replace(orgObjId, newObjId);
				node.setAttribute('pid', nodePid);
			}
			var children = node.children;
			for(let i=0; i<children.length; i++)
			{
				var subNode = children[i];
				let subNodeId = subNode.getAttribute('id');
				if(subNodeId)
				{
					subNodeId = subNodeId.replace(orgObjId, newObjId);
					subNode.setAttribute('id', subNodeId);
				}
				let subNodePid = subNode.getAttribute('pid');
				if(subNodePid)
				{
					subNodePid = subNodePid.replace(orgObjId, newObjId);
					subNode.setAttribute('pid', subNodePid);
				}
				SetId(subNode);
			}
		};
		SetId(createDiv);
		let SetCSS = function()
		{
			let orgCssId = arguments[0];
			let newCssId = arguments[1];
			let orgObjCss = Webcrea.GetCSS(orgCssId);
			if(!orgObjCss) return;
			let newObjCss = Webcrea.CreateCSS(newCssId);
			newObjCss.style.cssText = orgObjCss.style.cssText;
			return newObjCss;
		};
		let orgCssId = '#' + orgObj.divPage + ' #' + orgObj.divPos;
		let newCssId = '#' + orgObj.divPage + ' #' + newObjId;
		let newObjCss = SetCSS(orgCssId, newCssId);
		if(Webcrea.IsGrid(orgObj))
		{
			let orgCssIdGroup = orgCssId + 'Group';
			let newCssIdGroup = newCssId + 'Group';
			let newObjCssGroup = SetCSS(orgCssIdGroup, newCssIdGroup);
			if(nLeft) newObjCssGroup.style.left = nLeft + 'px';
			if(nTop) newObjCssGroup.style.top = nTop + 'px';

			let orgCssIdH = orgCssId + 'H';
			let newCssIdH = newCssId + 'H';
			SetCSS(orgCssIdH, newCssIdH);
		}
		else
		{
			if(nLeft) newObjCss.style.left = nLeft + 'px';
			if(nTop) newObjCss.style.top = nTop + 'px';
		}
		createDiv.style.position = 'absolute';
		orgObj.objDivPage.appendChild(createDiv);

		var objName = '_my_' + orgObj.divPage + '_' + newObjId;
		var objExe = "new FormObject('" + orgObj.divPage + "','" + newObjId + "'," + orgObj.objType + ",'" + orgObjId + "');";
		eval(objName + '=' + objExe);
		eval(objName).objName = objName;
		eval(objName).bQuery = orgObj.bQuery;
		eval(objName).Init();
		eval(objName).sDBID = orgObj.sDBID;
		let newObj = eval(objName);
		if(newObj)
		{
			let bShow = orgObj.IsVisible();
			let bShowNew = newObj.IsVisible();
			if(bShow && !bShowNew) newObj.Show();
			newObj.CopyInfo(orgObj);
			if(!this.arrCopyObject) this.arrCopyObject = [];
			this.arrCopyObject[this.arrCopyObject.length] = newObj;
			_NEWID_ = newObjId;
		}
	},
	this.Export = function(param)
	{
		var arr = param.split(',');
		var sFile='';
		var sOpt='';
		var arrObj=[];
		var arrSheet=[];
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			if(i==0)
			{
				if(Webcrea.IsQuote(sParam)) sFile = sParam;
				else try{ sFile = eval(sParam); }catch(e){}
			}
			else
			{
				var sObj='';
				var sSheet='Export';
				var n = sParam.indexOf('=');
				if(n>0)
				{
					sObj = sParam.substr(0, n);
					sObj = sObj.trim();
					if(sObj.toLowerCase() == 'exclude') sObj='', n=-1;
					else
					{
						sSheet = sParam.substr(n+1, sParam.length-n);
						sSheet = this.RemoveQuote(sSheet);
					}
				}
				else sObj = sParam;
				var obj = this.IsEmpty(sObj)?null:this.GetObjectById(sObj);
				if(obj)
				{
					arrObj[arrObj.length] = obj;
					arrSheet[arrSheet.length] = sSheet;
				}
				else if(n<0)
				{
					sParam = this.RemoveQuote(sParam);
					sOpt = sOpt + ",'" + sParam + "'";
				}
			}
		}
		if(this.IsEmpty(sFile)) return;
		if(arrObj.length<1) return;
		sFile = this.RemoveQuote(sFile);
		var sFunc='';
		var sExt = '';
		var nExt = sFile.lastIndexOf('.');
		if(nExt>0) sExt = sFile.substr(nExt+1);
		if(sExt.indexOf('xlsx')>=0) sFunc = 'ExcelJsZip(sFile, arrObj, arrSheet' + sOpt + ');';
		else  sFunc = 'ExportExcel(sFile, arrObj, arrSheet' + sOpt + ');';
		eval(sFunc);
	},
	this.Hide = function(param)
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var nPane = Webcrea.GetMDIPane(sParam);
			if(nPane>=0)
			{
				try { if(parent && parent.Webcrea.IsMDI()) parent._my_FileMDI.PaneShow(nPane, true); } catch(e) {}
			}
			else
			{
				var arrSub = sParam.split('.');
				var cellId = '';
				if(arrSub.length == 2) cellId = arrSub[1];
				var sObj = arrSub[0];
				var obj = Webcrea.GetObjectById(sObj);
				if(obj) obj.Hide(cellId);
			}
		}
	},
	this.HideColumn = function()
	{
		var obj = arguments[0];
		var param = arguments[1];
		if(Webcrea.IsAmpObject(obj)) obj = obj.obj;
		else if(Webcrea.IsString(obj)) obj = Webcrea.GetObjectById(obj);
		var arrParam = Webcrea.MakeToken(param, -1, false);
		var sendParam = '';
		for(var i=0; i<arrParam.length; i++)
		{
			var s = arrParam[i];
			s = s.trim();
			if(s[0] == '&')
			{
				var sData = '';
				var sItem = s.substr(1);
				if(Webcrea.IsFuncInnerVal(sItem)) sData=Webcrea.GetFuncInnerVal(sItem);
				else try{sData = eval(sItem);}catch(e){continue;};
				s = sData;
			}
			sendParam += s;
		}
		obj.HideColumn(sendParam);
	},
	this.Layout = function(param)
	{
		if(this.bSetLayout) return;
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var n = sParam.indexOf('=');
			if(n<0) continue;
			var sObj = sParam.substr(n+1, sParam.length-n);
			var sOpt = sParam.substr(0, n).toLowerCase();
			var arrObj = sObj.split(' ');
			if(sOpt == 'horz' || sOpt == 'vert')
			{
				for(var j=0; j<arrObj.length; j++)
				{
					var obj = eval(arrObj[j]);
					if(sOpt == 'horz') obj.layoutOpt.bHorz = true;
					else if(sOpt == 'vert') obj.layoutOpt.bVert = true;
				}
			}
			else if(sOpt == 'hgap' || sOpt == 'vgap')
			{
				if(arrObj.length<2) continue;
				var objStart = eval(arrObj[0]);
				for(var j=1; j<arrObj.length; j++)
				{
					var obj = eval(arrObj[j]);
					if(sOpt == 'hgap')
					{
						if(j>1) objStart = eval(arrObj[j-1]);
						obj.layoutOpt.objHgap = objStart;
						if(!objStart.layoutOpt.nHgap) objStart.layoutOpt.nHgap = 1;
						objStart.layoutOpt.nHgap++;
					}
					else if(sOpt == 'vgap')
					{
						if(j>1) objStart = eval(arrObj[j-1]);
						obj.layoutOpt.objVgap = objStart;
						if(!objStart.layoutOpt.nVgap) objStart.layoutOpt.nVgap = 1;
						objStart.layoutOpt.nVgap++;
					}
				}
			}
			else if(sOpt == 'left' || sOpt == 'top' || sOpt == 'right' || sOpt == 'bottom' || sOpt == 'width' || sOpt == 'height')
			{
				if(arrObj.length<2) continue;
				var objTarget = eval(arrObj[0]);
				for(var j=1; j<arrObj.length; j++)
				{
					var obj = eval(arrObj[j]);
					if(sOpt == 'left')
					{
						obj.layoutOpt.objLeft = objTarget;
						obj.layoutOpt.bRight = true;
					}
					else if(sOpt == 'top')
					{
						obj.layoutOpt.objTop = objTarget;
						obj.layoutOpt.bBottom = true;
					}
					else if(sOpt == 'right')
					{
						obj.layoutOpt.objRight = objTarget;
						obj.layoutOpt.bHorz = true;
					}
					else if(sOpt == 'bottom')
					{
						obj.layoutOpt.objBottom = objTarget;
						obj.layoutOpt.bVert = true;
					}
					else if(sOpt == 'width')
					{
						obj.layoutOpt.objWidth = objTarget;
						obj.layoutOpt.bHorz = true;
					}
					else if(sOpt == 'height')
					{
						obj.layoutOpt.objHeight = objTarget;
						obj.layoutOpt.bVert = true;
						objTarget.layoutOpt.objRelHeight = obj;
					}
				}
			}
		}
		this.bSetLayout = true;
	},
	this.LineStyle = function()
	{
		var param = arguments[0];
		var currObj = arguments[1];
		var nType = arguments[2];
		var sRgb = '';
		if(nType == 0)
		{
			if(param.indexOf('RGB(')==0)
			{
				var n = param.indexOf(')');
				sRgb = param.substr(0, n+1);
				param = 'rgb ' + param.substr(n+1);
			}
		}
		var arrItems = param.split(',');
		var dir = '';
		var opt = '';
		var arrOpt = arrItems[0].split(' ');
		for(var i=0; i<arrOpt.length; i++)
		{
			arrOpt[i] = arrOpt[i].trim();
			if(Webcrea.IsEmpty(arrOpt[i]))
			{
				arrOpt.splice(i, 1);
				i--;
			}
		}
		if(arrItems.length==1) arrItems.splice(0, 1);
		if(arrItems.length>1)
		{
			arrItems[0] = arrOpt[arrOpt.length-1];
			arrOpt.splice(arrOpt.length-1, 1);
		}
		else if(arrOpt.length>1)
		{
			var lastParam = arrOpt[arrOpt.length-1];
			if(lastParam == 'left' || lastParam == 'top' || lastParam == 'right' || lastParam == 'bottom' || lastParam == 'inner') dir = lastParam;
			else
			{
				arrItems[0] = arrOpt[arrOpt.length-1];
				arrOpt.splice(arrOpt.length-1, 1);
			}
		}
		var style = arrOpt[0].toLowerCase();
		if(nType == 0)
		{
			if(!Webcrea.IsEmpty(sRgb)) style = sRgb;
		}
		else if(nType == 1)
		{
			if(style == 'dash') style = 'dashed';
			else if(style == 'dot') style = 'dotted';
		}
		if(arrOpt.length>1) dir = arrOpt[1];

		var SetStyle = function(node, nSeq)
		{
			var prevNode = node.previousElementSibling;
			var nextNode = node.nextElementSibling;
			if(nType == 0)
			{
				if(Webcrea.IsEmpty(dir)) node.style.borderColor = style;
				else if(dir == 'left') node.style.borderLeftColor = style;
				else if(dir == 'top') node.style.borderTopColor = style;
				else if(dir == 'right') node.style.borderRightColor = style;
				else if(dir == 'bottom') node.style.borderBottomColor = style;
			}
			else if(nType == 1)
			{
				var nHeightOrg = Webcrea.GetHeight(node, true);
				if(Webcrea.IsEmpty(dir)) node.style.borderStyle = style;
				else if(dir == 'left') node.style.borderLeftStyle = style;
				else if(dir == 'top') node.style.borderTopStyle = style;
				else if(dir == 'right') node.style.borderRightStyle = style;
				else if(dir == 'bottom') node.style.borderBottomStyle = style;
				if(currObj.IsGrid() && style=='none' && (Webcrea.IsEmpty(dir) || dir == 'top' || dir == 'bottom'))
				{
					var tdClass = node.getAttribute('class');
					var css = Webcrea.GetCSS('.'+tdClass);
					var nAdjust = 0;
					if(dir == 'top') nAdjust = Number(Extract(css.style.borderTopWidth, '[DIGIT]'));
					else if(dir == 'bottom') nAdjust = Number(Extract(css.style.borderBottomWidth, '[DIGIT]'));
					else
					{
						nAdjust = Number(Extract(css.style.borderTopWidth, '[DIGIT]'));
						if(nAdjust == 0) nAdjust = Number(Extract(css.style.borderBottomWidth, '[DIGIT]'));
					}
					var nHeight = Webcrea.GetHeight(node, true);
					var diff = nDiff = nAdjust - (nHeight - nHeightOrg) - 1;
					if(prevNode && nSeq>0)
					{
						var nPrevHeight = Webcrea.GetHeight(node, true);
						diff = nPrevHeight - nHeight;
					}
					if(nDiff>0)
					{
						var nHeight = Webcrea.GetHeight(node, true);
						node.style.height = nHeight + nDiff + 'px';
						var children = node.children;
						for(var k=0; k<children.length; k++)
						{
							var subNode = children[k];
							if(subNode.tagName == 'INPUT' && (subNode.type == 'checkbox' || subNode.type == 'radio')) continue;
							var nSubHeight = Webcrea.GetHeight(subNode, true);
							subNode.style.height = nSubHeight + nDiff + 'px';
						}
					}
				}
			}
			else if(nType == 2)
			{
				if(Webcrea.IsEmpty(dir)) node.style.borderWidth = style + 'px';
				else if(dir == 'left') node.style.borderLeftWidth = style + 'px';
				else if(dir == 'top') node.style.borderTopWidth = style + 'px';
				else if(dir == 'right') node.style.borderRightWidth = style + 'px';
				else if(dir == 'bottom') node.style.borderBottomWidth = style + 'px';
				if(currObj.IsGrid() && style>0 && (Webcrea.IsEmpty(dir) || dir == 'top' || dir == 'bottom'))
				{
					var tdClass = node.getAttribute('class');
					var css = Webcrea.GetCSS('.'+tdClass);
					var nAdjust = 0;
					if(dir == 'top') nAdjust = Number(Extract(css.style.borderTopWidth, '[DIGIT]'));
					else if(dir == 'bottom') nAdjust = Number(Extract(css.style.borderBottomWidth, '[DIGIT]'));
					else
					{
						nAdjust = Number(Extract(css.style.borderTopWidth, '[DIGIT]'));
						if(nAdjust == 0) nAdjust = Number(Extract(css.style.borderBottomWidth, '[DIGIT]'));
					}
					var nDiff = style - nAdjust;
					if(nDiff>0)
					{
						var nHeight = Webcrea.GetHeight(node, true);
						node.style.height = nHeight - nDiff + 'px';
						var children = node.children;
						for(var k=0; k<children.length; k++)
						{
							var subNode = children[k];
							if(subNode.tagName == 'INPUT' && (subNode.type == 'checkbox' || subNode.type == 'radio')) continue;
							var nSubHeight = Webcrea.GetHeight(subNode, true);
							subNode.style.height = nSubHeight - nDiff + 'px';
						}
					}
				}
				if(currObj.IsGrid() && style>0 && !nextNode && !currObj.bLineWidthAdjust && (Webcrea.IsEmpty(dir) || dir == 'right'))
				{
					var tdClass = node.getAttribute('class');
					var css = Webcrea.GetCSS('.'+tdClass);
					var nAdjust = 0;
					if(dir == 'right') nAdjust = Number(Extract(css.style.borderRightWidth, '[DIGIT]'));
					var nDiff = style - nAdjust;
					if(nDiff>0)
					{
						var nDivWidth = Webcrea.GetWidth(currObj.objDivPos, true);
						currObj.objDivPos.style.width = nDivWidth + nDiff + 'px' ;
						currObj.initDivWidth += nDiff;
						currObj.initAllColWidth += nDiff;
						currObj.bLineWidthAdjust = true;
					}
				}
			}
		};
		var nSeq = 0;
		if(arrItems.length>0)
		{
			for(var i=0; i<arrItems.length; i++)
			{
				var item = arrItems[i].trim();
				var cell = currObj.GetCellNode(item);
				if(!cell) continue;
				var tdNode = Webcrea.FindParentNode(cell, 'name', 'TD');
				if(tdNode)
				{
					SetStyle(tdNode, nSeq);
					nSeq++;
				}
			}
		}
		else
		{
			var tagetPos = currObj.objTable;
			if(currObj.IsGrid())
			{
				var rowId = currObj.currRowIndex;
				rowId += currObj.nHeader;
				tagetPos = currObj.objTable.rows[rowId];
			}
			var childNodes = tagetPos.childNodes;
			for(var j=0; j<childNodes.length; j++)
			{
				var node = childNodes[j];
				if (node.nodeName == 'TD')
				{
					SetStyle(node, nSeq);
					nSeq++;
				}
			}
		}
	},
	this.RemoveColumn = function()
	{
		var obj = arguments[0];
		var param = arguments[1];
		if(Webcrea.IsAmpObject(obj)) obj = obj.obj;
		else if(Webcrea.IsString(obj)) obj = Webcrea.GetObjectById(obj);
		var arrParam = Webcrea.MakeToken(param, -1, false);
		var sendParam = '';
		for(var i=0; i<arrParam.length; i++)
		{
			var s = arrParam[i];
			s = s.trim();
			if(s[0] == '&')
			{
				var sData = '';
				var sItem = s.substr(1);
				if(Webcrea.IsFuncInnerVal(sItem)) sData=Webcrea.GetFuncInnerVal(sItem);
				else try{sData = eval(sItem);}catch(e){continue;};
				s = sData;
			}
			sendParam += s;
		}
		obj.RemoveColumn(sendParam);
	},
	this.RemoveObject = function()
	{
		let param = arguments[0];
		let arrRemoveObject = [];
		if(Webcrea.IsEmpty(param))
		{
			if(!this.arrCopyObject) return;
			arrRemoveObject = this.arrCopyObject;
		}
		else
		{
			let obj = Webcrea.GetObjectById(param);
			if(!obj) return;
			arrRemoveObject[arrRemoveObject.length] = obj;
		}
		for(let i=0; i<arrRemoveObject.length; i++)
		{
			let obj = arrRemoveObject[i];
			obj.Clear();
			if(obj.pageObj) obj.pageObj.RemoveObject(obj);
			let objDivNode = obj.objGDivPos?obj.objGDivPos:obj.objDivPos;
			obj.objDivPage.removeChild(objDivNode);
		}
		if(Webcrea.IsEmpty(param)) this.arrCopyObject = [];
	},
	this.ReParamBySp = function()
	{
		var param = arguments[0];
		var sQuote = '';
		if(Webcrea.IsQuote(param))
		{
			sQuote = param[0];
			param = Webcrea.RemoveQuote(param);
		}
		var arrParam = Webcrea.MakeToken(param, -1, true);
		for(var i=0; i<arrParam.length; i++)
		{
			var s = arrParam[i];
			if(i>0)
			{
				if(Webcrea.IsEmpty(arrParam[i-1].trim()) && Webcrea.IsEmpty(arrParam[i].trim()))
				{
					arrParam.splice(i, 1);
					i--;
				}
				else if(Webcrea.IsEmpty(arrParam[i-1].trim()) && arrParam[i] == ',')
				{
					arrParam.splice(i-1, 1);
					i--;
				}
				else if(Webcrea.IsEmpty(arrParam[i].trim()) && arrParam[i-1] == ',')
				{
					arrParam.splice(i, 1);
					i--;
				}
			}
		}
		var reParam = '';
		for(var i=0; i<arrParam.length; i++) reParam += arrParam[i];
		if(!Webcrea.IsEmpty(sQuote)) reParam = sQuote + reParam + sQuote;
		return reParam;
	},
	this.ResetTextDB = function()
	{
		var sParam = arguments[0];
		if(Webcrea.IsEmpty(sParam)) return;
		var arr = sParam.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sTable = arr[i];
			sTable = sTable.trim();
			var obj = Webcrea.GetObjectById(sTable);
			if(obj && obj.bMultiData) obj.ClearRecordSet(true);
		}
	},
	this.SendData = function(param, target)
	{
		if(!param) return;
		param = param.toLowerCase();
		let bParent = false;
		if(window.parent && (Win.IsLayerFile() || Webcrea.IsParentFrame())) bParent = true;
		if(param == 'toparent' && (window.opener || bParent))
		{
			this.OnSendParam(window);
			if(window.opener)
			{
				try{
					window.opener.Webcrea.OnData();
				}catch(e){
					try{window.opener.Webcrea.ErrorTrace(e);}catch(e){}
				}
			}
			else
			{
				try{
					var parentObj='';
					if(window.parent.Webcrea.IsMDI())
					{
						parentObj=window.parent.Webcrea.paneWindow;
					}
					else parentObj=window.parent;
					parentObj.Webcrea.OnData();
				}catch(e){
					try{window.parent.Webcrea.ErrorTrace(e);}catch(e){}
				}
			}
		}
		else if(param == 'tome')
		{
			this.OnSendParam(param);
			Webcrea.OnData();
		}
		else if(Webcrea.GetMDIPane(param)>=0 || param == 'toall' || param == 'workwindow')
		{
			try {
				if(window.parent && window.parent.Webcrea.IsMDI())
				{
					window.parent.Webcrea.RemoveParam();
					window.parent.Webcrea.arrParam = this.arrParam;
					window.parent.Webcrea.arrParamValue = this.arrParamValue;
					window.parent._my_FileMDI.PaneSendData(param, true, false, target);
				}
				else if(param == 'toall' || param == 'workwindow')
				{
					if(param == 'toall' && window.opener)
					{
						this.OnSendParam(window);
						try{ window.opener.Webcrea.OnData(); }catch(e){}
					}
					else if(param == 'toall' && window.parent && window.parent._my_File != _my_File)
					{
						this.OnSendParam(window);
						try{ window.parent.Webcrea.OnData(); }catch(e){}
					}
					this.OnSendParam('tome');
					Webcrea.OnData();
				}
			} catch(e) {}
		}
	},
	this.Sleep = function($msecs)
	{
		let msecs = arguments[0];
		let bSec = arguments[1];
		if(bSec) msecs *= 1000;
		var start = new Date().getTime();
		var cur = start;
		while(cur - start < msecs)
		{
			cur = new Date().getTime();
		}
	},
	this.CallFunc = function()
	{
		var ___param = {};
		___param.id = arguments[0];
		___param.func = arguments[1];
		___param.param = arguments[2];
		if(Webcrea.IsEmpty(___param.id)) return;
		if(Webcrea.IsEmpty(___param.func)) return;
		var currObj = Webcrea.GetObjectById(___param.id);
		if(!currObj) return;
		if(!currObj.IsHtml()) return;
		return currObj.CallFunc(___param.func, ___param.param);
	},
	this.RowSize = function()
	{
		if(arguments.length<2) return;
		var ___param = {};
		___param.obj = arguments[0];
		___param.param = arguments[1];

		var bFix = false;
		var nSize = 0;
		var arr = ___param.param.split(' ');
		for(var i=0; i<arr.length; i++)
		{
			if(arr[i].toLowerCase() == 'fix') bFix = true;
			else
			{
				if(IsDigit(arr[i])) nSize = Number(arr[i]);
				else nSize = window[arr[i]];
			}
		}
		if(bFix && ___param.obj.arrRows.length < nSize)
		{
			var add = nSize - ___param.obj.arrRows.length;
			for(var i=0; i<add; i++)
			{
				var sRow='';
				for(var j=0; j<___param.obj.arrField.length; j++)
				{
					var s='';
					if(___param.obj.arrFieldType[j]) s=0;
					___param.obj.arrData[___param.obj.arrField[j]].push(s);
					if(j==0) sRow = s;
					else sRow = sRow + Webcrea.msvSpColType + s;
				}
				if(i==0) ___param.obj.arrRows[___param.obj.arrRows.length-1] = ___param.obj.arrRows[___param.obj.arrRows.length-1] + Webcrea.msvSpRowType;
				if(i != add-1) sRow += Webcrea.msvSpRowType;
				___param.obj.arrRows.push(sRow);
			}
		}
		else
		{
			for(var i=0; i<___param.obj.arrRows.length; i++)
			{
				if(i >= nSize)
				{
					var del = ___param.obj.arrRows.length-i;
					if(___param.obj.arrMulti && ___param.obj.arrMulti.length==___param.obj.arrRows.length) ___param.obj.arrMulti.splice(i, del);
					___param.obj.arrRows.splice(i, del);
					for(var j=0; j<___param.obj.arrField.length; j++) ___param.obj.arrData[___param.obj.arrField[j]].splice(i, del);
					break;
				}
			}
		}
	},
	this.ClearCookie = function()
	{
		var cookieName = arguments[0];
		var bDecodeURI = arguments[1];
		if(Webcrea.IsEmpty(cookieName)) return;
		if(bDecodeURI) cookieName = decodeURI(cookieName);
		document.cookie = cookieName + "= ''";
	},
	this.GetCookie = function()
	{
		var cookieName = arguments[0];
		var bDecodeURI = arguments[1];
		if(Webcrea.IsEmpty(cookieName)) return;
		var cookieValue = '';
		if(bDecodeURI) cookieName = decodeURI(cookieName);
		var posName = document.cookie.indexOf(escape(cookieName) + '=');
		if (posName >= 0)
		{
			var posValue = posName + (escape(cookieName) + '=').length;
			var endPos = document.cookie.indexOf(';', posValue);
			if (endPos >= 0) cookieValue = document.cookie.substring(posValue, endPos);
			else cookieValue = document.cookie.substring(posValue);
		}
		if(bDecodeURI) cookieValue = decodeURI(cookieValue);
		return unescape(cookieValue);
	},
	this.SetCookie = function()
	{
		var cookieName = arguments[0];
		var cookieValue = arguments[1];
		var expires = arguments[2];
		var path = arguments[3];
		var domain = arguments[4];
		var secure = arguments[5];
		var bEncodeURI = arguments[6];
		if(expires && !(expires instanceof Date) && !isNaN(expires.valueOf()))
		{
			var now= new Date();
			expires =new Date(now.getTime() + expires * 60 * 60 * 24*1000);
		}
		if(bEncodeURI)
		{
			cookieName = encodeURI(cookieName);
			cookieValue = encodeURI(cookieValue);
		}
		document.cookie = escape(cookieName) + '=' + escape(cookieValue)
			+ (expires ? '; expires=' + expires.toGMTString() : '')
			+ (path ? '; path=' + path : '')
			+ (domain ? '; domain=' + domain : '') 
			+ (secure ? '; secure' : '');
	},
	this.GetMobileLandscape = function()
	{
		let bLandscape = false;
		if(window && (window.orientation==90 || window.orientation==270 || window.orientation==-90)) bLandscape = true;
		return bLandscape;
	},
	this.GetMobileLayout = function()
	{
		let winH = 0;
		let winW = 0;
		if(Webcrea.IsMobile())
		{
			winH = window.screen.height;
			winW = window.screen.width;
			if(Webcrea.IsIPhone() && Win.bLandscape && winH > winW)
			{
				winH = window.screen.width;
				winW = window.screen.height;
			}
		}
		else
		{
			winH = window.innerHeight;
			winW = window.innerWidth;
		}
		var currObj = arguments[0];
		var arrLayout = arguments[1];
		var baseLayout = null;
		if(Webcrea.IsMobile() && currObj.layoutOpt && currObj.layoutOpt.baseLayout && currObj.layoutOpt.bLandscape == Win.bLandscape)
		{
			arrLayout = currObj.layoutOpt.arrLayout;
			return true;
		}
		for(var i=0; i<currObj.arrMobileLayout.length; i++)
		{
			var objLayout = currObj.arrMobileLayout[i];
			nDiff = winW - objLayout.screenWidth;
			if(!baseLayout) 
			{
				baseLayout = objLayout;
				nDiff_b = nDiff;
			}
			else
			{
				let bChg = false;
				if(nDiff>0 && nDiff_b<0) bChg = true;
				if(!bChg)
				{
					if(Math.abs(nDiff) < Math.abs(nDiff_b))	bChg = true;
					else if(nDiff == nDiff_b && objLayout.screenHeight < baseLayout.screenHeight) bChg = true;
				}
				if(nDiff<0 && nDiff_b>0) bChg = false;
				if(bChg)
				{
					nDiff_b = nDiff;
					baseLayout = objLayout;
				}
			}
			if(!Webcrea.bMobileLayout && !Webcrea.IsMobile() && i==currObj.arrMobileLayout.length-1)
			{
				nDiff = winW - _my_File.minWidth;
				if(nDiff<0) continue;
				if(Math.abs(nDiff) < Math.abs(nDiff_b))
				{
					nDiff_b = nDiff;
					baseLayout = null;
					currObj.layoutOpt = {};
					currObj.layoutOpt.baseLayout = baseLayout;
					currObj.layoutOpt.bLandscape = Win.bLandscape;
					currObj.layoutOpt.arrLayout = arrLayout;
				}
			}
		}
		if(!baseLayout) return false;
		for(var i=0; i<currObj.arrMobileLayout.length; i++)
		{
			var objLayout = currObj.arrMobileLayout[i];
			if(objLayout.screenHeight == baseLayout.screenHeight && objLayout.screenWidth == baseLayout.screenWidth) arrLayout[arrLayout.length] = objLayout;
		}
		for(var i=0; i<currObj.arrMobileCellLayout.length; i++)
		{
			var objLayout = currObj.arrMobileCellLayout[i];
			if(objLayout.screenHeight == baseLayout.screenHeight && objLayout.screenWidth == baseLayout.screenWidth) arrLayout[arrLayout.length] = objLayout;
		}
		currObj.layoutOpt = {};
		currObj.layoutOpt.baseLayout = baseLayout;
		currObj.layoutOpt.bLandscape = Win.bLandscape;
		currObj.layoutOpt.arrLayout = arrLayout;
		var viewPort = document.querySelector('meta[name=viewport]');
		if(viewPort && !Webcrea.IsDeviceWidthMode())
		{
			var sScale = '';
			if(baseLayout)
			{
				var scale = winW/arrLayout[0].screenWidth;
				sScale = ',initial-scale=' + scale;
			}
			var content = 'width='+arrLayout[0].screenWidth+',maximum-scale=' + WebcreaInfo.mobileMaxScale;
			var n = content.indexOf(',initial-scale');
			if(n>0) content = content.substr(0,n);
			content += sScale;
			viewport.setAttribute('content', content);
		}
		return true;
	},
	this.SetFocus = function(param)
	{
		if(Webcrea.IsAmpObject(param))
		{
			var paramObj = param;
			if(!Webcrea.IsForm(paramObj.obj) && !Webcrea.IsGrid(paramObj.obj)) return;
			paramObj.obj.SetFocus(paramObj.cellId);
			return;
		}
		else if(Webcrea.IsObject(param))
		{
			param.SetFocus();
			return;
		}
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var arrSub = sParam.split('.');
			var cellId = '';
			if(arrSub.length == 2) cellId = arrSub[1];
			var sObj = arrSub[0];
			var obj = Webcrea.GetObjectById(sObj);
			if(obj && (typeof obj.Clear != 'undefined')) obj.SetFocus(cellId);
		}
	},
	this.SetLanguage = function()
	{
		App.SetValue('_my_Language', arguments[0]);
		WebcreaInfo.Language = arguments[0];
	},
	this.SetMobileLayout = function()
	{
		var type = arguments[0];
		var top = arguments[1];
		var left = arguments[2];
		var width = arguments[3];
		var height = arguments[4];
		var cellid = arguments[5];
		var screenWidth = arguments[6];
		var screenHeight = arguments[7];
		var currObj = arguments[arguments.length-1];
		var bHide = false;
		if(arguments.length>9)
		{
			bHide = arguments[8];
		}
		var screenMode = 'H';
		if(screenWidth>screenHeight) screenMode = 'W';
		var mobileLayout = function()
		{
			this.type = type;
			this.top = top;
			this.left = left;
			this.width = width;
			this.height = height;
			this.cellid = cellid;
			this.screenWidth = screenWidth;
			this.screenHeight = screenHeight;
			this.screenWidth = screenWidth;
			this.screenMode = screenMode;
			this.bHide = bHide;
		};
		if(type) currObj.arrMobileCellLayout[currObj.arrMobileCellLayout.length] = new mobileLayout();
		else currObj.arrMobileLayout[currObj.arrMobileLayout.length] = new mobileLayout();
	},
	this.SetInitRecord = function()
	{
		var obj = arguments[0];
		var bClear = arguments[1];
		if(bClear)
		{
			obj.arrRows_Org = [];
			obj.arrField_Org = [];
			obj.arrFieldType_Org = [];
			obj.arrData_Org = [];
		}
		else
		{
			obj.arrRows_Org = obj.arrRows.slice();
			obj.arrField_Org = obj.arrField.slice();
			obj.arrFieldType_Org = obj.arrFieldType.slice();
			obj.arrData_Org = obj.arrData.slice();
			for(var i=0; i<obj.arrField.length; i++)
			{
				var field = obj.arrField[i];
				if(obj.arrData[field]) obj.arrData_Org[field] = obj.arrData[field].slice();
			}
		}
	},
	this.SetRecoveryRecord = function()
	{
		var obj = arguments[0];
		obj.arrRows = obj.arrRows_Org.slice();
		obj.arrData = obj.arrData_Org.slice();
		for(var i=0; i<obj.arrField.length; i++)
		{
			var field = obj.arrField[i];
			if(obj.arrData_Org[field]) obj.arrData[field] = obj.arrData_Org[field].slice();
		}
	},
	this.SetValue = function()
	{
		var ___param = {};
		___param.id = arguments[0];
		___param.value = arguments[1];
		___param.rowId = arguments[2];
		if(Webcrea.IsEmpty(___param.id)) return;
		var arr = ___param.id.split('.');
		if(arr.length<2) return;
		___param.id = arr[0];
		___param.cellId = arr[1];
		var currObj = Webcrea.GetObjectById(___param.id);
		if(!currObj) return;
		currObj.SetValue(___param.cellId, ___param.value, ___param.rowId);
	},
	this.SumAdjust = function()
	{
		var param1 = arguments[0];
		var param2 = arguments[1];
		var sum = param1 + param2;

		var sNumber = sum;
		if(Webcrea.IsNumber(sNumber)) sNumber = sNumber.toString();
		var n = sNumber.indexOf('.');
		if (n < 1) return sum;
		var sumDecimal = sNumber.substr(n+1);
		sNumber = sNumber.substr(0, n);
		if(sumDecimal.length<5) return sum;

		var sNumber1 = param1;
		if(Webcrea.IsNumber(sNumber1)) sNumber1 = sNumber1.toString();
		var n1 = sNumber1.indexOf('.');
		var sNumber2 = param2;
		if(Webcrea.IsNumber(sNumber2)) sNumber2 = sNumber2.toString();
		var n2 = sNumber2.indexOf('.');
		if (n1 < 1 && n2 < 1) return sum;

		var maxDecimalLen = n1>n2?n1:n2;
		if(sumDecimal.length<=maxDecimalLen) return sum;

		sum = Webcrea.NumberReDef(sum).toFixed(maxDecimalLen);
		return Webcrea.NumberReDef(sum);
	},
	this.SyncData = function()
	{
		var obj = arguments[0];
		if(Webcrea.IsAmpObject(obj)) obj = obj.obj;
		obj.SyncData();
	},
	this.Upload = function(sUrl, sForm, reName, bMultiName)
	{
		var ReturnFunc;
		var arrCellId = sForm.split('.');
		if(arrCellId.length == 2)
		{
			var obj = Webcrea.GetObjectById(arrCellId[0]);
			var cellId = obj.GetCellId(sForm);
			if(cellId && typeof window[obj.divPage][obj.divPos][cellId].OnFILEUPLOAD != 'undefined') ReturnFunc = window[obj.divPage][obj.divPos][cellId].OnFILEUPLOAD;
		}
		if(Webcrea.IsEmpty(ReturnFunc))
		{
			var currNode = Webcrea.GetEventNode();
			var obj = Webcrea.GetObject(currNode);
			if(obj)
			{
				var cellId = obj.GetCellId(currNode.id);
				if(cellId && typeof window[obj.divPage][obj.divPos][cellId].OnFILEUPLOAD != 'undefined') ReturnFunc = window[obj.divPage][obj.divPos][cellId].OnFILEUPLOAD;
			}
		}
		if(sUrl.indexOf('{ServerIP}')>0) sFile = Webcrea.ReplaceAll(sUrl, '{ServerIP}', App.GetValue('ServerIP'));
		UploadHandler(sUrl, sForm, reName, bMultiName, ReturnFunc);
	},
	this.FileOpen = function(sForm, accept, bFileData, bMultiSelect)
	{
		Webcrea.SetSqlStatus('');
		if(!sForm) return;
		var arrObjId = sForm.split('.');
		if(arrObjId.length != 2) return;
		var objForm = Webcrea.GetObjectById(arrObjId[0]);
		if(!objForm) return;
		this.fileObject = objForm;
		this.fileObject.fileCell = arrObjId[1];
		Webcrea.bFileData = bFileData;
		Webcrea.bMultiSelect = bMultiSelect;

		var currNode = Webcrea.GetEventNode();
		var id = currNode.id+'.upload';
		var currObj = Webcrea.GetObject(currNode);
		var objParent = currNode;
		if(currObj && currObj.IsGrid()) objParent = currObj.objDivPos;
		var objFile = Webcrea.CreateObject('upload file', id, objParent);
		if(!Webcrea.IsEmpty(accept)) objFile.setAttribute('accept', accept);
		if(Webcrea.bMultiSelect) objFile.setAttribute('multiple', 'multiple');
		objFile.click();
	},
	this.MultiFileRead = function()
	{
		var evt = arguments[0];
		var seq = arguments[1];
		var currFileObj = Webcrea.arrMultiFile[seq];
		var file = currFileObj.file;
		var fileinfo = currFileObj.fileinfo;
		var info = currFileObj.info;
		var objCell = currFileObj.objCell;
		var fileReader = new FileReader();
		fileReader.onload = function (evt)
		{
			if(Webcrea.bFileData)
			{
				if(!Webcrea.fileObject.arrRows && Webcrea.fileObject.bQuery) Webcrea.fileObject.Refresh();
				var bAppend = true;
				if(Webcrea.fileObject.arrRows) bAppend = !Webcrea.fileObject.arrRows.length?true:false;
				if(Webcrea.fileObject.IsGrid() || bAppend)
				{
					Webcrea.fileObject.ModifyRecordSet("Append count = 1, "+fileinfo);
				}
				else
				{
					Webcrea.fileObject.arrData['_my_filename'][0] = file.name;
					Webcrea.fileObject.arrData['_my_filesize'][0] = file.size;
					Webcrea.fileObject.arrData['_my_filetype'][0] = file.type;
					if(!Webcrea.fileObject.arrData[Webcrea.fileObject.fileCell])
					{
						var errMsg = Webcrea.LoadString('msgErrObject');
						errMsg = errMsg + '(' + Webcrea.fileObject.fileCell + ')';
						Webcrea.MsgBox(errMsg);
					}
					else Webcrea.fileObject.arrData[Webcrea.fileObject.fileCell][0] = info;
				}
				if(Webcrea.fileObject.IsColumn('_my_filedata'))
				{
					if(Webcrea.fileObject.IsGrid() || bAppend) Webcrea.fileObject.arrData['_my_filedata'][Webcrea.fileObject.arrData['_my_filedata'].length-1] = evt.target.result;
					else Webcrea.fileObject.arrData['_my_filedata'][0] = evt.target.result;
				}
				Webcrea.fileObject.SyncDataNotThread();
			}
			if((Webcrea.fileObject.IsForm() || Webcrea.fileObject.IsGrid()) && objCell.tagName && objCell.tagName.toLowerCase() == 'img')
			{
				if(Webcrea.fileObject.IsGrid()) Webcrea.fileObject.SetImage(Webcrea.fileObject.fileCell, file.name, '', '', evt.target.result, Webcrea.fileObject.arrRows.length-1);
				else Webcrea.fileObject.SetImage(Webcrea.fileObject.fileCell, file.name, '', '', evt.target.result);
			}
			Webcrea.nMultiFileReaded++;
			var per = Math.ceil(Webcrea.nMultiFileReaded/Webcrea.arrMultiFile.length*100);
			Webcrea.RunProgress(per);
		};
		fileReader.readAsDataURL(file);
	},
	this.MultiFileClose = function()
	{
		if(Webcrea.nMultiFileReaded == Webcrea.arrMultiFile.length)
		{
			Webcrea.arrMultiFile = [];
			clearInterval(Webcrea.multiFileIntervalId);
			Webcrea.FileSelectedClose();
			Webcrea.StopProgress();
			Webcrea.LockUI(false);
		}
	},
	this.MultiFileSelected = function()
	{
		Webcrea.nMultiFileReaded = 0;
		var nFileSeq = 0;
		Webcrea.arrMultiFile = [];
		var evt = arguments[0];
		var obj = arguments[1];
		var objCell = Webcrea.fileObject.GetCellInfo(Webcrea.fileObject.fileCell);
		if(!objCell) return;
		Webcrea.LockUI(true);
		Webcrea.StartProgress(1, obj.files.length);
		Webcrea.multiFileIntervalId = setInterval('Webcrea.MultiFileClose()', 500);
		for(var i=0;i<obj.files.length;i++)
		{
			var file=obj.files[i];
			if(!file) continue;
			var fileSize=0;
			if (file.size>1024*1024) fileSize=(Math.round(file.size*100/(1024*1024))/100).toString()+'MB';
			else fileSize = (Math.round(file.size*100/1024)/100).toString()+'KB';
			if(this.fileObject.IsGrid())
			{
				var bContinue = false;
				for(var j=0; j<objCell.arrFiles.length; j++)
				{
					if(objCell.arrFiles[j].name==file.name)
					{
						Webcrea.Trace(Webcrea.LoadString("msgDuplicate_file", '('+file.name+')'));
						bContinue = true;
						continue;
					}
				}
				if(bContinue) continue;
			}
			if(this.fileObject.IsGrid()) objCell.arrFiles[objCell.arrFiles.length] = file;
			else objCell.arrFiles[i] = file;

			var info = file.name+' ('+fileSize+')';
			var fileinfo = "_my_filename='"+file.name+"',_my_filesize='"+file.size+"',_my_filetype='"+file.type+"',"+this.fileObject.fileCell+"='"+info+"'";
			var fileObj = {};
			fileObj.file = file;
			fileObj.fileinfo = fileinfo;
			fileObj.info = info;
			fileObj.objCell = objCell;
			Webcrea.arrMultiFile[Webcrea.arrMultiFile.length] = fileObj;
			clearTimeout(Webcrea.multiFileTimeout);
			Webcrea.multiFileTimeout = setTimeout(Webcrea.MultiFileRead(evt, nFileSeq), 100);
			nFileSeq++;
		}
	},
	this.FileSelected = function()
	{
		var evt=window.event;
		var obj=Webcrea.GetEventNode(evt);
		if(!obj.files) return;
		Webcrea.DeleteObject(obj);
		var objCell = this.fileObject.GetCellInfo(this.fileObject.fileCell);
		if(!objCell) return;
		if(!this.fileObject.IsGrid() && objCell.arrFiles) objCell.arrFiles.clear();
		if(Webcrea.bMultiSelect && Webcrea.bFileData && (this.fileObject.IsForm() || this.fileObject.IsGrid()))
		{
			Webcrea.MultiFileSelected(evt, obj);
			return;
		}
		var bReturn = false;
		var fType=obj.getAttribute('accept');
		if(fType && WebcreaInfo.bFileTypeCheck)
		{
			var arr=split(fType,',');
			for(var i=0;i<obj.files.length; i++)
			{
				var fType=obj.files[i].type;
				var bOK = true;
				for(var j=0; j<arr.length; j++)
				{
					var aType = trim(arr[j]);
					if(aType.indexOf('/*')>0)
					{
						aType=split(aType,'/')[0];
						fType=split(fType,'/')[0];
					}
					if(aType == fType)
					{
						bOK = true;
						break;
					}
					else bOK = false;
				}
				if(!bOK)
				{
					bReturn = true;
					break;
				}
            }
        }
		if(bReturn)
		{
			_my_lastStatus = 'fail';
			_my_sqlStatus = 'This file can not be processed.';
			Webcrea.FileSelectedClose();
			return;
		}
		var bDynamicLoader = false;
		var nSelected = 0;
		for(var i=0;i<obj.files.length;i++)
		{
			var file=obj.files[i];
			if(!file) continue;
			var fileSize=0;
			if (file.size>1024*1024) fileSize=(Math.round(file.size*100/(1024*1024))/100).toString()+'MB';
			else fileSize = (Math.round(file.size*100/1024)/100).toString()+'KB';
			if(this.fileObject.IsGrid())
			{
				for(let j=0; j<objCell.arrFiles.length; j++)
				{
					if(objCell.arrFiles[j].name==file.name)
					{
						Webcrea.MsgBox(Webcrea.LoadString("msgDuplicate_file", '('+file.name+')'));
						return;
					}
				}
			}
			var info = file.name+' ('+fileSize+')';
			var fileinfo = "_my_filename='"+file.name+"',_my_filesize='"+file.size+"',_my_filetype='"+file.type+"',"+this.fileObject.fileCell+"='"+info+"'";
			if(!Webcrea.bMultiSelect && (Webcrea.bFileData || ((this.fileObject.IsForm() || this.fileObject.IsGrid()) && objCell.tagName && objCell.tagName.toLowerCase() == 'img')))
			{
				bDynamicLoader = true;
				var fileReader = new FileReader();
				fileReader.onload = function (evt)
				{
					if(Webcrea.bFileData)
					{
						if(!Webcrea.fileObject.arrRows && Webcrea.fileObject.bQuery) Webcrea.fileObject.Refresh();
						var bAppend = true;
						if(Webcrea.fileObject.arrRows) bAppend = !Webcrea.fileObject.arrRows.length?true:false;
						if(Webcrea.fileObject.IsGrid() || bAppend)
						{
							Webcrea.fileObject.ModifyRecordSet("Append count = 1, "+fileinfo);
						}
						else
						{
							Webcrea.fileObject.arrData['_my_filename'][0] = file.name;
							Webcrea.fileObject.arrData['_my_filesize'][0] = file.size;
							Webcrea.fileObject.arrData['_my_filetype'][0] = file.type;
							if(!Webcrea.fileObject.arrData[Webcrea.fileObject.fileCell])
							{
								var errMsg = Webcrea.LoadString('msgErrObject');
								errMsg = errMsg + '(' + Webcrea.fileObject.fileCell + ')';
								Webcrea.MsgBox(errMsg);
							}
							else Webcrea.fileObject.arrData[Webcrea.fileObject.fileCell][0] = info;
						}
						if(Webcrea.fileObject.IsColumn('_my_filedata'))
						{
							if(Webcrea.fileObject.IsGrid() || bAppend) Webcrea.fileObject.arrData['_my_filedata'][Webcrea.fileObject.arrData['_my_filedata'].length-1] = evt.target.result;
							else Webcrea.fileObject.arrData['_my_filedata'][0] = evt.target.result;
						}
						Webcrea.fileObject.SyncDataNotThread();
					}
					if((Webcrea.fileObject.IsForm() || Webcrea.fileObject.IsGrid()) && objCell.tagName && objCell.tagName.toLowerCase() == 'img')
					{
						if(Webcrea.fileObject.IsGrid()) Webcrea.fileObject.SetImage(Webcrea.fileObject.fileCell, file.name, '', '', evt.target.result, Webcrea.fileObject.arrRows.length-1);
						else Webcrea.fileObject.SetImage(Webcrea.fileObject.fileCell, file.name, '', '', evt.target.result);
					}
					if(nSelected == obj.files.length-1) Webcrea.FileSelectedClose();
					else nSelected = i;
				};
				fileReader.readAsDataURL(file);
			}
			if(!Webcrea.bFileData)
			{
				if(!this.fileObject.arrRows && this.fileObject.bQuery) this.fileObject.Refresh();
				var bSyncData = false;
				var bAppend = true;
				if(this.fileObject.arrRows) bAppend = !this.fileObject.arrRows.length?true:false;
				if(this.fileObject.IsGrid() || bAppend)
				{
					var ___nRow = this.fileObject.ModifyRecordSet("Append count = 1, "+fileinfo);
					if(!Webcrea.IsNull(___nRow) && this.fileObject.arrStackEvent.isearch('onrecordset')<0 && this.fileObject.arrStackEvent.isearch('commandinsert')<0)
					{
						bSyncData = true;
						this.fileObject._Set_RowNo(___nRow);
					}
				}
				else
				{
					bSyncData = true;
					if(i==0)
					{
						this.fileObject.arrData['_my_filename'][0] = file.name;
						this.fileObject.arrData['_my_filesize'][0] = file.size;
						this.fileObject.arrData['_my_filetype'][0] = file.type;
						this.fileObject.arrData[this.fileObject.fileCell][0] = info;
					}
					else
					{
						this.fileObject.arrData['_my_filename'][0] += "\r\n";
						this.fileObject.arrData['_my_filename'][0] += file.name;
						this.fileObject.arrData['_my_filesize'][0] += "\r\n";
						this.fileObject.arrData['_my_filesize'][0] += file.size;
						this.fileObject.arrData['_my_filetype'][0] += "\r\n";
						this.fileObject.arrData['_my_filetype'][0] += file.type;
						this.fileObject.arrData[this.fileObject.fileCell][0] += "\r\n";
						this.fileObject.arrData[this.fileObject.fileCell][0] += info;
					}
				}
				if(bSyncData) Webcrea.fileObject.SyncDataNotThread();
			}
			if(this.fileObject.IsGrid()) objCell.arrFiles[objCell.arrFiles.length] = file;
			else
			{
				objCell.arrFiles[i] = file;
			}
		}
		if(!bDynamicLoader) Webcrea.FileSelectedClose();
	},
	this.FileSelectedClose = function()
	{
		if(typeof Webcrea.fileObject.OnFILEOPEN != 'undefined') Webcrea.fileObject.OnFILEOPEN();
	},
	this.EngineVersion = function()
	{
		var bNumber = arguments[0];
		if(Webcrea.IsString(bNumber)) bNumber = 0;
		var version = WebcreaInfo.FileVersion;
		if(Webcrea.engineVersion) version = Webcrea.engineVersion;
		if(Webcrea.IsNull(version)) version = '';
		else if(bNumber) version = Extract(version, '[0-9]');
		return version;
	},
	this.GetCurrFileVersion = function()
	{
		var _my_Object;
		if(Webcrea.IsMDI()) _my_Object = _my_FileMDI;
		else _my_Object = _my_File;
		if(!_my_Object) return '';
		if(_my_Object.nFileVersion<0) _my_Object.nFileVersion = Webcrea.FileVersion(true);
		return _my_Object.nFileVersion;
	},
	this.GetFileTime = function()
	{
		return Webcrea.FileVersion(arguments[0], arguments[1], true);
	},
	this.GetFileVersion = function()
	{
		return Webcrea.FileVersion(arguments[0], arguments[1], false);
	},
	this.GetManagerVersion = function()
	{
		if(!Webcrea.versionObj) Webcrea.FileVersion(arguments[0], arguments[1], false);
		if(!Webcrea.versionObj) return Webcrea.version;
		if(arguments[0] == Webcrea.versionObj.fileName && Webcrea.versionObj.webcreaVersion == Webcrea.version) return Webcrea.versionObj.managerVersion;
	},
	this.GetServiceFileTime = function()
	{
		return Webcrea.FileVersion(arguments[0], arguments[1], true, true);
	},
	this.GetServiceFileVersion = function()
	{
		return Webcrea.FileVersion(arguments[0], arguments[1], false, true);
	},
	this.FileVersion = function()
	{
		var bNumber = arguments[0];
		var sFileName = arguments[1];
		var bCreateDate = arguments[2];
		var bServiceFile = arguments[3];
		if(arguments.length>1)
		{
			sFileName = arguments[0];
			bNumber = arguments[1];
		}
		else
		{
			if(Webcrea.IsString(bNumber))
			{
				if(bNumber.iEquals('true')) bNumber = 1;
				else if(bNumber.iEquals('false')) bNumber = 0;
				else
				{
					sFileName = arguments[0];
					bNumber = 0;
				}
			}
		}
		var _my_Object;
		if(Webcrea.IsMDI()) _my_Object = _my_FileMDI;
		else _my_Object = _my_File;
		if(!_my_Object) return '';
		var version = '';
		if(bCreateDate) version = _my_Object.CreateDate;
		else version = _my_Object.FileVersion;
		if(!Webcrea.IsEmpty(sFileName))
		{
			var sManagerVersion = '';
			var sFileVersion = '';
			var sCreateDate = '';
			var n = sFileName.indexOf('.mvf');
			if(n>0) sFileName = sFileName.substr(0, n);
			if(!Win.FileName.iEquals(sFileName) || bServiceFile)
			{
				var currTime = CurDate() + ' ' + CurTime();
				var sHttpParam = 'cmd=getfileversion' + '&findfile=' + sFileName;
				if(bServiceFile) sHttpParam = 'cmd=getservicefileversion' + '&findfile=' + sFileName;
				if(!Webcrea.IsEmpty(_my_File.Folder)) sHttpParam = sHttpParam + '&dir=' + _my_File.Folder;
				var result = GetDataHandler(sHttpParam);
				var n = result.indexOf('version=');
				if(n>=0) sFileVersion = result.substr(n+8);
				n = sFileVersion.indexOf('createdate=');
				if(n>=0)
				{
					sCreateDate = sFileVersion.substr(n+11);
					var n1 = sCreateDate.indexOf('managerversion=');
					if(n1>0)
					{
						sManagerVersion = sCreateDate.substr(n1+15);
						sCreateDate = sCreateDate.substr(0, n1);
					}
					sFileVersion = sFileVersion.substr(0, n);
					sCreateDate = sCreateDate.trim();
					sFileVersion = sFileVersion.trim();
					sManagerVersion = sManagerVersion.trim();
				}
				if(bCreateDate) version = sCreateDate;
				else version = sFileVersion;
				this.versionObj = {};
				this.versionObj.infoTime = currTime;
				this.versionObj.webcreaVersion = Webcrea.version;
				this.versionObj.fileName = sFileName;
				this.versionObj.fileVersion = sFileVersion;
				this.versionObj.createDate = sCreateDate;
				this.versionObj.managerVersion = sManagerVersion;
			}
		}
		if(Webcrea.IsNull(version)) version = '';
		else if(bNumber) version = Extract(version, '[0-9]');
		return version;
	},
	this.FitColumn = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var sHideColumn = '';
		for(var i=0; i<currObj.arrCellId.length; i++)
		{
			var id = currObj.arrCellId[i];
			var cellInfo = currObj.GetCellInfo(id);
			if(!cellInfo) continue;
			if(cellInfo.tagName == 'INPUT')
			{
				id = currObj.GetCellId(id);
				if(Webcrea.IsEmpty(id)) continue;
				if(currObj.IsColumn(id)) continue;
				if(!Webcrea.IsEmpty(sHideColumn)) sHideColumn += ',';
				sHideColumn += id;
			}
		}
		if(!Webcrea.IsEmpty(sHideColumn)) Webcrea.sInitFitColumn = sHideColumn;
	},
	this.StartProgress = function(nMode, totalSec, sMsg)
	{
		if(this.progressDiv && this.progressDiv.style.display == 'block') return;
		if(nMode == 1 && !totalSec) return;
		if(!Webcrea.bMyProgress) return;

		/*Loop인 경우 nProgressLoop 횟수만큼 반복, Default 무한반복*/
		if(!nMode) this.nProgressLoop = totalSec;
		else this.nProgressLoop = 1;
		if(!this.progressDiv) this.progressDiv = Webcrea.FindNode(document.body, 'id', '_my_progress');
		this.progressDiv.style.backgroundColor = '';
		this.progressDiv.style.boxShadow = '';

		var progressbar = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_bar');
		var pc = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_pc');
		var time = 100;
		if(sMsg)
		{
			this.progressDiv.style.textAlign = 'center';
			progressbar.style.display = 'none';
			pc.style.display = 'none';
			var bImage=false;
			n = sMsg.indexOf('.');
			if(n>0) bImage = Webcrea.IsImage(sMsg.substr(n+1));
			var spanTemp = document.createElement('span');
			spanTemp.setAttribute('id', '_my_progress_temp');
			spanTemp.setAttribute('style', 'top:35%;width:100%;display:table;margin-left:auto;margin-right:auto;display:inline-block;color:#000;');
			if(bImage)
			{
				this.progressDiv.style.backgroundColor = 'transparent';
				this.progressDiv.style.boxShadow = '0px 0px 0px 0px';
				var span = document.createElement('img');
				span.setAttribute('id', '_my_progress_img');
				span.src = Webcrea.GetImageLinkPath() + '/' + sMsg;
				spanTemp.appendChild(span);
			}
			else
			{
				var span = document.createElement('span');
				span.setAttribute('id', '_my_progress_text');
				span.setAttribute('style', 'font-size:.8em;color:#000;');
				span.textContent = sMsg;
				spanTemp.appendChild(span);
			}
			this.progressDiv.appendChild(spanTemp);
		}
		else
		{
			this.progressDiv.style.textAlign = '';
			progressbar.style.display = 'block';
			if(!nMode) pc.style.display = 'none';
			else
			{
				var max = progressbar.getAttribute('max');
				time = (1000/max)*totalSec;
				pc.style.display = 'block';
			}
		}

		var bParent = false;
		try{ if(window.parent && window.parent._my_FileMDI) bParent = true; }catch(e){}
		if(bParent) window.parent.Webcrea.LockUI(true);
		else Webcrea.LockUI(true);
		this.progressDiv.style.display = 'block';
		Webcrea.MoveProgress();
		if(sMsg)
		{
			if(totalSec>0) this.aniProgress = setInterval(function(){ Webcrea.StopProgress();}, totalSec*1000);
		}
		else if(nMode != 2) this.aniProgress = setInterval(function(){ Webcrea.RunProgress();}, time);
	},
	this.MoveProgress = function()
	{
		var target = Webcrea.FindNode(document.body, 'id', 'WindowDiv');
		var objImg = Webcrea.FindNode(Webcrea.progressDiv, 'name', 'img');
		var width = 0;
		if(objImg)
		{
			width = Webcrea.GetWidth(objImg, true);
			if(width == 0)
			{
				this.aniMoveProgress = setInterval(function(){ Webcrea.MoveProgress();}, 50);
				return;
			}
		}
		else width = Webcrea.GetWidth(Webcrea.progressDiv, true);
		if(this.aniMoveProgress) clearInterval(this.aniMoveProgress);
		Webcrea.MoveObject(5, Webcrea.progressDiv, target);
	},
	this.IsShowProgress = function()
	{
		var bShow = false;
		if(!this.progressDiv) this.progressDiv = Webcrea.FindNode(document.body, 'id', '_my_progress');
		if(this.progressDiv.style.display != 'none') bShow = true;
		return bShow;
	},
	this.RunProgress = function(percent)
	{
		var progressbar = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_bar');
		var pc = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_pc');
		var value = Number(progressbar.value);
		if(percent) value = percent;
		else value++;
		var bStop = false;
		if(this.progressDiv.style.display != 'block') bStop = true;
		else if(progressbar.value>=100 && this.nProgressLoop)
		{
			this.nProgressLoop--;
			if(this.nProgressLoop<=0) bStop = true;
		}
		if(bStop) Webcrea.StopProgress();
		else
		{
			if(value > 100) value=0;
			progressbar.value = value;
			pc.textContent = value + '%';
		}
	},
	this.StopProgress = function()
	{
		if(!this.progressDiv) return;
		clearInterval(this.aniProgress);
		this.progressDiv.style.display = 'none';
		var progressbar = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_bar');
		var pc = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_pc');
		var pcTemp = Webcrea.FindNode(this.progressDiv, 'id', '_my_progress_temp');
		if(pcTemp) this.progressDiv.removeChild(pcTemp);
		progressbar.value = 0;
        pc.textContent = '0%';
		Webcrea.bThread = false;
		var bParent = false;
		try{ if(window.parent && window.parent._my_FileMDI) bParent = true; }catch(e){}
		if(bParent) window.parent.Webcrea.LockUI(false);
		else Webcrea.LockUI(false);
	},
	this.LockUI = function()
	{
		var bDisable = arguments[0];
		var bWait = arguments[1];
		var backDiv = Webcrea.FindNode(document.body, 'id', '_my_BackDiv');
		if(backDiv)
		{
			if(bDisable)
			{
				Webcrea.overflowX = document.body.style.overflowX;
				Webcrea.overflowY = document.body.style.overflowY;

				backDiv.style.display = 'block';
				var bSkip = Webcrea.IsIE() && bWait;
				if(!bSkip)
				{
					document.body.style.overflowY='hidden';
					document.body.style.overflowX='hidden';
				}
			}
			else
			{
				if(!Webcrea.IsNull(Webcrea.overflowX))
				{
					document.body.style.overflowX = Webcrea.overflowX;
					Webcrea.overflowX = null;
				}
				if(!Webcrea.IsNull(Webcrea.overflowY))
				{
					document.body.style.overflowY = Webcrea.overflowY;
					Webcrea.overflowY = null;
				}

				backDiv.style.display = 'none';
				var nMdiWindowScroll = WebcreaInfo.nMdiWindowScroll;
				if(Webcrea.IsMDIFrame() && !Webcrea.IsMDI()) nMdiWindowScroll=window.parent.WebcreaInfo.nMdiWindowScroll;
				if(nMdiWindowScroll==2) document.body.style.overflowY = 'scroll';
				else document.body.style.overflowY='auto';
			}
			if(bWait) backDiv.style.cursor = 'wait';
			else backDiv.style.cursor = '';
		}
	},
	this.CloseFile = function(path, opt)
	{
		if(Webcrea.IsEmpty(path)) return;
		try{ if(opt.toLowerCase() == 'mdi' && window.parent && window.parent._my_FileMDI) window.parent._my_FileMDI.CloseFile(path); }catch(e){}
	},
	this.RunDlg = function(path, opt)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var arr = opt.split(',');
		var sFile = path;
		var bHttpCall = false;
		if(!Webcrea.IsEmpty(sFile))
		{
			var sRunFileParam = '';
			var n = sFile.lastIndexOf('?');
			if(n>0)
			{
				sRunFileParam = sFile.substr(n+1);
				sFile = sFile.substr(0, n);
			}
			sFile = Webcrea.ReplaceAll(sFile, '.mvf', '.html');
			if(sFile.indexOf('http://') == 0 || sFile.indexOf('https://') == 0) bHttpCall = true;
			var bHtmlCache = WebcreaInfo.bHtmlCache;
			if(Webcrea.IsNull(bHtmlCache)) bHtmlCache = true;
			if(!bHtmlCache)
			{
				var size='';
				var randomKey = Webcrea.GetCurrFileVersion() + random(10000);
				var n = sFile.indexOf(';');
				if(n>0)
				{
					size = ';' + sFile.substr(n+1);
					sFile = sFile.substr(0, n);
				}
				sFile = sFile + '?v=' + randomKey + size + '&_my_t=RD';
				if(!Webcrea.IsEmpty(sRunFileParam)) sFile = sFile + '&' + sRunFileParam;
			}
			else if(!Webcrea.IsEmpty(sRunFileParam)) sFile = sFile + '?_my_t=RD' + sRunFileParam;
		}
		if(!bHttpCall)
		{
			if(!Webcrea.IsEmpty(Webcrea.runFileSpecDir))
			{
				Webcrea.runFileSpecDir=Webcrea.runFileSpecDir.toString();
				Webcrea.runFileSpecDir=Webcrea.runFileSpecDir.replaceAll('\\','/');
				if(Webcrea.runFileSpecDir == '/') sFile = Webcrea.runFileSpecDir + sFile;
				else sFile = '/' + Webcrea.runFileSpecDir + '/' + sFile;
				Webcrea.runFileSpecDir = '';
			}
			else if(!Webcrea.IsEmpty(Webcrea.runFileRoot))
			{
				var sServerFileRoot = App.GetValue('ServerFileRoot');
				if(!Webcrea.IsEmpty(sServerFileRoot)) sFile = '/' + sServerFileRoot + '/' + sFile;
				else sFile = '/' + Webcrea.runFileRoot + '/' + sFile;
			}
		}
		var bEsc = true, bTitle = true, bBorder = true, bMaximize = false, bScrolling = false;
		var nPane = -1, paneSize = 0, sPane = '', tabName = '', tabTitle = '';
		var bParent = false;
		try{ if(window.parent && window.parent._my_FileMDI) bParent = true; }catch(e){}
		var nPopupWidth = 0;
		var nPopupHeight = 0;
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			var sParamL = sParam.toLowerCase();
			if(sParamL.indexOf('_popup_w')>=0)
			{
				var arrSize = sParamL.split('=');
				if(arrSize.length>1) nPopupWidth = Number(arrSize[1]);
				continue;
			}
			else if(sParamL.indexOf('_popup_h')>=0)
			{
				var arrSize = sParamL.split('=');
				if(arrSize.length>1) nPopupHeight = Number(arrSize[1]);
				continue;
			}
			else if(sParamL.indexOf('noesc')>=0) bEsc = false;
			else if(sParamL.indexOf('notitle')>=0) bTitle = false;
			else if(sParamL.indexOf('noborder')>=0) bBorder = false;
			else if(sParamL.indexOf('maximize')>=0) bMaximize = true;
			else if(sParamL.indexOf('scrolling')>=0) bScrolling = true;
		}
		if(typeof _POPUP_W_ == 'undefined') _POPUP_W_ = 0;
		if(typeof _POPUP_H_ == 'undefined') _POPUP_H_ = 0;
		if(nPopupWidth==0) nPopupWidth = _POPUP_W_;
		if(nPopupHeight==0) nPopupHeight = _POPUP_H_;
		if(nPopupWidth>0 || nPopupWidth>0) Webcrea.bSetPopupSize = true;
		else Webcrea.bSetPopupSize = false;
		if(this.arrParamRun && this.arrParamRun.length>0)
		{
			for(var i=0; i<this.arrParamRun.length; i++)
			{
				var sVal = Webcrea.webcreaInVal + this.arrParamRun[i];
				var sData = this.arrParamRunValue[i];
				if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
				window.sessionStorage.setItem(sVal, sData);
			}
		}
		Webcrea.cLayerObj.runDlg=sFile;
		Webcrea.cLayerObj.bRunDlgBorder=bBorder;
		Webcrea.cLayerObj.bRunDlgTitle=bTitle;
		Webcrea.cLayerObj.bRunDlgMaximize=bMaximize;
		Webcrea.cLayerObj.bRunDlgEsc=bEsc;
		Webcrea.cLayerObj.bRunDlgScroll=bScrolling;

		var sFileName = sFile;
		var n = sFileName.lastIndexOf('/');
		if(n>=0)
		{
			sFileName = sFileName.substr(n+1);
			n = sFileName.lastIndexOf('.');
			if(n>0) sFileName = sFileName.substr(0, n);
		}
		_POPUPID_ = sFileName;

		if(Webcrea.IsMDIFrame() && !Webcrea.IsMDI() && !Win.IsRunDlg())
		{
			window.parent.Webcrea.cLayerObj = Webcrea.cLayerObj;
			window.parent.Webcrea.paneWindow = window;
			window.parent.Webcrea.bSetPopupSize = Webcrea.bSetPopupSize;
			window.parent._POPUP_W_=_POPUP_W_;
			window.parent._POPUP_H_=_POPUP_H_;
			var obj=window.parent.document.getElementById('_my_rundlg');
			if(obj)
			{
				var objParent=window.parent.document.getElementById('MainDiv');
				objParent.removeChild(obj);
			}
			window.parent.Webcrea.LockUI(true);
			window.parent.Webcrea.CreateLayer('rundlg','','',nPopupWidth,nPopupHeight,bMaximize,bScrolling);
			var backDiv = window.parent.Webcrea.FindNodePublic(window.parent.document.body, 'id', '_my_BackDiv');
			if(backDiv)
			{
				var winW = window.parent.WindowDiv.getWidth();
				var winH = window.parent.WindowDiv.getHeight();
				if(winW>0 && winH>0)
				{
					backDiv.style.width = winW + 'px';
					backDiv.style.height = winH + 'px';
				}
			}
		}
		else
		{
			var obj=document.getElementById('_my_rundlg');
			if(obj)
			{
				var objParent=document.getElementById('MainDiv');
				objParent.removeChild(obj);
			}
			Webcrea.LockUI(true);
			Webcrea.CreateLayer('rundlg','','',nPopupWidth,nPopupHeight,bMaximize,bScrolling);
		}
	},
	this.RunFile = function(path, opt)
	{
		Webcrea.SetSqlStatus('');
		SetStatus('');
		var arr = opt.split(',');
		var sFile = path;
		var bHttpCall = false;
		if(!Webcrea.IsEmpty(sFile)) 
		{
			var sRunFileParam = '';
			var n = sFile.lastIndexOf('?');
			if(n>0)
			{
				sRunFileParam = sFile.substr(n+1);
				sFile = sFile.substr(0, n);
			}
			sFile = Webcrea.ReplaceAll(sFile, '.mvf', '.html');
			if(sFile.indexOf('http://') == 0 || sFile.indexOf('https://') == 0) bHttpCall = true;
			var bHtmlCache = WebcreaInfo.bHtmlCache;
			if(Webcrea.IsNull(bHtmlCache)) bHtmlCache = true;
			if(!bHtmlCache)
			{
				var size='';
				var randomKey = Webcrea.GetCurrFileVersion() + random(10000);
				var n = sFile.indexOf(';');
				if(n>0)
				{
					size = ';' + sFile.substr(n+1);
					sFile = sFile.substr(0, n);
				}
				sFile = sFile + '?v=' + randomKey + size;
				if(!Webcrea.IsEmpty(sRunFileParam)) sFile = sFile + '&' + sRunFileParam;
			}
			else if(!Webcrea.IsEmpty(sRunFileParam)) sFile = sFile + '?' + sRunFileParam;
		}
		if(!bHttpCall)
		{
			if(!Webcrea.IsEmpty(Webcrea.runFileSpecDir))
			{
				Webcrea.runFileSpecDir=Webcrea.runFileSpecDir.toString();
				Webcrea.runFileSpecDir=Webcrea.runFileSpecDir.replaceAll('\\','/');
				if(Webcrea.runFileSpecDir == '/') sFile = Webcrea.runFileSpecDir + sFile;
				else sFile = '/' + Webcrea.runFileSpecDir + '/' + sFile;
				Webcrea.runFileSpecDir = '';
			}
			else if(!Webcrea.IsEmpty(Webcrea.runFileRoot))
			{
				var sServerFileRoot = App.GetValue('ServerFileRoot');
				if(!Webcrea.IsEmpty(sServerFileRoot)) sFile = '/' + sServerFileRoot + '/' + sFile;
				else sFile = '/' + Webcrea.runFileRoot + '/' + sFile;
			}
		}
		var bInplace = false, bMDI = false, bFirstTab = false, bReOpen = false, bModeless = false, bMaximize = false;
		var nPane = -1, paneSize = 0, sPane = '', tabName = '', tabTitle = '';
		var bParent = false;
		try{ if(window.parent && window.parent._my_FileMDI) bParent = true; }catch(e){}
		var nPopupWidth = 0;
		var nPopupHeight = 0;
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			var sParamL = sParam.toLowerCase();
			if(sParamL.indexOf('_popup_w')>=0)
			{
				var arrSize = sParamL.split('=');
				if(arrSize.length>1) nPopupWidth = Number(arrSize[1]);
				continue;
			}
			else if(sParamL.indexOf('_popup_h')>=0)
			{
				var arrSize = sParamL.split('=');
				if(arrSize.length>1) nPopupHeight = Number(arrSize[1]);
				continue;
			}

			var nParamMdi=-1;
			var bStartFind=false;
			var sParamLTemp='';
			for(var j=0; j<sParamL.length; j++)
			{
				var sPer = sParamL[j];
				if(sPer == ' ') continue;
				sParamLTemp += sParamL[j];
				if(sParamLTemp == 'mdi') bStartFind = true;
				else if(bStartFind && sPer=='=')
				{
					nParamMdi=j;
					break;
				}
			}

			if(sParamL == 'inplace') bInplace = true;
			else if(sParamL == 'modeless') bModeless = true;
			else if(sParamL == 'maximize') bMaximize = true;
			else if(sParamL == 'mdi' && bParent) bMDI = true;
			else if(nParamMdi>=0 && bParent)
			{
				bMDI = true;
				tabName = sParam.substr(nParamMdi+1);
				tabName = tabName.trim();
				if(Webcrea.IsQuote(tabName)) tabName = Webcrea.RemoveQuote(tabName);
				else try{ tabName = eval(tabName); }catch(e){}
				if(!Webcrea.IsEmpty(tabName)) tabName = Webcrea.ReplaceAll(tabName, '.html', '');
			}
			else if(bMDI && sParamL == 'firsttab') bFirstTab = true;
			else if(bMDI && sParamL == 'reopen') bReOpen = true;
			else if(sParamL.indexOf('pane')>0)
			{
				var n = sParam.indexOf('=');
				if(n>0)
				{
					paneSize = Number(sParam.substr(n+1));
					sParam = sParam.substr(0, n);
				}
				nPane = this.GetMDIPane(sParam);
				if(nPane>=0) sPane = sParam;
			}
			else if(bMDI && sParamL.indexOf('tabtitle')>=0)
			{
				var n = sParam.indexOf('=');
				if(n>0)
				{
					tabTitle = sParam.substr(n+1);
					tabTitle = tabTitle.trim();
					if(Webcrea.IsQuote(tabTitle)) tabTitle = Webcrea.RemoveQuote(tabTitle);
					else try{ tabTitle = eval(tabTitle); }catch(e){}
				}
			}
		}

		if(bParent && (bMDI || bInplace || bReOpen || nPane>=0))
		{
			if(bMDI) bInplace = false;
			if(bInplace) window.parent._my_FileMDI.DisplayWork(sFile, 1, tabName, tabTitle);
			else if(bReOpen) window.parent._my_FileMDI.DisplayWork(sFile, 2, tabName, tabTitle);
			else if(nPane>=0) window.parent._my_FileMDI.DisplayPane(nPane, sFile, paneSize);
			else window.parent._my_FileMDI.DisplayWork(sFile, 0, tabName, tabTitle);

			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion>=7020180530001)
			{
				if(this.arrParamRun.length>0)
				{
					var target = 'WorkWindow';
					if(bInplace || bReOpen) target = 'WorkWindow';
					if(!bInplace && !bReOpen && nPane>=0) target = sPane;
					if(typeof window.parent.Webcrea.RemoveParamRun == 'undefined')
					{
						window.parent.Webcrea.RemoveParam();
						window.parent.Webcrea.arrParam = this.arrParamRun;
						window.parent.Webcrea.arrParamValue = this.arrParamRunValue;
					}
					else
					{
						window.parent.Webcrea.RemoveParamRun();
						window.parent.Webcrea.arrParamRun = this.arrParamRun;
						window.parent.Webcrea.arrParamRunValue = this.arrParamRunValue;
					}
					window.parent.Webcrea.bRunFileSendData = true;
					window.parent.Webcrea.sRunFileSendName = sFile;
				}
			}
			else
			{
				if(this.arrParam.length>0)
				{
					var target = 'WorkWindow';
					if(bInplace || bReOpen) target = 'WorkWindow';
					if(!bInplace && !bReOpen && nPane>=0) target = sPane;
					window.parent.Webcrea.RemoveParam();
					window.parent.Webcrea.arrParam = this.arrParam;
					window.parent.Webcrea.arrParamValue = this.arrParamValue;
					window.parent.Webcrea.bRunFileSendData = true;
					window.parent.Webcrea.sRunFileSendName = sFile;
				}
			}
			return;
		}
		if(bParent && !bModeless) window.parent.Webcrea.LockUI(true);
		else if(!bInplace && !bModeless) Webcrea.LockUI(true);
		if(bParent)
		{
			if(typeof _POPUP_X_ != 'undefined' && _POPUP_X_) window.parent._POPUP_X_ = _POPUP_X_;
			if(typeof _POPUP_Y_ != 'undefined' && _POPUP_Y_) window.parent._POPUP_Y_ = _POPUP_Y_;
			pos = ',left=' + window.parent.Webcrea.GetCurrX() + ',top=' + window.parent.Webcrea.GetCurrY();
		}
		else pos = ',left=' + Webcrea.GetCurrX() + ',top=' + Webcrea.GetCurrY();
		var size = '';
		if(typeof _POPUP_W_ == 'undefined') _POPUP_W_ = 0;
		if(typeof _POPUP_H_ == 'undefined') _POPUP_H_ = 0;
		if(nPopupWidth==0) nPopupWidth = _POPUP_W_;
		if(nPopupHeight==0) nPopupHeight = _POPUP_H_;
		if(nPopupWidth>0 || nPopupWidth>0) Webcrea.bSetPopupSize = true;
		else Webcrea.bSetPopupSize = false;
		size = ',width=' + nPopupWidth + ',height=' + nPopupHeight;
		if(bMaximize)
		{
			Webcrea.bSetPopupSize = true;
			pos = ',left=0,top=0';
			size = ',width=' + screen.width + ',height=' + screen.height;
		}
		if(bInplace)
		{
			if(Webcrea.bSessionStorage)
			{
				var arrSessionStorage = Webcrea.SessionStorageCopy();
				for( var i=0; i<arrSessionStorage.length; i++)
				{
					var objSessionStorage = arrSessionStorage[i];
					var key = objSessionStorage.key;
					if(key.indexOf(Webcrea.webcreaVal) == 0)
					{
						window.sessionStorage.removeItem(key);
					}
				}
				arrSessionStorage = null;
			}
			_my_Inplace = window.open(sFile, '_self', 'location=no,resizable=yes,scrollbars=yes');
		}
		else
		{
			if(bModeless) _my_Popup = window.open(sFile, '_blank', 'location=no' + pos + size + ',resizable=yes,scrollbars=yes');
			else _my_Popup = window.open(sFile, '_my_Popup' + Win.FileName, 'location=no' + pos + size + ',resizable=yes,scrollbars=yes');
		}
		if(typeof _my_Popup != 'undefined' && _my_Popup)
		{
			var sFileName = sFile;
			var n = sFileName.lastIndexOf("/");
			if(n>=0)
			{
				sFileName = sFileName.substr(n+1);
				n = sFileName.lastIndexOf(".");
				if(n>0) sFileName = sFileName.substr(0, n);
			}
			_POPUPID_ = sFileName;
			_my_Popup.focus();
			if(bParent) window.parent._my_FileMDI.popupMainWin = window;
			if(bModeless)
			{
				if(!Webcrea.arrPopup) Webcrea.arrPopup = [];
				Webcrea.arrPopup[Webcrea.arrPopup.length] = _my_Popup;
				_my_Popup = null;
			}
			else Webcrea.SetTimer('Webcrea.OnPopupCheck()', 0.1);
		}
		else if(typeof _my_Inplace != 'undefined')
		{
			if(Webcrea.bSessionStorage)
			{
				var nFileVersion = Webcrea.GetCurrFileVersion();
				if(nFileVersion>=7020180530001)
				{
					var sVal = Webcrea.webcreaInVal + '___bInplaceOpen';
					var sData = 'true';
					sData = Base64.encode(sData);
					window.sessionStorage.setItem(sVal, sData);
					for(var i=0; i<this.arrParamRun.length; i++)
					{
						var sVal = Webcrea.webcreaInVal + this.arrParamRun[i];
						var sData = this.arrParamRunValue[i];
						if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
						window.sessionStorage.setItem(sVal, sData);
					}
				}
				else
				{
					if(this.arrParamRun && this.arrParamRun.length>0)
					{
						for(var i=0; i<this.arrParamRun.length; i++)
						{
							var sVal = Webcrea.webcreaInVal + this.arrParamRun[i];
							var sData = this.arrParamRunValue[i];
							if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
							window.sessionStorage.setItem(sVal, sData);
						}
					}
					else
					{
						for(var i=0; i<this.arrParam.length; i++)
						{
							var sVal = Webcrea.webcreaInVal + this.arrParam[i];
							var sData = this.arrParamValue[i];
							if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
							window.sessionStorage.setItem(sVal, sData);
						}
					}
				}
			}
			else if(this.arrParam.length>0) alert(Webcrea.LoadString('msgErrCookie'));
		}
		else
		{
			alert(Webcrea.LoadString('msgErrPopup'));
			if(bParent) window.parent.Webcrea.LockUI(false);
			else Webcrea.LockUI(false);
		}
	},
	this.MakeOuterHtml = function(node)
	{
		var str = '';
		if(node.nodeName != '#text')
		{
			var tagName = node.nodeName;
			str = str + '<' + tagName;
			for(var j=0; j < node.attributes.length; j++)
			{
				var attr = node.attributes[j];
				str = str + ' ' + attr.nodeName + "=\"" + attr.value + "\"";
			}

			var subStr = '';
			if(node.childNodes.length > 0) subStr = this.MakeInnerHtml(node);
			var sCRLF = '';
			if(subStr == '') str = str + '></' + tagName + '>' + sCRLF;
			else str = str + '>' + sCRLF + subStr + sCRLF + '</' + tagName + '>' + sCRLF;
		}
		else
		{
			var textContent = '';
			if(Webcrea.IsIE69() && node.text != null) textContent = node.text;
			else textContent = node.textContent;
			str = str + textContent;
		}
		return str;
	},
	this.MakeInnerHtml=function(PINbEus7,CgWyv2){var FmtRSLpF0='';var JR7pznq=PINbEus7.childNodes;for(var MjEkLl=(0x154b+1817-0x1c64);MjEkLl<JR7pznq.length;MjEkLl++){var TThasLg=JR7pznq[MjEkLl];if(TThasLg.nodeName=='\x23\x63\x6f'+'\x6d\x6d\x65'+'\x6e\x74')continue;if(CgWyv2&&TThasLg.nodeName=='\x44\x49\x56'&&(TThasLg.id=='\x57\x69\x6e'+'\x64\x6f\x77'+'\x44\x69\x76'||TThasLg.id=='\x4d\x61\x69'+'\x6e\x44\x69'+'\x76'||TThasLg.id=='\x4d\x61\x73'+'\x74\x65\x72'+'\x30\x30'))FmtRSLpF0=this.MakeInnerHtml(TThasLg,CgWyv2);else if(TThasLg.nodeName!='\x23\x74\x65'+'\x78\x74'){var Wl2VEC=TThasLg.nodeName;if(Wl2VEC=="\x62\x72"){FmtRSLpF0=FmtRSLpF0+'\x3c\x62\x72'+'\x2f\x3e';continue;}else if(Wl2VEC=="\x42\x52"){FmtRSLpF0=FmtRSLpF0+'\x3c\x42\x52'+'\x2f\x3e';continue;}FmtRSLpF0=FmtRSLpF0+'\x3c'+Wl2VEC;for(var ZAQmLcV9j=(0x1558+1821-0x1c75);ZAQmLcV9j<TThasLg.attributes.length;ZAQmLcV9j++){var andAx=TThasLg.attributes[ZAQmLcV9j];var dAyTjqUpF=andAx.value;if(andAx.nodeName=='\x74\x69\x74'+'\x6c\x65')dAyTjqUpF=Webcrea.ReplaceAll(dAyTjqUpF,'\x22','\x26\x23\x33'+'\x34\x3b');if((WebcreaInfo.bMasterDisplay||WebcreaInfo.arrMasterFile.length>(0x1562+1824-0x1c82))&&Webcrea.IsIE()&&andAx.nodeName=='\x73\x74\x79'+'\x6c\x65')dAyTjqUpF=Webcrea.ReplaceAll(dAyTjqUpF,'\x22',"\x27");FmtRSLpF0=FmtRSLpF0+'\x20'+andAx.nodeName+'\x3d\x22'+dAyTjqUpF+'\x22';}var jpQwT='';if(TThasLg.childNodes.length>(0x1568+1826-0x1c8a))jpQwT=this.MakeInnerHtml(TThasLg);var qumdxLx='';if(jpQwT=='')FmtRSLpF0=FmtRSLpF0+'\x3e\x3c\x2f'+Wl2VEC+'\x3e'+qumdxLx;else FmtRSLpF0=FmtRSLpF0+'\x3e'+qumdxLx+jpQwT+qumdxLx+'\x3c\x2f'+Wl2VEC+'\x3e'+qumdxLx;}else {var trbGZ='';if(Webcrea.IsIE69()&&TThasLg.text!=null)trbGZ=TThasLg.text;else if(TThasLg.textContent!=null)trbGZ=TThasLg.textContent;FmtRSLpF0=FmtRSLpF0+trbGZ;}}return FmtRSLpF0;},
	this.MakePrintHtml=function(wFMotxGK,bXKKRE,upTzf){var HHV6R9uB=false;if(bXKKRE&&Webcrea.IsGrid(bXKKRE.currObj)&&bXKKRE.nMaxHeight>(0x157f+1834-0x1ca9))HHV6R9uB=true;var wkR5H='';var Jl33HIxG=wFMotxGK.childNodes;for(var Cb6yfU=(0x158c+1838-0x1cba);Cb6yfU<Jl33HIxG.length;Cb6yfU++){var JMZpqYwF=Jl33HIxG[Cb6yfU];if(JMZpqYwF.nodeName=='\x23\x63\x6f'+'\x6d\x6d\x65'+'\x6e\x74')continue;if(JMZpqYwF.nodeName!='\x23\x74\x65'+'\x78\x74'){var MdodMb=JMZpqYwF.nodeName;if(MdodMb=='\x62\x72'){wkR5H=wkR5H+'\x3c\x62\x72'+'\x3e';continue;}else if(MdodMb=='\x49\x4d\x47'){if(JMZpqYwF.getAttribute('\x72\x6f\x6c'+'\x65')=='\x73\x65\x6c'+'\x65\x63\x74'+'\x62\x6f\x78'+'\x61\x72\x72'+'\x6f\x77')continue;}else if(HHV6R9uB&&MdodMb=='\x54\x52'){bXKKRE.nCurrHeight+=Webcrea.GetHeight(JMZpqYwF);if(bXKKRE.nCurrHeight>bXKKRE.nMaxHeight){bXKKRE.nCurrHeight=(0x1596+1842-0x1cc8);var TOGYL3p='';if(!Webcrea.IsEmpty(bXKKRE.currHeadHtml)){TOGYL3p=bXKKRE.currHeadHtml;bXKKRE.currHeadHtml='';}bXKKRE.arrHtml[bXKKRE.arrHtml.length]=bXKKRE.currTableHtml+TOGYL3p+bXKKRE.currHtml+wkR5H+'\x3c\x2f\x54'+'\x41\x42\x4c'+'\x45\x3e';bXKKRE.currHtml='';wkR5H='';}}wkR5H=wkR5H+'\x3c'+MdodMb;for(var WfUV5g=(0x15a0+1845-0x1cd5);WfUV5g<JMZpqYwF.attributes.length;WfUV5g++){var QyFQXbI=JMZpqYwF.attributes[WfUV5g];var ahCAh=QyFQXbI.value;if(QyFQXbI.name=='\x76\x61\x6c'+'\x75\x65'&&Webcrea.IsEmpty(ahCAh))ahCAh=JMZpqYwF.value;else if(MdodMb=='\x53\x45\x4c'+'\x45\x43\x54'&&QyFQXbI.name=='\x73\x74\x79'+'\x6c\x65')ahCAh+='\x2d\x77\x65\x62'+'\x6b\x69\x74\x2d'+'\x61\x70\x70\x65'+'\x61\x72\x61\x6e'+'\x63\x65\x3a\x20'+'\x6e\x6f\x6e\x65'+'\x3b\x2d\x6d\x6f'+'\x7a\x2d\x61\x70'+'\x70\x65\x61\x72'+'\x61\x6e\x63\x65'+'\x3a\x20\x6e\x6f'+'\x6e\x65\x3b\x61'+'\x70\x70\x65\x61'+'\x72\x61\x6e\x63'+'\x65\x3a\x20\x6e'+'\x6f\x6e\x65\x3b';wkR5H=wkR5H+'\x20'+QyFQXbI.nodeName+'\x3d\x22'+ahCAh+'\x22';if(MdodMb=='\x4f\x50\x54'+'\x49\x4f\x4e'&&JMZpqYwF.selected)wkR5H+='\x20\x73\x65'+'\x6c\x65\x63'+'\x74\x65\x64';}if(HHV6R9uB&&MdodMb=='\x54\x41\x42'+'\x4c\x45'){if(!bXKKRE.currTableHtml)bXKKRE.currTableHtml=wkR5H+'\x3e';wkR5H='';}var d5QDgOUlb='';if(JMZpqYwF.childNodes.length>(0x15ad+1849-0x1ce6))d5QDgOUlb=this.MakePrintHtml(JMZpqYwF,bXKKRE,true);var jk0wP='';var n7rwHWMN='\x3e';if(HHV6R9uB&&MdodMb=='\x54\x41\x42'+'\x4c\x45')n7rwHWMN='';if(d5QDgOUlb=='')wkR5H=wkR5H+n7rwHWMN+'\x3c\x2f'+MdodMb+'\x3e'+jk0wP;else wkR5H=wkR5H+n7rwHWMN+jk0wP+d5QDgOUlb+jk0wP+'\x3c\x2f'+MdodMb+'\x3e'+jk0wP;if(HHV6R9uB){if(MdodMb=='\x43\x4f\x4c'+'\x47\x52\x4f'+'\x55\x50'){if(bXKKRE.currTableHtml){bXKKRE.currTableHtml+=wkR5H;wkR5H='';}}else if(Webcrea.IsIE()&&MdodMb=='\x54\x48\x45'+'\x41\x44'){bXKKRE.currHeadHtml=wkR5H;wkR5H='';}}}else {var qUTnTcU='';if(Webcrea.IsIE69()&&JMZpqYwF.text!=null)qUTnTcU=JMZpqYwF.text;else if(JMZpqYwF.textContent!=null)qUTnTcU=JMZpqYwF.textContent;wkR5H=wkR5H+qUTnTcU;}}if(HHV6R9uB){if(!Webcrea.IsEmpty(bXKKRE.currHtml))bXKKRE.currHtml+=wkR5H;if(!upTzf)bXKKRE.arrHtml[bXKKRE.arrHtml.length]=bXKKRE.currTableHtml+bXKKRE.currHtml+wkR5H+'\x3c\x2f\x54'+'\x41\x42\x4c'+'\x45\x3e';}return wkR5H;},
	this.MakeGetObject=function(){if(arguments.length<(0x15bc+1854-0x1cf9))return;var x9wMPwLb=arguments[(0x15c1 + 1856 - 0x1d01)];if(Webcrea.IsEmpty(x9wMPwLb))return;var oOMj8=x9wMPwLb;var HGY9BRh6=x9wMPwLb.split('\x2e');if(HGY9BRh6.length>(0x15cc+1860-0x1d0f)){var q6RD0='';var K3yfBQno='';var CyVy9N='';var GsnuIf7aU=Webcrea.GetObjectById(HGY9BRh6[(0x15db + 1865 - 0x1d24)]);if(GsnuIf7aU){K3yfBQno=GsnuIf7aU.objName;if(HGY9BRh6.length>(0x15e2+1867-0x1d2b)){var PvlN0Tyjt=HGY9BRh6[(0x15e8 + 1869 - 0x1d33)];if(PvlN0Tyjt[(0x15e8 + 1869 - 0x1d35)]=='\x40')q6RD0='\x5f\x47\x65'+'\x74\x5f'+PvlN0Tyjt.substr((0x15ed+1871-0x1d3b));}else {if(GsnuIf7aU.IsColumnNumber(HGY9BRh6[(0x15f0 + 1872 - 0x1d3f)]))q6RD0='\x47\x65\x74'+'\x4e\x75\x6d'+'\x62\x65\x72';else q6RD0='\x47\x65\x74'+'\x56\x61\x6c'+'\x75\x65';}CyVy9N=q6RD0+'\x28\x22'+HGY9BRh6[(0x15f4 + 1873 - 0x1d44)]+'\x22\x29';oOMj8=K3yfBQno+'\x2e'+CyVy9N;}else if(Webcrea.forEachRowObj&&Webcrea.forEachRowObj[HGY9BRh6[(0x15f5 + 1873 - 0x1d46)]]){var gGE1czl=Webcrea.forEachRowObj[HGY9BRh6[(0x15fb + 1875 - 0x1d4e)]].obj;if(gGE1czl){K3yfBQno=gGE1czl.objName;if(gGE1czl.IsColumnNumber(HGY9BRh6[(0x1601 + 1877 - 0x1d55)]))q6RD0='\x52\x6f\x77'+'\x4e\x75\x6d'+'\x62\x65\x72';else q6RD0='\x52\x6f\x77'+'\x56\x61\x6c'+'\x75\x65';var qIwgKFY=Webcrea.GetFuncInnerVal(Webcrea.forEachRowObj[HGY9BRh6[(0x1605 + 1879 - 0x1d5c)]].param);CyVy9N=q6RD0+'\x28\x22'+HGY9BRh6[(0x160a + 1880 - 0x1d61)]+'\x22\x2c'+qIwgKFY+'\x29';oOMj8=K3yfBQno+'\x2e'+CyVy9N;}}else if(HGY9BRh6[(0x160c + 1881 - 0x1d65)].iEquals('\x72\x6f\x77')&&Webcrea.forEachRowObj){var brMZM=Webcrea.forEachRowObj.obj;if(brMZM){K3yfBQno=brMZM.objName;if(brMZM.IsColumnNumber(HGY9BRh6[(0x1614 + 1884 - 0x1d6f)]))q6RD0='\x52\x6f\x77'+'\x4e\x75\x6d'+'\x62\x65\x72';else q6RD0='\x52\x6f\x77'+'\x56\x61\x6c'+'\x75\x65';var MKDeFM=Webcrea.GetFuncInnerVal(Webcrea.forEachRowObj.param);CyVy9N=q6RD0+'\x28\x22'+HGY9BRh6[(0x161b + 1886 - 0x1d78)]+'\x22\x2c'+MKDeFM+'\x29';oOMj8=K3yfBQno+'\x2e'+CyVy9N;}}else if(HGY9BRh6[(0x161c + 1886 - 0x1d7a)]=='\x41\x70\x70')oOMj8=HGY9BRh6[(0x161f + 1887 - 0x1d7e)]+"\x2e\x47\x65"+"\x74\x56\x61"+"\x6c\x75\x65"+"\x28\x27"+HGY9BRh6[(0x1625 + 1889 - 0x1d85)]+"\x27\x29";}return oOMj8;},
	this.MakeQuery=function(){if(arguments.length<(0x1628+1890-0x1d89))return;var MRqe5W={};MRqe5W.sql=arguments[(0x162c + 1892 - 0x1d90)];var TI9BM62f=arguments[(0x1635 + 1895 - 0x1d9b)];var ZklKD3TvQ=arguments[(0x163d + 1897 - 0x1da4)];var aVEAHi=arguments[(0x1646 + 1900 - 0x1daf)];if(!TI9BM62f){var gAh1SSS=false;var kX2w0=MRqe5W.sql;var npsShhqkD='';var qCVgXyf=false;if(aVEAHi)qCVgXyf=aVEAHi;var uZdbc=Webcrea.MakeToken(kX2w0,-1,true);for(var xryFJ5aFm=(0x1657+1906-0x1dc9);xryFJ5aFm<uZdbc.length;xryFJ5aFm++){var QMJ45=uZdbc[xryFJ5aFm];if(!Webcrea.IsEmpty(QMJ45)&&QMJ45.toLowerCase()=='\x69\x6e\x73'+'\x65\x72\x74'){gAh1SSS=true;break;}if(!qCVgXyf&&!Webcrea.IsEmpty(QMJ45)&&(QMJ45.toLowerCase()=='\x6d\x65\x72'+'\x67\x65'||QMJ45.toLowerCase()=='\x73\x65\x6c'+'\x65\x63\x74'||QMJ45.toLowerCase()=='\x69\x6e\x73'+'\x65\x72\x74'||QMJ45.toLowerCase()=='\x75\x70\x64'+'\x61\x74\x65'||QMJ45.toLowerCase()=='\x64\x65\x6c'+'\x65\x74\x65')){qCVgXyf=true;}var tIyOZTpl=false;if((QMJ45=='\x28'&&xryFJ5aFm==(0x1661+1909-0x1dd6))||(QMJ45=='\x28'&&xryFJ5aFm>(0x1664+1910-0x1dda)&&!Webcrea.IsQuote(kX2w0.substr(xryFJ5aFm-(0x1669+1912-0x1de0),(0x1670+1914-0x1de7)))))tIyOZTpl=true;if(tIyOZTpl){var Gapue=(0x1673+1915-0x1ded);var MLIep0='';for(++xryFJ5aFm;xryFJ5aFm<uZdbc.length;xryFJ5aFm++){QMJ45=uZdbc[xryFJ5aFm];if(QMJ45=='\x28')Gapue++;else if(QMJ45=='\x29')Gapue--;if(!Gapue)break;MLIep0+=QMJ45;}if(!Webcrea.IsEmpty(MLIep0))MLIep0=this.MakeQuery(MLIep0,TI9BM62f,ZklKD3TvQ,qCVgXyf);npsShhqkD=npsShhqkD+'\x28'+MLIep0+'\x29';continue;}npsShhqkD+=QMJ45;}if(!gAh1SSS&&!Webcrea.IsEmpty(npsShhqkD))MRqe5W.sql=npsShhqkD;}var QcMKaARuC=function(sObj){var T0ltf8ew='';var WN6PX5=sObj.split('\x2e');if(WN6PX5.length>(0x1683+1921-0x1e03)){var YFk1DuL='';var aPoBAz='';var dh26gxbyP='';var h4G1Dwu=Webcrea.GetObjectById(WN6PX5[(0x1692 + 1926 - 0x1e18)]);if(h4G1Dwu){aPoBAz=h4G1Dwu.objName;if(WN6PX5.length>(0x1699+1928-0x1e1f)){var q6ygv1g=WN6PX5[(0x169f + 1930 - 0x1e27)];if(q6ygv1g[(0x169f + 1930 - 0x1e29)]=='\x40')YFk1DuL='\x5f\x47\x65'+'\x74\x5f'+q6ygv1g.substr((0x16a4+1932-0x1e2f));}else {if(h4G1Dwu.IsColumnNumber(WN6PX5[(0x16a7 + 1933 - 0x1e33)]))YFk1DuL='\x47\x65\x74'+'\x4e\x75\x6d'+'\x62\x65\x72';else YFk1DuL='\x47\x65\x74'+'\x56\x61\x6c'+'\x75\x65';}dh26gxbyP=YFk1DuL+'\x28\x22'+WN6PX5[(0x16aa + 1934 - 0x1e37)]+'\x22\x29';T0ltf8ew=aPoBAz+'\x2e'+dh26gxbyP;}else if(Webcrea.forEachRowObj&&Webcrea.forEachRowObj[WN6PX5[(0x16ac + 1934 - 0x1e3a)]]){var Rb8mA=Webcrea.forEachRowObj[WN6PX5[(0x16b2 + 1936 - 0x1e42)]].obj;if(Rb8mA){aPoBAz=Rb8mA.objName;if(Rb8mA.IsColumnNumber(WN6PX5[(0x16b7 + 1938 - 0x1e48)]))YFk1DuL='\x52\x6f\x77'+'\x4e\x75\x6d'+'\x62\x65\x72';else YFk1DuL='\x52\x6f\x77'+'\x56\x61\x6c'+'\x75\x65';var GUOuU=Webcrea.GetFuncInnerVal(Webcrea.forEachRowObj[WN6PX5[(0x16bc + 1940 - 0x1e50)]].param);dh26gxbyP=YFk1DuL+'\x28\x22'+WN6PX5[(0x16c1 + 1941 - 0x1e55)]+'\x22\x2c'+GUOuU+'\x29';T0ltf8ew=aPoBAz+'\x2e'+dh26gxbyP;}}else if(WN6PX5[(0x16c3 + 1942 - 0x1e59)].iEquals('\x72\x6f\x77')&&Webcrea.forEachRowObj){var TuKUkmAF=Webcrea.forEachRowObj.obj;if(TuKUkmAF){aPoBAz=TuKUkmAF.objName;if(TuKUkmAF.IsColumnNumber(WN6PX5[(0x16cb + 1945 - 0x1e63)]))YFk1DuL='\x52\x6f\x77'+'\x4e\x75\x6d'+'\x62\x65\x72';else YFk1DuL='\x52\x6f\x77'+'\x56\x61\x6c'+'\x75\x65';var YnKptmd9z=Webcrea.GetFuncInnerVal(Webcrea.forEachRowObj.param);dh26gxbyP=YFk1DuL+'\x28\x22'+WN6PX5[(0x16d2 + 1947 - 0x1e6c)]+'\x22\x2c'+YnKptmd9z+'\x29';T0ltf8ew=aPoBAz+'\x2e'+dh26gxbyP;}}else if(WN6PX5[(0x16d3 + 1947 - 0x1e6e)]=='\x41\x70\x70')T0ltf8ew=WN6PX5[(0x16d6 + 1948 - 0x1e72)]+"\x2e\x47\x65"+"\x74\x56\x61"+"\x6c\x75\x65"+"\x28\x27"+WN6PX5[(0x16db + 1950 - 0x1e78)]+"\x27\x29";}return T0ltf8ew;};var kF4xbj=false;var nBltzsnpI=false;var q1WggUO=false;var uHfcJ=false;var x0rNlYAJv='';var RNZtiev=Webcrea.MakeToken(MRqe5W.sql,-1,false);if(RNZtiev.length<(0x16f2+1958-0x1e97))return MRqe5W.sql;var baIYLte8B=[];var vD6fNcK=false;for(var MA9e6=(0x16fd+1961-0x1ea6);MA9e6<RNZtiev.length;MA9e6++){var D7dzik0=baIYLte8B[baIYLte8B.length-(0x1706 + 1964 - 0x1eb1)];var JfjtV0WG=RNZtiev[MA9e6];var NKeQqU={};NKeQqU.type=(0x170e+1967-0x1ebd);if(!q1WggUO&&!Webcrea.IsEmpty(JfjtV0WG)&&(JfjtV0WG.toLowerCase()=='\x6d\x65\x72'+'\x67\x65'||JfjtV0WG.toLowerCase()=='\x73\x65\x6c'+'\x65\x63\x74'||JfjtV0WG.toLowerCase()=='\x69\x6e\x73'+'\x65\x72\x74'||JfjtV0WG.toLowerCase()=='\x75\x70\x64'+'\x61\x74\x65'||JfjtV0WG.toLowerCase()=='\x64\x65\x6c'+'\x65\x74\x65')){q1WggUO=true;if(JfjtV0WG.toLowerCase()=='\x73\x65\x6c'+'\x65\x63\x74')uHfcJ=true;}if(q1WggUO&&!Webcrea.IsEmpty(JfjtV0WG)&&JfjtV0WG.toLowerCase()=='\x77\x68\x65'+'\x72\x65')vD6fNcK=true;if(Webcrea.IsEmpty(JfjtV0WG)||!Webcrea.IsItemChar(JfjtV0WG[(0x1711 + 1968 - 0x1ec1)])){if(Webcrea.IsWhereOper(JfjtV0WG)>=(0x1714+1969-0x1ec5)&&D7dzik0&&(D7dzik0.item=='\x28'||D7dzik0.item.toLowerCase()=='\x77\x68\x65'+'\x72\x65'))continue;NKeQqU.item=JfjtV0WG;baIYLte8B[baIYLte8B.length]=NKeQqU;continue;}var SFKMUEKIX=(JfjtV0WG[(0x171b + 1971 - 0x1ece)]=='\x26')?true:false;var aqk7Uj=(JfjtV0WG[(0x1721 + 1973 - 0x1ed6)]=='\x23')?true:false;var hmI2vlJu=(JfjtV0WG[(0x1728 + 1976 - 0x1ee0)]=='\x3a')?true:false;var nXllz7Gd7=false;var rozhy65=false;if(JfjtV0WG.length>(0x1734+1980-0x1eef)&&JfjtV0WG[(0x1735 + 1980 - 0x1ef1)]==JfjtV0WG[(0x173a + 1982 - 0x1ef7)]){nXllz7Gd7=true;JfjtV0WG=JfjtV0WG.substr((0x173d+1983-0x1efb));if(JfjtV0WG.length>(0x1741+1984-0x1f00)&&JfjtV0WG[(0x1742 + 1984 - 0x1f02)]==JfjtV0WG[(0x1747 + 1986 - 0x1f08)]){rozhy65=true;JfjtV0WG=JfjtV0WG.substr((0x174a+1987-0x1f0c));}}if(SFKMUEKIX)NKeQqU.type=(0x175a+1992-0x1f1b);else if(hmI2vlJu){if(nXllz7Gd7)NKeQqU.type=(0x1753+1990-0x1f17);else if(rozhy65)NKeQqU.type=(0x1758+1992-0x1f1d);else NKeQqU.type=(0x1757+1991-0x1f1d);}else if(aqk7Uj){if(nXllz7Gd7)NKeQqU.type=(0x1763+1995-0x1f29);else if(rozhy65)NKeQqU.type=(0x1768+1997-0x1f2f);else NKeQqU.type=(0x1767+1997-0x1f30);}if(!kF4xbj&&(hmI2vlJu||aqk7Uj))kF4xbj=true;var NpLWp=JfjtV0WG.substr((0x1768+1997-0x1f34));if(Webcrea.IsEmpty(NpLWp))return MRqe5W.sql;var a1HCIJ=Webcrea.IsFunction(NpLWp);if(a1HCIJ&&MA9e6+(0x176e+1999-0x1f3c)<RNZtiev.length&&RNZtiev[MA9e6+(0x1772 + 2000 - 0x1f41)]=='\x28'){var k46qCh=(0x1776+2002-0x1f48);for(++MA9e6;MA9e6<RNZtiev.length;){if(RNZtiev[MA9e6]=='\x28')k46qCh++;else if(RNZtiev[MA9e6]=='\x29')k46qCh--;NpLWp+='\x20';NpLWp+=RNZtiev[MA9e6];RNZtiev.splice(MA9e6,(0x177b+2003-0x1f4d));if(!k46qCh)break;}MA9e6--;}var u6hcvl='';if(!q1WggUO&&(hmI2vlJu||aqk7Uj)){var xM2WYh2lP=NpLWp.indexOf('\x26');if(xM2WYh2lP>(0x1783+2006-0x1f59)){u6hcvl=NpLWp.substr(xM2WYh2lP);NpLWp=NpLWp.substr((0x1786+2007-0x1f5d),xM2WYh2lP);}}var PjIAAJvRV=QcMKaARuC(NpLWp);if(!Webcrea.IsEmpty(PjIAAJvRV))NpLWp=PjIAAJvRV;var nxhotXe=baIYLte8B.length-(0x1792+2011-0x1f6c);var ARQ4mFoo1=baIYLte8B[nxhotXe];var DpftPhI=false;if(ARQ4mFoo1&&ARQ4mFoo1.item.toLowerCase()=='\x6c\x69\x6b'+'\x65')DpftPhI=true;var Gtox8='';try{if(Webcrea.IsFuncInnerVal(NpLWp)){Gtox8=Webcrea.GetFuncInnerVal(NpLWp);}else {Gtox8=eval(NpLWp);}Gtox8+=u6hcvl;NpLWp+=u6hcvl;}catch(e){NpLWp=u6hcvl;NKeQqU.type=(0x179d+2015-0x1f7c);}if(vD6fNcK&&uHfcJ&&Webcrea.IsEmpty(Gtox8)&&(((hmI2vlJu||aqk7Uj)&&!nXllz7Gd7&&!rozhy65)||DpftPhI)){baIYLte8B.splice(nxhotXe--,(0x17a3+2017-0x1f83));if(baIYLte8B[nxhotXe].item=='\x29'){var QbZI5=(0x17a7+2018-0x1f89);for(;nxhotXe>(0x17aa+2019-0x1f8d);nxhotXe--){if(baIYLte8B[nxhotXe].item=='\x28')QbZI5--;else if(baIYLte8B[nxhotXe].item=='\x29')QbZI5++;baIYLte8B.splice(nxhotXe,(0x17b0+2021-0x1f94));if(!QbZI5)break;}nxhotXe--;}baIYLte8B.splice(nxhotXe--,(0x17b3+2022-0x1f98));TuKUkmAF=baIYLte8B[nxhotXe];if(TuKUkmAF&&Webcrea.IsWhereOper(TuKUkmAF.item)>=(0x17b4+2022-0x1f9a))baIYLte8B.splice(nxhotXe,(0x17b9+2024-0x1fa0));nBltzsnpI=true;continue;}NKeQqU.item=NpLWp;baIYLte8B[baIYLte8B.length]=NKeQqU;}if(aVEAHi&&!q1WggUO)q1WggUO=true;if(ZklKD3TvQ)ZklKD3TvQ.bConvWhere=kF4xbj;if(nBltzsnpI){for(var hK2WiuMP=(0x17be+2026-0x1fa8);hK2WiuMP<baIYLte8B.length;hK2WiuMP++){var oEnmbSuIn=baIYLte8B[hK2WiuMP];var r1hnP6j1=null;var u0Fcfu=null;if(hK2WiuMP>(0x17cb+2030-0x1fb9))r1hnP6j1=baIYLte8B[hK2WiuMP-(0x17d0 + 2032 - 0x1fbf)];if(hK2WiuMP+(0x17d4+2033-0x1fc4)<baIYLte8B.length)u0Fcfu=baIYLte8B[hK2WiuMP+(0x17d7 + 2034 - 0x1fc8)];if((!r1hnP6j1||(r1hnP6j1&&!Webcrea.IsSqlFunction(r1hnP6j1.item)))&&oEnmbSuIn.item=='\x28'&&u0Fcfu&&u0Fcfu.item=='\x29'){baIYLte8B.splice(hK2WiuMP,(0x17da+2035-0x1fcc));baIYLte8B.splice(hK2WiuMP--,(0x17dd+2036-0x1fd0));if(r1hnP6j1&&Webcrea.IsWhereOper(r1hnP6j1.item)>=(0x17df+2037-0x1fd4))baIYLte8B.splice(hK2WiuMP--,(0x17e4+2038-0x1fd9));hK2WiuMP--;}}}var G7Soh=false;for(var KNakLv1j=(0x17ec+2041-0x1fe5);KNakLv1j<baIYLte8B.length;KNakLv1j++){var Q9ZPa=true;var TQOU30cs=baIYLte8B[KNakLv1j];var XhdQK7=null;if(KNakLv1j>(0x17f9+2045-0x1ff6))XhdQK7=baIYLte8B[KNakLv1j-(0x17fe + 2047 - 0x1ffc)];var bjJCPZ=TQOU30cs.item;var e7jk7=TQOU30cs.type;if(bjJCPZ.toLowerCase()=='\x77\x68\x65'+'\x72\x65'){G7Soh=true;if(KNakLv1j==baIYLte8B.length-(0x1808+2050-0x2009))continue;else if(KNakLv1j+(0x180d+2052-0x200f)<baIYLte8B.length&&(baIYLte8B[KNakLv1j+(0x180e + 2052 - 0x2011)].item=='\x6f\x72\x64'+'\x65\x72'||baIYLte8B[KNakLv1j+(0x1812 + 2054 - 0x2017)].item=='\x67\x72\x6f'+'\x75\x70')&&baIYLte8B[KNakLv1j+(0x1817 + 2055 - 0x201c)].item=='\x62\x79')continue;}else if(G7Soh){if(bjJCPZ.toLowerCase()=='\x73\x65\x6c'+'\x65\x63\x74')G7Soh=false;}if(Webcrea.IsEmpty(x0rNlYAJv))Q9ZPa=false;if(bjJCPZ=='\x2c'||bjJCPZ=='\x29'||bjJCPZ=='\x3d'||bjJCPZ=='\x21\x3d')Q9ZPa=false;if(XhdQK7){if(XhdQK7.item=='\x28'||XhdQK7.item=='\x3d'||XhdQK7.item=='\x21\x3d')Q9ZPa=false;if(Webcrea.IsSqlFunction(XhdQK7.item)&&bjJCPZ=='\x28')Q9ZPa=false;}var xB4X1C4we=false;if(e7jk7==(0x181b+2057-0x2023)||e7jk7==(0x1821+2059-0x202a)||e7jk7==(0x1826+2060-0x202f)||e7jk7==(0x182b+2062-0x2035)||e7jk7==(0x1830+2064-0x203b)||e7jk7==(0x1836+2066-0x2042)||e7jk7==(0x183b+2067-0x2047)){var Huvox='';if(e7jk7==(0x1836+2066-0x2047)||e7jk7==(0x183b+2067-0x204c)||e7jk7==(0x1840+2069-0x2052)||e7jk7==(0x1845+2071-0x2058)||e7jk7==(0x184b+2073-0x205f)||e7jk7==(0x1850+2074-0x2064)){var FAVYje94=bjJCPZ.indexOf('\x26');if(FAVYje94>(0x184a+2072-0x2062)){Huvox=bjJCPZ.substr(FAVYje94);bjJCPZ=bjJCPZ.substr((0x184e+2074-0x2068),FAVYje94);}if(q1WggUO&&bjJCPZ.iEquals('\x74\x68\x69'+'\x73'))bjJCPZ=Webcrea.GetThisData();}if((q1WggUO||(!q1WggUO&&!TI9BM62f))&&(e7jk7==(0x1853+2075-0x206d)||e7jk7==(0x1858+2077-0x2073)||e7jk7==(0x185d+2079-0x2079)))xB4X1C4we=true;try{if(Webcrea.IsFuncInnerVal(bjJCPZ)){bjJCPZ=Webcrea.GetFuncInnerVal(bjJCPZ);}else {bjJCPZ=eval(bjJCPZ);}TQOU30cs.item=bjJCPZ+Huvox;bjJCPZ+=Huvox;}catch(e){}}if(IsDigit(bjJCPZ)&&G7Soh){var rK3hqkpQ=false;var uiHMKN=KNakLv1j;var y5XuUpLgJ=(0x1865+2081-0x2086);while(true){var k6H5pH=false;uiHMKN++;if(uiHMKN>=baIYLte8B.length){uiHMKN--;break;}else {var DCZKEFQaA=baIYLte8B[uiHMKN-(0x1870 + 2085 - 0x2094)];var mghLKA=baIYLte8B[uiHMKN];if(IsNumber(DCZKEFQaA.item.toString())){y5XuUpLgJ=DCZKEFQaA.item;k6H5pH=true;}var A2yDgpwWO=mghLKA.item;if(Webcrea.IsWhereOper(A2yDgpwWO)>=(0x1878+2088-0x20a0)){uiHMKN--;break;}if((k6H5pH||rK3hqkpQ)&&Webcrea.IsArithmetic(A2yDgpwWO)>=(0x187b+2089-0x20a4)){uiHMKN++;var KckwlQ1Uf=baIYLte8B[uiHMKN];var NSxTwyh=KckwlQ1Uf.item;if(KckwlQ1Uf.type==(0x188d+2095-0x20b8)||KckwlQ1Uf.type==(0x1892+2096-0x20bd)||KckwlQ1Uf.type==(0x1898+2098-0x20c4)){try{if(Webcrea.IsFuncInnerVal(NSxTwyh)){NSxTwyh=Webcrea.GetFuncInnerVal(NSxTwyh);}else {NSxTwyh=eval(NSxTwyh);}objASub.item=NSxTwyh;}catch(e){}}if(IsNumber(NSxTwyh))y5XuUpLgJ=eval(y5XuUpLgJ+A2yDgpwWO+NSxTwyh);rK3hqkpQ=true;}}}if(rK3hqkpQ){KNakLv1j=uiHMKN;bjJCPZ=y5XuUpLgJ;}}if(XhdQK7&&XhdQK7.item.toString().toLowerCase()=='\x6c\x69\x6b'+'\x65'){if(e7jk7==(0x1893+2097-0x20c2)&&!rozhy65)bjJCPZ='\x25'+bjJCPZ+'\x25';else if(e7jk7==(0x1894+2097-0x20c4))bjJCPZ=bjJCPZ+'\x25';}if(Q9ZPa)x0rNlYAJv+='\x20';if(xB4X1C4we){if(q1WggUO&&bjJCPZ.indexOf("\x27")>=(0x1896+2098-0x20c8))bjJCPZ=bjJCPZ.replaceAll("\x27","\x27\x27");x0rNlYAJv+="\x27";}else if(e7jk7==(0x18a1+2101-0x20d2)||e7jk7==(0x18a6+2103-0x20d8)||e7jk7==(0x18ab+2105-0x20de)){if(Webcrea.IsEmpty(bjJCPZ))bjJCPZ='\x30';}x0rNlYAJv+=bjJCPZ;if(xB4X1C4we)x0rNlYAJv+="\x27";}return x0rNlYAJv;},
	this.MakeQueryParam = function()
	{
		var param = arguments[0];
		if(Webcrea.IsString(param) && param.indexOf("'")>=0) param = param.replaceAll("'", "''");
		return param;
	},
	this.FindNodeAllPublic = function(node, mode, findName, arr)
	{
		return this.FindNodeAll(node, mode, findName, arr, true);
	},
	this.FindNodeAll = function(node, mode, findName, arr, bNotRecursive)
	{
		if(!bNotRecursive && Webcrea.IsEmpty(node)) node = document.body;
		else if(bNotRecursive && Webcrea.IsNull(node)) return;
		var childNodes = node.childNodes;
		for(var i=0; i < childNodes.length; i++)
		{
			childNode = childNodes[i];
			if(!childNode) break;
			if (childNode.nodeName == 'xml') continue;
			if (childNode.nodeName == '#text') continue;
			if (childNode.nodeName == '#comment') continue;
			var orgName = childNode.nodeName;
			var orgAttr = childNode.getAttribute(mode);
			if(orgName) orgName = orgName.toLowerCase();
			if(orgAttr) orgAttr = orgAttr.toLowerCase();
			if(findName) findName = findName.toLowerCase();
			if(mode == 'name' && orgName == findName) arr[arr.length] = childNode;
			else if(childNode.attributes && orgAttr == findName) arr[arr.length] = childNode;
			if(Webcrea.IsEmpty(childNode)) continue;
			this.FindNodeAll(childNode, mode, findName, arr, bNotRecursive);
		}
	},
	this.FindNodePublic = function(node, mode, findName, dataRowNo)
	{
		return this.FindNode(node, mode, findName, false, dataRowNo, true);
	},
	this.FindNode = function(node, mode, findName, bLast, dataRowNo, bNotRecursive)
	{
		var findNode;
		if(!bNotRecursive && Webcrea.IsNull(node)) node = document.body;
		else if(bNotRecursive && Webcrea.IsNull(node)) return;
		var childNodes = node.children;
		if(!childNodes) childNodes = node.childNodes;
		for(var i=0; i < childNodes.length; i++) { 
			childNode = childNodes[i];
			if(!childNode) break;
			if (childNode.nodeName == 'html') continue;
			if (childNode.nodeName == 'xml') continue;
			if (childNode.nodeName == '#text') continue;
			if (childNode.nodeName == '#comment') continue;
			var orgName = childNode.nodeName;
			var orgAttr = childNode.getAttribute(mode);
			var rowNo = childNode.getAttribute('rowno');
			if(orgName) orgName = orgName.toLowerCase();
			if(orgAttr) orgAttr = orgAttr.toLowerCase();
			if(mode != 'name' && mode != 'id' && !orgAttr) orgAttr = childNode.getAttribute(mode.toLowerCase());
			if(findName) findName = findName.toLowerCase();
			if(mode == 'name' && orgName == findName) {
				findNode = childNode;
				if(bLast)
				{
					while(childNode)
					{
						childNode = childNode.nextElementSibling;
						if(!childNode) break;
						orgName = childNode.nodeName;
						if(orgName) orgName = orgName.toLowerCase();
						if(childNode && orgName == findName){
							findNode = childNode;
						}
					}
				}
				break;
			}
			else if(childNode.attributes && ((orgAttr && orgAttr == findName) || (Webcrea.IsEmpty(findName) && !Webcrea.IsEmpty(orgAttr)))){
				var bFind = true;
				if(!Webcrea.IsEmpty(rowNo) && !Webcrea.IsEmpty(dataRowNo) && rowNo != dataRowNo) bFind = false;
				if(bFind)
				{
					findNode = childNode;
					if(bLast)
					{
						while(childNode)
						{
							childNode = childNode.nextElementSibling;
							if(!childNode) break;
							orgAttr = childNode.getAttribute(mode);
							if(orgAttr) orgAttr = orgAttr.toLowerCase();
							if(childNode.attributes && orgAttr == findName){
								if(!Webcrea.IsEmpty(rowNo) && !Webcrea.IsEmpty(dataRowNo) && rowNo != dataRowNo) bFind = false;
								if(bFind) findNode = childNode;
							}
						}
					}
					break;
				}
			}
			if(childNode) findNode = this.FindNode(childNode, mode, findName, bLast, dataRowNo, bNotRecursive);
			if(findNode) break;
		}
		return findNode;
	},
	this.RemoveChildNode = function(root)
	{
		var childNodes = root.childNodes;
		for(var i=childNodes.length-1; i>=0; i--) root.removeChild(childNodes[i]);
	},
	this.Format = function(currNode, bMask)
	{
		var mask = currNode.getAttribute('mask');
		var realType = currNode.getAttribute('realType');
		var type = currNode.getAttribute('type');
		if(mask == undefined || !type) return;
		if(currNode.disabled || currNode.readOnly) return;
		if(realType && (realType.toLowerCase() == 'date' || realType.toLowerCase() == 'month' || realType.toLowerCase() == 'datetime'))
		{
			var value = currNode.value;
			if(mask.length < 5) return;
		}
		if(type != 'date' && type != 'month' && type != 'datetime-local')
		{
			var value = Webcrea.FormatValue(currNode, bMask);
			if(value != currNode.value)
			{
				if(Webcrea.IsIE() && (event.type == 'focus' || event.type == 'click'))
				{
					var nSelStart = currNode.selectionStart;
					currNode.setAttribute('selectionStart', nSelStart);
				}
				currNode.value = value;
				if(Webcrea.IsIE() && event && (event.type == 'focus' || event.type == 'click')) currNode.select();
			}
		}
	},
	this.FormatValue = function(currNode, bMask, value)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(Webcrea.IsNull(value))
		{
			if(Webcrea.IsEditTd(currNode)) value = currNode.getAttribute('value');
			else value = currNode.value;
		}
		var orgmask = currNode.getAttribute('orgmask');
		var mask = currNode.getAttribute('mask');
		var type = currNode.getAttribute('realType');
		var bDate = false;
		var bNumber = false;
		var bDigit = false;
		var bAsteriskMask = Webcrea.IsAsteriskMask(currNode);
		if(bAsteriskMask) mask = orgmask;
		if(!Webcrea.IsEmpty(value))
		{
			var bNumberType = Webcrea.IsNumberType(value);
			var sChk = value;
			if(bNumberType) sChk = sChk.toString();
			var nMaxLen = currNode.getAttribute('maxlength');
			if(nMaxLen>0)
			{
				if(Webcrea.IsEmpty(mask))
				{
					if(nMaxLen<sChk.length)
					{
						sChk = sChk.substr(0, nMaxLen);
						value = sChk;
						if(bNumberType) value = Webcrea.NumberReDef(value);
					}
				}
				else
				{
					if(type && (type.toLowerCase() == 'date' || type.toLowerCase() == 'month')) sChk = Extract(sChk, '[0-9]');
					else if(sChk.length>=mask.length) sChk = Webcrea.Mask(sChk, mask, false, currNode);
					if(nMaxLen<sChk.length || bMask)
					{
						sChk = sChk.substr(0, nMaxLen);
						value = sChk;
						if(bNumberType) value = Webcrea.NumberReDef(value);
					}
				}
			}
		}
		if(type && (type.toLowerCase() == 'date' || type.toLowerCase() == 'month'))
		{
			if(currNode.type == 'date' || currNode.type == 'month')
			{
				value = Extract(value, '[0-9]');
				if(type.toLowerCase() == 'date') mask = 'yyyy-mm-dd';
				else if(type.toLowerCase() == 'month') mask = 'yyyy-mm';
			}
			bDate = true;
		}
		else if(type && (type.toLowerCase() == 'datetime-local' || type.toLowerCase() == 'datetime' || type.toLowerCase() == 'time'))
		{
			if(bMask)
			{
				var maskValue = Extract(mask, '#0');
				value = Extract(value, '[0-9].');
				var n = value.indexOf('.');
				if(n>0) value = value.substr(0, n);
				if(type.toLowerCase() == 'time' && maskValue.length<value.length) value = value.substr(value.length-maskValue.length);
			}
		}
		if(type && type.toLowerCase() == 'number')
		{
			var sChk = Webcrea.ReplaceAll(value, ',', '');
			if(Webcrea.IsNaN(sChk, true)) value = 0;
			bNumber = true;
		}
		else if(type && type.toLowerCase() == 'digit') bDigit = true;
		if(Webcrea.IsEmpty(value) || (Webcrea.IsString(value) && Webcrea.IsEmpty(value.trim())))
		{
			if(bNumber && nFileVersion<7020180927002) value=0;
			return value;
		}
		if(mask == undefined) return value;
		if(bMask)
		{
			var evt=window.event;
			if(evt)
			{
				var obj=Webcrea.GetEventNode(evt);
				if(obj && evt.type == 'keydown' && obj.id == currNode.id) return value;
			}
		}
		if(bMask != undefined && !bMask)
		{
			if(bNumber || bDigit)
			{
				if(bNumber && !Webcrea.IsEmpty(orgmask)) value = Webcrea.Mask(value, orgmask, false, currNode);
				else value = Webcrea.ReplaceAll(value, ',', '');
			}
			if(bDate && value.length > 4)
			{
				value = Extract(value, '[0-9]');
			}
			else if(!Webcrea.IsEmpty(mask) && !bNumber) value = Webcrea.Mask(value, mask, false, currNode);
			return value;
		}
		if(bNumber || bDigit)
		{
			if(bDigit)
			{
				var chkValue = value;
				if(bAsteriskMask) chkValue = Webcrea.ReplaceAll(chkValue, '*', '');
				if(!Webcrea.IsDigit(chkValue)) return '';
			}
			if(!Webcrea.IsEmpty(mask))
			{
				if(!Webcrea.IsEmpty(orgmask)) value = Webcrea.Mask(value, orgmask, true, currNode);
				else
				{
					var nPoint = mask.indexOf('.');
					if(nPoint > 0)
					{
						nPoint = mask.length - nPoint - 1;
						var bRoundSkip = false;
						if(WebcreaInfo.nNumberMode)
						{
							var valueChk = value.toString();
							var nValuePoint = valueChk.indexOf('.');
							if(nValuePoint<0) bRoundSkip = true;
							else
							{
								nValuePoint = valueChk.length - nValuePoint - 1;
								if(nValuePoint<=nPoint) bRoundSkip = true;
							}
						}
						if(!bRoundSkip)
						{
							value = round(value, nPoint);
							value = value.toString();
							var nPoint1 = 0;
							if(value.indexOf('.')>=0) nPoint1 = value.length - value.indexOf('.') - 1;
							else value += value = '.';
							var nPoint2 = nPoint - nPoint1;
							if(nPoint2>0 && !WebcreaInfo.nNumberMode)
							{
								for(var i=0; i<nPoint2; i++) value += '0';
							}
							else value = Webcrea.NumberReDef(value);
						}
					}
					else if(bNumber) value = round(value, 0);
					if(mask.indexOf(',') > 0)
					{
						var nSeq = mask.lastIndexOf(',');
						var nPointChk = mask.lastIndexOf('.');
						if(nPointChk<0) nPointChk = 0;
						var maskLast = mask.substr(nSeq-nPointChk+1);
						nSeq = maskLast.length;
						value = Webcrea.Comma(value, nSeq);
					}
					else value = Webcrea.Mask(value, mask, true, currNode);
				}
			}
			else if(bNumber) value = Webcrea.Comma(value);
		}
		else if(bDate)
		{
			if(Webcrea.IsEmpty(mask) || Webcrea.IsEmpty(value)) return value;
			value = value.substr(0, mask.length);
			if(bMask && mask.length>0) value = Extract(value, '[0-9]');
			if(!IsDigit(value))
			{
				var str = this.FormatValue(currNode, false, value);
				if(!IsDigit(str)) return '';
				else return value;
			}
			var bReverse = false;
			if(mask.substr(0, 2) == 'dd')
			{
				var reverseDate = currNode.getAttribute('reverseDate');
				if(!Webcrea.IsEmpty(reverseDate))
				{
					if(reverseDate == value) bReverse=true;
					else
					{
						var d1 = value.substr(6, 2);
						var m1 = value.substr(4, 2);
						var y1 = value.substr(0, 4);
						if(d1+m1+y1 == reverseDate) bReverse=false;
						else bReverse=true;
					}
				}
			}
			if((value.length<8 && currNode.type == 'date') || (value.length<6 && currNode.type == 'month'))
			{
				var sZero = '';
				for(var i=0; i<8-value.length; i++) sZero += '0';
				value = sZero + value;
			}
			var d = value.substr(6, 2);
			var m = value.substr(4, 2);
			var y = value.substr(0, 4);
			if(bReverse)
			{
				d = value.substr(0, 2);
				m = value.substr(2, 2);
				y = value.substr(4, 4);
			}
			var sTmp = mask;
			sTmp = sTmp.replace	("dd","<e>");
			sTmp = sTmp.replace	("d","<d>");
			sTmp = sTmp.replace	("<e>",Webcrea.AddZero(d));
			sTmp = sTmp.replace	("<d>",d);
			sTmp = sTmp.replace	("mm","<n>");
			sTmp = sTmp.replace	("m","<m>");
			sTmp = sTmp.replace	("<m>",m+1);
			sTmp = sTmp.replace	("<n>",Webcrea.AddZero(m));
			sTmp = sTmp.replace ("yyyy",y);
			value = sTmp;
			if(mask.substr(0, 2) == 'dd')
			{
				var s = Extract(value, '[0-9]');
				currNode.setAttribute('reverseDate', s);
			}
		}
		else if(!Webcrea.IsEmpty(mask) && !Webcrea.IsEmpty(value)) value = Webcrea.Mask(value, mask, true, currNode);
		return value;
	},
	this.Mask = function(value, mask, bMask, currNode)
	{
		var bBlankSetMode = false;
		var type = currNode.getAttribute('realType');
		if(type && (type.toLowerCase() == 'date' || type.toLowerCase() == 'month' || type.toLowerCase() == 'number' || type.toLowerCase() == 'digit' || type.toLowerCase() == 'time')) bBlankSetMode = true;
		if(mask[0] == '{' && mask.substr(1, 5) == 'value') return Webcrea.MaskValue(value, mask, bMask, currNode);
		else if(mask.substr(0, 5) == 'size=' || mask.substr(0, 6) == 'isize=')
		{
			if(type.toLowerCase() != 'number') return value;
			return Webcrea.MaskSize(value, mask, bMask, currNode);
		}
		else if(mask.toLowerCase().substr(0, 5) == 'mask=')
		{
			return Webcrea.MaskAsterisk(value, mask, bMask, currNode);
		}
		if(!bMask && type && type.toLowerCase() == 'number')
		{
			if(Webcrea.IsNumberType(value)) value = value.toString();
			value = Extract(value, '[0-9].');
			return value;
		}
		let sPointValue;
		if(bBlankSetMode && type.toLowerCase() == 'number')
		{
			if(Webcrea.IsNumberType(value)) value = value.toString();
			value = Extract(value, '[0-9].');
			if(!bMask) return value;
			let nPoint = 0;
			let arrMask = mask.split('.');
			if(arrMask.length > 1) nPoint = arrMask[1].length;
			if(nPoint>0)
			{
				mask = arrMask[0];
				let arrValue = value.split('.');
				if(arrValue.length > 1) sPointValue = arrValue[1];
				else sPointValue = Webcrea.AddZero('', nPoint);
				value = arrValue[0];
			}
		}
		if(bBlankSetMode && bMask)
		{
			if(mask.length>0 && Webcrea.IsNumberType(value)) value = value.toString();
			let nValue = mask.length-1;
			var arrValue = [];
			for(var i=mask.length-1; i>=0; i--)
			{
				if(mask[i] == '#' || mask[i] == '0')
				{
					if(Webcrea.IsEmpty(value))
					{
						arrValue[i] = '0';
						continue;
					}
					var str = value[nValue];
					if(Webcrea.IsNull(str) && type.toLowerCase() == 'number')
					{
						while(Webcrea.IsNull(str))
						{
							nValue--;
							if(nValue<0) break;
							str = value[nValue];
						}
					}
					else nValue--;
					if(Webcrea.IsEmpty(str)) str = value[value.length-1];
					value = value.substr(0, value.length-1);
					arrValue[i] = str;
					if(Webcrea.IsEmpty(value) && type.toLowerCase() == 'number') break;
				}
				else arrValue[i] = mask[i];
			}
			for(var i=0; i<arrValue.length; i++)
			{
				if(Webcrea.IsNull(arrValue[i])) continue;
				value += arrValue[i];
			}
			if(!Webcrea.IsEmpty(sPointValue)) value = value + '.' + sPointValue;
			return value;
		}
		if(bMask && !Webcrea.IsEmpty(mask)) value = this.Mask(value, mask, false, currNode);
		if(bBlankSetMode && !Webcrea.IsEmpty(mask) && type.toLowerCase() == 'time')
		{
			var maskValue = Extract(mask, '#0');
			var nAddZero = maskValue.length - value.length;
			for(var i=0; i<nAddZero; i++) value = '0' + value;
		}
		var str = '';
		var sMask = '';
		var n = 0;
		for(var i=0; i<mask.length; i++)
		{
			var nAdd = 0;
			if(mask[i] == '#' || mask[i] == '0') sMask += mask[i];
			else
			{
				var s = value.substr(n, sMask.length);
				if(s.length < sMask.length)
				{
					for(var j=0; sMask.length - s.length; j++)
					{
						if(bBlankSetMode) s = '0' + s;
						else s += '0';
					}
				}
				if(bMask) str = str + s + mask[i];
				else
				{
					str = str + s;
					if(mask[i] == value.substr(n+sMask.length, 1)) nAdd = 1;
				}
				n += sMask.length;
				if(!bMask) n += nAdd;
				sMask = '';
			}
		}
		if(!Webcrea.IsEmpty(sMask))
		{
			var s = value.substr(n, sMask.length);
			if(s.length < sMask.length)
			{
				for(var j=0; sMask.length - s.length; j++)
				{
					if(bBlankSetMode) s = '0' + s;
					else s += '0';
				}
			}
			str += s;
		}
		if(!Webcrea.IsEmpty(str)) value = str;
		return value;
	},
	this.MaskAsterisk = function(value, mask, bMask, currNode)
	{
		var sRet = '';
		var currMask = currNode.getAttribute('mask');
		for(var i=0; i<currMask.length; i++)
		{
			var sValue = '';
			if(Webcrea.IsEmpty(value)) sValue = '0';
			else sValue = value[0];
			if(currMask[i] == '#' || currMask[i] == '0')
			{
				sRet += sValue;
				value = value.substr(1, value.length);
			}
			else if(currMask[i] == '*')
			{
				sRet += currMask[i];
			}
			else if(bMask) sRet += currMask[i];
		}
		return sRet;
	},
	this.MaskSize = function(value, mask, bMask, currNode)
	{
		var sRet = value;
		if(!bMask)
		{
			sRet = Webcrea.ReplaceAll(sRet, ',', '');
			return sRet;
		}
		if(mask.substr(0, 5) == 'size=')
		{
			var maxLen = mask.substr(5, mask.length);
			if(maxLen>0)
			{
				currNode.setAttribute('maxlength', maxLen);
			}
		}
		else if(mask.substr(0, 6) == 'isize=')
		{
			var maxLen = mask.substr(6, mask.length);
			if(maxLen>0)
			{
				var currMask = currNode.getAttribute('mask');
				var nDP = currMask.indexOf('.');
				if(nDP>0)
				{
					var sDP = currMask.substr(nDP);
					maxLen = Number(maxLen) + sDP.length;
					currNode.setAttribute('maxlength', maxLen);
				}
				currNode.setAttribute('positive', maxLen);
			}
		}
		sRet = Webcrea.Comma(sRet);
		return sRet;
	},
	this.MaskValue = function(value, mask, bMask, currNode)
	{
		var sRet = '';
		var bNumberType = false;
		var type = currNode.getAttribute('realType');
		if(type && type.toLowerCase() == 'number') bNumberType = true;
		var orgmask = mask;
		var orgvalue = value;
		mask = mask.substr(6, mask.length);
		if(!bMask)
		{
			var value_b = currNode.getAttribute('orgmaskvalue');
			if(!Webcrea.IsNull(value_b)) sRet = value_b;
			return sRet;
		}
		var arrMask = Webcrea.MakeToken(mask, '', true);
		if(arrMask[0] == '}')
		{
			sRet = value;
			for(var i=1; i<arrMask.length; i++) sRet += arrMask[i];
			if(bNumberType) sRet = Webcrea.Comma(sRet);
		}
		else if(arrMask[0] == '|')
		{
			var arrOpt = [];
			var arrAddChar = [];
			var bMask = true;
			for(var i=1; i<arrMask.length; i++)
			{
				if(arrMask[i] == '}')
				{
					bMask = false;
					continue;
				}
				if(bMask) arrOpt[arrOpt.length] = arrMask[i];
				else arrAddChar[arrAddChar.length] = arrMask[i];
			}
			var bComma = false;
			var bZeroHide = false;
			var nDP = 0;
			for(var i=0; i<arrOpt.length; i++)
			{
				if(arrOpt[i] == ',') bComma = true;
				else if(arrOpt[i].indexOf('p')>=0)
				{
					var sOpt = Extract(arrOpt[i], '[0-9]');
					nDP = Webcrea.NumberReDef(sOpt[sOpt.length-1]);
					bZeroHide = true;
				}
				else if(Webcrea.IsNumber(arrOpt[i])) nDP = Webcrea.NumberReDef(arrOpt[i]);
			}
			if(bComma || bNumberType) value = Webcrea.Comma(value);
			if(nDP>0)
			{
				var n = value.indexOf('.');
				if(n>0) value = value.substr(0, n+nDP+1);
			}
			if(bZeroHide)
			{
				for(var i=value.length-1; i>=0; i--)
				{
					if(value[i] == '0')
					{
						value = value.substr(0, value.length-1);
						i++;
					}
				}
			}
			sRet = value;
			for(var i=0; i<arrAddChar.length; i++)
			{
				sRet += arrAddChar[i];
			}
		}
		currNode.setAttribute('orgmaskvalue', orgvalue);
		return sRet;
	},
	this.Comma = function()
	{
		var value = arguments[0];
		var nSeq = arguments[1];
		if(!nSeq) nSeq = 3;
		var valueOrg = value;
		if(Webcrea.IsNumber(value)) value = value.toString();
		if(nSeq >= value.length) return valueOrg;
		var reg = '/(^[+-]?\\d+)(\\d{' + nSeq + '})/';
		reg = eval(reg);
		value +='';
		while(reg.test(value)) value = value.replace(reg,'$1'+','+'$2');
		return value;
	},
	this.int = function(str)
	{
		return Webcrea.Number(arguments[0]);
	},
	this.Val = function(str)
	{
		return Webcrea.Number(arguments[0]);
	},
	this.Number = function(str)
	{
		if(!str) return 0;
		if(Webcrea.IsNumber(str, true))
		{
			var bMinus = false;
			if(str<0) bMinus = true;
			var ret = floor(str);
			if(bMinus) ret *= -1;
			return ret;
		}
		var n=0;
		var sNumber='';
		var ch = str[n++];
		var bNumber = IsDigit(ch);
		if(bNumber) sNumber += ch;
		while(bNumber)
		{
			ch = str[n++];
			bNumber = IsNumber(ch);
			if(bNumber) sNumber += ch;
			else break;
			if(n>=str.length) break;
		}
		return floor(Webcrea.NumberReDef(sNumber));
	},
	this.NumberReDef = function()
	{
		var nRet = arguments[0];
		if(!isNaN(nRet) && typeof nRet === 'number') return nRet;
		if(WebcreaInfo.bBigNumber && nRet && nRet.length>15)
		{
			var n = nRet.search(new RegExp('[^0-9.]','g'));
			if(n>0) nRet = NaN;
			return nRet;
		}
		nRet *= 1;
		return nRet;
	},
/*mode : number(숫자), eng(영문만, 모두), engUpper(영문만, 대문자), engLower(영문만, 소문자)*/
	this.InputCheck = function(ctl, mode)
	{
		if(event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 38 || event.keyCode == 40) return;
		if(event.keyCode == 8 || event.keyCode == 9) return;
		if(ctl.disabled || ctl.readOnly) return;
		if(event.keyCode == 16) return;
		if(event.keyCode == 46)
		{
			if(Webcrea.IsAsteriskMask(ctl) && Webcrea.IsEditTd(ctl))
			{
				if(!Webcrea.IsEnable(ctl) || Webcrea.IsReadOnly(ctl)) return;
				var inputbox = Webcrea.GetEditTdInputBox(ctl);
				if(!inputbox) return;
				ctl.setAttribute('value', '');
				inputbox.value = '';
			}
			return;
		}
		if(event.ctrlKey && event.keyCode != 86) return;
		if(Webcrea.IsMultilineMainDiv(ctl)) return;
		if(event.keyCode == 13)
		{
			if(!ctl || (ctl && ctl.tagName != 'TEXTAREA')) return;
		}
		var nPoint = 0;
		var GetMask = function(mask)
		{
			if(!mask) return;
			var arr = mask.split('.');
			if(arr.length > 1) nPoint = arr[1].length;
		};
		var mask = ctl.getAttribute('mask');
		var orgmask = ctl.getAttribute('orgmask');
		var nMaxLen = ctl.getAttribute('maxlength');
		var nPositive = ctl.getAttribute('positive');
		var noEdit = ctl.getAttribute('editable');
		var bEditTd = Webcrea.IsEditTd(ctl);
		var bAsteriskMask = Webcrea.IsAsteriskMask(ctl);
		var ctlOrg = ctl;
		if(bEditTd)
		{
			if(!Webcrea.IsEnable(ctl) || Webcrea.IsReadOnly(ctl)) return;
			ctl = Webcrea.GetEditTdInputBox(ctl);
			if(!ctl) return;
		}
		if(noEdit && noEdit.iEquals('noedit')) return;
		GetMask(mask);
		var currObj = this.GetEventObject();
		var currId;
		var cellInfo;
		if(currObj) currId = currObj.GetCellId(ctl);
		if(!Webcrea.IsEmpty(currId)) cellInfo = currObj.GetCellInfo(currId);
		if(cellInfo && !Webcrea.IsEmpty(cellInfo.validChar))
		{
			var checkValue = Extract(ctl.value, cellInfo.validChar);
			if(Webcrea.IsEmpty(checkValue))
			{
				ctl.value = '';
				event.preventDefault?event.preventDefault():event.returnValue=false;
				if(!Webcrea.IE()) return;
			}
			else ctl.value = checkValue;
		}
		var InsertMaskChar = function()
		{
			var currCtl = arguments[0];
			var value = currCtl.value;
			if(Webcrea.IsEmpty(value)) return;
			var orgmask = currCtl.getAttribute('orgmask');
			if(Webcrea.IsEmpty(orgmask)) return;
			var selText = Webcrea.GetSelectionText();
			if(!Webcrea.IsEmpty(selText)) return;
			var maxLen = currCtl.getAttribute('maxlength');
			var currLen = value.length;
			var bChg = false;
			if(currLen>0 && currLen==maxLen)
			{
				var currPos = currCtl.selectionStart;
				if(currPos<currLen)
				{
					var char1 = value.substr(0, currPos);
					var char2 = value.substr(currPos+1);
					var addChar = '';
					if(event.keyCode >=96 && event.keyCode <=105) addChar = event.keyCode - 96;
					else if(event.keyCode >=48 && event.keyCode <= 57) addChar = String.fromCharCode(event.keyCode);
					else return;
					var value1 = char1 + addChar + char2;
					if(value != value1) bChg = true;
					currCtl.value=value1;
					Webcrea.MoveCursor(currCtl, currPos+1);
					if(bChg && event.type == 'keydown')
					{
						var cellId = currObj.GetCellId(ctl);
						if(typeof window[currObj.divPage][currObj.divPosOrg][cellId].OnCHANGE != 'undefined') window[currObj.divPage][currObj.divPosOrg][cellId].OnCHANGE(ctl);
					}
					event.preventDefault?event.preventDefault():event.returnValue=false;
					if(!Webcrea.IE()) return;
				}
			}
		};
		if(mode == 'number' || mode == 'digit')
		{
			if(event.shiftKey && event.keyCode ==9) return;
			if(event.shiftKey && event.keyCode != 37 && event.keyCode != 39 && event.keyCode != 35 && event.keyCode != 36)
			{
				event.preventDefault?event.preventDefault():event.returnValue=false;
				if(!Webcrea.IE()) return;
			}
			if((96<=event.keyCode && event.keyCode<=105) || (48<=event.keyCode && event.keyCode<=57))
			{
				var bISize = false;
				if(orgmask.substr(0, 6) == 'isize=' && nMaxLen>0)
				{
					if(nPoint>0 && nMaxLen>0) nPositive = nMaxLen - nPoint - 1;
					bISize = true;
				}
				var value = ctl.value;
				var arrValue = value.split('.');
				if(bISize)
				{
					if(arrValue.length > 1 && arrValue[0].length == nPositive)
					{
						var sNewValue = arrValue[0].substr(0, nPositive) + '.' + arrValue[1];
						ctl.value =  sNewValue;
					}
					if(arrValue.length > 1 && arrValue[0].length > nPositive)
					{
						var sNewValue = arrValue[0].substr(0, arrValue[0].length-1) + '.' + arrValue[1];
						ctl.value =  sNewValue;
					}
					else if(arrValue.length==1 && arrValue[0].length >= nPositive)
					{
						var sNewValue = value.substr(0, value.length-1);
						ctl.value =  sNewValue;
					}
				}
			}
			if(!ctl) return;
			var type = ctl.getAttribute('realType');
			if(((96<=event.keyCode) && (event.keyCode<=105)) || ((48<=event.keyCode) && (event.keyCode<=57)) || (event.keyCode==8) || (event.keyCode==37) || (event.keyCode==39) || (event.keyCode==46) || (event.keyCode==9) || (event.keyCode==109) || (event.keyCode==189)
				|| (event.ctrlKey && (event.keyCode == 67 || event.keyCode == 86 || event.keyCode == 65)) || (event.keyCode==36) || (event.keyCode==35))
			{
				if((type == 'date' || type == 'time' || mode == 'digit') && (event.keyCode==109 || event.keyCode==189))
				{
					event.preventDefault?event.preventDefault():event.returnValue=false;
					if(!Webcrea.IE()) return;
				}
				if(event.ctrlKey && event.keyCode == 86)
				{
					if(bAsteriskMask)
					{
						event.preventDefault?event.preventDefault():event.returnValue=false;
						if(!Webcrea.IE()) return;
					}
					Webcrea.preValue = ctl.value;
					Webcrea.bPasteKey = true;
					Webcrea.bChangeForceEvent = true;
					Webcrea.bModifyForceEvent = true;
				}
				var sSelText = '';
				if(mode == 'number')
				{
					sSelText = Webcrea.GetSelectionText();
				}
				var value = ctl.value;
				if(bAsteriskMask)
				{
					var nPos = value.length;
					if(nPos>=nMaxLen)
					{
						event.preventDefault?event.preventDefault():event.returnValue=false;
						if(!Webcrea.IE()) return;
					}
					var addVal = '';
					if(event.keyCode >=96 && event.keyCode <=105) addVal = event.keyCode - 96;
					else if(event.keyCode >=48 && event.keyCode <= 57) addVal = String.fromCharCode(event.keyCode);
					var valueOrg = ctlOrg.getAttribute('value');
					valueOrg += addVal;
					ctlOrg.setAttribute('value', valueOrg);
					var maskValue = Webcrea.FormatValue(ctlOrg, false, valueOrg);
					var chkVal = maskValue[nPos];
					value +=  chkVal;
					ctl.value = value;
					event.preventDefault?event.preventDefault():event.returnValue=false;
					if(!Webcrea.IE()) return;
				}
				else InsertMaskChar(ctl);
				if(type != 'date' && type != 'time' && mode == 'number' && (((96<=event.keyCode) && (event.keyCode<=105)) || ((48<=event.keyCode) && (event.keyCode<=57))))
				{
					var bPointExist = false;
					if((value.length>1 && value[1]=='.') || (value.length>2 && value[2]=='.')) bPointExist = true;
					if(value.length==1 && !bPointExist && sSelText != '' && (value[0] == 0 || value[0] == '-') && (event.keyCode==96 || event.keyCode==48))
					{
						event.preventDefault?event.preventDefault():event.returnValue=false;
						if(!Webcrea.IE()) return;
					}
					else
					{
						if(value[0] == 0 && !bPointExist)
						{
							value = value.substr(1);
							ctl.value = value;
						}
						event.returnValue=true;
					}
				}
				else if(mode == 'number' && (event.keyCode==109 || event.keyCode==189))
				{
					if(sSelText != '' && sSelText.length == value.length) return;
					if(value == '0') ctl.value = '-';
					else if(value[0] == '-')
					{
						ctl.value = value.substr(1);
						Webcrea.bChangeEvent = true;
						Webcrea.bModifyForceEvent = true;
					}
					else if(value[0] != 0)
					{
						ctl.value = '-' + value;
						Webcrea.bChangeEvent = true;
						Webcrea.bModifyForceEvent = true;
					}
					else if(value[0] == 0 && value[1] == '.')
					{
						ctl.value = '-' + value;
						Webcrea.bChangeEvent = true;
						Webcrea.bModifyForceEvent = true;
					}
					event.preventDefault?event.preventDefault():event.returnValue=false;
					if(!Webcrea.IE()) return;
				}
				else event.returnValue=true;
			}
			else if(type != 'date' && type != 'time' && nPoint >= 0 && ((event.keyCode==110) || (event.keyCode==190)) && ctl.value.length>0 && ctl.value.indexOf('.')<0)
			{
				if(ctl.value.length == 1 && ctl.value[0]=='-') ctl.value = '-0';
				else if(ctl.value.length>1 && ctl.value != '-0') ctl.value = Webcrea.NumberReDef(ctl.value);
				event.returnValue=true;
			}
			else
			{
				if(event.keyCode == 229 || event.ctrlKey) Webcrea.bPasteKey = true;
				else
				{
					var value = ctl.value;
					var value1 = value.replace(/[\ㄱ-ㅎㅏ-ㅣ가-힣]/g, '');
					if(value1 != value) bChg = true;
					if(bChg) ctl.value=value1;
				}
				event.preventDefault?event.preventDefault():event.returnValue=false;
				if(!Webcrea.IE()) return;
			}
		}
		else if(mode == 'eng' || mode == 'engUpper')
		{
			var bChg=false;
			var value=ctl.value;
			if(mode == 'engUpper') value=value.toUpperCase();
			if(value != ctl.value) bChg = true;
			if(Webcrea.IsNull(value)) value = '';
			var value1=value.replace(/[\ㄱ-ㅎㅏ-ㅣ가-힣]/g, '');
			if(value1 != value) bChg = true;
			if(bChg) ctl.value=value1;
			if((bChg && event.type == 'keyup') || event.type == 'change') Webcrea.bChangeEvent = true;
		}
		else if(mode == 'engLower') 
		{
			var bChg=false;
			var value=ctl.value.toLowerCase();
			if(value != ctl.value) bChg = true;
			if(Webcrea.IsNull(value)) value = '';
			var value1=value.replace(/[\ㄱ-ㅎㅏ-ㅣ가-힣]/g, '');
			if(value1 != value) bChg = true;
			if(bChg) ctl.value=value1;
			if((bChg && event.type == 'keyup') || event.type == 'change') Webcrea.bChangeEvent = true;
		}
		else if(mode == 'upper' || mode == 'lower')
		{
			var bChg=false;
			var value=ctl.value;
			if(mode == 'upper') value=value.toUpperCase();
			else if(mode == 'lower') value=value.toLowerCase();
			if(value != ctl.value) bChg = true;
			var value1=value;
			if(!WebcreaInfo.UnicodeMaxLength && nMaxLen>0)
			{
				var nLen = lenb(value1);
				if(nMaxLen<nLen) value1 = midb(value1, 0, nMaxLen);
				if(value1 != value) bChg = true;
			}
			if(bChg) ctl.value=value1;
			if((bChg && event.type == 'keyup') || event.type == 'change') Webcrea.bChangeEvent = true;
		}
		else if(ctl && (!WebcreaInfo.UnicodeMaxLength || ctl.tagName == 'TEXTAREA') && nMaxLen>0 && !Webcrea.IsEmpty(ctl.value))
		{
			var bChg=false;
			var value=ctl.value;
			if(value != ctl.value) bChg = true;
			var value1=value;
			var nLen = 0;
			if(ctl && ctl.tagName == 'TEXTAREA')
			{
				if(event.keyCode == 13 && event.type == 'keydown') nMaxLen -=1;
				var chgCRLF = this.webcreaVal + '{{{+}}}';
				value1 = Webcrea.ReplaceAll(value1, '\r\n', chgCRLF);
				value1 = Webcrea.ReplaceAll(value1, '\n', chgCRLF);
				value1 = Webcrea.ReplaceAll(value1, chgCRLF, '\r\n');
				if(WebcreaInfo.UnicodeMaxLength)
				{
					nLen = len(value1);
					if(nMaxLen<=nLen)
					{
						if(event.keyCode == 13 && event.type == 'keydown')
						{
							event.preventDefault?event.preventDefault():event.returnValue=false;
							if(!Webcrea.IE()) return;
						}
						else
						{
							if(nMaxLen<nLen && (event.type == 'keyup' || event.type =='change'))
							{
								value1 = mid(value1, 1, nMaxLen);
								ctl.value=value1;
							}
							event.preventDefault?event.preventDefault():event.returnValue=false;
							if(!Webcrea.IE()) return;
						}
					}
				}
				else
				{
					nLen = lenb(value1);
					if(nMaxLen<=nLen)
					{
						if(event.keyCode == 13 && event.type == 'keydown')
						{
							event.preventDefault?event.preventDefault():event.returnValue=false;
							if(!Webcrea.IE()) return;
						}
						else
						{
							if(nMaxLen<nLen && (event.type == 'keyup' || event.type =='change'))
							{
								value1 = midb(value1, 1, nMaxLen);
								ctl.value=value1;
							}
						}
						event.preventDefault?event.preventDefault():event.returnValue=false;
						if(!Webcrea.IE()) return;
					}
				}
			}
			else
			{
				if(!Webcrea.IsEmpty(mask) && !Webcrea.IsEmpty(value1) && mask.length<=value1.length) value1 = Webcrea.FormatValue(ctl, false);
				nLen = lenb(value1);
				if(nMaxLen<nLen) value1 = midb(value1, 1, nMaxLen);
				if(value1 != value) bChg = true;
				if(bChg) ctl.value=value1;
				if((bChg && event.type == 'keyup') || event.type == 'change') Webcrea.bChangeEvent = true;
			}
		}
	},
	this.MakeToken=function(oxHm9,rEbaXYtI,ur2WDx){IsOperaterChar=function(val){var y05XlyXUH="=!<>+-*/\%|&{}";return y05XlyXUH.indexOf(val)>=(0x18b0+2106-0x20ea);};if(oxHm9&&oxHm9=='')return;var YHpdXP=new Array();var nCM32NxL6=oxHm9.length;var I10NWL9='';var aFXi2I=(0x18c0+2112-0x2100);var DLjucZ9=true;for(var Hcxpu=(0x18ca+2115-0x210d);Hcxpu<nCM32NxL6;Hcxpu++){var NNWK7IK=oxHm9[Hcxpu];if(NNWK7IK=="\x27"||NNWK7IK=='\x22'){if(aFXi2I>(0x18d0+2117-0x2115)&&I10NWL9[aFXi2I-(0x18d6 + 2119 - 0x211c)]!='\x2e'){aFXi2I=(0x18d7+2119-0x211e);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}I10NWL9+=NNWK7IK;aFXi2I++;for(++Hcxpu;Hcxpu<nCM32NxL6;Hcxpu++){I10NWL9+=oxHm9[Hcxpu];aFXi2I++;if(oxHm9[Hcxpu]==NNWK7IK){if(Hcxpu+(0x18dc+2121-0x2124)<nCM32NxL6&&oxHm9[Hcxpu+(0x18df + 2122 - 0x2128)]=='\x2e'){I10NWL9+=oxHm9[++Hcxpu];aFXi2I++;}if(Hcxpu+(0x18e3+2123-0x212d)>=nCM32NxL6||oxHm9[Hcxpu+(0x18e6 + 2124 - 0x2131)]!=NNWK7IK)break;I10NWL9+=oxHm9[++Hcxpu];aFXi2I++;continue;}}if(aFXi2I>(0x18e7+2125-0x2134)&&I10NWL9[aFXi2I-(0x18ec + 2126 - 0x2139)]!='\x2e'){aFXi2I=(0x18ee+2127-0x213d);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}DLjucZ9=false;}else if(NNWK7IK=='\x2e'||Webcrea.IsItemChar(NNWK7IK)){DLjucZ9=false;I10NWL9+=NNWK7IK;aFXi2I++;continue;}else if(NNWK7IK=='\x2c'||NNWK7IK=='\x3b'||NNWK7IK=='\x28'||NNWK7IK=='\x29'){if(aFXi2I>(0x18f1+2128-0x2141)){aFXi2I=(0x18f4+2129-0x2145);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}aFXi2I=(0x18f7+2130-0x2149);I10NWL9+=NNWK7IK;aFXi2I++;if(aFXi2I>(0x18fb+2131-0x214e)){aFXi2I=(0x18fe+2132-0x2152);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}DLjucZ9=(NNWK7IK=='\x2c'||NNWK7IK=='\x3b'||NNWK7IK=='\x28')?true:false;}else if(NNWK7IK=='\x20'||NNWK7IK=='\t'){if(aFXi2I>(0x1901+2133-0x2156)){aFXi2I=(0x1905+2135-0x215c);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}if(ur2WDx){var i3HAkR=NNWK7IK;YHpdXP[YHpdXP.length]=i3HAkR;}if(rEbaXYtI&&rEbaXYtI>=(0x190b+2137-0x2164)&&YHpdXP.length>rEbaXYtI)break;}else {if(DLjucZ9&&(NNWK7IK=='\x2b'||NNWK7IK=='\x2d')){if(Hcxpu+(0x1910+2138-0x2169)<nCM32NxL6&&(oxHm9[Hcxpu+(0x1914 + 2140 - 0x216f)]=='\x2e'||IsDigit(oxHm9[Hcxpu+(0x1917 + 2141 - 0x2173)]))){if(aFXi2I>(0x1918+2141-0x2175)){aFXi2I=(0x191b+2142-0x2179);YHpdXP[YHpdXP.length]=I10NWL9;I10NWL9='';}aFXi2I=(0x191f+2143-0x217e);I10NWL9+=NNWK7IK;aFXi2I++;for(++Hcxpu;Hcxpu<nCM32NxL6;Hcxpu++){if(!(oxHm9[Hcxpu]=='\x2e'||IsDigit(oxHm9[Hcxpu])))break;I10NWL9+=oxHm9[Hcxpu];aFXi2I++;}Hcxpu--;if(aFXi2I>(0x1922+2144-0x2182)){aFXi2I=(0x1925+2145-0x2186);YHpdXP[YHpdXP.length]=I10NWL9;I10NWL9='';}DLjucZ9=false;continue;}}/*selecta.**/if(NNWK7IK=='\x2a'&&aFXi2I>(0x1928+2146-0x218a)&&I10NWL9[aFXi2I-(0x192e + 2148 - 0x2191)]=='\x2e'){I10NWL9+=NNWK7IK;aFXi2I++;DLjucZ9=false;continue;}if(IsOperaterChar(NNWK7IK)){if(aFXi2I>(0x192f+2149-0x2194)){aFXi2I=(0x1932+2150-0x2198);var lHsOrop=I10NWL9.trim();if(lHsOrop!='')YHpdXP[YHpdXP.length]=lHsOrop;I10NWL9='';}aFXi2I=(0x1939+2152-0x21a1);I10NWL9+=NNWK7IK;aFXi2I++;for(++Hcxpu;Hcxpu<nCM32NxL6;Hcxpu++){if(oxHm9[Hcxpu]==NNWK7IK){I10NWL9+=NNWK7IK;aFXi2I++;continue;}if(oxHm9[Hcxpu]=='\x2d'||oxHm9[Hcxpu]=='\x2b'||oxHm9[Hcxpu]=='\x26'){if(aFXi2I!=(0x1940+2154-0x21a8)||I10NWL9!='\x2f\x2a')break;}if(oxHm9[Hcxpu]=='\x2d'&&Hcxpu+(0x1941+2155-0x21ab)<nCM32NxL6&&IsDigit(oxHm9[Hcxpu+(0x1945 + 2156 - 0x21b0)]))break;if(!IsOperaterChar(oxHm9[Hcxpu]))break;I10NWL9+=oxHm9[Hcxpu];aFXi2I++;}Hcxpu--;if(aFXi2I>(0x1946+2156-0x21b2)){aFXi2I=(0x1949+2157-0x21b6);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}DLjucZ9=true;continue;}I10NWL9+=NNWK7IK;aFXi2I++;DLjucZ9=false;}}if(aFXi2I>(0x194c+2158-0x21ba)){aFXi2I=(0x1950+2160-0x21c0);YHpdXP[YHpdXP.length]=I10NWL9.trim();I10NWL9='';}return YHpdXP;},
	this.Split=function(NH3eSi,AmVzg5xQq){var E9luCPS=Webcrea.MakeToken(NH3eSi);var HQ6prj=[];var KoDeORKPj=false;for(var OYvUxHc=(0x1967+2167-0x21de);OYvUxHc<E9luCPS.length;OYvUxHc++){var Uq1W6F4D6=E9luCPS[OYvUxHc];var XKaYBAk=Uq1W6F4D6.indexOf(AmVzg5xQq);if(!Webcrea.IsQuote(Uq1W6F4D6)&&XKaYBAk>=(0x1970+2170-0x21ea)){var scAiLYodJ=Uq1W6F4D6.split(AmVzg5xQq);for(var bx6Ff4r=(0x197a+2174-0x21f8);bx6Ff4r<scAiLYodJ.length;bx6Ff4r++){if(Webcrea.IsEmpty(scAiLYodJ[bx6Ff4r])){scAiLYodJ.splice(bx6Ff4r,(0x197f+2175-0x21fd));bx6Ff4r--;}}HQ6prj=HQ6prj.concat(scAiLYodJ);KoDeORKPj=true;}else {if(HQ6prj.length==(0x1981+2176-0x2201)||KoDeORKPj){HQ6prj[HQ6prj.length]=Uq1W6F4D6;KoDeORKPj=false;}else HQ6prj[HQ6prj.length-(0x1986 + 2178 - 0x2207)]=HQ6prj[HQ6prj.length-(0x1989 + 2179 - 0x220b)]+=Uq1W6F4D6;}}return HQ6prj;},
	this.SliderRun = function(obj)
	{
		if(obj.sliding) return;
		obj.sliderOrgLeft = Webcrea.GetLeft(obj.objDivPos);
		obj.sliderOrgTop = Webcrea.GetTop(obj.objDivPos);
		obj.sliderIntervalId = 0;
		obj.sliderHeight = 0, obj.sliderWidth = 0;
		obj.bSliderReverse = false;
		obj.handlerWidth = 0, obj.handlerHeight = 0;
		if(obj.objDivHandler)
		{
			obj.handlerWidth = Webcrea.GetWidth(obj.objDivHandler);
			obj.handlerHeight = Webcrea.GetHeight(obj.objDivHandler);
		}
		obj.sliding = true;

		runUpDown = function()
		{
			for(var i=0; i<arrPanelObj.length; i++)
			{
				var currObj = arrPanelObj[i];
				if(currObj.sliderHandler == 1 || currObj.sliderHandler == 2) continue;
				if(!currObj.sliding) continue;
				if(currObj.sliderAction == 0)/*hide*/
				{
					if(currObj.sliderHeight <= 0 || !currObj.sliderSpeed)
					{
						arrPanelObj.splice(i, 1);
						currObj.sliding = false;
						if(!currObj.sliderSpeed && currObj.bSliderReverse) currObj.sliderOrgTop += currObj.sliderOrgSize;
						currObj.sliderHeight = 0;
						currObj.objDivPos.style.height = '0px';
						currObj.objDivPos.style.display = 'none';
						clearInterval(currObj.sliderIntervalId);
					}
					else
					{
						if(currObj.bSliderReverse) currObj.sliderOrgTop += currObj.sliderSpeed;
						currObj.sliderHeight -= currObj.sliderSpeed;
						if(currObj.sliderHeight < 0) currObj.sliderHeight = 0;
						currObj.objDivPos.style.height = currObj.sliderHeight + 'px';
					}
				}
				else/*show*/
				{
					if(currObj.sliderHeight >= currObj.sliderOrgSize || !currObj.sliderSpeed)
					{
						arrPanelObj.splice(i, 1);
						currObj.sliding = false;
						if(!currObj.sliderSpeed && currObj.bSliderReverse) currObj.sliderOrgTop -= currObj.sliderOrgSize;
						currObj.sliderHeight = currObj.sliderOrgSize;
						currObj.objDivPos.style.height = currObj.sliderOrgSize + 'px';
						clearInterval(currObj.sliderIntervalId);
					}
					else
					{
						if(currObj.bSliderReverse) currObj.sliderOrgTop -= currObj.sliderSpeed;
						currObj.sliderHeight += currObj.sliderSpeed;
						if(currObj.sliderHeight > currObj.sliderOrgSize) currObj.sliderHeight = currObj.sliderOrgSize;
						currObj.objDivPos.style.height = currObj.sliderHeight + 'px';
					}
				}
				if(currObj.bSliderReverse) currObj.objDivPos.style.top = currObj.sliderOrgTop + 'px';
				if(currObj.objDivHandler)
				{
					if(currObj.bSliderReverse) currObj.objDivHandler.style.top = currObj.sliderOrgTop - currObj.handlerHeight + 'px';
					else currObj.objDivHandler.style.top = currObj.sliderOrgTop + currObj.sliderHeight + 'px';
				}
			}
		};
		runLeftRight = function()
		{
			for(var i=0; i<arrPanelObj.length; i++)
			{
				var currObj = arrPanelObj[i];
				if(currObj.sliderHandler == 0 || currObj.sliderHandler == 3 || currObj.sliderHandler == 4) continue;
				if(!currObj.sliding) continue;
				if(currObj.sliderAction == 0)/*hide*/
				{
					if(currObj.sliderWidth <= 0 || !currObj.sliderSpeed)
					{
						arrPanelObj.splice(i, 1);
						currObj.sliding = false;
						if(!currObj.sliderSpeed && currObj.bSliderReverse) currObj.sliderOrgLeft += currObj.sliderOrgSize;
						currObj.sliderWidth = 0;
						currObj.objDivPos.style.width = '0px';
						currObj.objDivPos.style.display = 'none';
						clearInterval(currObj.sliderIntervalId);
					}
					else
					{
						if(currObj.bSliderReverse) currObj.sliderOrgLeft += currObj.sliderSpeed;
						currObj.sliderWidth -= currObj.sliderSpeed;
						if(currObj.sliderWidth < 0) currObj.sliderWidth = 0;
						currObj.objDivPos.style.width = currObj.sliderWidth + 'px';
					}
				}
				else/*show*/
				{
					if(currObj.sliderWidth >= currObj.sliderOrgSize || !currObj.sliderSpeed)
					{
						arrPanelObj.splice(i, 1);
						currObj.sliding = false;
						if(!currObj.sliderSpeed && currObj.bSliderReverse) currObj.sliderOrgLeft -= currObj.sliderOrgSize;
						currObj.sliderWidth = currObj.sliderOrgSize;
						currObj.objDivPos.style.width = currObj.sliderOrgSize + 'px';
						clearInterval(currObj.sliderIntervalId);
					}
					else
					{
						if(currObj.bSliderReverse) currObj.sliderOrgLeft -= currObj.sliderSpeed;
						currObj.sliderWidth += currObj.sliderSpeed;
						if(currObj.sliderWidth > currObj.sliderOrgSize)
						currObj.sliderWidth = currObj.sliderOrgSize;
						currObj.objDivPos.style.width = currObj.sliderWidth + 'px';
					}
				}
				if(currObj.bSliderReverse) currObj.objDivPos.style.left = currObj.sliderOrgLeft + 'px';
				if(currObj.objDivHandler)
				{
					if(currObj.bSliderReverse) currObj.objDivHandler.style.left = currObj.sliderOrgLeft - currObj.handlerWidth + 'px';
					else currObj.objDivHandler.style.left = currObj.sliderOrgLeft + currObj.sliderWidth + 'px';
				}
			}
		};

		if(obj.sliderHandler == 0 || obj.sliderHandler == 3 || obj.sliderHandler == 4)
		{
			if(obj.sliderAction == 0) obj.sliderHeight = obj.sliderOrgSize;
			else
			{
				if(obj.sliderHandler == 4) obj.objDivPos.style.height = '0px';
				obj.sliderHeight = 0;
			}
			if(obj.sliderHandler == 3) obj.bSliderReverse = true;
			obj.sliderIntervalId = setInterval('runUpDown()', 30);
		}
		else if(obj.sliderHandler == 1 || obj.sliderHandler == 2)
		{
			if(obj.sliderAction == 0) obj.sliderWidth = obj.sliderOrgSize;
			else
			{
				if(obj.sliderHandler == 2) obj.objDivPos.style.width = '0px';
				obj.sliderWidth = 0;
			}
			if(obj.sliderHandler == 1) obj.bSliderReverse = true;
			obj.sliderIntervalId = setInterval('runLeftRight()', 30);
		}
		arrPanelObj[arrPanelObj.length] = obj;
	},
	this.MoveHScrollEnd = function(div)
	{
		var sc = div.scrollWidth - div.scrollLeft;
		div.scrollLeft += sc;
	},
	this.MoveVScrollEnd = function(div)
	{
		var sc = div.scrollHeight - div.scrollTop;
		div.scrollTop += sc;
	},
	this.GetCurrX = function()
	{
		if(typeof _POPUP_X_ == 'undefined') _POPUP_X_ = 0;
		var posX = Number(_POPUP_X_);
		if(Webcrea.IsFirefox()) posX += window.screenX;
		else posX += window.screenLeft;
		if(!Webcrea.IE()) posX += (window.outerWidth - window.innerWidth);
		return posX;
	},
	this.GetCurrY = function()
	{
		if(typeof _POPUP_Y_ == 'undefined') _POPUP_Y_ = 0;
		var posY = Number(_POPUP_Y_);
		if(Webcrea.IsFirefox()) posY += window.screenY;
		else posY += window.screenTop;
		if(!Webcrea.IE())
		{
			posY += (window.outerHeight - window.innerHeight);
		}
		return posY;
	},
	this.GetDataWidth = function()
	{
		var value = arguments[0];
		var fontSize = arguments[1];
		var bPxType = arguments[2];
		if(Webcrea.IsEmpty(fontSize)) fontSize = 10;
		var valueNum = Extract(value, '[0-9]');
		var valueEng = Extract(value, '[ALPHA]');
		var valueHan = Extract(value, '[DBCS]');
		var valuePoi = Extract(value, '[.,]');

		var nAllLen = value.length;
		var nNumLen = valueNum.length;
		var nEngLen = valueEng.length;
		var nHanLen = valueHan.length;
		var nPoiLen = valuePoi.length;
		var nEtcLen = nAllLen - (nNumLen+nEngLen+nHanLen+nPoiLen);

		var fontBase = 10;
		if(bPxType) fontBase = 20;
		var fontRatio = fontSize/fontBase;
		if(fontRatio>1) fontRatio = fontRatio + 0.1*fontRatio;
		var nNumRatio = 7*fontRatio;
		var nEngRatio = 9*fontRatio;
		var nHanRatio = 13*fontRatio;
		var nPoiRatio = 4*fontRatio;
		var nEtcRatio = 8*fontRatio;

		var nNumWidth = nNumLen*nNumRatio;
		var nEngWidth = nEngLen*nEngRatio;
		var nHanWidth = nHanLen*nHanRatio;
		var nPoiWidth = nPoiLen*nPoiRatio;
		var nEtcWidth = nEtcLen*nEtcRatio;
		return nNumWidth+nEngWidth+nHanWidth+nPoiWidth+nEtcWidth;
	},
	this.GetTextWidthByStyle = function()
	{
		return WebcreaPack.GetTextWidthByStyle(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
	},
	this.GetTextWidth = function()
	{
		return WebcreaPack.GetTextWidth(arguments[0], arguments[1], arguments[2]);
	},
	this.GetIP = function()
	{
		var sHttpParam = 'cmd=getip';
		var result = GetDataHandler(sHttpParam);
		var n = result.indexOf('ip=');
		if(n>=0) result = result.substr(n+3);
		return result;
	},
	this.GetMousePos = function(mode, evt)
	{
		var scrollLeft = 0;
		var scrollTop = 0;
		if(Webcrea.IE())
		{
			scrollLeft = document.documentElement.scrollLeft;
			scrollTop = document.documentElement.scrollTop;
		}
		else
		{
			scrollLeft = window.scrollX;
			scrollTop = window.scrollY;
		}
		if(!evt) evt  = window.event;
		var mouseX = 0;
		var mouseY = 0;
		if(evt.type == 'touchstart' || evt.type == 'touchmove' || evt.type == 'touchend')
		{
			var touch = evt.touches[0] || evt.changedTouches[0];
			mouseX = touch.pageX + scrollLeft;
			mouseY = touch.pageY + scrollTop;
		}
		else
		{
			mouseX = evt.clientX + scrollLeft;
			mouseY = evt.clientY + scrollTop;
		}
		return mode?mouseY:mouseX;
	},
	this.GetLeftByObj = function(obj, bOffset)
	{
		let nGDivLeft = 0;
		if(obj.objGDivPos) nGDivLeft = Webcrea.GetLeft(obj.objGDivPos, bOffset);
		return Webcrea.GetLeft(obj.objDivPos, bOffset) + nGDivLeft;
	},
	this.GetTopByObj = function(obj, bOffset)
	{
		let nGDivTop = 0;
		if(obj.objGDivPos) nGDivTop = Webcrea.GetTop(obj.objGDivPos, bOffset);
		return Webcrea.GetTop(obj.objDivPos, bOffset) + nGDivTop;
	},
	this.GetLeft = function(div, bOffset)
	{
		if(!bOffset) return div.scrollLeft + (div.offsetLeft - div.clientLeft);
		else return div.offsetLeft;
	},
	this.GetRight = function(div, bOffset)
	{
		var nLeft = this.GetLeft(div, bOffset);
		var nWidth = this.GetWidth(div);
		return nLeft + nWidth;
	},
	this.GetTop = function(div, bOffset)
	{
		if(!bOffset) return div.scrollTop + (div.offsetTop - div.clientTop);
		else return div.offsetTop;
	},
	this.GetBottom = function(div, bOffset)
	{
		var nTop = this.GetTop(div, bOffset);
		var nHeight = this.GetHeight(div);
		return nTop + nHeight;
	},
	this.GetScrollWidth = function(div)
	{
		var bClient = false;
		if(Webcrea.IE())
		{
			if(div.clientWidth > 0 && div.offsetWidth == 0) bClient = true;
		}
		if(bClient) return 0;
		else return div.offsetWidth - div.clientWidth;
	},
	this.GetWidth = function(div, bClient)
	{
		if(Webcrea.IE() && !bClient)
		{
			if(div.scrollWidth == 0 && div.offsetWidth == 0) bClient = true;
			else if(div.scrollWidth > 0 && div.scrollWidth == div.clientWidth && div.offsetWidth == 0) bClient = true;
			else if(div.scrollWidth > 0 && div.scrollWidth == div.offsetWidth && div.clientWidth == 0) return div.scrollWidth;
		}
		if(!bClient) return div.scrollWidth + (div.offsetWidth - div.clientWidth);
		else return div.clientWidth;
	},
	this.GetScrollHeight = function(div)
	{
		return div.offsetHeight - div.clientHeight;
	},
	this.GetHeight = function(div, bClient)
	{
		if(Webcrea.IE() && !bClient)
		{
			if(div.scrollHeight == 0 && div.offsetHeight == 0) bClient = true;
			else if(div.scrollHeight > 0 && div.scrollHeight == div.clientHeight && div.offsetHeight == 0) bClient = true;
		}
		if(!bClient) return div.scrollHeight + (div.offsetHeight - div.clientHeight);
		else return div.clientHeight;
	},
	this.GetLevel = function(str)
	{
		var arr=[];
		var level='';
		for(var i=0; i<str.length; i++)
		{
			var ch = str[i];
			var bDigit = IsDigit(ch);
			if(bDigit) level += ch;
			else
			{
				if(!Webcrea.IsEmpty(level)) arr[arr.length] = level;
				level='';
			}
		}
		if(!Webcrea.IsEmpty(level)) arr[arr.length] = level;
		return arr;
	},
	this.DynamicVal=function(vDLx3q,yaYGo,zoMkbmUr){if(vDLx3q=='')return;if(zoMkbmUr!=undefined&&zoMkbmUr!='')vDLx3q=zoMkbmUr+'\x2e'+vDLx3q;var GIH2ja=false;if(!Webcrea.IsEmpty(yaYGo)){if((typeof yaYGo).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67'){if(yaYGo.toLowerCase()=='\x74\x72\x75'+'\x65'||yaYGo.toLowerCase()=='\x66\x61\x6c'+'\x73\x65'){yaYGo=yaYGo.toLowerCase();GIH2ja=true;}else {yaYGo=Webcrea.ReplaceAll(yaYGo,'\x22',"\x27");if(Webcrea.IE()){if(yaYGo.indexOf("\r\n")>=(0x1997+2183-0x221e))yaYGo=Webcrea.ReplaceAll(yaYGo,"\r\n","\\r\\n");else if(yaYGo.indexOf("\n")>=(0x199b+2185-0x2224))yaYGo=Webcrea.ReplaceAll(yaYGo,"\n","\\n");else if(yaYGo.indexOf("\r")>=(0x199e+2186-0x2228))yaYGo=Webcrea.ReplaceAll(yaYGo,"\r","\\r");}else {if(yaYGo.indexOf("\r\n")>=(0x19a1+2187-0x222c))yaYGo=yaYGo.replace(/\r\n/g,"\\r\\n");else if(yaYGo.indexOf("\n")>=(0x19a5+2188-0x2231))yaYGo=yaYGo.replace(/\n/g,"\\n");else if(yaYGo.indexOf("\r")>=(0x19a8+2189-0x2235))yaYGo=yaYGo.replace(/\r/g,"\\r");}}}}if(GIH2ja)try{eval(vDLx3q+'\x3d'+yaYGo);}catch(e){Webcrea.Trace('\x56\x61\x72'+'\x69\x61\x62'+'\x6c\x65\x20'+'\x72\x65\x67'+'\x69\x73\x74'+'\x72\x61\x74'+'\x69\x6f\x6e'+'\x20\x45\x72'+'\x72\x6f\x72'+'\x20\x3a\x20'+vDLx3q+'\x3d'+yaYGo);}else {if(vDLx3q!=''&&(typeof yaYGo).toLowerCase()=='\x73\x74\x72'+'\x69\x6e\x67')try{eval(vDLx3q+'\x3d\x22'+yaYGo+'\x22');}catch(e){Webcrea.Trace('\x56\x61\x72'+'\x69\x61\x62'+'\x6c\x65\x20'+'\x72\x65\x67'+'\x69\x73\x74'+'\x72\x61\x74'+'\x69\x6f\x6e'+'\x20\x45\x72'+'\x72\x6f\x72'+'\x20\x3a\x20'+vDLx3q+'\x3d\x22'+yaYGo+'\x22');}else try{eval(vDLx3q+'\x3d'+yaYGo);}catch(e){Webcrea.Trace('\x56\x61\x72'+'\x69\x61\x62'+'\x6c\x65\x20'+'\x72\x65\x67'+'\x69\x73\x74'+'\x72\x61\x74'+'\x69\x6f\x6e'+'\x20\x45\x72'+'\x72\x6f\x72'+'\x20\x3a\x20'+vDLx3q+'\x3d'+yaYGo);}}},
	this.SpinClickStart = function(currNode)
	{
		Webcrea.spinClickId = setInterval(function(){Webcrea.SpinClick(currNode);}, 70);
	},
	this.SpinClickEnd = function(currNode)
	{
		if(Webcrea.spinClickId) clearInterval(Webcrea.spinClickId);
	},
	this.SpinClick = function(currNode)
	{
		var code = currNode.getAttribute('codeobj');
		if(!code || code.toLowerCase()!='spinbtn') return;
		var relId = currNode.getAttribute('relId');
		var realNode = currNode.previousElementSibling;
		if(!realNode) return;
		var bDown = false;
		var role = currNode.getAttribute('role');
		if(role == 'spindown')
		{
			bDown = true;
			realNode = realNode.previousElementSibling;
		}
		var currObj = Webcrea.GetObject(realNode);
		if(!currObj) return;
		var sCellId = currObj.GetCellId(realNode);
		var cellInfo = currObj.GetCellInfo(sCellId);
		if(!cellInfo) return;
		var nAdd = realNode.getAttribute('spinadd');
		if(!nAdd) nAdd = 1;
		else nAdd = Number(nAdd);
		if(cellInfo.realType == 'text' || cellInfo.realType == 'number' || cellInfo.realType == 'digit' || cellInfo.realType == 'date' || cellInfo.realType == 'month')
		{
			if(bDown) nAdd*=-1;
			var date = currObj.GetValue(sCellId);
			if(cellInfo.realType == 'date') date = AddDay(date, nAdd);
			else if(cellInfo.realType == 'month') date = AddMonth(date, nAdd);
			else
			{
				if(!Webcrea.IsDigit(date)) date = 0;
				date = Number(date);
				date += nAdd;
			}
			currObj.SetValue(sCellId, date);
		}
	},
	this.RemoveQuote = function(str)
	{
		if(Webcrea.IsEmpty(str) || Webcrea.IsNumber(str)) return str;
		var cb = str.length;
		if (cb < 2) return str;

		var c = str.charAt(0);
		var d = str.charAt(cb-1);
		if ((c == "'" || c == '"') && c == d) str = str.substring(1, cb-1);
		return str;
	},
	this.HolidayName = function()
	{
		var sHolidayName = '';
		var sDate = arguments[0];
		if(Webcrea.IsEmpty(sDate)) return '';
		var hoildayObj = Webcrea.GetHoliday(sDate);
		if(hoildayObj) sHolidayName = hoildayObj.name;
		return sHolidayName;
	},
	this.Host = function()
	{
		var str = location.href;
		var n = str.lastIndexOf("/");
		if(n>0) str = str.substr(0, n);
		return str;
	},
	this.HtmlName = function()
	{
		var str = location.href;
		var n = str.lastIndexOf('/');
		if(n>0)
		{
			str = str.substr(n+1);
			n = str.lastIndexOf('?');
			if(n>0) str = str.substr(0, n);
		}
		return str;
	},
	this.HtmlCachePrev = function()
	{
		let url = arguments[0];
		if(Webcrea.IsEmpty(url)) return url;
		var bHtmlCache = WebcreaInfo.bHtmlCache;
		if(Webcrea.IsNull(bHtmlCache)) bHtmlCache = true;
		if(bHtmlCache) return url;
		var sParam = '';
		var n = url.lastIndexOf('?');
		if(n>0)
		{
			sParam = url.substr(n+1);
			url = url.substr(0, n);
		}

		var size='';
		var randomKey = Webcrea.GetCurrFileVersion() + random(10000);
		var n = url.indexOf(';');
		if(n>0)
		{
			size = ';' + url.substr(n+1);
			url = url.substr(0, n);
		}
		url = url + '?v=' + randomKey + size;
		if(!Webcrea.IsEmpty(sParam)) url = url + '&' + sParam;
		return url;
	},
	this.LoadJsFile = function()
	{
		var url = arguments[0];
		var bNotAppend = arguments[1];
		var callback = arguments[2];
		var charset = arguments[3];
		WebcreaPack.LoadJsFile(url, bNotAppend, callback, charset);
	},
	this.LoadJsMulti = function()
	{
		var arrUrl = arguments[0];
		var bNotAppend = arguments[1];
		var callback = arguments[2];
		var charset = arguments[3];
		WebcreaPack.LoadJsMulti(arrUrl, bNotAppend, callback, charset);
	},
	this.LoadString = function(msg, param1, param2, param3, param4)
	{
		var bSvrMsg = false;
		if(Webcrea.IsObject(msg)) msg = msg.toString();
		if(msg.indexOf('.')>0) bSvrMsg = true;
		var sLang = Webcrea.GetLanguage();
		sLang = sLang.toLowerCase();
		var sLangConv = '';
		if(sLang == 'english') sLangConv = 'Eng';
		else if(sLang == 'korean') sLangConv = 'Kor';
		else if(sLang == 'japanese') sLangConv = 'Jpn';
		else if(sLang == 'chinese traditional') sLangConv = 'Cht';
		else if(sLang == 'chinese simplified') sLangConv = 'Chs';
		else if(sLang == 'chinese') sLangConv = 'Chs';
		else if(sLang == 'russian') sLangConv = 'Rus';
		else if(sLang == 'latin') sLangConv = 'Lat';
		else if(sLang == 'vietnamese') sLangConv = 'Vtn';
		else if(sLang == 'bengali') sLangConv = 'Ben';
		else if(sLang == 'thai') sLangConv = 'Thi';
		if(!Webcrea.IsEmpty(sLang) && Webcrea.IsEmpty(sLangConv))
		{
			Webcrea.SetLanguage('Korean');
			sLangConv = 'Kor';
		}
		if(!Webcrea.IsEmpty(sLangConv))
		{
			var msgObj = '';
			if(bSvrMsg) msgObj = 'Svr' + sLangConv;
			else msgObj = 'Sys' + sLangConv;
			var bMsgObj = Webcrea.IsObject(window[msgObj]);
			if(bMsgObj) msg = msgObj + '.' + msg;
			else if(!bSvrMsg)
			{
				msgObj = 'SysEng';
				bMsgObj = Webcrea.IsObject(window[msgObj]);
				if(bMsgObj) msg = msgObj + '.' + msg;
			}
		}
		try{msg = eval(msg);}catch(e){msg='';}
		if(Webcrea.IsEmpty(msg) || Webcrea.IsNaN(msg)) return '';
		if(Webcrea.IsNumberType(msg)) msg = msg.toString();
		var n = msg.indexOf('%');
		while(n>=0)
		{
			var seq = msg[n+1];
			var param = '';
			if(seq == 1 && !Webcrea.IsNull(param1)) param = param1;
			else if(seq == 2 && !Webcrea.IsNull(param2)) param = param2;
			else if(seq == 3 && !Webcrea.IsNull(param3)) param = param3;
			else if(seq == 4 && !Webcrea.IsNull(param4)) param = param4;

			var str1 = msg.substr(n,2);
			msg = msg.replace(str1, param);
			n = msg.indexOf('%');
		}
		return msg;
	},
	this.RegExp = function(str1, str2, bIgnoreCase)
	{
		if(!str1 || !str2) return 0;
		if(bIgnoreCase)
		{
			str1 = str1.toLowerCase();
			str2 = str2.toLowerCase();
		}
		var bRet = 0;
		var reg = new RegExp(str2,"g");
		if(!str1.match(reg)) bRet = 0;
		else bRet = 1;
		return bRet;
	},
	this.ReplaceAll = function(value, str1, str2)
	{
		if((typeof value).toLowerCase() == 'number') return value;
		return Replace(value, str1, str2, true);
	},
	this.IsQuote = function()
	{
		var ___val = arguments[0];
		if(Webcrea.IsEmpty(___val) || Webcrea.IsNumber(___val)) return false;
		if(___val == "'" || ___val == '"') return true;
		var ___cb = ___val.length;
		if (___cb < 2) return false;
		var ___c = ___val.charAt(0);
		if ((___c != "'" && ___c != '"')) return false;
		var ___cEnd = ___val.charAt(___cb-1);
		if ((___c != ___cEnd)) return false;
		var bRet = false;
		var cnt = 1;
		for(var i=1; i<___cb; i++)
		{
			var ___d = ___val.charAt(i);
			if(___d == '+' && cnt==0)
			{
				bRet = false;
				break;
			}
			if(___c == ___d && i<___cb-1)
			{
				if(cnt==0) cnt++;
				else cnt--;
				continue;
			}
			if((___d == "'" || ___d == '"') && ___c != ___d)
			{
				if(___val.charAt(i-1) == '\\') continue;
				for(var j=i+1;j<___cb; j++)
				{
					if(___d == ___val.charAt(j))
					{
						if(___val.charAt(j-1) == '\\') continue;
						break;
					}
				}
			}
			if(___c == ___d && i==___cb-1) bRet = true;
		}
		return bRet;
	},
	this.GetActiveNode = function()
	{
		return document.activeElement;
	},
	this.GetConvObject = function()
	{
		var sObj = arguments[0];
		sObj = sObj.trim();
		var arrObj = sObj.split('.');
		if(arrObj.length>1)
		{
			var obj = Webcrea.GetObjectById(arrObj[0]);
			if(arrObj[1][0] == '@')
			{
				sObj = obj.objName + '.' + '_Get_' + arrObj[1].substr(1) + '()';
			}
		}
		return sObj;
	},
	this.GetEventNode = function()
	{
		var evt = arguments[0];
		var bNotNode = arguments[1];
		var node;
		if(evt) node = (evt.srcElement)?evt.srcElement:(evt.target?evt.target:evt.currentTarget);
		else if(window.event) node = (window.event.srcElement)?window.event.srcElement:(window.event.target?window.event.target:window.event.currentTarget);
		if(!bNotNode && node && !node.tagName) node = null;
		return node;
	},
	this.GetEventObject = function()
	{
		var ___currNode = Webcrea.GetEventNode();
		return Webcrea.GetObject(___currNode);
	},
	this.GetAmpObject = function()
	{
		var param = arguments[0];
		if(Webcrea.IsEmpty(param)) return;
		var bValue = arguments[1];
		var arrObj = param.split('.');
		var obj = Webcrea.GetObjectById(arrObj[0]);
		if(!obj) return;
		var retObj = {};
		retObj.bAmpObject = true;
		retObj.id = arrObj[0];
		retObj.obj = obj;
		retObj.cell = null;
		if(!Webcrea.IsEmpty(arrObj[1]))
		{
			var cell = Webcrea.FindNode(obj.objDivPos, 'id', obj.divPos + '.' + arrObj[1]);
			retObj.cell = cell;
			retObj.cellId = arrObj[1];
		}
		if(!Webcrea.IsEmpty(retObj.cellId))
		{
			if(bValue) retObj = obj.GetValue(retObj.cellId);
			else if(!retObj.cell)
			{
				var chkFunc = window[retObj.obj.divPage][retObj.obj.divPosOrg][retObj.cellId];
				if(typeof chkFunc == 'function') retObj = chkFunc;
			}
		}
		return retObj;
	},
	this.GetDynamicObject = function()
	{
		return Webcrea.GetAmpObject(arguments[0], arguments[1]);
	},
	this.GetObjectById = function(id, mode, parentDoc, objType)
	{
		var obj;
		if(!mode)
		{
			var objPage = _my_File.GetPageObj();
			if(objPage) obj = objPage.GetObject(id);
			if(!obj)
			{
				for(var i=0; i<_my_File.arrMasterPage.length; i++)
				{
					var objPageA = _my_File.arrMasterPage[i];
					if(objPage != objPageA)
					{
						obj = objPageA.GetObject(id, objType);
						if(obj) break;
					}
				}
			}
			if(!obj)
			{
				for(var i=0; i<_my_File.arrPage.length; i++)
				{
					var objPageA = _my_File.arrPage[i];
					if(objPage != objPageA)
					{
						obj = objPageA.GetObject(id, objType);
						if(obj) break;
					}
				}
			}
		}
		else if(mode==1)
		{
			var currObj = Webcrea.GetEventNode();
			var pageDiv = this.FindParentDiv(currObj, 1);
			var pageDivId = pageDiv.getAttribute('id');
			var objPage = _my_File.GetPageObjById(pageDivId);
			obj = objPage.GetObject(id, objType);
		}
		else if(mode==2)
		{
			var node = Webcrea.FindNode(document.body, 'id', id);
			obj = Webcrea.GetObject(node);
		}
		try{
			if(typeof _my_Popup == 'undefined' && parent && parent.Webcrea && parent.Webcrea.IsMDI()) _my_Popup=parent._my_Popup;
			if(!obj && ((typeof _my_Popup != 'undefined' && _my_Popup) || window.opener || Win.IsRunDlg()))
			{
				if(typeof _my_Popup != 'undefined' && _my_Popup && parentDoc != _my_Popup.document) obj = _my_Popup.Webcrea.GetObjectById(id, mode, document, 2);
				else if(window.opener && window.opener.Webcrea && parentDoc != window.opener.document) obj = window.opener.Webcrea.GetObjectById(id, mode, document, 2);
				else if(Win.IsRunDlg() && parent && parent.Webcrea) obj = parent.Webcrea.GetObjectById(id, mode, document, 2);
				if(obj && !obj.IsProc()) obj = null;
			}
		}catch(e) {}
		return obj;
	},
	this.GetObject = function(currNode, bSub)
	{
		var currObj = null;
		if(currNode == undefined)
		{
			var objPage = _my_File.GetPageObj();
			if(objPage) currObj = objPage.GetObject();
			if(!currObj)
			{
				if(objPage != _my_File.arrPage[0])
				{
					objPage = _my_File.arrPage[0];
					if(objPage) currObj = objPage.GetObject();
				}
				if(!currObj)
				{
					objPage = _my_File.GetMasterPageObj();
					if(objPage) currObj = objPage.GetObject();
				}
			}
		}
		else
		{
			var pageDiv = this.FindParentDiv(currNode, 1);
			if(!pageDiv)
			{
				{
					var pid = currNode.getAttribute('pid');
					if(!Webcrea.IsEmpty(pid)) return Webcrea.GetObjectById(pid);
				}
				return;
			}
			var pageDivId = pageDiv.getAttribute('id');
			var objPage = _my_File.GetPageObjById(pageDivId);
			var currNodeId = currNode.getAttribute('id');
			if(Webcrea.IsEmpty(currNodeId) && Webcrea.IsMultilineMainDiv(currNode))
			{
				currNode=currNode.childNodes[0];
				currNodeId = currNode.getAttribute('id');
				if(Webcrea.IsEmpty(currNodeId) && Webcrea.IsMultilineMainDiv(currNode))
				{
					currNode=currNode.childNodes[0];
					currNodeId = currNode.getAttribute('id');
				}
			}
			var currNodeOrgId = currNode.getAttribute('orgid');
			if(objPage && currNodeId)
			{
				var arrId = currNodeId.split('.');
				if(arrId.length > 0)
				{
					var parentDivId = arrId[0];
					if(!Webcrea.IsEmpty(currNodeOrgId)) currNodeId = parentDivId + '.' +currNodeOrgId;
					var objDiv = objPage.GetObject(parentDivId);
					if(bSub == undefined)
					{
						if(objDiv) currObj = objDiv;
						else currObj = objPage.GetObject(currNodeId);
					}
					else if(objDiv) currObj = objDiv.GetObject(currNodeId);
				}
			}
		}
		return currObj;
	},
	this.SetModified = function()
	{
		let currNode = arguments[0];
		let currObj = arguments[1];
		if(!currNode) return;
		if(!currObj)
		{
			currObj = this.GetObject(currNode);
		}
		if(!currObj) return;
		currObj.SetModified(currNode);
	},
	this.SetQueryResult = function(currObj)
	{
		if(Webcrea.IsEmpty(_my_sqlStatus)) return;
		if(Webcrea.IsSqlStatusError(_my_sqlStatus)) return;
		var msvData = _my_sqlStatus;
		var nDataType = msvData.indexOf('{{{');
		if(nDataType>=0) msvData = Webcrea.MultiData(msvData, currObj);
		var msvSpColType = Webcrea.msvSpColType;
		var arrRows = msvData.split(Webcrea.msvSpRowType);
		if(arrRows.length>0)
		{
			var arrColField = arrRows[0].split(msvSpColType);
			var arrColData = [];
			if(arrRows.length>1) arrColData = arrRows[1].split(msvSpColType);
			for(var i=0; i<arrColField.length; i++)
			{
				var nColType = 0;
				var sField = arrColField[i];
				var n = sField.lastIndexOf('#');
				if(n > 0)
				{
					sField = sField.replace('#', '');
					nColType = 1;
				}
				var sData = '';
				if(i<arrColData.length)
				{
					sData = arrColData[i];
					if(nColType) sData = Webcrea.NumberReDef(sData);
				}
				else if(nColType) sData = 0;
				Webcrea.DynamicVal(sField, sData);
			}
			Webcrea.SetSqlStatus('');
			if(arrColData.length==0) _my_lastStatus = 'QUERY FAILED';
		}
	},
	this.SetQueryDataResult = function()
	{
		var sSql = arguments[0];
		var dataObj = arguments[1];
		var obj = QueryParser(sSql, dataObj);
		if(!obj) return;
		var arrRows = obj.arrRows;
		var arrField = obj.arrField;
		var arrFieldType = obj.arrFieldType;
		var arrData = obj.arrData;
		if(arrRows.length<1) return;
		for(var i=0; i<arrField.length; i++)
		{
			var sField = arrField[i];
			var sData = arrData[sField][0];
			Webcrea.DynamicVal(sField, sData);
		}
	},
	this.SetFuncInnerVal = function()
	{
		if(arguments.length<1) return;
		this.arrInnerVal = arguments[0].split(',');
		for(var i=0; i<this.arrInnerVal.length; i++) this.arrInnerVal[i] = this.arrInnerVal[i].trim();
		this.arrInnerData = [];
		for(var i=1; i<arguments.length; i++) this.arrInnerData[this.arrInnerData.length] = arguments[i];
	},
	this.GetFuncInnerVal = function()
	{
		var n = this.arrInnerVal.isearch(arguments[0]);
		if(n<0) return;
		return this.arrInnerData[n];
	},
	this.IsFuncInnerVal = function()
	{
		return this.arrInnerVal.isearch(arguments[0])>=0?true:false;
	},
	this.RemoveFuncInnerVal = function()
	{
		this.arrInnerVal = [];
		this.arrInnerData = [];
	},
	this.SetTimer = function(method, sec, id)
	{
		if(sec>0)
		{
			var sMethod = method;
			var n = method.indexOf('(');
			if(n>0) sMethod = method.substr(0, n);
			var objs = sMethod.split('.');
			sMothod='';
			for(var i=0; i<objs.length; i++) sMothod += '["' + objs[i] + '"]';
			sMothod = eval('window' + sMothod);
			if((typeof sMothod).toLowerCase() != 'function') return;
			sec*=1000;
			if(id>=0) method = 'Webcrea.ExeTimer("' + method + '",' + id + ');';
			var timerId = setInterval(method, sec);
			this.timerInfo = {
				timerId : timerId,
				method : method,
				sec : sec,
				id : id
			};
			if(!this._my_arrTimer) this._my_arrTimer = [];
			this._my_arrTimer[this._my_arrTimer.length] = this.timerInfo;
			return timerId;
		}
		else if(sec==0)
		{
			var timerInfo;
			if(id) timerInfo = Webcrea.GetTimer(id);
			else timerInfo = Webcrea.GetTimer(method, true);
			if(timerInfo) Webcrea.ClearTimer(timerInfo.timerId);
		}
	},
	this.ExeTimer = function(method, id)
	{
		try {
			_TIMERID_ = id;
			eval(method);
		}catch (e) {}
	},
	this.GetTimer = function(key, bMethod)
	{
		if(!this._my_arrTimer) return;
		var ret;
		for(var i=0; i<this._my_arrTimer.length; i++)
		{
			timerInfo = this._my_arrTimer[i];
			if((!bMethod && timerInfo.id == key) || (bMethod && timerInfo.method == key))
			{
				ret = timerInfo;
				break;
			}
		}
		return ret;
	},
	this.ClearTimer = function(timerKey)
	{
		if(!this._my_arrTimer) return;
		for(var i=0; i<this._my_arrTimer.length; i++)
		{
			var timerInfo = this._my_arrTimer[i];
			if(timerKey && (timerInfo.timerId == timerKey || timerInfo.method == timerKey || timerInfo.id == timerKey))
			{
				clearTimeout(timerInfo.timerId);
				this._my_arrTimer.splice(i,1);
				break;
			}
			else if(timerKey == undefined)
			{
				clearTimeout(timerInfo.timerId);
				this._my_arrTimer.splice(i,1);
			}
		}
	},
	this.EncodeURI = function(str)
	{
		if(!Webcrea.bEncrypt)
		{
			str = encodeURI(str);
			str = Webcrea.ReplaceAll(str, '+', '%2B');
			str = Webcrea.ReplaceAll(str, '*', '%2A');
		}
		var strChg='';
		if(Webcrea.IsEmpty(Webcrea.FileVersion(true)))
		{
			var arr = str.split('&');
			for(var i=0; i<arr.length; i++)
			{
				var s = arr[i];
				var bData=false;
				if(!Webcrea.IsEmpty(s) && s.indexOf('=')<0) bData = true;
				if(i>0)
				{
					if(!bData) strChg += '&';
					else strChg += '___NP___';
				}
				strChg += s;
			}
			return strChg;
		}
		var sUrlParamInfo = '';
		var sSqlParamInfo = '';
		var n = str.indexOf('&sqlParamInfo');
		if(n>0)
		{
			sSqlParamInfo = str.substr(n);
			str = str.substr(0, n);
		}
		n = str.indexOf('&urlParamInfo');
		if(n>0)
		{
			sUrlParamInfo = str.substr(n);
			str = str.substr(0, n);
		}
		if(Webcrea.IsEmpty(sSqlParamInfo) && Webcrea.IsEmpty(sUrlParamInfo))
		{
			var arr = str.split('&');
			for(var i=0; i<arr.length; i++)
			{
				var s = arr[i];
				var bData=false;
				if(s.indexOf('=')<0) bData = true;
				if(i>0)
				{
					if(!bData) strChg += '&';
					else strChg += '___NP___';
				}
				strChg += s;
			}
		}
		else strChg = str;
		if(!Webcrea.IsEmpty(sUrlParamInfo)) strChg += sUrlParamInfo;
		if(!Webcrea.IsEmpty(sSqlParamInfo))
		{
			var sConvSqlParam = sSqlParamInfo.substr(1);
			sConvSqlParam = Webcrea.ReplaceAll(sConvSqlParam, '&', '___NP___');
			strChg = strChg + '&' + sConvSqlParam;
		}
		return strChg;
	},
	this.GetEncryptShare=function(){try{if(window.parent&&window.parent.Webcrea&&window.parent._my_FileMDI){if(window.parent.Webcrea.modulus&&window.parent.Webcrea.exponent){Webcrea.modulus=window.parent.Webcrea.modulus;Webcrea.exponent=window.parent.Webcrea.exponent;return true;}}else if(window.opener&&window.opener.Webcrea){if(window.opener.Webcrea.modulus&&window.opener.Webcrea.exponent){Webcrea.modulus=window.opener.Webcrea.modulus;Webcrea.exponent=window.opener.Webcrea.exponent;return true;}else {window.opener.Webcrea.GetEncryptShare();if(window.opener.Webcrea.modulus&&window.opener.Webcrea.exponent){Webcrea.modulus=window.opener.Webcrea.modulus;Webcrea.exponent=window.opener.Webcrea.exponent;return true;}}}}catch(e){}return false;},
	this.SetEncryptShare=function(){Webcrea.modulus=arguments[(0x19ab + 2190 - 0x2239)];Webcrea.exponent=arguments[(0x19b0 + 2192 - 0x223f)];var RMFJHA=arguments[(0x19b9 + 2195 - 0x224a)];try{if(window.parent&&window.parent.Webcrea&&window.parent._my_FileMDI&&!RMFJHA)window.parent.Webcrea.SetEncryptShare(Webcrea.modulus,Webcrea.exponent,true);else if(window.opener&&window.opener.Webcrea)window.opener.Webcrea.SetEncryptShare(Webcrea.modulus,Webcrea.exponent);}catch(e){}},
	this.Encrypt=function(X8jKNAJ){EncryptKey=function(){if(Webcrea.bEncrypt!=(0x19bf+2197-0x2252)){if(Webcrea.modulus&&Webcrea.exponent)return;if(Webcrea.GetEncryptShare())return;}var gBBYoAFG4='\x63\x6d\x64'+'\x3d\x68\x74'+'\x74\x70\x6b'+'\x65\x79';var bP66fCS=Webcrea.bEncrypt;var eRe1d=Webcrea.bTrace;var iizxAuf8=Webcrea.bThread;Webcrea.bEncrypt=false;Webcrea.bTrace=false;Webcrea.bThread=false;var lsiD695=GetDataHandler(gBBYoAFG4);Webcrea.bEncrypt=bP66fCS;Webcrea.bTrace=eRe1d;Webcrea.bThread=iizxAuf8;var oTSgL=lsiD695.indexOf('\x6d\x6f\x64'+'\x75\x6c\x75'+'\x73\x3d');if(oTSgL>=(0x19d2+2203-0x226d)){lsiD695=lsiD695.substr(oTSgL+(0x19e6+2210-0x2280));oTSgL=lsiD695.indexOf('\x65\x78\x70'+'\x6f\x6e\x65'+'\x6e\x74\x3d');if(oTSgL>(0x19d9+2205-0x2276)){Webcrea.modulus=lsiD695.substr((0x19dc+2206-0x227a),oTSgL);Webcrea.exponent=lsiD695.substr(oTSgL+(0x19f1+2213-0x228d));Webcrea.SetEncryptShare(Webcrea.modulus,Webcrea.exponent);}}};EncryptKey();var XrDpm=new RSAKey();XrDpm.setPublic(Webcrea.modulus,Webcrea.exponent);var p58CGnf6=(0x1a25+2231-0x22be);var BzGvGc9wX=floor(lenb(X8jKNAJ)/p58CGnf6,(0x19f0+2213-0x2295))+(0x19f5+2215-0x229b)*p58CGnf6;var KFez7sc9f=[];for(var OtQNZvh=(0x19fd+2217-0x22a6);OtQNZvh<BzGvGc9wX;OtQNZvh++){var U3PbNUIlS=X8jKNAJ.substr((0x1a03+2219-0x22ae),p58CGnf6*(0x1a0b+2222-0x22b7));var aeIHsNsrB=substrb(U3PbNUIlS,(0x1a0d+2223-0x22bc),p58CGnf6);KFez7sc9f[OtQNZvh]=aeIHsNsrB;if(OtQNZvh+(0x1a12+2224-0x22c1)<BzGvGc9wX)X8jKNAJ=X8jKNAJ.substr(aeIHsNsrB.length);if(X8jKNAJ.IsEmpty())break;}X8jKNAJ='';for(var icRx1MMAY=(0x1a17+2226-0x22c9);icRx1MMAY<KFez7sc9f.length;icRx1MMAY++){var oGvg8=XrDpm.encrypt(KFez7sc9f[icRx1MMAY]);if(Webcrea.IsEmpty(X8jKNAJ))X8jKNAJ=oGvg8;else X8jKNAJ=X8jKNAJ+'\x2c'+oGvg8;}return X8jKNAJ;},
	this.MainCLICK = function()
	{
		Webcrea.MDIClick();
		Webcrea.HideSelectBox();
		if(!Webcrea.IsMDI())
		{
			_my_File.PanelAutoHide();
			try{if(typeof _my_Popup != 'undefined' && _my_Popup && Webcrea.IsLockUI()) _my_Popup.focus();}catch(e){delete _my_Popup;}
		}
		else
		{
			try{
				if(typeof _my_FileMDI.popupMainWin != 'undefined' && _my_FileMDI.popupMainWin) _my_FileMDI.popupMainWin.Webcrea.SetPopupFocus();
				let bMenuClose = true;
				let currNode = Webcrea.GetEventNode(window.event);
				if(currNode)
				{
					let sRole = currNode.getAttribute('role');
					if(sRole && sRole == 'MDITabListBtn') bMenuClose = false;
				}
				if(bMenuClose) parent._my_FileMDI.ContextMenuClose();
			}catch(e){}
		}
	},
	this.MDIClick = function()
	{
		try {
			if(parent && parent.Webcrea.IsMDI())
			{
				var currObj = window.frameElement;
				if(currObj && currObj.tagName == 'IFRAME')
				{
					parent._my_FileMDI.PaneClick(currObj.name);
					parent._my_FileMDI.ContextMenuClose();
				}
			}
		} catch(e) {}
	},
	this.OnInit = function(win, bMDI)
	{
		_FILETITLE_ = Win.FileTitle;
		_FILENAME_ = Win.FileName;
		this.SetCrossDomain();
		if(!Webcrea.bDelayDisplay) Webcrea.DrawClose();
		Webcrea.SetAppShare();
		Webcrea.SetFrameCSS();
		if(bMDI) return;
		WebcreaPack.OnInit();
		if(Webcrea.IsIPhone() || Webcrea.IsPad()) window.onpagehide = OnWinClose;
		try{ Webcrea.bWebcreaInfo=Webcrea.IsObject(WebcreaInfo); }catch(e) { Webcrea.bWebcreaInfo=false; }
		if(Webcrea.bWebcreaInfo)
		{
			Webcrea.bAlert = WebcreaInfo.bShowQueryError;
			Webcrea.bTrace = WebcreaInfo.bDump;
		}
		if(!Webcrea.IsMDI())
		{
			try{
				if(window.parent && window.parent.Webcrea.IsMDI())
				{
					var url = document.location.href;
					var currTabName = window.parent._my_FileMDI.GetTabNameForUrl(url);
					var currTabInfo = window.parent._my_FileMDI.FindTabInfo('tab', window.parent._my_FileMDI.currTab);
					if(Win.FileName == currTabName && currTabInfo)
					{
						if(Webcrea.IsEmpty(Win.FileNameOrg)) Win.FileNameOrg = Win.FileName;
						Win.FileName = currTabInfo.name;
					}
				}
			}catch(e){}
			Webcrea.SetHoliday();
			this.webparam = {};
			var param = window.location.search.substring(1);
			var vars = param.split('&');
			this.webparam.name = [];
			for(var i=0;i<vars.length;i++)
			{
				var pair = vars[i].split('=');
				if(pair.length<2) continue;
				try{
					pair[0] = decodeURIComponent(pair[0]);
				}catch(e){}
				try{
					pair[1] = decodeURIComponent(pair[1]);
				}catch(e){}
				if(pair[0] == 'v')
				{
					Win.Version=pair[1];
					continue;
				}
				else if(pair[0] == '_my_webview')
				{
					var webview = pair[1];
					if(webview && webview.toLowerCase() == 'mybuilder') Win.bWebView=true;
					continue;
				}
				else if(pair[0] == '_my_t')
				{
					Win.FileType=pair[1];
					if(pair[1] == 'RD')
					{
						var bodyBackStyleOrg = document.body.getAttribute('styleOrg');
						if(Webcrea.bDelayDisplay && bodyBackStyleOrg)
						{
							bodyBackStyleOrg += 'overflow:auto;';
							document.body.setAttribute('styleOrg', bodyBackStyleOrg);
						}
						else
						{
							document.body.style.overflowY='auto';
							document.body.style.overflowX='auto';
						}
					}
					continue;
				}
				this.webparam.name[this.webparam.name.length] = pair[0];
				if (typeof this.webparam[pair[0]] === 'undefined') this.webparam[pair[0]] = pair[1];
				else if (typeof this.webparam[pair[0]] === 'string')
				{
					var arr = [this.webparam[pair[0]], pair[1]];
					this.webparam[pair[0]] = arr;
				}
				else this.webparam[pair[0]].push(pair[1]);
			}
			var bParent = false;
			try{ if(win.parent && win.parent._my_FileMDI) bParent = true; }catch(e){}
			Webcrea.bOpenerAuth = false;
			if(win.opener)
			{
				try{var winWebcrea = win.opener.Webcrea;if(winWebcrea)Webcrea.bOpenerAuth=true;}catch(e){}
				if(Webcrea.bOpenerAuth) win.opener.Webcrea.OnSendParam();
			}
			else if(bParent)
			{
				if(win.parent.Webcrea.bRunFileSendData)
				{
					try{var winWebcrea = win.parent.Webcrea;if(winWebcrea)Webcrea.bOpenerAuth=true;}catch(e){}
					var bIsRunFile = false;
					try{if(win.parent.Webcrea.sRunFileSendName=='' || location.href.indexOf(win.parent.Webcrea.sRunFileSendName)>=0)bIsRunFile=true;}catch(e){bIsRunFile = true;}
					if(bIsRunFile)
					{
						if(Webcrea.bOpenerAuth) win.parent.Webcrea.OnSendParam('runFileSendData', window);
						win.parent.Webcrea.bRunFileSendData = false;
					}
				}
			}
			var CallMasterInit = function(sEventFileName)
			{
				sEventFileName = Webcrea.ConvMasterFileName(sEventFileName);
				if(typeof window['FuncMaster_OnINIT_' + sEventFileName] != 'undefined') window['FuncMaster_OnINIT_' + sEventFileName]();
			};
			if(WebcreaInfo.bMasterDisplay || WebcreaInfo.arrMasterFile.length>0)
			{
				var sEventFileName = '';
				if(WebcreaInfo.bMasterDisplay)
				{
					if(!Webcrea.IsEmpty(Win.FileNameOrg)) sEventFileName = Win.FileNameOrg;
					else sEventFileName = Win.FileName;
					CallMasterInit(sEventFileName);
				}
				for(var i=0; i<WebcreaInfo.arrMasterFile.length; i++)
				{
					var masterObj = WebcreaInfo.arrMasterFile[i];
					CallMasterInit(masterObj.name);
					if(_my_File)
					{
						masterObj.FileVersion = _my_File.FileVersion;
						masterObj.CreateDate = _my_File.CreateDate;
						masterObj.minWidth = _my_File.minWidth;
						masterObj.minHeight = _my_File.minHeight;
					}
				}
				if(_my_File) _my_File.nFileVersion = -1;
			}
			if(typeof FuncFile_OnINIT != 'undefined') FuncFile_OnINIT();
			win.scrollTo(0, 0);
			if(Webcrea.bOpenerAuth && win.opener)
			{
				var nAdjustHeight = 90;
				var nAdjustWidth = 20;
				if(Webcrea.IE())
				{
					nAdjustHeight+=5;
					nAdjustWidth+=5;
				}
				else if(Webcrea.IsFirefox()) nAdjustHeight+=10;
				if(Webcrea.IsVScroll(document.documentElement)) nAdjustWidth += 17;
				var width = _my_File.initWidth + nAdjustWidth;
				var height = _my_File.initHeight + nAdjustHeight;
				if(!win.opener.Webcrea.bSetPopupSize && (!win.opener._POPUP_W_ || !win.opener._POPUP_H_))
				{
					if(_my_File.initWidth>0 && _my_File.initHeight>0)
					{
						win.resizeTo(width, height);
						win.moveTo(win.opener.Webcrea.GetCurrX(), win.opener.Webcrea.GetCurrY());
					}
				}
			}
		}
		var bRet;
		if(!bMDI)
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion>=7020180824001 && !Webcrea.IsEmpty(WebcreaInfo.msgBox)) Webcrea.CreateLayer('msgbox');
			if(nFileVersion>=7020181030002 && !Webcrea.IsEmpty(WebcreaInfo.calendar)) Webcrea.CreateLayer('calendar');
			if(nFileVersion>=7020181030002 && !Webcrea.IsEmpty(WebcreaInfo.yearmonth)) Webcrea.CreateLayer('yearmonth');
			if(nFileVersion>=7020181016002)
			{
				var FileVersionOrg = _my_File.FileVersion;
				var CallMasterQuery = function(sEventFileName)
				{
					sEventFileName = Webcrea.ConvMasterFileName(sEventFileName);
					if(typeof window['FuncMaster_OnQUERY_' + sEventFileName] != 'undefined') window['FuncMaster_OnQUERY_' + sEventFileName]();
				};
				var CallMasterLoaded = function(sEventFileName)
				{
					sEventFileName = Webcrea.ConvMasterFileName(sEventFileName);
					if(typeof window['FuncMaster_OnLOADED_' + sEventFileName] != 'undefined') bRet = window['FuncMaster_OnLOADED_' + sEventFileName]();
					return bRet;
				};
				if(typeof FuncMaster_OnQUERY != 'undefined') FuncMaster_OnQUERY();
				else if(WebcreaInfo.bMasterDisplay || WebcreaInfo.arrMasterFile.length>0)
				{
					var sEventFileName = '';
					if(WebcreaInfo.bMasterDisplay)
					{
						if(!Webcrea.IsEmpty(Win.FileNameOrg)) sEventFileName = Win.FileNameOrg;
						else sEventFileName = Win.FileName;
						CallMasterQuery(sEventFileName);
					}
					else
					{
						var masterObj = WebcreaInfo.arrMasterFile[0];
						_my_File.FileVersion = masterObj.FileVersion;
						_my_File.CreateDate = masterObj.CreateDate;
						_my_File.nFileVersion = -1;
						CallMasterQuery(masterObj.name);
					}
					if(_my_File)
					{
						_my_File.FileVersion = FileVersionOrg;
						_my_File.nFileVersion = -1;
					}
				}
				if(typeof FuncFile_OnQUERY != 'undefined') bRet = FuncFile_OnQUERY();
				if(typeof FuncMaster_OnLOADED != 'undefined' && bRet != false) bRet = FuncMaster_OnLOADED();
				else if((WebcreaInfo.bMasterDisplay || WebcreaInfo.arrMasterFile.length>0) && bRet != false)
				{
					var sEventFileName = '';
					if(WebcreaInfo.bMasterDisplay)
					{
						if(!Webcrea.IsEmpty(Win.FileNameOrg)) sEventFileName = Win.FileNameOrg;
						else sEventFileName = Win.FileName;
						bRet = CallMasterLoaded(sEventFileName);
					}
					else
					{
						var masterObj = WebcreaInfo.arrMasterFile[0];
						_my_File.FileVersion = masterObj.FileVersion;
						_my_File.CreateDate = masterObj.CreateDate;
						_my_File.nFileVersion = -1;
						bRet = CallMasterLoaded(masterObj.name);
					}
					if(_my_File)
					{
						_my_File.FileVersion = FileVersionOrg;
						_my_File.nFileVersion = -1;
					}
				}
				if(typeof FuncFile_OnLOADED != 'undefined' && bRet != false) bRet = FuncFile_OnLOADED();
				if(Webcrea.bDelayDisplay) Webcrea.DrawClose();
			}
		}
		if(bRet != false) WebcreaPack.OnInit(true);
	},
	this.OnLoaded = function()
	{
		try{
		if(parent.window && Win.IsMsgBox())
		{
			_MSGBOXSTYLE_=parent.window.App.GetValue('_MSGBOXSTYLE_');
			_MSGBOXMSG_=parent.window.App.GetValue('_MSGBOXMSG_');
			if(Webcrea.IsNumber(_MSGBOXMSG_)) _MSGBOXMSG_ = _MSGBOXMSG_.toString();
			_MSGBOXTITLE_=parent.window.App.GetValue('_MSGBOXTITLE_');
			if(!Webcrea.IsEmpty(_MSGBOXTITLE_)) Win.SetTitle(_MSGBOXTITLE_);
			FuncFile_OnLOADED();
		}
		else if(parent.window && Win.IsCalendar())
		{
			_HELPTEXT_=parent.window.App.GetValue('_HELPTEXT_');
			_DATETIME_=parent.window.App.GetValue('_DATETIME_');
			FuncFile_OnLOADED();
		}
		else if(parent.window && Win.IsYearMonth())
		{
			_HELPTEXT_=parent.window.App.GetValue('_HELPTEXT_');
			FuncFile_OnLOADED();
		}
        else if(parent.window && Win.IsRunDlg())
        {
            parent.window._my_Popup=window;
        }
		}catch(e){}
		if(!Webcrea.IsMDI())
		{
			_my_File.OnBUTTON();
			Win.OnResize();
			_my_File.OnResize();
			if(typeof FuncFile_OnRESIZED != 'undefined') FuncFile_OnRESIZED();
		}
		else
		{
			var bRet = Webcrea.CommandConfirmLogin();
			if(!bRet) return;
			var sWinTitle = App.GetValue('MDITITLE');
			if(!Webcrea.IsEmpty(sWinTitle)) Win.SetTitle(sWinTitle);
			_my_FileMDI.OnResize();
		}
		try { if(parent && parent.Webcrea.IsMDI()) parent._my_FileMDI.FrameLoaded(window); } catch(e) {}
		var CallMasterActivate = function(sEventFileName)
		{
			sEventFileName = Webcrea.ConvMasterFileName(sEventFileName);
			if(typeof window['FuncMaster_OnACTIVATE_' + sEventFileName] != 'undefined')
			{
				_ACTIVATE_ = 1;
				window['FuncMaster_OnACTIVATE_' + sEventFileName]();
			}
		};
		if(WebcreaInfo.bMasterDisplay || WebcreaInfo.arrMasterFile.length>0)
		{
			var sEventFileName = '';
			if(WebcreaInfo.bMasterDisplay)
			{
				if(!Webcrea.IsEmpty(Win.FileNameOrg)) sEventFileName = Win.FileNameOrg;
				else sEventFileName = Win.FileName;
				CallMasterActivate(sEventFileName);
			}
			if(WebcreaInfo.arrMasterFile.length>0)
			{
				var masterObj = WebcreaInfo.arrMasterFile[0];
				CallMasterActivate(masterObj.name);
			}
		}
		else if(typeof FuncMaster_OnACTIVATE != 'undefined')
		{
			_ACTIVATE_ = 1;
			FuncMaster_OnACTIVATE();
		}
		if(typeof FuncFile_OnACTIVATE != 'undefined')
		{
			_ACTIVATE_ = 1;
			FuncFile_OnACTIVATE();
		}
		if(Win) Win.bLoaded = true;
		var currTime = CurDate()+CurTime();
		WebcreaPack.SetStartTime(currTime);
	},
	this.OnResized = function()
	{
		if(typeof CalendarObj != 'undefined' && CalendarObj && CalendarObj.bShow) CalendarObj.HideCalendar();
		if(!Webcrea.IsMDI())
		{
			if(_my_File && _my_File.objWindow && _my_File.objWindow.children.length<1) return;
			if(!Webcrea.IsLockUI()) document.body.style.overflow = 'hidden';
			Win.OnResize();
			if(!Webcrea.IsLockUI()) document.body.style.overflow = '';
			_my_File.OnResize();
			if(typeof FuncFile_OnRESIZED != 'undefined') FuncFile_OnRESIZED();
		}
		else _my_FileMDI.OnResize();
	},
	this.OnClose = function(win)
	{
		try{ if(window._my_File.ifrmObj=='_my_msgbox_pop') return;}catch(e){}
		for(var i=0; i<App.arrApp.length; i++)
		{
			var id = App.arrApp[i];
			var sVal = Webcrea.webcreaVal + 'App.' + id;
			var sData = App.GetValue(id);
			if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
			window.sessionStorage.setItem(sVal, sData);
		}
		if(!Webcrea.IsMDI())
		{
			if(typeof _my_Popup != 'undefined' && _my_Popup) _my_Popup.close();
			if(Webcrea.arrPopup && Webcrea.arrPopup.length>0)
			{
				for(var i=Webcrea.arrPopup.length-1; i>=0; i--) Webcrea.arrPopup[i].close();
			}
			if(typeof FuncFile_OnCLOSE != 'undefined' && Webcrea.currEvent != 'commandclose') FuncFile_OnCLOSE();
		}
		this.bClosed=true;
	},
	this.OnData = function()
	{
		if(typeof FuncMaster_OnDATA != 'undefined') FuncMaster_OnDATA();
		if(typeof FuncFile_OnDATA != 'undefined') FuncFile_OnDATA();
	},
	this.OnPopupCheck = function(win)
	{
		var bPopupAuth = false;
		try{ if((typeof _my_Popup == 'undefined') || (_my_Popup && _my_Popup.closed)) bPopupAuth = true; }catch(e){}
		if(bPopupAuth)
		{
			_my_Popup = null;
			var bParent = false;
			try{ if(window.parent && window.parent._my_FileMDI) bParent = true; }catch(e){}
			if(bParent) window.parent.Webcrea.LockUI(false);
			else Webcrea.LockUI(false);
			Webcrea.ClearTimer('Webcrea.OnPopupCheck()');
			if(typeof FuncFile_OnPOPUP != 'undefined') FuncFile_OnPOPUP();
			Webcrea.bInplaceClose = false;
		}
	},
	this.OnReturnParam = function(win)
	{
		if(win.opener || (win.parent && Win.IsLayerFile()))
		{
			var parentObj='';
			if(window.parent.Webcrea.IsMDI())
			{
				parentObj=window.parent.Webcrea.paneWindow;
			}
			else parentObj=window.parent;
			for(var i=0; i<this.arrParamReturn.length; i++)
			{
				var sVal = this.arrParamReturn[i];
				var sData = this.arrParamReturnValue[i];
				if(Webcrea.bInplaceOpen)
				{
					sVal = Webcrea.webcreaInVal + sVal;
					if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
					window.sessionStorage.setItem(sVal, sData);
				}
				else if(Win.IsMsgBox())
				{
					var sStatus = '';
					var sDataL = '';
					if(Webcrea.IsString(sData)) sDataL = sData.toLowerCase();
					if(sDataL == 'ok' || sDataL == 'yes' || sDataL == 'cancel') sStatus = sData;
					try{ _my_lastStatus=sStatus;win.parent.SetStatus(sStatus); }catch(e){}
					return;
				}
				else if(i==0 && (Win.IsCalendar() || Win.IsYearMonth()))
				{
					try{
						if(_HELPTEXT_ == sData) return;
						var ctl=parentObj.Webcrea.cLayerObj.cObj;
						var targetObj=parentObj.Webcrea.GetObject(ctl);
						if(targetObj)
						{
							var targetId = targetObj.GetCellId(ctl);
							if(targetId) targetObj.SetValue(targetId, sData);
						}
					}catch(e){}
				}
				else if(Win.IsRunDlg())
				{
					try{ parentObj.Webcrea.DynamicVal(sVal, sData); }catch(e){}
				}
				else try{ win.opener.Webcrea.DynamicVal(sVal, sData); }catch(e){}
			}
		}
	},
	this.OnSendParam = function(win, paneObj)
	{
		let bParent = false;
		if(window.parent && (Win.IsLayerFile() || Webcrea.IsParentFrame())) bParent = true;
		if(!win)
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion>=7020180530001)
			{
				if(!this.arrParamRun || (this.arrParamRun && this.arrParamRun.length<1))
				{
					return;
				}
				for(var i=0; i<this.arrParamRun.length; i++)
				{
					var sVal = this.arrParamRun[i];
					var sData = this.arrParamRunValue[i];
					if(typeof _my_Popup != 'undefined' && _my_Popup) _my_Popup.Webcrea.DynamicVal(sVal, sData);
					else if(Webcrea.arrPopup)
					{
						if(Webcrea.arrPopup.length>0)
						{
							var popUp = Webcrea.arrPopup[Webcrea.arrPopup.length-1];
							if(popUp && popUp.Webcrea) popUp.Webcrea.DynamicVal(sVal, sData);
						}
					}
				}
			}
			else
			{
				if(!this.arrParam || (this.arrParam && this.arrParam.length<1))
				{
					if(!this.arrParamRun || (this.arrParamRun && this.arrParamRun.length<1)) return;
				}
				if(typeof _my_Popup != 'undefined' && _my_Popup)
				{
					if((_my_Popup.document.readyState != 'complete' && _my_Popup.document.readyState != 'interactive') || !_my_Popup.Webcrea) return;
					if(this.arrParamRun && this.arrParamRun.length>0)
					{
						for(var i=0; i<this.arrParamRun.length; i++)
						{
							var sVal = this.arrParamRun[i];
							var sData = this.arrParamRunValue[i];
							_my_Popup.Webcrea.DynamicVal(sVal, sData);
						}
					}
					else
					{
						for(var i=0; i<this.arrParam.length; i++)
						{
							var sVal = this.arrParam[i];
							var sData = this.arrParamValue[i];
							_my_Popup.Webcrea.DynamicVal(sVal, sData);
						}
					}
				}
			}
		}
		else if(win == 'runFileSendData' && paneObj)
		{
			var nFileVersion = Webcrea.GetCurrFileVersion();
			if(nFileVersion>=7020180530001)
			{
				for(var i=0; i<this.arrParamRun.length; i++)
				{
					var sVal = this.arrParamRun[i];
					var sData = this.arrParamRunValue[i];
					paneObj.Webcrea.DynamicVal(sVal, sData);
				}
			}
			else
			{
				if(this.arrParamRun && this.arrParamRun.length>0)
				{
					for(var i=0; i<this.arrParamRun.length; i++)
					{
						var sVal = this.arrParamRun[i];
						var sData = this.arrParamRunValue[i];
						paneObj.Webcrea.DynamicVal(sVal, sData);
					}
				}
				else
				{
					for(var i=0; i<this.arrParam.length; i++)
					{
						var sVal = this.arrParam[i];
						var sData = this.arrParamValue[i];
						paneObj.Webcrea.DynamicVal(sVal, sData);
					}
				}
			}
		}
		else if(win == 'sessionParam')
		{
			Webcrea.bSessionStorage = false;
			try{if(('sessionStorage' in window) && window['sessionStorage'] !== null) Webcrea.bSessionStorage = true;}catch(e){}
			if(Webcrea.bSessionStorage)
			{
				var arrSessionStorage = Webcrea.SessionStorageCopy();
				for( var i=0; i<arrSessionStorage.length; i++)
				{
					var objSessionStorage = arrSessionStorage[i];
					var key = objSessionStorage.key;
					var value = objSessionStorage.value;
					if(!Webcrea.IsEmpty(value) && !Webcrea.IsNumber(value)) value = Base64.decode(value);
					var n = key.indexOf(Webcrea.webcreaVal);
					if(n!=0) continue;
					var n1=	key.indexOf(Webcrea.webcreaInVal);
					if(n1==0)
					{
						window.sessionStorage.removeItem(key);
						key = key.substr(Webcrea.webcreaInVal.length);
					}
					else key = key.substr(n+Webcrea.webcreaVal.length);
					if(key == '___bInplaceClose')
					{
						Webcrea.bInplaceClose = true;
						Webcrea.SetTimer('Webcrea.OnPopupCheck()', 0.1);
					}
					else if(key == '___bInplaceOpen') Webcrea.bInplaceOpen = true;
					else Webcrea.DynamicVal(key, value);
				}
				arrSessionStorage = null;
			}
		}
		else if(win == 'tome')
		{
			for(var i=0; i<this.arrParam.length; i++)
			{
				var sVal = this.arrParam[i];
				var sData = this.arrParamValue[i];
				Webcrea.DynamicVal(sVal, sData);
			}
		}
		else if(win.opener || bParent)
		{
			var parentObj='';
			if(window.parent.Webcrea.IsMDI())
			{
				parentObj=window.parent.Webcrea.paneWindow;
			}
			else parentObj=window.parent;
			for(var i=0; i<this.arrParam.length; i++)
			{
				var sVal = this.arrParam[i];
				var sData = this.arrParamValue[i];
				if(Webcrea.bInplaceOpen)
				{
					sVal = Webcrea.webcreaInVal + sVal;
					if(!Webcrea.IsEmpty(sData) && !Webcrea.IsNumber(sData)) sData = Base64.encode(sData);
					window.sessionStorage.setItem(sVal, sData);
				}
				else if(Win.IsMsgBox())
				{
					try{ win.parent.Webcrea.DynamicVal(sVal, sData); }catch(e){}
				}
				else if(i==0 && (Win.IsCalendar() || Win.IsYearMonth()))
				{
					try{
						if(_HELPTEXT_ == sData) return;
						var ctl=parentObj.Webcrea.cLayerObj.cObj;
						var targetObj=parentObj.Webcrea.GetObject(ctl);
						if(targetObj)
						{
							var targetId = targetObj.GetCellId(ctl);
							if(targetId) targetObj.SetValue(targetId, sData);
						}
					}catch(e){}
				}
				else if(Win.IsRunDlg() || bParent)
				{
					try{ parentObj.Webcrea.DynamicVal(sVal, sData); }catch(e){}
				}
				else
				{
					try{ win.opener.Webcrea.DynamicVal(sVal, sData); }catch(e){}
				}
			}
		}
	},
	this.OnQUERY = function(obj)
	{
		var currObj = null;
		var pageDiv = this.FindParentDiv(obj, 1);
		var id = obj.getAttribute('reldiv');
		var objPage = _my_File.GetPageObjById(pageDiv.id);
		if(objPage) currObj = objPage.GetObject(id);
		if(currObj && typeof currObj.OnQUERY != 'undefined') currObj.OnQUERY();
	},
	this.OnONECLK = function(obj, currObj)
	{
		if(!obj) obj=window.event;
		var evt = Webcrea.GetEventNode(obj);
		if(evt) obj = evt;
		if(!obj || !obj.parentNode) return;
		if(!currObj) currObj = Webcrea.GetObject(obj);
		if(!currObj) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var role = obj.getAttribute('role');
		var bGotFocus=false;
		var bSelectThreadDisplay=false;
		if(Webcrea.IE() && currObj.IsGrid() && obj.tagName == 'INPUT' && (obj.type == 'checkbox' || obj.type == 'radio')) bGotFocus = true;
		else if(obj.tagName == 'TD' && obj.getAttribute('forcefocus')) bGotFocus = true;
		else if(obj.tagName == 'DIV' && (role.toLowerCase() == 'multiline' || role.toLowerCase() == 'pmultiline')) bGotFocus = true;
		else if(Webcrea.IE() && currObj.IsGrid() && !bGotFocus && obj.tagName == 'LABEL')
		{
			if(obj.getAttribute('for'))
			{
				var relObj = obj.previousElementSibling;
				if(relObj && relObj.tagName == 'INPUT' && (relObj.type == 'checkbox' || relObj.type == 'radio')) bGotFocus = true;
			}
		}
		else if(currObj.IsGrid() && nFileVersion >= 7020200326001)
		{
			var cellId = currObj.GetCellId(obj);
			if(cellId)
			{
				bGotFocus = true;
				bSelectThreadDisplay = true;
			}
		}
		if(bGotFocus)
		{
			Webcrea.OnGOTFOCUS(obj);
			if(bSelectThreadDisplay && currObj.IsGrid() && typeof currObj.SetEventIndex != 'undefined')
			{
				setTimeout(function(){currObj.SetEventIndex(obj);});
			}
		}
		var bMultiSelectCell = false;
		if(currObj.IsGrid() && currObj.bMulti)
		{
			bMultiSelectCell = currObj.IsMultiSelectCell(obj);
			if(!bMultiSelectCell && obj.firstElementChild) bMultiSelectCell = currObj.IsMultiSelectCell(obj.firstElementChild);
		}
		var funcData = 'Data';
		if(currObj.IsList())
		{
			let trNode = obj;
			if(trNode.tagName != 'TR') trNode = Webcrea.FindParentNode(obj, 'name', 'TR');
			if(trNode)
			{
				let currRowNo = trNode.getAttribute('seq');
				if(currRowNo && currRowNo>0) funcData += currRowNo;
			}
		}
		if(currObj && window[currObj.divPage][currObj.divPosOrg][funcData] && typeof window[currObj.divPage][currObj.divPosOrg][funcData].OnCLICK != 'undefined')
		{
			window[currObj.divPage][currObj.divPosOrg][funcData].OnCLICK();
		}
		if(currObj && window[currObj.divPage][currObj.divPosOrg][funcData] && typeof window[currObj.divPage][currObj.divPosOrg][funcData].OnONECLK != 'undefined' && !bMultiSelectCell)
		{
			window[currObj.divPage][currObj.divPosOrg][funcData].OnONECLK();
			if(currObj.IsGrid() && currObj.bMulti)
			{
				var objChg;
				if(obj.id) objChg = Webcrea.FindNode(currObj.objDivPage, 'id', obj.id);
				if(objChg && objChg != obj) obj = objChg;
			}
		}
		var sCellId = currObj.GetCellId(obj);
		if(!Webcrea.bDownloadClick && currObj && currObj.IsEnable(obj) && sCellId && window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCLICK != 'undefined')
		{
			Webcrea.OnCLICK(obj);
		}
		if(currObj.IsGrid() && obj)
		{
			var trNode = Webcrea.FindParentNode(obj, 'name', 'TR');
			if(trNode)
			{
				var dataRowNo = trNode.getAttribute('rowno');
				if(dataRowNo == currObj.objSelInfo.dataRowNo)
				{
					var nRow = currObj.GetRowNo(dataRowNo);
					currObj.SetCurrRowInfo(nRow, dataRowNo);
				}
			}
		}
	},
	this.OnDBLCLK = function(obj, currObj)
	{
		if(!obj) obj=window.event;
		var evt = Webcrea.GetEventNode(obj);
		if(evt) obj = evt;
		if(!obj || !obj.parentNode) return;
		if(!currObj) currObj = Webcrea.GetObject(obj);
		if(!currObj) return;
		if(currObj.IsGrid()) currObj.OnDBLCLK(obj);
	},
	this.OnCLICK = function(obj, rootDiv)
	{
		var bHandler = false;
		var bButton = false;
		var bMenuButton = false;
		var currObj = Webcrea.GetObject(obj);
		if(obj.getAttribute('type') == '_my_handler') bHandler = true;
		else if(obj.tagName.toLowerCase() == 'button' || (obj.tagName.toLowerCase() == 'input' && obj.type && (obj.type.toLowerCase() == 'button' || obj.type.toLowerCase() == 'image')))
		{
			var sEnableStatus = obj.getAttribute('enable_status');
			if(sEnableStatus && sEnableStatus == 'false') return;
			if(Webcrea.IE() && obj.disabled) return;
			if(obj.getAttribute('menu') == 'menu') bMenuButton = true;
			bButton = true;
		}
		else if(obj.tagName.toLowerCase() == 'select')
		{
			if(!Webcrea.IsReadOnly(obj) && Webcrea.IsEnable(obj)) return;
		}
		var attr = obj.getAttribute('role');
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(nFileVersion>=7020170510003 && !bButton) Webcrea.OnGOTFOCUS(obj);
		if(bButton && !bMenuButton && obj.type.toLowerCase() != 'image' && (Webcrea.IsIPhone() || Webcrea.IsPad())) Webcrea.OnGOTFOCUS(obj);
		if(this.bPreventClick)
		{
			if(!bButton || (bButton && !bMenuButton)) return;
			else
			{
				Webcrea.canleaveObj  = null;
				this.bPreventClick = false;
			}
		}
		if(bButton && !bMenuButton) Webcrea.focusObj = currObj;
		if(bButton || bHandler) Webcrea.MainEVENT('click', false),Webcrea.MDIClick(),Webcrea.HideSelectBox();
		var objPage = null;
		var currObj = null;
		if(!obj.parentNode)
		{
			if(!Webcrea.IsEmpty(rootDiv)) objPage = _my_File.GetPageObjById(rootDiv);
			else
			{
				var pageDiv = this.FindParentDiv(obj, 1);
				if(pageDiv) objPage = _my_File.GetPageObjById(pageDiv.id);
				else objPage = _my_File.GetPageObj();
			}
			var sCellId = obj.id;
			var arrCellId = sCellId.split('.');
			if(arrCellId.length != 2) return;
			currObj = objPage.GetObject(arrCellId[0]);
			obj = Webcrea.FindNode(currObj.objDivPage, 'id', sCellId);
		}
		else
		{
			var pageDiv = this.FindParentDiv(obj, 1);
			if(pageDiv) objPage = _my_File.GetPageObjById(pageDiv.id);
			else
			{
				objPage = _my_File.GetPageObj();
				var pid = obj.getAttribute('pid');
				currObj = Webcrea.GetObjectById(pid);
				var sCellId = obj.id;
				var objChg = Webcrea.FindNode(currObj.objDivPos, 'id', sCellId);
				if(objChg) obj = objChg;
			}
		}
		if(!objPage) return;
		if(bHandler)
		{
			var id = obj.getAttribute('reldiv');
			currObj = objPage.GetObject(id);
			if(!currObj._Get_Visible())	currObj.Show();
			else currObj.Hide();
		}
		else
		{
			var objId = obj.id;
			if(attr)
			{
				if(attr.toLowerCase() == 'tab')
				{
					currObj = this.GetObject(obj, true);
					if(currObj && typeof currObj.OnCLICK != 'undefined') currObj.OnCLICK();
				}
				else if(attr.toLowerCase() == 'tableft' || attr.toLowerCase() == 'tabright')
				{
					var bRight=false;
					if(attr.toLowerCase() == 'tabright') bRight=true;
					var id = obj.getAttribute('reldiv');
					currObj = objPage.GetObject(id);
					if(currObj && typeof currObj.TabArrawClick != 'undefined') currObj.TabArrawClick(bRight);
				}
				else if(attr.toLowerCase() == 'signpad')
				{
					currObj = this.GetObject(obj);
					if(currObj && typeof currObj.OnCLICK != 'undefined') currObj.OnCLICK();
				}
				else if(attr.toLowerCase() == 'sort')
				{
					var id = obj.getAttribute('relId');
					var nObj = id.indexOf('.');
					if(nObj>0) id = id.substr(nObj+1);
					var parentDiv = Webcrea.FindParentDiv(obj);
					var parentDivId = parentDiv.id;
					if(parentDivId.charAt(parentDivId.length-1) == 'H') parentDivId = parentDivId.substr(0, parentDivId.length-1);
					var relObj = objPage.GetObject(parentDivId);
					if(relObj && typeof relObj.Sort != 'undefined') relObj.Sort(id);
				}
				else if(attr.toLowerCase() == 'bullettree')
				{
					var opt = {};
					opt.bSelectOnly = true;
					opt.bSelf = true;
					currObj = this.GetObject(obj);
					if(currObj && typeof currObj.Expand != 'undefined')
					{
						currObj.ExpandTreeGrid(obj, opt);
						if(typeof window[currObj.divPage][currObj.divPosOrg].Data.OnEXPAND != 'undefined') window[currObj.divPage][currObj.divPosOrg].Data.OnEXPAND();
					}
				}
				else if(attr.toLowerCase() == '_select_')
				{
					var arr = objId.split('.');
					if(arr.length == 2)
					{
						var relObj = objPage.GetObject(arr[0]);
						if(!relObj.bCanSelectAll)
						{
							obj.checked = !obj.checked;
							return;
						}
						else relObj.SelectRow(obj.checked.toString());
						_SELECT_ = obj.checked;
						var func = 'Func' + relObj.divPage + '_' + relObj.divPos + '_' + '_SELECT_H_OnHSELECT';
						var objT = null;
						try{objT = eval(func);}catch(e){}
						if(objT) objT();
					}
				}
				else if(obj.type == 'radio' && attr.toLowerCase() == 'group')
				{
					var relId = obj.getAttribute('relId');
					var parentDiv = Webcrea.FindParentDiv(obj);
					var parentDivId = parentDiv.id;
					currObj = objPage.GetObject(parentDivId);
					if(currObj)
					{
						var sCellId = currObj.GetCellId(relId);
						if(typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE != 'undefined')
						{
							var relObj = Webcrea.FindNode(currObj.objDivPage, 'id', currObj.divPos + '.' + sCellId);
							window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE(relObj);
						}
					}
				}
				else if(attr.toLowerCase() == 'edittd')
				{
					if(!currObj) currObj = this.GetObject(obj);
					if(currObj) _CLICKID_ = currObj.divPos;
					var inputBox = Webcrea.DisplayInputBox(obj);
					if(inputBox) obj = inputBox;
				}
				else if((attr.toLowerCase() == 'multiline' || attr.toLowerCase() == 'pmultiline'))
				{
					if(!currObj) currObj = this.GetObject(obj);
					if(!currObj || (currObj && !currObj.IsCalendar())) Webcrea.DisplayMultiLine(obj, false, currObj);
				}
				else if(attr.toLowerCase() == 'selectbox' || attr.toLowerCase() == 'selectboxinput' || attr.toLowerCase() == 'selectboxarrow')
				{
					var bSkip = false;
					if(!currObj) currObj = Webcrea.GetEventObject();
					var sCellId = obj.getAttribute('orgid');
					if(attr.toLowerCase() == 'selectboxarrow')
					{
						var relId = obj.getAttribute('relId');
						sCellId = currObj.GetCellId(relId);
						var rowId =	'';
						if(currObj.IsGrid())
						{
							rowId = currObj.GetCurrRowIndex();
							rowId = currObj.GetRowDataNo(rowId);
						}
						obj = Webcrea.FindNode(currObj.objDivPos, 'id', currObj.divPos + '.' + sCellId + rowId);
					}
					else if(!currObj.IsMulti(sCellId) && attr.toLowerCase() != 'selectbox') bSkip = true;
					if(!bSkip)
					{
						var bDisplay = true;
						var sEnableStatus = obj.getAttribute('enable_status');
						if(sEnableStatus && sEnableStatus == 'false') bDisplay = false;
						if(bDisplay)
						{
							var sReadOnlyStatus = obj.getAttribute('readonly_status');
							if(sReadOnlyStatus && sReadOnlyStatus == 'true') bDisplay = false;
						}
						if(bDisplay && (Webcrea.IsReadOnly(obj) || !Webcrea.IsEnable(obj))) bDisplay = false;
						if(bDisplay)
						{
							Webcrea.DisplaySelectBox(obj, currObj);
							return;
						}
					}
				}
				else if(attr.toLowerCase() == 'filterboxarrow')
				{
					if(!currObj) currObj = Webcrea.GetEventObject();
					if(currObj.objSelCol)
					{
						var relObj = currObj.objSelCol;
						if(relObj.tagName == 'TD')
						{
							var layoutId = currObj.objSelCol.getAttribute('layoutid');
							relObj = Webcrea.FindNode(relObj, 'orgid', layoutId);
						}
						if(relObj) relObj.blur();
					}
					var relid = obj.getAttribute('relid');
					obj = Webcrea.FindNode(currObj.objHDivPos, 'id', currObj.divPos + '.' + relid);
					var findid = obj.getAttribute('relid');
					if(currObj.arrFilterObj && currObj.arrFilterObj.length>0) currObj.SetFilterData(findid);
					Webcrea.DisplayFilterBox(obj, currObj);
					return;
				}
			}
			else if(!currObj) currObj = this.GetObject(obj);
			if(currObj && currObj.objTable)
			{
				if(currObj.IsGrid()) _LEVEL_ = 0;
				if(bButton) currObj.SetCurrObjInfo(obj);
				var sCellId = currObj.GetCellId(obj);
				if(obj.tagName.toLowerCase() == 'img' || obj.tagName.toLowerCase() == 'label') Webcrea.OnGOTFOCUS(obj);
				var bMultiSelect = false;
				if(currObj.bMulti && sCellId == '_SELECT_') bMultiSelect = true;
				else if(currObj.bMulti && (Webcrea.bShiftKey || Webcrea.bCtrlKey))
				{
					var sFindCellId = '_SELECT_';
					if(sFindCellId != sCellId)
					{
						var trNode = Webcrea.FindParentNode(obj, 'name', 'TR');
						var multiNode = Webcrea.FindNode(trNode, 'orgId', sFindCellId);
						if(multiNode)
						{
							obj = multiNode;
							sCellId = sFindCellId;
							if(Webcrea.bCtrlKey)
							{
								var colValue = obj.checked?1:0;
								obj.checked = !colValue;
							}
						}
						bMultiSelect = true;
					}
				}
				if(bMultiSelect)
				{
					_SELECT_ = currObj.IsSelected(currObj.GetRowDataNo(currObj.currRowIndex))?0:1;
					if(obj.type == 'checkbox' || Webcrea.bCtrlKey || Webcrea.bShiftKey)
					{
						if(currObj.IsGrid() && currObj.bMulti)
						{
							var objChg;
							if(obj.id) objChg = Webcrea.FindNode(currObj.objDivPage, 'id', obj.id);
							if(objChg && objChg != obj) obj = objChg;
						}
						window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE(obj, this);
					}
					if(typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnSELECT != 'undefined') window[currObj.divPage][currObj.divPosOrg][sCellId].OnSELECT();
				}
				else if(currObj.IsGrid() && currObj.bMulti && currObj.bDrag && currObj.IsReadOnly())
				{
					var rowNo = Webcrea.NumberReDef(currObj.objSelInfo.rowNo);
					currObj.SetValueByData('_SELECT_', true, rowNo);
				}
				else if(currObj.IsCalendar())
				{
					var sVal = '';
					var sValue = '';
					var tdNode;
					if(obj.tagName == 'TD') tdNode = obj;
					else tdNode = Webcrea.FindParentNode(obj, 'name', 'TD');
					if(Webcrea.IsEditTd(tdNode)) obj = tdNode;
					if(!currObj.IsCalendarCell(obj))
					{
						var sNo = sCellId.substr(sCellId.length-2);
						sVal = sCellId.replace(sNo, '');
						sValue = currObj.GetValue(sCellId);
						var sDateCellId = 'd';
						var sDateValue = currObj.GetValue(sDateCellId+sNo);
						Webcrea.DynamicVal(sDateCellId, sDateValue);
						if(obj.type == 'checkbox' && typeof currObj.SetCheck != 'undefined') currObj.SetCheck(sCellId);
					}
					else
					{
						sVal = 'd';
						sValue = obj.getAttribute('date');
					}
					Webcrea.DynamicVal(sVal, sValue);
					sVal += '00';
					if(window[currObj.divPage][currObj.divPosOrg][sVal] && typeof window[currObj.divPage][currObj.divPosOrg][sVal].OnCLICK != 'undefined')
						window[currObj.divPage][currObj.divPosOrg][sVal].OnCLICK(obj);
				}
				else
				{
					if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCLICK != 'undefined')
					{
						var imagedown = obj.getAttribute('imagedown');
						if(imagedown)
						{
							var src = obj.getAttribute('src');
							if(src)
							{
								obj.src = Webcrea.GetImageLinkPath() + '/' + imagedown;
								obj.value = imagedown;
							}
							else if(obj.style.backgroundImage) obj.style.backgroundImage = "url('" + Webcrea.GetImageLinkPath() + "/" + imagedown + "')";
						}
						window[currObj.divPage][currObj.divPosOrg][sCellId].OnCLICK(obj);
					}
				}
			}
		}
		if(Webcrea && Webcrea.IsIE() && obj)
		{
			if(obj.tagName.toLowerCase() == 'input')
			{
				var enable_status = obj.getAttribute('enable_status');
				var readonly= obj.getAttribute('readonly');
				if(readonly && enable_status=='false') obj.blur();
			}
			var nSelectionStart = obj.getAttribute('selectionStart');
			if(nSelectionStart)
			{
				if(obj.createTextRange)
				{
					var range = obj.createTextRange();
					range.move('character', nSelectionStart);
					range.select();
				}
				else if(obj.selectionStart) obj.selectionStart = nSelectionStart;
				obj.removeAttribute('selectionStart');
			}
		}
		if(Webcrea && (bButton || bHandler)) Webcrea.MainEVENT('click');
	},
	this.OnCHANGE = function(obj)
	{
		if(!obj) return;
		Webcrea.bChangeForceEvent = false;
		if(obj && obj.nodeName.toLowerCase() == 'select' && Webcrea.IsReadOnly(obj))
		{
			obj.selectedIndex = obj.initialSelect;
			return;
		}
		var currObj = Webcrea.GetObject(obj);
		if(!currObj) return;
		var sCellId = currObj.GetCellId(obj);
		var role = obj.getAttribute('role');
		if(role == 'selectboxinput' && !currObj.IsMulti(sCellId) && !currObj.bSelectItem)
		{
			var objPage = _my_File.GetPageObj();
			var mySelectBoxId = currObj.divPos + '.' + sCellId;
			var dlNode = document.getElementById('_my_selectbox_groupDL_' + mySelectBoxId);
			var itemsNode = Webcrea.FindNode(dlNode, 'id', '_my_selectbox_items_' + mySelectBoxId);
			var cellInfo = currObj.GetCellInfo(sCellId);
			if(cellInfo && !Webcrea.IsEmpty(cellInfo.validChar) && !Webcrea.IsEmpty(obj.value) && cellInfo.validChar != '*')
			{
				var checkValue = Extract(obj.value, cellInfo.validChar);
				if(Webcrea.IsEmpty(checkValue))
				{
					obj.value = '';
					return;
				}
			}
			var findObj = Webcrea.SearchSelectBoxItem(obj.value, itemsNode, true);
			if(findObj)
			{
				var sCodesOrg = obj.getAttribute('code');
				var sValueOrg = obj.value;
				if(Webcrea.IsEmpty(sCodesOrg)) sCodesOrg = '';
				if(sCodesOrg != findObj.code)
				{
					obj.setAttribute('code', findObj.code);
					if(!Webcrea.IsEmpty(findObj.code)) obj.value = findObj.value;
				}
				else if(!Webcrea.IsEmpty(findObj.value) && sValueOrg != findObj.value) obj.value = findObj.value;
				if(Webcrea.IsEmpty(findObj.code) && Webcrea.IsEmpty(findObj.value))
				{
					if(cellInfo && !Webcrea.IsEmpty(cellInfo.validChar) && !Webcrea.IsEmpty(obj.value) && cellInfo.validChar == '*')
					{
						obj.value = '';
						return;
					}
				}
			}
		}
		if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE != 'undefined' && currObj.objEvent.bChange)
			window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE(obj, this);
	},
	this.OnKEYUP = function(obj, mode)
	{
		var currObj;
		if(obj) currObj = Webcrea.GetObject(obj);
		else
		{
			var evt=window.event;
			obj=Webcrea.GetEventNode(evt);
			currObj = Webcrea.GetObject(obj);
		}
		if(mode == 'number' || mode == 'digit')
		{
			if(Webcrea.bPasteKey)
			{
				var value = obj.value;
				if(Webcrea.IsNumber(value))
				{
					if(mode == 'number') value = Webcrea.NumberReDef(value);
					else return;
				}
				else
				{
					if(mode == 'number')
					{
						value = Extract(value, '[0-9].');
						value = Webcrea.NumberReDef(value);
					}
					else value = Extract(value, '[0-9]');
				}
				if(Webcrea.IsNaN(value)) value = Webcrea.preValue;
				obj.value = value;
				Webcrea.bPasteKey = false;
			}
		}
		if(currObj)
		{
			var sCellId = currObj.GetCellId(obj);
			var bOnCharEvent = false;
			if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHAR != 'undefined') bOnCharEvent = true;
			if(bOnCharEvent && window.event) bOnCharEvent = !Webcrea.IsSkipOnCharKeyCode(window.event.keyCode);
			if(bOnCharEvent && window.event && (window.event.keyCode == 13 && obj.nodeName.toLowerCase() != 'textarea')) bOnCharEvent = false;
			if(bOnCharEvent)
			{
				if(!Webcrea.IsReadOnly(obj) && Webcrea.IsEnable(obj))
				{
					currObj.arrStackEvent[currObj.arrStackEvent.length] = 'onchar';
					window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHAR();
					currObj.arrStackEvent.removeByValue('onchar');
				}
			}
		}
	},
	this.OnMODIFY = function(obj)
	{
		Webcrea.bModifyForceEvent = false;
		var currObj;
		if(obj) currObj = Webcrea.GetObject(obj);
		else
		{
			var evt=window.event;
			var obj=Webcrea.GetEventNode(evt);
			currObj = Webcrea.GetObject(obj);
		}
		if(!currObj) return;
		var sCellId = currObj.GetCellId(obj);
		var bModifyEvented = true;
		if(obj && currObj.modifyEvented == obj) bModifyEvented = false;
		if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnMODIFY != 'undefined' && currObj.objEvent.bModify && bModifyEvented)
			window[currObj.divPage][currObj.divPosOrg][sCellId].OnMODIFY();
		if(!bModifyEvented) currObj.modifyEvented = null;

		var bItemModifiedEvented = true;
		if(obj && currObj.itemModifiedEvented == obj) bItemModifiedEvented = false;
		if(typeof window[currObj.divPage][currObj.divPosOrg].OnITEMMODIFIED != 'undefined' && currObj.objEvent.bModify && bItemModifiedEvented)
		{
			_MODID_ = sCellId;
			window[currObj.divPage][currObj.divPosOrg].OnITEMMODIFIED();
		}
		if(!bItemModifiedEvented) currObj.itemModifiedEvented = null;
	},
	this.OnDRAG = function(evt, paramOpt)
	{
		var obj = evt;
		var bDragObj = paramOpt=='drag'?true:false;
		if(evt.srcElement || evt.target || evt.currentTarget) obj=Webcrea.GetEventNode(evt);
		if(evt.type == 'mouseup' || evt.type == 'touchend')
		{
			Webcrea.OnDRAGSTOP();
			return;
		}
		else if(evt.type == 'mousemove' || evt.type == 'touchmove')
		{
			if(bDragObj && Webcrea.objDragStat) obj = obj;
			else obj = this.mouseObj;
		}

		if(!obj)
		{
			if(bDragObj && (evt.srcElement || evt.target || evt.currentTarget)) obj=Webcrea.GetEventNode(evt);
			else
			{
				Webcrea.OnDRAGSTOP();
				return;
			}
		}
		var pageDiv = Webcrea.FindParentDiv(obj, 1);
		var objPage = null;
		if(pageDiv) objPage = _my_File.GetPageObjById(pageDiv.id);
		if(!objPage && Webcrea.objDragPublic) objPage = Webcrea.objDragPublic.objPage;
		if(!objPage)
		{
			Webcrea.OnDRAGSTOP();
			return;
		}

		var bHeader=false;
		var bSort=false;
		var bRuler=false;
		var bStat=false;
		var role = obj.getAttribute('role');
		if(role) 
		{
			if(role == 'ruler' || role == 'rulerpane')
			{
				var fix = obj.getAttribute('fix');
				if(!fix) bRuler = true;
				else return;
				if(role == 'rulerpane') return;
			}
			else if(role == 'header' || (role == 'sort' && obj.tagName == 'INPUT'))
			{
				bHeader = true;
				if(role == 'sort') bSort = true;
			}
			else if(role == 'statrow' || role == 'statcol' || role == 'statfld')
			{
				bStat = true;
			}
		}
		var tdNode = Webcrea.FindParentNode(obj, 'name', 'TD');
		if(bHeader && obj.tagName == 'SPAN' && tdNode)
		{
			obj = tdNode;
		}
		else if((obj.tagName == 'SPAN' || obj.tagName == 'B' || obj.tagName == 'I' || obj.tagName == 'U') && tdNode)
		{
			var role = tdNode.getAttribute('role');
			if(role == 'header')
			{
				bHeader = true;
				obj = tdNode;
			}
		}
		var bSwipe = paramOpt=='swipe'?true:false;
		var objId = obj.getAttribute('pid');
		var relId = obj.getAttribute('relId');
		var relObj = objPage.GetObject(objId);
		var mode = -1;
		if(relObj && (relObj.IsGrid() || relObj.IsStat()))
		{
			if((evt.type == 'mousedown' && (evt.button == 0 || evt.button == 1)) || (evt.type == 'touchstart'))
			{
				if(bRuler)
				{
					var rulerGuide = Webcrea.FindNode(relObj.objGDivPos, 'id', objId + 'Ruler');
					if(rulerGuide)
					{
						Webcrea.objRuler = {};
						Webcrea.objRuler.rulerGuide = rulerGuide;
						Webcrea.objRuler.objPage = objPage;
						Webcrea.objRuler.objDiv = relObj;
						Webcrea.objRuler.firstLeft = Webcrea.GetMousePos(0);
						Webcrea.objRuler.relId = relId;
						var nMainLeft = Webcrea.GetLeft(_my_File.objMain);
						Webcrea.objRuler.pageLeft = Webcrea.GetLeft(objPage.objDivPage)+nMainLeft;
						Webcrea.objRuler.divLeft = Webcrea.GetLeft(relObj.objGDivPos);
						Webcrea.objRuler.divWidth = Webcrea.GetWidth(relObj.objGDivPos, true);
						Webcrea.objRuler.bDisplay = false;
						Webcrea.objRuler.objDiv.objGDivPos.onselectstart = new Function('return false');
						var relNode = Webcrea.FindNode(relObj.objGDivPos, 'relId', relId);
						var currColNo = relNode.getAttribute('colno');
						Webcrea.objRuler.relColNo = Number(currColNo);
						var colGroup = Webcrea.FindNode(relObj.objDivPos, 'name', 'COLGROUP');
						var arrColGroup = [];
						if(colGroup) Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
						var bLast = false;
						if(currColNo == arrColGroup.length-1) bLast = true;
						Webcrea.objRuler.bLastCol = bLast;
					}
				}
				else if(bHeader && Webcrea.bDragHeader)
				{
					if(relObj && relObj.IsCrossTab()) return;
					var nWidth = Webcrea.GetWidth(obj, true);
					var nHeight = Webcrea.GetHeight(obj, true);
					if(nHeight>25) nHeight=25;
					var nTop = Webcrea.GetTop(obj)+1;
					var nLeft = Webcrea.GetLeft(obj);
					var sText = obj.textContent;
					if(relObj.arrTableHeader.length>1 && tdNode)
					{
						var trNode = Webcrea.FindParentNode(tdNode, 'name', 'TR');
						if(trNode && trNode != relObj.arrTableHeader[0]) tdNode = null;
					}
					if(bSort)
					{
						sText = obj.value;
						tdNode = Webcrea.FindParentNode(obj, 'name', 'TD');
						tdNode.setAttribute('relId', obj.getAttribute('relId'));
						tdNode.setAttribute('colno', obj.getAttribute('colno'));
					}
					var rulerGuide = Webcrea.FindNode(relObj.objGDivPos, 'id', objId + 'Ruler');
					var id = objId + 'MoveColumn';
					var className = '_my_grid_dragging_header';
					var divDrag = document.createElement('div');
					divDrag.setAttribute('id', id);
					divDrag.setAttribute('class', className);
					divDrag.setAttribute('style', 'position: absolute;display:none;width:' + nWidth + 'px;height:' + nHeight + 'px;top:' + nTop + 'px;left:' + nLeft + 'px;');
					divDrag.textContent = sText;
					relObj.objGDivPos.appendChild(divDrag);

					Webcrea.objMoveHeader = {};
					Webcrea.objMoveHeader.rulerGuide = rulerGuide;
					Webcrea.objMoveHeader.rulerGuideLeft = 0;
					Webcrea.objMoveHeader.dragHeader = divDrag;
					Webcrea.objMoveHeader.objPage = objPage;
					Webcrea.objMoveHeader.objDiv = relObj;
					Webcrea.objMoveHeader.obj = obj;
					Webcrea.objMoveHeader.currNode = tdNode;
					Webcrea.objMoveHeader.firstLeft = Webcrea.GetMousePos(0);
					Webcrea.objMoveHeader.relId = relId;
					var nMainLeft = Webcrea.GetLeft(_my_File.objMain);
					Webcrea.objMoveHeader.pageLeft = Webcrea.GetLeft(objPage.objDivPage)+nMainLeft;
					Webcrea.objMoveHeader.divLeft = Webcrea.GetLeft(relObj.objGDivPos);
					Webcrea.objMoveHeader.divWidth = Webcrea.GetWidth(relObj.objGDivPos, true);
					Webcrea.objMoveHeader.objDiv.objGDivPos.onselectstart = new Function('return false');
				}
				else if(bStat)
				{
					document.body.onselectstart = new Function('return false');
					var nWidth = Webcrea.GetWidth(obj, true);
					var nHeight = Webcrea.GetHeight(obj, true);
					if(nHeight>25) nHeight=25;
					var nTop = Webcrea.GetTop(obj)+1;
					var nLeft = Webcrea.GetLeft(obj);
					var sText = obj.textContent;
					var id = objId + 'MoveColumn';
					var className = obj.getAttribute('class');
					if(Webcrea.IsEmpty(className)) className = '_my_grid_dragging_header';
					else className = className + ' _my_grid_dragging_header';
					var divDrag = document.createElement('div');
					divDrag.setAttribute('id', id);
					divDrag.setAttribute('class', className);
					divDrag.setAttribute('style', 'position: absolute;display:none;width:' + nWidth + 'px;height:' + nHeight + 'px;top:' + nTop + 'px;left:' + nLeft + 'px;');
					divDrag.style.fontWeight = 'normal';
					divDrag.style.fontSize = '9pt';
					divDrag.textContent = sText;
					objPage.objDivPage.appendChild(divDrag);
					divDrag.style.cursor = 'no-drop';

					Webcrea.objDragStat = {};
					Webcrea.objDragStat.dragObject = divDrag;
					Webcrea.objDragStat.objPage = objPage;
					Webcrea.objDragStat.objDiv = relObj;
					Webcrea.objDragStat.obj = obj;
					Webcrea.objDragStat.tdNode = tdNode;
					Webcrea.objDragStat.firstLeft = Webcrea.GetMousePos(0);
					Webcrea.objDragStat.relId = relId;
					var nMainLeft = Webcrea.GetLeft(_my_File.objMain);
					var nMainTop = Webcrea.GetTop(_my_File.objMain);
					Webcrea.objDragStat.pageLeft = Webcrea.GetLeft(objPage.objDivPage)+nMainLeft;
					Webcrea.objDragStat.pageTop = Webcrea.GetTop(objPage.objDivPage)+nMainTop;
					Webcrea.objDragStat.divLeft = Webcrea.GetLeft(relObj.objDivPos);
					Webcrea.objDragStat.divTop = Webcrea.GetTop(relObj.objDivPos);
					Webcrea.objDragStat.divWidth = Webcrea.GetWidth(relObj.objDivPos, true);
				}
				else if(bDragObj && relObj.bDrag && relObj.bMulti && relObj.IsReadOnly())
				{
					document.body.onselectstart = new Function('return false');
					if(relObj.IsMultiSelectCell(obj) && !Webcrea.objDrag)
					{
						Webcrea.objDrag = {};
						Webcrea.objDrag.obj = relObj;
						Webcrea.objDrag.startNode = obj;
						Webcrea.objDrag.arrDragRowNo = [];
					}
					else if(Webcrea.bShiftKey)
					{
						var rowNo = relObj.GetRowNo(obj);
						var dataRowNo = relObj.GetRowDataNo(rowNo, true);
						relObj.DisplaySelectRowByShift(dataRowNo);
					}
					else
					{
						var bDrop = false;
						if(relObj.objDrag && relObj.objDrop)
						{
							var trCurrNode = Webcrea.FindParentNode(obj, 'name', 'TR');
							if(trCurrNode)
							{
								var rowNoOrg = trCurrNode.getAttribute('rowno');
								for(var i=0; i<relObj.objDrag.arrDragRowNo.length; i++)
								{
									var rowNo = relObj.objDrag.arrDragRowNo[i];
									if(rowNoOrg == rowNo)
									{
										bDrop = true;
										break;
									}
								}
							}
						}
						if(!bDrop)
						{
							if(relObj.objDrag)
							{
								if(relObj.arrDragRowNo && relObj.arrData['(sel)'])
								{
									for(var i=0; i<relObj.arrDragRowNo.length; i++)
									{
										var nSelRowNo = relObj.arrDragRowNo[i];
										relObj.arrData['(sel)'][nSelRowNo] = '';
									}
									relObj.arrDragRowNo = [];
								}
								relObj.objDrag = null;
							}
							relObj.ClearSelect();
							var rowNo = relObj.GetRowNo(obj);
							var dataRowNo = relObj.GetRowDataNo(rowNo, true);
							if(!relObj.arrShift) relObj.arrShift = [];
							relObj.nShiftFisrtNo = Number(dataRowNo);
							if(relObj.arrShift.search(relObj.nShiftFisrtNo)<0) relObj.arrShift[relObj.arrShift.length] = relObj.nShiftFisrtNo;
							var bMultiCheckBox = relObj.IsMultiSelectCell();
							if(relObj.arrMulti)
							{
								for(var i=0; i<relObj.arrMulti.length; i++)
								{
									relObj.arrMulti[i] = '';
									if(relObj.IsDisplayDataRow(i) && bMultiCheckBox)
									{
										rowNo = relObj.GetRowNo(i);
										relObj.SetValueByData('_SELECT_', relObj.arrMulti[i], rowNo);
									}
								}
							}
							Webcrea.objDrag = {};
							Webcrea.objDrag.obj = relObj;
							Webcrea.objDrag.startNode = obj;
							Webcrea.objDrag.arrDragRowNo = [];
							Webcrea.objDrag.bDropStart = false;
						}
						else if(bDrop)
						{
							Webcrea.objDrag = relObj.objDrag;
							Webcrea.objDrag.bDropStart = true;
							document.body.style.cursor = 'no-drop';
							var nTop = Webcrea.GetMousePos(1);
							var nLeft = Webcrea.GetMousePos(0);
							var nWidth = 18;
							var nHeight = 12;
							var id = objId + 'MoveDiv';
							var className = '_my_grid_dragging_row';
							var divDrag = document.createElement('div');
							divDrag.setAttribute('id', id);
							divDrag.setAttribute('role', 'movediv');
							divDrag.setAttribute('class', className);
							divDrag.setAttribute('style', 'position: absolute;z-index:9999;display:block;border:3px ridge #666;width:' + nWidth + 'px;height:' + nHeight + 'px;top:' + nTop + 'px;left:' + nLeft + 'px;');
							Webcrea.objDrag.divDrag = divDrag;
							document.body.appendChild(divDrag);
						}
					}
					if(!Webcrea.arrAttachEvent) Webcrea.arrAttachEvent = [];
					if(Webcrea.IsIE69())
					{
						var attachEventObj = {};
						attachEventObj.event = 'onmouseup';
						attachEventObj.target = document;
						attachEventObj.func = function(){Webcrea.OnDRAG(window.event, paramOpt);};
						if(!Webcrea.arrAttachEvent) Webcrea.arrAttachEvent = [];
						attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);
					}
					else
					{
						var attachEventObj = {};
						attachEventObj.event = 'mouseup';
						attachEventObj.target = document;
						attachEventObj.func = function(){Webcrea.OnDRAG(window.event, paramOpt);};
						Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
						attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);
					}
				}
			}
			else if(evt.type == 'mousemove' || evt.type == 'touchmove')
			{
				if(Webcrea.objRuler)
				{
					var nPageLeft = Webcrea.objRuler.pageLeft;
					var nDivLeft = Webcrea.objRuler.divLeft;
					var nCurrPos = Webcrea.GetMousePos(0);
					var nLeft = nCurrPos - nDivLeft - nPageLeft;
					var nMaxPos = nPageLeft + nDivLeft + Webcrea.objRuler.divWidth;
					if(Webcrea.objRuler.bLastCol) nMaxPos = nCurrPos + 1;
					if(nLeft>0 && nCurrPos < nMaxPos)
					{
						Webcrea.objRuler.rulerGuide.style.left = nLeft + 'px';
						if(!Webcrea.objRuler.bDisplay)
						{
							Webcrea.objRuler.rulerGuide.style.display = 'block';
							Webcrea.objRuler.bDisplay = true;
						}
					}
					else Webcrea.OnDRAGSTOP();
				}
				else if(Webcrea.objMoveHeader)
				{
					if(Webcrea.objMoveHeader.objDiv.IsList()) return;
					var nCurrPos = Webcrea.GetMousePos(0);
					var nFirstLeft = Webcrea.objMoveHeader.firstLeft;
					var nMove = nCurrPos - nFirstLeft;
					var nPageLeft = Webcrea.objMoveHeader.pageLeft;
					var nDivLeft = Webcrea.objMoveHeader.divLeft;
					var nDivWidth = Webcrea.objMoveHeader.divWidth;
					var nDivCurrPos = nCurrPos - nPageLeft - nDivLeft;
					var nScrollLeft = Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft;

					var currNode = Webcrea.objMoveHeader.currNode;
					if(!currNode) return;
					var moveNode = currNode.nextElementSibling;
					if(nMove<0) moveNode = currNode.previousElementSibling;
					var nCurrLeft = Number(Webcrea.GetLeft(currNode, true)) - nScrollLeft;
					var nCurrWidth = Number(Webcrea.GetWidth(currNode, true));
					var nMoveLeft = nCurrLeft + nCurrWidth;
					if(nMove<0) nMoveLeft = nCurrLeft;
					var nLeftRange = 0;
					var nRightRange = nDivWidth-17;
					var bAfter = true;
					var bRulerMove = true;
					var moveRealNode = null;
					var nAutoScroll = 20;
					var bGuideLine = false;
					var bAutoScroll = true;
					if(bAutoScroll)
					{
						var bScroll=false;
						var nDivWidthScrl = Number(Webcrea.GetWidth(Webcrea.objMoveHeader.objDiv.objDivPos));
						var nDivWidth = Number(Webcrea.GetWidth(Webcrea.objMoveHeader.objDiv.objDivPos, true));
						var nScrollPosWidth = nDivWidthScrl - nDivWidth;
						if(nScrollPosWidth>0)
						{
							if(nDivCurrPos>nRightRange)
							{
								Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft = Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft + nAutoScroll;
								bScroll = true;
							}
							else if(nDivCurrPos<=nLeftRange)
							{
								Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft = Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft - nAutoScroll;
								bScroll = true;
							}
						}
						if(bScroll)
						{
							var id = objId;
							if(typeof window[id + 'H'] != 'undefined' && Webcrea.objMoveHeader.objDiv.objDivPos) window[id + 'H'].scrollLeft = Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft;
							if(typeof window[id + 'F'] != 'undefined' && Webcrea.objMoveHeader.objDiv.objDivPos) window[id + 'F'].scrollLeft = Webcrea.objMoveHeader.objDiv.objDivPos.scrollLeft;
						}
					}
					if(nDivCurrPos<nLeftRange || nDivCurrPos>nRightRange || !moveNode) bRulerMove = false;
					if(nMove>0 && nDivCurrPos>nCurrLeft+nCurrWidth && bRulerMove)
					{
						while(moveNode)
						{
							var nFindLeft = Webcrea.GetLeft(moveNode, true) - nScrollLeft;
							var nFindWidth = Webcrea.GetWidth(moveNode, true);
							if(nDivCurrPos < nFindLeft + nFindWidth)
							{
								bAfter = true;
								moveRealNode = moveNode;
								nMoveLeft = nFindLeft + nFindWidth;
								break;
							}
							else moveNode = moveNode.nextElementSibling;
						}
					}
					else if(nMove<0 && nDivCurrPos<nCurrLeft && bRulerMove)
					{
						while(moveNode)
						{
							var nFindLeft = Webcrea.GetLeft(moveNode, true) - nScrollLeft;
							var nFindWidth = Webcrea.GetWidth(moveNode, true);
							if(nDivCurrPos > nFindLeft && nDivCurrPos < nFindLeft + nFindWidth)
							{
								bAfter = false;
								moveRealNode = moveNode;
								nMoveLeft = nFindLeft;
								break;
							}
							else moveNode = moveNode.previousElementSibling;
						}
					}
					else if(nDivCurrPos<=nLeftRange || nDivCurrPos>nRightRange) bRulerMove = false;
					if(!moveRealNode) bRulerMove = false;
					else
					{
						var relId = moveRealNode.getAttribute('relId');
						if(Webcrea.IsEmpty(relId))
						{
							var node = Webcrea.FindNode(moveRealNode, 'name', 'INPUT');
							if(node) relId = node.getAttribute('relId');
						}
						if(!relId) bRulerMove = false;
					}
					if(!bRulerMove)
					{
						Webcrea.objMoveHeader.dragHeader.style.cursor = 'no-drop';
						Webcrea.objMoveHeader.moveNode = null;
					}
					else Webcrea.objMoveHeader.dragHeader.style.cursor = 'default';
					var nLeft = Webcrea.GetMousePos(0) - nPageLeft - nDivLeft - (nCurrWidth/2);
					Webcrea.objMoveHeader.dragHeader.style.left = nLeft + 'px';
					if(bRulerMove)
					{
						Webcrea.objMoveHeader.rulerGuide.style.left = nMoveLeft + 'px';
						if(moveRealNode) Webcrea.objMoveHeader.moveNode = moveRealNode;
						Webcrea.objMoveHeader.rulerGuideLeft = nMoveLeft;
						Webcrea.objMoveHeader.bAfter = bAfter;
					}
					if(!Webcrea.objMoveHeader.bDisplay) Webcrea.objMoveHeader.dragHeader.style.display = 'block';
					if(bRulerMove && !Webcrea.objMoveHeader.bDisplay)
					{
						if(bGuideLine)
						{
							Webcrea.objMoveHeader.rulerGuide.style.borderColor = 'red';
							Webcrea.objMoveHeader.rulerGuide.style.borderStyle = 'solid';
							Webcrea.objMoveHeader.rulerGuide.style.borderLeft = '1px';
							Webcrea.objMoveHeader.rulerGuide.style.display = 'block';
						}
						Webcrea.objMoveHeader.bDisplay = true;
					}
				}
				else if(Webcrea.objDragStat)
				{
					var nCurrLeft = Webcrea.GetMousePos(0);
					var nCurrTop = Webcrea.GetMousePos(1);
					var nPageLeft = Webcrea.objDragStat.pageLeft;
					var nPageTop = Webcrea.objDragStat.pageTop;
					var nDivLeft = Webcrea.objDragStat.divLeft;
					var nDivTop = Webcrea.objDragStat.divTop;
					var currNode = Webcrea.objDragStat.obj;
					if(!currNode) return;
					var nCurrWidth = Number(Webcrea.GetWidth(currNode, true));
					var nLeft = nCurrLeft - nPageLeft;
					Webcrea.objDragStat.dragObject.style.left = nLeft + 'px';
					var nTop = nCurrTop - nPageTop;
					Webcrea.objDragStat.dragObject.style.top = nTop + 'px';
					if(!Webcrea.objDragStat.bDisplay)
					{
						Webcrea.objDragStat.dragObject.style.display = 'block';
						Webcrea.objDragStat.bDisplay = true;
					}
				}
				else if(bDragObj && relObj.bDrag && relObj.bMulti && Webcrea.objDrag && relObj.IsReadOnly()
						&& Webcrea.objDrag.obj == relObj && !Webcrea.objDrag.bDropStart)
				{
					var trNode = Webcrea.FindParentNode(obj, 'name', 'TR');
					var dataRowNo = trNode.getAttribute('rowno');
					if(trNode && Webcrea.objDrag.arrDragRowNo.search(dataRowNo)<0)
					{
						var rowNo = relObj.GetRowNo(obj);
						if(relObj.bMulti && relObj.arrMulti)
						{
							relObj.arrMulti[dataRowNo] = true;
							relObj.SetValueByData('_SELECT_', true, rowNo);
							relObj.RefreshHeader(false);
						}
						relObj.Select(rowNo, true, true);
						Webcrea.objDrag.arrDragRowNo[Webcrea.objDrag.arrDragRowNo.length] = dataRowNo;
					}
				}
				else if(bDragObj && Webcrea.objDrag && Webcrea.objDrag.bDropStart)
				{
					if(Webcrea.objDrag.obj.objDrop)
					{
						var objDropId = Webcrea.objDrag.obj.objDrop.id;
						var objDrop = Webcrea.GetObjectById(objDropId);
						if(objDrop == relObj)
						{
							document.body.onselectstart = new Function('return false');
							Webcrea.objDrag.obj.objDrop.realObj = relObj;
							Webcrea.objDrag.obj.objDrop.dropNode = obj;
							document.body.style.cursor = 'move';
						}
					}
				}
			}
			let nRelObjTop = Webcrea.GetTopByObj(relObj);
			var nPageTop = Webcrea.GetTop(relObj.objDivPage);
			var nPointY = Webcrea.GetMousePos(1) - nRelObjTop - nPageTop - relObj.nBaseScrlSize;
			var nPageLeft = Webcrea.GetLeft(relObj.objDivPage);
			var nPointX = Webcrea.GetMousePos(0) - relObj.initLeft - nPageLeft - relObj.nBaseScrlSize;
			var nMaxPointY = Webcrea.GetHeight(relObj.objDivPos, true) - relObj.nBaseScrlSize - relObj.nBaseScrlSize;
			if(evt.type == 'mousedown' && (evt.button == 0 || evt.button == 1) && !bDragObj)
			{
				Webcrea.objDragPublic = {};
				Webcrea.objDragPublic.eventType = 'mouse';
				Webcrea.objDragPublic.objPage = objPage;
				Webcrea.objDragPublic.relObj = relObj;
				Webcrea.objDragPublic.obj = obj;
				Webcrea.objDragPublic.startScrollX = relObj.objDivPos.scrollLeft;
				Webcrea.objDragPublic.startObjX = Webcrea.GetLeft(obj);
				Webcrea.objDragPublic.startObjY = Webcrea.GetTop(obj);
				Webcrea.objDragPublic.startTime = new Date().getTime();
				Webcrea.objDragPublic.ani = false;
				Webcrea.objDragPublic.bMove = false;
				relObj.nDragY = nPointY;
				relObj.nDragX = nPointX;
				this.mouseObj = obj;
				Webcrea.PreventDefault(evt);
				if(!Webcrea.arrAttachEvent) Webcrea.arrAttachEvent = [];
				if(Webcrea.IsIE69())
				{
					var attachEventObj = {};
					attachEventObj.event = 'onmousemove';
					attachEventObj.target = document.body;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event);};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);

					attachEventObj = {};
					attachEventObj.event = 'onmouseup';
					attachEventObj.target = document;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event);};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);
				}
				else
				{
					var attachEventObj = {};
					attachEventObj.event = 'mousemove';
					attachEventObj.target = document.body;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event);};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);

					attachEventObj = {};
					attachEventObj.event = 'mouseup';
					attachEventObj.target = document;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event);};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);
				}
			}
			else if(evt.type == 'touchstart')
			{
				if(Webcrea.objDragPublic)
				{
					if(Webcrea.objDragPublic.swIntervalId) clearInterval(Webcrea.objDragPublic.swIntervalId);
				}
				Webcrea.objDragPublic = {};
				Webcrea.objDragPublic.eventType = 'touch';
				Webcrea.objDragPublic.objPage = objPage;
				Webcrea.objDragPublic.relObj = relObj;
				Webcrea.objDragPublic.obj = obj;
				Webcrea.objDragPublic.startScrollX = relObj.objDivPos.scrollLeft;
				let scrollObj = obj;
				if(role != 'scrollH')
				{
					scrollObj = Webcrea.FindNodePublic(relObj.objGDivPos, 'role', 'scrollH');
					if(!scrollObj) scrollObj = obj;
				}
				Webcrea.objDragPublic.startObjX = Webcrea.GetLeft(scrollObj);
				Webcrea.objDragPublic.startObjY = Webcrea.GetTop(scrollObj);
				Webcrea.objDragPublic.startTime = new Date().getTime();
				Webcrea.objDragPublic.ani = false;
				Webcrea.objDragPublic.bMove = false;
				relObj.nDragY = nPointY;
				relObj.nDragX = nPointX;
				this.mouseObj = obj;
				if(!Webcrea.arrAttachEvent) Webcrea.arrAttachEvent = [];
				if (Webcrea.IsIE69())
				{
					var attachEventObj = {};
					attachEventObj.event = 'ontouchmove';
					attachEventObj.target = obj;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event, 'swipe');};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);

					attachEventObj = {};
					attachEventObj.event = 'ontouchend';
					attachEventObj.target = obj;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event);};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);
				}
				else
				{
					var attachEventObj = {};
					attachEventObj.event = 'touchmove';
					attachEventObj.target = obj;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event, 'swipe');};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);

					attachEventObj = {};
					attachEventObj.event = 'touchend';
					attachEventObj.target = obj;
					attachEventObj.func = function(){Webcrea.OnDRAG(window.event);};
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
					attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);
				}
			}
			var bMoveScrollV = false, bMoveScrollH = false;
			if((evt.type == 'mousemove' || evt.type == 'touchmove') && !bRuler && !bHeader && !bDragObj)
			{
				if(role == 'scrollV')
				{
					bSwipe = false;
					bMoveScrollV = true;
				}
				else if(role == 'scrollH')
				{
					bSwipe = false;
					bMoveScrollH = true;
				}
				else if(evt.type == 'touchmove')
				{
					bMoveScrollV = true;
				}
			}
			if(bMoveScrollH)
			{
				if(!relObj.IsHScroll()) return;
			}
			else if(!relObj.IsScroll()) return;
			if(nPointY < 0 && !Webcrea.objRuler)
			{
				if(bMoveScrollV) relObj.MoveScrollFirst();
				else Webcrea.OnDRAGSTOP();
				return;
			}
			else if(nPointY>nMaxPointY && bMoveScrollV)
			{
				relObj.MoveScrollLast();
				return;
			}
			if((evt.type == 'mousemove' || evt.type == 'touchmove') && !bRuler && !bHeader && !bDragObj && Webcrea.objDragPublic)
			{
				if(evt.type == 'touchmove') evt.preventDefault();
				if(bMoveScrollV) Webcrea.objDragPublic.bMoveScrollMode = 1;
				else if(bMoveScrollH) Webcrea.objDragPublic.bMoveScrollMode = 2;
				var nPos = nPointY - relObj.nDragY;
				var nPosX = nPointX - relObj.nDragX;
				if(nPos == 0 && bMoveScrollV) return;
				this.mousedownRelObj = relObj;
				if(Webcrea.IsMDIFrame() && !Webcrea.IsMDI()) window.parent._my_FileMDI.mouseMoveWindow = window;
				relObj.objGDivPos.onselectstart = new Function('return false');
				if(bMoveScrollV)
				{
					if(relObj.nDragY < nPointY) mode = 1;
					else mode = 2;
				}
				else if(bMoveScrollH)
				{
					if(relObj.nDragX < nPointX) mode = 5;
					else mode = 6;
				}
				if(bSwipe && Webcrea.objDragPublic && bMoveScrollV)
				{
					var startTime = Webcrea.objDragPublic.startTime;
					var moveTime = new Date().getTime();
					var nTime = moveTime-startTime;
					if(Webcrea.objDragPublic.ani) return;
					if (Math.abs(nPos)>=50 && nTime<300)
					{
						Webcrea.objDragPublic.ani = true;
						Webcrea.objDragPublic.moveTime = moveTime;
						relObj.nEndDragY = nPointY;
						return;
					}
					if(nPos<0) nPos *= -1;
					if(nPos>relObj.nDataHeight)
					{
						Webcrea.objDragPublic.bMove = true;
						relObj.MoveSwipe(mode, nPos);
						relObj.nDragY = nPointY;
					}
				}
				else
				{
					if(bSwipe && bMoveScrollH) nPosX *= -1;
					if(Webcrea.objDragPublic) Webcrea.objDragPublic.bMove = true;
					if(bMoveScrollV) relObj.MoveScroll(mode, nPos, true);
					else if(bMoveScrollH) relObj.MoveHScroll(mode, nPosX, true);
					relObj.nDragY = nPointY;
				}
			}
		}
	},
	this.OnDRAGSTOP = function()
	{
		var obj = Webcrea.GetEventNode();
		if(Webcrea.objRuler)
		{
			Webcrea.objRuler.objDiv.objGDivPos.onselectstart = new Function('return true');
			var nAddWidth = Webcrea.GetMousePos(0) - Webcrea.objRuler.firstLeft;
			Webcrea.objRuler.objDiv.SetColSize(Webcrea.objRuler.relColNo, nAddWidth);
			if(Webcrea.objRuler.objDiv.IsForm() || Webcrea.objRuler.objDiv.bMyGrid) Webcrea.objRuler.objDiv.DisplayCodeButton();
			Webcrea.objRuler.rulerGuide.style.display = 'none';
			Webcrea.objRuler.bDisplay = false;
			Webcrea.objRuler.relId = '';
			Webcrea.objRuler = null;
		}
		else if(Webcrea.objMoveHeader)
		{
			try{
				var currNode = Webcrea.objMoveHeader.currNode;
				var moveNode = Webcrea.objMoveHeader.moveNode;
				if(currNode && moveNode)
				{
					var relId = currNode.getAttribute('relId');
					var currObj = Webcrea.objMoveHeader.objDiv.GetColNo(relId);
					relId = moveNode.getAttribute('relId');
					if(Webcrea.IsEmpty(relId))
					{
						var realNode = Webcrea.FindNode(moveNode, 'name', 'INPUT');
						if(realNode) relId = realNode.getAttribute('relId');
					}
					if(relId)
					{
						var moveObj = Webcrea.objMoveHeader.objDiv.GetColNo(relId);
						Webcrea.objMoveHeader.objDiv.MoveColumn(currObj, moveObj, Webcrea.objMoveHeader.bAfter);
					}
				}
			}catch(e){}
			Webcrea.objMoveHeader.rulerGuide.style.borderColor = '';
			Webcrea.objMoveHeader.rulerGuide.style.borderStyle = '';
			Webcrea.objMoveHeader.rulerGuide.style.borderLeft = '';
			Webcrea.objMoveHeader.rulerGuide.style.display = 'none';
			Webcrea.objMoveHeader.objDiv.objGDivPos.removeChild(Webcrea.objMoveHeader.dragHeader);
			if(Webcrea.objMoveHeader.objDiv.IsForm() || Webcrea.objMoveHeader.objDiv.bMyGrid) Webcrea.objMoveHeader.objDiv.DisplayCodeButton();
			Webcrea.objMoveHeader.objDiv.objGDivPos.onselectstart = new Function('return true');
			Webcrea.objMoveHeader = null;
		}
		else if(Webcrea.objDragStat)
		{
			var bDrop = (window.event && (window.event.type == 'mouseup' || window.event.type == 'touchend'));
			if(!bDrop) return;
			try{
				if(!Webcrea.IsEmpty(Webcrea.objDragStat.dropObject))
				{
					relObj = Webcrea.objDragStat.objDiv;
					let nRelObjTop = Webcrea.GetTopByObj(relObj);
					let nRelObjLeft = Webcrea.GetLeftByObj(relObj, true);
					var dropRole = Webcrea.objDragStat.dropObject.getAttribute('role');
					var nPageTop = Webcrea.GetTop(relObj.objDivPage);
					var nPointY = Webcrea.GetMousePos(1) - nRelObjTop - nPageTop;
					var nPageLeft = Webcrea.GetLeft(relObj.objDivPage);
					var nPointX = Webcrea.GetMousePos(0) - nRelObjLeft - nPageLeft;
					var dropDiv;
					var dropArea;
					if(dropRole == 'statcolarea')
					{
						dropArea = Webcrea.objDragStat.dropObject;
						var nAreaLeft = Webcrea.GetLeft(Webcrea.objDragStat.dropObject, true);
						nPointX -= nAreaLeft;
						var childNodes = Webcrea.objDragStat.dropObject.children;
						for(var i=0; i<childNodes.length; i++)
						{
							var div = childNodes[i];
							var nLeft = Webcrea.GetLeft(div);
							if(nPointX <= nLeft)
							{
								dropDiv = div;
								break;
							}
						}
					}
					else if(dropRole == 'statrowarea' || dropRole == 'statfldarea')
					{
						dropArea = Webcrea.objDragStat.dropObject;
						var nAreaTop = Webcrea.GetTop(Webcrea.objDragStat.dropObject, true);
						nPointY -= nAreaTop;
						var childNodes = Webcrea.objDragStat.dropObject.children;
						for(var i=0; i<childNodes.length; i++)
						{
							var div = childNodes[i];
							var nTop = Webcrea.GetTop(div);
							nTop = nTop + 5*i;
							if(nPointY <= nTop)
							{
								dropDiv = div;
								break;
							}
						}
					}
					else if(dropRole == 'statrow' || dropRole == 'statcol' || dropRole == 'statfld')
					{
						var div = Webcrea.objDragStat.dropObject;
						dropDiv = Webcrea.FindParentDiv(div, 2);
						dropArea = Webcrea.FindParentDiv(dropDiv, 2);
					}
					var dragNode = Webcrea.objDragStat.obj;
					var dragDiv = Webcrea.FindParentDiv(dragNode, 2);
					var dragArea = Webcrea.FindParentDiv(dragDiv, 2);
					setTimeout(relObj.DisplayStat(dragDiv, dragArea, dropDiv, dropArea), 500);
				}
			}catch(e){}
			Webcrea.objDragStat.objPage.objDivPage.removeChild(Webcrea.objDragStat.dragObject);
			document.body.style.cursor = 'default';
			document.body.onselectstart = new Function('return true');
			Webcrea.objDragStat = null;
		}
		else if(Webcrea.objDrag)
		{
			var relObj = Webcrea.objDrag.obj;
			if(!Webcrea.objDrag.bDropStart)
			{
				relObj.objDrag = Webcrea.objDrag;
			}
			if(relObj.objDrop && relObj.objDrop.realObj)
			{
				if(relObj.objDrop.dropNode)
				{
					var currObj = relObj.objDrop.realObj;
					var nRowNo = currObj.GetRowNo(relObj.objDrop.dropNode);
					relObj.objDrop.targetRowNo = nRowNo;
					Webcrea.DragData(relObj);
				}
			}
			if(Webcrea.objDrag.divDrag) document.body.removeChild(Webcrea.objDrag.divDrag);
			document.body.style.cursor = 'default';
			document.body.onselectstart = new Function('return true');
			Webcrea.objDrag = null;
		}
		Webcrea.RemoveEventListener();
		if(Webcrea.objDragPublic)
		{
			if(Webcrea.objDragPublic.ani)
			{
				var endTime = new Date().getTime();
				var moveTime = Webcrea.objDragPublic.moveTime;
				var relObj = Webcrea.objDragPublic.relObj;
				var nPos = relObj.nEndDragY - relObj.nDragY;
				Webcrea.objDragPublic.endTime = endTime;
				Webcrea.objDragPublic.swipeTime = endTime + Math.abs(nPos*7);
				setTimeout(Webcrea.OnSWIPE(), 500);
			}
			else
			{
				Webcrea.objDragPublic = null;
			}
		}
		if(this.mousedownRelObj)
		{
			var relObj = this.mousedownRelObj;
			if(relObj && Webcrea.IsGrid(relObj) && !relObj.IsListTreeGrid())
			{
				var nJump = relObj.GetRowDataNoByScrollPos();
				let firstNode = relObj.objTable.rows[relObj.nHeader+(relObj.vLock*relObj.nDataRow)];
				if(firstNode)
				{
					let nFirstNo = relObj.GetCurrRowDataNo(firstNode);
					let bSkip = false;
					let nAdjust = Math.abs(nFirstNo-nJump);
					if(nAdjust>=0 && nAdjust<=3) bSkip = true;
					if(!bSkip) relObj.MoveScrollJump(nJump);
				}
			}
			this.mousedownRelObj.objGDivPos.onselectstart = new Function('return true');
			this.mousedownRelObj = null;
		}
		this.mouseObj = null;
	},
	this.OnMOVE = function(evt, paramOpt)
	{
		var obj = evt;
		if(evt.srcElement || evt.target || evt.currentTarget) obj=Webcrea.GetEventNode(evt);
		if((!obj || !obj.id) && (evt.type == 'mousemove' || evt.type == 'touchmove') && Webcrea.objMoveLayer && Webcrea.objMoveLayer.header)
		{
			obj = Webcrea.objMoveLayer.header;
			var moveObj = Webcrea.objMoveLayer.obj;
			var nMouseLeft = Webcrea.GetMousePos(0);
			var nMouseTop = Webcrea.GetMousePos(1);
			if(Webcrea.objMoveLayer.bCaptionMove)
			{
				nMouseLeft += Webcrea.GetLeft(moveObj, true);
				nMouseTop += Webcrea.GetTop(moveObj, true);
			}
			var nMoveLeft = nMouseLeft - Webcrea.objMoveLayer.mouseLeft;
			var nMoveTop = nMouseTop - Webcrea.objMoveLayer.mouseTop;
			var nFirstLeft = Webcrea.objMoveLayer.firstLeft;
			var nFirstTop = Webcrea.objMoveLayer.firstTop;

			var nTotalTop = nFirstTop + nMoveTop;
			var nTotalLeft = nFirstLeft + nMoveLeft;
			moveObj.style.left = nTotalLeft + 'px';
			moveObj.style.top = nTotalTop + 'px';
			return;
		}
		if(evt.type == 'mouseup' || evt.type == 'touchend' || !obj || !obj.id)
		{
			Webcrea.OnMOVESTOP();
			return;
		}
		var bCaptionMove = false;
		var objId = obj.getAttribute('pid');
		var type, bMove;
		if(objId == '_my_msgbox')
		{
			type = 'M';
			bMove = Webcrea.bMoveMsgBox;
		}
		else if(objId == '_my_calendar')
		{
			type = 'C';
			bMove = Webcrea.bMoveCalendar;
		}
		else if(objId == '_my_yearmonth')
		{
			type = 'YM';
			bMove = Webcrea.bMoveYearMonth;
		}
		else if(objId == '_my_rundlg')
		{
			type = 'L';
			bMove = Webcrea.bMoveRunDlg;
		}
		else if(paramOpt == '_CAPTION_')
		{
			if(!Win.IsRunDlg() && !Win.IsMsgBox()) return;
			bCaptionMove = true;
			type = 'L';
			bMove = Webcrea.bMoveRunDlg;
			evt.stopPropagation();
		}
		bMove=true;
		if(evt.type == 'mousedown' || evt.type == 'touchstart')
		{
			var ifrm;
			if(bCaptionMove)
			{
				if(Win.IsRunDlg()) ifrm = Webcrea.FindNode(parent.document, 'name', '_my_rundlgFrame');
				else if(Win.IsMsgBox()) ifrm = Webcrea.FindNode(parent.document, 'name', '_my_msgboxFrame');
			}
			else ifrm = Webcrea.FindNode(document, 'name', '_my_rundlgFrame');
			if(!ifrm) return;
			var moveDiv = Webcrea.FindParentDiv(ifrm, 2);
			if(!moveDiv) return;
			if(bMove)
			{
				document.body.onselectstart = new Function('return false');
				ifrm.contentDocument.body.onselectstart = new Function('return false');
				Webcrea.objMoveLayer = {};
				Webcrea.objMoveLayer.ifrm = ifrm;
				Webcrea.objMoveLayer.obj = moveDiv;
				Webcrea.objMoveLayer.header = obj;
				Webcrea.objMoveLayer.bCaptionMove = bCaptionMove;
				var nCurrLeft = Webcrea.GetLeft(moveDiv);
				var nCurrTop = Webcrea.GetTop(moveDiv);
				var nMouseLeft = Webcrea.GetMousePos(0);
				var nMouseTop = Webcrea.GetMousePos(1);
				if(bCaptionMove)
				{
					nMouseLeft += nCurrLeft;
					nMouseTop += nCurrTop;
				}
				Webcrea.objMoveLayer.mouseLeft = nMouseLeft;
				Webcrea.objMoveLayer.mouseTop = nMouseTop;
				Webcrea.objMoveLayer.firstLeft = nCurrLeft;
				Webcrea.objMoveLayer.firstTop = nCurrTop;
				if(!Webcrea.arrAttachEvent) Webcrea.arrAttachEvent = [];
				if(Webcrea.IsIE69())
				{
					var attachEventObj = {};
					attachEventObj.target = document;
					attachEventObj.func = function(){Webcrea.OnMOVE(window.event, paramOpt);};
					attachEventObj.event = 'onmousemove';
					attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;

					attachEventObj = {};
					attachEventObj.target = document;
					attachEventObj.func = function(){Webcrea.OnMOVE(window.event, paramOpt);};
					attachEventObj.event = 'onmouseup';
					attachEventObj.target.attachEvent(attachEventObj.event, attachEventObj.func);
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
				}
				else
				{
					var attachEventObj = {};
					attachEventObj.target = document;
					attachEventObj.func = function(){Webcrea.OnMOVE(window.event, paramOpt);};
					attachEventObj.event = 'mousemove';
					attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;

					attachEventObj = {};
					attachEventObj.target = document;
					attachEventObj.func = function(){Webcrea.OnMOVE(window.event, paramOpt);};
					attachEventObj.event = 'mouseup';
					attachEventObj.target.addEventListener(attachEventObj.event, attachEventObj.func);
					Webcrea.arrAttachEvent[Webcrea.arrAttachEvent.length] = attachEventObj;
				}
			}
		}
		else if(evt.type == 'mousemove' || evt.type == 'touchmove')
		{
			if(Webcrea.objMoveLayer)
			{
				var nMaxX = window.innerWidth;
				var nMaxY = window.innerHeight;
				var nMouseLeft = Webcrea.GetMousePos(0);
				var nMouseTop = Webcrea.GetMousePos(1);
				if(bCaptionMove)
				{
					nMaxX = parent.window.innerWidth;
					nMaxY = parent.window.innerHeight;
					nMouseLeft += Webcrea.GetLeft(Webcrea.objMoveLayer.obj, true);
					nMouseTop += Webcrea.GetTop(Webcrea.objMoveLayer.obj, true);
				}
				nMaxX -= 5;
				nMaxY -= 15;
				if(nMouseLeft<5 || nMouseTop<5 || nMaxX<nMouseLeft || nMaxY<nMouseTop)
				{
					Webcrea.OnMOVESTOP();
					return;
				}
				var nMoveLeft = nMouseLeft - Webcrea.objMoveLayer.mouseLeft;
				var nMoveTop = nMouseTop - Webcrea.objMoveLayer.mouseTop;
				var nFirstLeft = Webcrea.objMoveLayer.firstLeft;
				var nFirstTop = Webcrea.objMoveLayer.firstTop;

				var moveObj = Webcrea.objMoveLayer.obj;
				var nTotalTop = nFirstTop + nMoveTop;
				var nTotalLeft = nFirstLeft + nMoveLeft;
				moveObj.style.left = nTotalLeft + 'px';
				moveObj.style.top = nTotalTop + 'px';
			}
		}
	},
	this.OnMOVESTOP = function(evt, paramOpt)
	{
		var obj = Webcrea.GetEventNode();
		if(Webcrea.objMoveLayer)
		{
			if(Webcrea.objMoveLayer.ifrm) Webcrea.objMoveLayer.ifrm.contentDocument.body.onselectstart = new Function('return true');
			Webcrea.objMoveLayer = null;
			document.body.onselectstart = new Function('return true');
		}
		Webcrea.RemoveEventListener();
	},
	this.OnSWIPE = function()
	{
		if(!Webcrea.objDragPublic) return;
		var relObj = Webcrea.objDragPublic.relObj;
		var nPos = relObj.nEndDragY - relObj.nDragY;
		var swipeTime = new Date().getTime();
		if(swipeTime>Webcrea.objDragPublic.swipeTime)
		{
			if(Webcrea.objDragPublic.swIntervalId) clearInterval(Webcrea.objDragPublic.swIntervalId);
			Webcrea.objDragPublic = null;
		}
		else
		{
			var mode = 1;
			if(nPos<0) mode = 2;
			var nRowPos = relObj.nDataHeight;
			if(Webcrea.objDragPublic.swipeTime-swipeTime>500) nRowPos *= 3;
			else if(Webcrea.objDragPublic.swipeTime-swipeTime>400) nRowPos *= 4;
			else if(Webcrea.objDragPublic.swipeTime-swipeTime>300) nRowPos *= 6;
			else if(Webcrea.objDragPublic.swipeTime-swipeTime>200) nRowPos *= 3;
			else if(Webcrea.objDragPublic.swipeTime-swipeTime>100) nRowPos *= 2;
			else if(Webcrea.objDragPublic.swipeTime-swipeTime>50) nRowPos *= 1;
			relObj.MoveSwipe(mode, nRowPos);
			if(!Webcrea.objDragPublic.swIntervalId)
			{
				var funcSwipe = 'Webcrea.OnSWIPE()';
				Webcrea.objDragPublic.swIntervalId = setInterval(funcSwipe, 10);
			}
		}
	},
	this.OnGOTFOCUS = function(obj)
	{
		if(Webcrea.IE() && this.bPreventClick) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(!obj.id && obj.nodeName.toLowerCase() == 'td')
		{
			var parentDiv = Webcrea.FindParentDiv(obj);
			if(parentDiv) currObj = Webcrea.GetObjectById(parentDiv.id);
			if(!currObj) return;
			if(currObj.IsGrid())
			{
				if(!currObj.IsMultiSelectCell(obj) && currObj.objDrag && currObj.objDrop) return;
				Webcrea.HideSelectBox();
				currObj.OnLOSTFOCUS();
			}
			if(typeof currObj.SetEventIndex != 'undefined') currObj.SetEventIndex(obj);
			var evt = window.event;
			if(!evt) return;
			var evtObj = Webcrea.GetEventNode(evt);
			if(currObj.IsGrid() && !evtObj.id)
			{
				Webcrea.OnONECLK(obj, currObj);
				var sFindCellId = '_SELECT_';
				var multiNode = Webcrea.FindNode(obj, 'orgId', sFindCellId);
				if(multiNode && currObj.bMulti)
				{
					_SELECT_ = currObj.IsSelected(currObj.GetRowDataNo(currObj.currRowIndex))?1:'';
					if(typeof window[currObj.divPage][currObj.divPosOrg][sFindCellId].OnCLICK != 'undefined')
						window[currObj.divPage][currObj.divPosOrg][sFindCellId].OnCLICK(multiNode);
				}
			}
			if(currObj) Webcrea.focusObj = currObj;
		}
		else
		{
			var currObj = Webcrea.GetObject(obj);
			if(!currObj) return;

			var currRowId = currObj.GetCurrRowIndex();
			var currColId = currObj.GetCurrColIndex();

			if(currObj.IsGrid())
			{
				if(!currObj.IsMultiSelectCell(obj) && currObj.objDrag && currObj.objDrop) return;
				Webcrea.HideSelectBox();
				currObj.OnLOSTFOCUS();
			}
			else if(currObj.IsSignPad()) currObj.messagObj.style.display='none';
			var sCellId = currObj.GetCellId(obj);
			if(!currObj.IsTab() && !currObj.IsSignPad() && typeof currObj.SetEventIndex != 'undefined')
			{
				currObj.SetEventIndex(obj);
				currRowId = currObj.GetCurrRowIndex();
			}
			if(nFileVersion >= 7020200326001)
			{
				if(Webcrea.focusObj && Webcrea.focusObj.focusCellObj && Webcrea.focusObj == currObj)
				{
					var bReturn = false;
					if(Webcrea.focusObj.focusCellObj == obj) bReturn = true;
					else if(Webcrea.IsEditTdInputBox(obj))
					{
						var tdObj = Webcrea.GetEditTd(obj);
						if(Webcrea.focusObj.focusCellObj == tdObj) bReturn = true;
					}
					if(bReturn) return;
				}
				Webcrea.focusObj = currObj;
				Webcrea.focusObj.focusCellObj = obj;
				if(currObj.IsReadOnly(sCellId, currRowId) || !currObj.IsEnable(sCellId, currRowId)) return;
			}
			else
			{
				if(currObj.IsReadOnly(sCellId, currRowId) || !currObj.IsEnable(sCellId, currRowId))
				{
					Webcrea.focusObj = currObj;
					Webcrea.focusObj.focusCellObj = obj;
					return;
				}
				if(Webcrea.focusObj == currObj && currObj.focusCellObj == obj) return;
			}
			if(window[currObj.divPage][currObj.divPosOrg] && typeof window[currObj.divPage][currObj.divPosOrg].OnGOTFOCUS != 'undefined')
				window[currObj.divPage][currObj.divPosOrg].OnGOTFOCUS(obj);
			if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnGOTFOCUS != 'undefined')
				window[currObj.divPage][currObj.divPosOrg][sCellId].OnGOTFOCUS(obj);

			if(typeof window[currObj.divPage][currObj.divPosOrg].OnSTARTEDIT != 'undefined' && !Webcrea.IsEmpty(sCellId))
			{
				var bStartEdit = false;
				if(currObj.IsGrid() && (currRowId != currObj.GetCurrRowIndex() || Webcrea.focusObj != currObj)) bStartEdit = true;
				else if(currObj.IsForm() && Webcrea.focusObj != currObj) bStartEdit = true;
				Webcrea.focusObj = currObj;
				if(bStartEdit && (!currObj.IsEnable(sCellId) || currObj._Get_ReadOnly(sCellId))) bStartEdit = false;
				if(bStartEdit) window[currObj.divPage][currObj.divPosOrg].OnSTARTEDIT();
			}
			else if(currObj)
			{
				Webcrea.focusObj = currObj;
				currObj.focusCellObj = obj;
			}
		}
	},
	this.OnKEYDOWN = function(evt)
	{
		if (!evt) evt = window.event;
		var obj = evt;
		if(evt.srcElement || evt.target || evt.currentTarget) obj=Webcrea.GetEventNode(evt);
		if(!obj || !obj.nodeName) return;
		var bEditable=true;
		if(obj.nodeName.toLowerCase() == 'html' || obj.nodeName.toLowerCase() == 'body') return;
		else if(obj.nodeName.toLowerCase() == 'input' || obj.nodeName.toLowerCase() == 'textarea')
		{
			if(obj.getAttribute('editable') == 'noedit') bEditable = false;
		}
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var pageDiv = Webcrea.FindParentDiv(obj, 1);
		var objPage = null;
		if(pageDiv) objPage = _my_File.GetPageObjById(pageDiv.id);
		if(!objPage) return;

		var id = '';
		if (Webcrea.IE() && obj.nodeName != 'DIV')
		{
			var parentDiv = Webcrea.FindParentDiv(obj);
			id = parentDiv.id;
			if(id == obj.id + 'Group')id = obj.id;
		}
		else if(evt && evt.currentTarget) id = evt.currentTarget.id;
		var currObj = objPage.GetObject(id);
		if(!currObj) return;
		if(Webcrea.IE() && (evt.keyCode == 40 || evt.keyCode == 38) && currObj.IsGrid())
		{
			 if(!obj || (obj && obj.nodeName.toLowerCase() != 'textarea')) event.preventDefault?event.preventDefault():event.returnValue=false;
		}
		if(evt.keyCode == 8 && (obj.nodeName.toLowerCase() == 'input' || obj.nodeName.toLowerCase() == 'textarea' || obj.nodeName.toLowerCase() == 'select'))
		{
			if(Webcrea.IsReadOnly(obj) || !Webcrea.IsEnable(obj)) event.preventDefault?event.preventDefault():event.returnValue=false;
		}
		if(!currObj.objEvent) return;
		if(nFileVersion>=7020200305001 && evt.keyCode == 13 && (obj && obj.nodeName.toLowerCase() == 'textarea')) return;
		currObj.objEvent.bKeyDownMoveRow = false;
		if(currObj.IsGrid() && currObj.IsDeleteRow(currObj.GetCurrRowIndex())) bEditable = false;
		if((evt.keyCode == 40 || evt.keyCode == 38 || evt.keyCode == 13) && Webcrea.IsDisplaySelectBox())
		{
			if(evt.keyCode == 40 || evt.keyCode == 38)
			{
				var mode = 5;
				if(evt.keyCode == 40) mode=5;
				else if(evt.keyCode == 38) mode = 6;
				currObj.MoveScrollMySelectBox(mode);
			}
			else if(evt.keyCode == 13)
			{
				var selectBoxObj = Webcrea.arrSelectBox[0];
				var selectNode = selectBoxObj.selectNode;
				if(!selectNode)
				{
					selectNode = selectBoxObj.arrLi[0];
					selectBoxObj.selectNode = selectNode;
				}
				if(!currObj.IsMultiSelectBox(selectBoxObj.inputObj) && selectNode)
				{
					selectNode.setAttribute('orgid', selectBoxObj.id);
					Webcrea.SetSelectBoxItem(selectNode, currObj);
				}
				else Webcrea.HideSelectBox(selectBoxObj.inputObj, currObj, true);
			}
		}
		else if(evt.keyCode == 33 || evt.keyCode == 34 || evt.keyCode == 38 || evt.keyCode == 40)
		{
			if((obj.nodeName.toLowerCase() == 'select' || obj.nodeName.toLowerCase() == 'textarea') && Webcrea.IsEnable(obj) && !Webcrea.IsReadOnly(obj) && (evt.keyCode == 40 || evt.keyCode == 38))
			{
				return;
			}
			Webcrea.PreventDefault(evt);

			var mode = 5;
			if(evt.keyCode == 34) mode = 3;
			else if(evt.keyCode == 33) mode = 4;
			else if(evt.keyCode == 40) mode=5;
			else if(evt.keyCode == 38) mode = 6;
			var currRowIndex = null;
			if(currObj.IsGrid())
			{
				currRowIndex = currObj.GetCurrRowIndex();
				if(mode == 3 || mode == 4) currObj.MoveScrollPage(mode);
				else currObj.MoveScroll(mode);
			}
			if(evt.keyCode == 40 || evt.keyCode == 38)
			{
				if(window.getSelection())
				{
					var sel = window.getSelection();
					sel.removeAllRanges();
				}
				var cellId = currObj.GetCellId(obj);
				var bFocus=false;
				if(!currObj.IsEnable() || currObj._Get_ReadOnly()) bFocus=true;
				else
				{
					if(!currObj.IsEnable(cellId, currRowIndex) || currObj._Get_ReadOnly(cellId, currRowIndex)) bFocus=true;
				}
				currObj.objEvent.bKeyDownMoveRow = true;
				if(bFocus)
				{
					if(currObj.IsGrid())
					{
						var nSelRow = currObj.GetCurrRowIndex();
						currObj.objSelRow = currObj.objTable.rows[currObj.nHeader + nSelRow];
						if(currObj.objDivPos == obj)
						{
							var tdNode = Webcrea.FindNode(currObj.objSelRow, 'name', 'TD');
							if(Webcrea.IsEditTd(tdNode)) cellId = currObj.GetCellId(tdNode);
							else
							{
								var inputNode = Webcrea.FindNode(tdNode, 'id');
								if(inputNode) cellId = currObj.GetCellId(inputNode);
							}
						}
						var bDivFocus = false;
						var nDataRow = currObj.GetRowDataNo(nSelRow, true);
						if((evt.keyCode == 38 && nDataRow == 0) || (evt.keyCode == 40 && nDataRow == currObj.arrRows.length-1)) bDivFocus = true;
						currObj.objSelCol = Webcrea.FindNode(currObj.objSelRow, 'orgid', cellId);
						if(!bDivFocus && currObj.objSelCol) currObj.objSelCol.focus();
						else currObj.objDivPos.focus();
					}
					else currObj.objDivPos.focus();
				}
				else currObj.SetMoveCol(obj, mode);
			}
			else if(currObj.objDivPos) currObj.objDivPos.focus();
		}
		else if(evt.keyCode == 9 || evt.keyCode == 13)
		{
			var bPrevent = false;
			var bEditDown = false;
			var bPrev = false;
			if(evt.shiftKey) bPrev = true;
			if(currObj) currObj.bEnterSetfocus = false;
			var bTabMove = false;
			if(evt.keyCode == 9) bTabMove = true;
			var bLastCellFocus = false;
			if(bTabMove && currObj.objDivPos == obj)
			{
				bLastCellFocus = true;
			}
			var sCurrCellId = currObj.GetCellId(obj);
			var bReadOnly = false;
			var bEnable = true;
			if(evt.keyCode == 13)
			{
				var rowNo = currObj.GetCurrRowIndex();
				if(!currObj.IsGrid()) rowNo = '';
				bReadOnly = currObj.IsReadOnly(sCurrCellId, rowNo);
				bEnable = currObj.IsEnable(sCurrCellId, rowNo);
			}
			if(evt.keyCode == 13 && (bReadOnly || !bEnable)) return;
			currObj.arrStackEvent[currObj.arrStackEvent.length] = 'movecell';
			var currEventNode = Webcrea.GetEventNode(evt);
			var currEventNodeOrg = currEventNode;
			if(Webcrea.IsEditTdInputBox(currEventNode))
			{
				currEventNode = Webcrea.GetEditTd(currEventNode);
				obj = currEventNode;
			}
			var bNotMoveChangeEvent = false;
			var bEnterEvent = false;
			if(evt.keyCode == 13 && sCurrCellId && window[currObj.divPage][currObj.divPosOrg][sCurrCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnENTER != 'undefined')
			{
				currObj.arrStackEvent[currObj.arrStackEvent.length] = 'movecell_enterevent';
				if(currEventNode)
				{
					var bIE = Webcrea.IsIE();
					if(bIE && Webcrea.IsEditTdInputBox(currEventNodeOrg))
					{
						Webcrea.DisplayInputBox(currEventNodeOrg, true);
						currEventNodeOrg = null;
					}
					else currEventNode.blur();
					currEventNode.focus();
				}
				currObj.arrStackEvent.removeByValue('movecell_enterevent');
				Webcrea.ResetStackEvent();
				window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnENTER();
				if(Webcrea.IsStackEvent('setfocus'))
				{
					Webcrea.PreventDefault(evt);
					Webcrea.ResetStackEvent();
					return;
				}
				if(typeof _my_Popup != 'undefined' && _my_Popup)
				{
					currObj.arrStackEvent.removeByValue('movecell');
					return;
				}
				bEnterEvent = true;
			}
			else
			{
				if(evt.keyCode == 13 && sCurrCellId && window[currObj.divPage][currObj.divPosOrg][sCurrCellId] && (typeof window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnCHANGE != 'undefined' || typeof window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnMODIFY != 'undefined'))
				{
					bNotMoveChangeEvent = true;
				}
				var nFileVersion = Webcrea.GetCurrFileVersion();
				if(nFileVersion>=7020170510003 && !currObj.IsGrid() && currEventNode)
				{
					if(!bTabMove) currEventNode.blur();
				}
			}
			if(currObj && currObj.bEnterSetfocus)
			{
				currObj.arrStackEvent.removeByValue('movecell');
				return;
			}
			if(currObj && currObj.bEditDown && evt.keyCode == 13)
			{
				bEditDown = true;
				bPrev = false;
			}
			if(evt.keyCode == 9 && sCurrCellId && window[currObj.divPage][currObj.divPosOrg][sCurrCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnTAB != 'undefined')
			{
				var bReadOnlyNode = false;
				var bEnableNode = true;
				if(bTabMove)
				{
					bReadOnlyNode = Webcrea.IsReadOnly(obj);
					bEnableNode = Webcrea.IsEnable(obj);
				}
				if(!bReadOnlyNode && bEnableNode)
				{
					window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnTAB();
					currObj.arrStackEvent.removeByValue('movecell');
					Webcrea.PreventDefault(evt);
					return;
				}
			}
			if(evt.keyCode == 13 && currEventNode && currEventNode.type == 'button')
			{
				Webcrea.PreventDefault(evt);
				return;
			}
			var nContinue = 0;
			var findNode;
			var enterEventNextNode;
			var currTabIndex = obj.tabIndex;
			if(!Webcrea.IsNull(currTabIndex))
			{
				if(evt.keyCode == 13 && obj.nodeName == 'TEXTAREA')
				{
					currObj.arrStackEvent.removeByValue('movecell');
					return;
				}
				var findNext = function(node)
				{
					var childNode;
					var childNodes = node.children;
					for(var i=0; i < childNodes.length; i++)
					{
						var node = childNodes[i];
						var orgId = node.getAttribute('orgid');
						var bHide = false;
						if(!Webcrea.IsEmpty(orgId)) bHide = currObj.IsHideColumn(orgId);
						if(node.tagName == 'TD' && !Webcrea.IsEditTd(node))
						{
							var realNode = Webcrea.FindNode(node, 'id');
							if(realNode) node = realNode;
						}
						var tabIndex = node.tabIndex;
						if(Webcrea.IsIE() && tabIndex == 0) tabIndex = -1;
						var bTraceOrg = Webcrea.bTrace;
						Webcrea.bTrace = false;
						var bReadOnlyNode = Webcrea.IsReadOnly(node);
						if(bReadOnlyNode && node.type == 'button') bReadOnlyNode = false;
						var bEnableNode = Webcrea.IsEnable(node);
						Webcrea.bTrace = bTraceOrg;
						if(bTabMove)
						{
							bReadOnlyNode = false;
							bEnableNode = true;
						}
						if(tabIndex>=0 && tabIndex>=currTabIndex && !bReadOnlyNode && bEnableNode && !bHide)
						{
							childNode = node;
							break;
						}
						else if(node.childNodes.length>0)
						{
							var nodeT = findNext(node);
							if(nodeT)
							{
								childNode = nodeT;
								break;
							}
						}
						else nContinue++;
					}
					return childNode;
				};
				var findPrev = function(node)
				{
					var childNode;
					var childNodes = node.children;
					for(var i=childNodes.length-1; i>=0; i--)
					{
						var node = childNodes[i];
						var orgId = node.getAttribute('orgid');
						var bHide = false;
						if(!Webcrea.IsEmpty(orgId)) bHide = currObj.IsHideColumn(orgId);
						if(node.tagName == 'TD' && !Webcrea.IsEditTd(node))
						{
							var realNode = Webcrea.FindNode(node, 'id');
							if(realNode) node = realNode;
						}
						else if(node.tagName == 'A')
						{
							var imgNode = Webcrea.FindNodePublic(node, 'name', 'IMG');
							if(imgNode && imgNode.getAttribute('role') == 'selectboxarrow') continue;
						}
						var tabIndex = node.tabIndex;
						if(Webcrea.IsIE() && tabIndex == 0) tabIndex = -1;
						var bTraceOrg = Webcrea.bTrace;
						Webcrea.bTrace = false;
						var bReadOnlyNode = Webcrea.IsReadOnly(node);
						if(bReadOnlyNode && node.type == 'button') bReadOnlyNode = false;
						var bEnableNode = Webcrea.IsEnable(node);
						Webcrea.bTrace = bTraceOrg;
						if(bTabMove)
						{
							bReadOnlyNode = false;
							bEnableNode = true;
						}
						if(tabIndex>=0 && tabIndex<=currTabIndex && !bReadOnlyNode && bEnableNode && !bHide)
						{
							childNode = node;
							break;
						}
						else if(node.childNodes.length>0)
						{
							var nodeT = findPrev(node);
							if(nodeT)
							{
								childNode = nodeT;
								break;
							}
						}
					}
					return childNode;
				};
				var bNextRow = false;
				var parent;
				if(Webcrea.bEnterUpdate || bEditDown)
				{
					parent = Webcrea.FindParentNode(obj, 'name', 'TR');
					bNextRow = true;
				}
				else
				{
					if(Webcrea.IsEditTd(obj)) parent = obj;
					else if(Webcrea.IsEditTdInputBox(obj)) parent = Webcrea.GetEditTd(obj);
					else if(currObj.objDivPos == obj)
					{
						parent = obj;
						if(currObj.objTable && currObj.objTable.rows.length>0)
						{
							parent = currObj.objTable.rows[0];
						}
					}
					else parent = obj.parentNode;
				}
				if(Webcrea.IsMultilineMainDiv(parent))
				{
					parent = parent.parentNode;
					if(Webcrea.IsMultilineMainDiv(parent)) parent = parent.parentNode;
				}
				else if(Webcrea.IsBulletDiv(parent) || currObj.IsCodeButtonDiv(parent)) parent = parent.parentNode;
				var bMove = false;
				while(parent)
				{
					var nextParent;
					if(currObj.IsForm() || bLastCellFocus)
					{
						var baseObj = obj;
						var parentTabIndex = parent.tabIndex;
						if(Webcrea.IsIE() && parentTabIndex == 0) parentTabIndex = -1;
						if(parentTabIndex>=0) baseObj = parent;
						nextParent = currObj.GetNextCellByTab(baseObj, bPrev, bTabMove);
						if(nextParent)
						{
							findNode = nextParent;
							break;
						}
						else
						{
							if(bLastCellFocus) return;
							if(bPrev) nextParent = parent.previousElementSibling;
							else nextParent = parent.nextElementSibling;
						}
					}
					else
					{
						if(bPrev) nextParent = parent.previousElementSibling;
						else nextParent = parent.nextElementSibling;
					}
					if(!nextParent)
					{
						if(currObj.IsGrid())
						{
							if(evt.keyCode == 9 && (bPrev || (!bPrev && currObj.IsLastCol(sCurrCellId))))
							{
								parent = parent.parentNode;
								if(!parent) break;
								if(parent.tagName != 'TR') break;
								if(bPrev) nextParent = parent.previousElementSibling;
								else nextParent = parent.nextElementSibling;
								if(nextParent && nextParent.tagName != 'TR') break;
								if(nextParent && nextParent.style.display == 'none') break;
								if(bPrev && evt.keyCode == 9)
								{
									var bHeader = false;
									if(!nextParent) bHeader = true;
									else if(nextParent.id == currObj.divPos + Webcrea.divId + 'Header') bHeader = true;
									currObj.MoveScroll(6);
									if(bHeader)
									{
										nextParent = parent.previousElementSibling;
										if(nextParent && nextParent.tagName == 'TR') nextParent = findPrev(nextParent);
									}
									else nextParent = findPrev(nextParent);
								}
								else
								{
									currObj.MoveScroll(5);
									if(!nextParent) nextParent = parent.nextElementSibling;
									if(nextParent) nextParent = findNext(nextParent);
								}
								if(!nextParent) break;
							}
							else
							{
								if(Webcrea.bEnterUpdate || bEditDown)
								{
									if(currObj.IsLastRow(currObj.GetCurrRowIndex())) return;
									bMove = true;
									if(bPrev)
									{
										currObj.MoveScroll(6);
										nextParent = parent.previousElementSibling;
									}
									else
									{
										currObj.MoveScroll(5);
										nextParent = parent.nextElementSibling;
									}
									if(!nextParent) break;
								}
								else
								{
									if(bTabMove && Webcrea.IsIE() && !nextParent)
									{
										var bHeader = false;
										if(parent.id == currObj.divPos + Webcrea.divId + 'Header') bHeader = true;
										if(bHeader)
										{
											parent = parent.parentNode;
											if(parent)
											{
												parent = parent.nextElementSibling;
												if(parent) nextParent = parent.firstChild;
											}
										}
									}
									if(!nextParent) break;
								}
							}
						}
						else if(currObj.IsForm())
						{
							parent = parent.parentNode;
							if(!parent) break;
							if(parent.nodeName != 'TR') break;
							if(bPrev) nextParent = parent.previousElementSibling;
							else nextParent = parent.nextElementSibling;
							if(!nextParent) break;
						}
					}
					else parent = nextParent;
					var bNextEditTd = Webcrea.IsEditTd(nextParent);
					var tabIndex = nextParent.tabIndex;
					if(Webcrea.IsIE() && tabIndex == 0) tabIndex = -1;
					if(bNextEditTd)
					{
						var orgId = nextParent.getAttribute('orgid');
						var bHide = false;
						if(!Webcrea.IsEmpty(orgId)) bHide = currObj.IsHideColumn(orgId);
						var bReadOnlyNode = Webcrea.IsReadOnly(nextParent);
						var bEnableNode = Webcrea.IsEnable(nextParent);
						if(bTabMove)
						{
							bReadOnlyNode = false;
							bEnableNode = true;
						}
						if(tabIndex>=0 && ((!bPrev && tabIndex>=currTabIndex) || (bPrev && tabIndex<=currTabIndex)))
						{
							if(!bReadOnlyNode && bEnableNode && !bHide)
							{
								if(Webcrea.IsIE())
								{
									if(obj.getAttribute('role') == 'edittd_input') Webcrea.DisplayInputBox(currEventNode, true);
									else if(obj.getAttribute('role') == 'multiline_input') Webcrea.DisplayMultiLine(currEventNode, true);
									else currEventNode.blur();
								}
								else currEventNode.blur();
								findNode = nextParent;
								bPrevent = true;
								break;
							}
							else
							{
								if((bNotMoveChangeEvent || bEnterEvent) && !enterEventNextNode) enterEventNextNode = nextParent;
								continue;
							}
						}
						else continue;
					}
					else
					{
						if(bPrev)
						{
							if(tabIndex>=0 && tabIndex<=currTabIndex)
							{
								findNode = nextParent;
								break;
							}
							else
							{
								var nextNode = findPrev(nextParent);
								if(nextNode)
								{
									findNode = nextNode;
									break;
								}
							}
						}
						else
						{
							if(tabIndex>=0 && tabIndex>=currTabIndex)
							{
								findNode = nextParent;
								break;
							}
							else
							{
								var nextNode = findNext(nextParent);
								if(nextNode)
								{
									findNode = nextNode;
									break;
								}
							}
						}
					}
				}
				if(bEditDown)
				{
					var colNo = currObj.GetColNo(sCurrCellId);
					if(!Webcrea.IsEmpty(colNo))
					{
						var parent;
						var nSeq = colNo.nColNo-nContinue;
						if(nSeq>0)
						{
							parent = findNode.parentNode;
							for(var i=0; i<nSeq; i++)
							{
								parent = parent.nextElementSibling;
							}
						}
						if(parent) findNode = findNext(parent);
					}
				}
				if(findNode)
				{
					if(findNode.nodeName == 'DIV' && findNode.getAttribute('role') == 'multiline') bPrevent = true;
					else if(Webcrea.IsEditTd(findNode) || currObj.IsMySelectBoxPublic(findNode))
					{
						var bIE = Webcrea.IsIE();
						if(bIE && Webcrea.IsEditTdInputBox(currEventNodeOrg)) Webcrea.DisplayInputBox(currEventNodeOrg, true);
						else currEventNode.blur();
						bPrevent = true;
					}
					if(evt.keyCode == 9 && Webcrea.IsDisplaySelectBox()) Webcrea.HideSelectBox(obj, currObj, true);
					var sCellIdOrg = currObj.GetCellId(findNode);
					var sCellId = '';
					if(currObj.IsCrossTab()) sCellId = currObj.GetCellId(findNode.id);
					else sCellId = sCellIdOrg;
					var bChangeCell=false;
					var currRowIndex_b = currObj.currRowIndex;
					var objSelRow_b = currObj.objSelRow;
					if(bNextRow)
					{
						if((window[currObj.divPage][currObj.divPosOrg][sCellIdOrg] && typeof window[currObj.divPage][currObj.divPosOrg][sCellIdOrg].OnMODIFY != 'undefined' && currObj.objEvent.bModify)
							|| (window[currObj.divPage][currObj.divPosOrg][sCellIdOrg] && typeof window[currObj.divPage][currObj.divPosOrg][sCellIdOrg].OnCHANGE != 'undefined' && currObj.objEvent.bChange))
						{
							bChangeCell=true;
						}
						if(!bMove) currObj.SetCurrRowIndex(currRowIndex_b+1);
						Webcrea.bEnterUpdate = false;
					}
					if(!Webcrea.IsEmpty(sCellId))
					{
						if(bChangeCell)
						{
							currObj.objEvent.bKeyDownMoveRow = true;
							currObj.Select(currRowIndex_b+1);
							currObj.currRowIndex = currRowIndex_b;
							currObj.SetFocus(sCellId, true);
							currObj.ClearSelect(objSelRow_b);
							currObj.objEvent.bKeyDownMoveRow = false;
						}
						else
						{
							if(bTabMove)
							{
								var bReadOnlyNode = Webcrea.IsReadOnly(findNode);
								var bEnableNode = Webcrea.IsEnable(findNode);
								if(bReadOnlyNode || !bEnableNode)
								{
									if(Webcrea.IsEditTd(findNode))
									{
										var range = document.createRange();
										range.selectNodeContents(findNode);
										var sel = window.getSelection();
										sel.removeAllRanges();
										sel.addRange(range);
									}
									findNode.focus();
									findNode.select();
									if(Webcrea.IE() || Webcrea.IsFirefox()) event.preventDefault?event.preventDefault():event.returnValue=false;
									else event.returnValue=false;
								}
								else
								{
									if(Webcrea.IsEditTd(findNode))
									{
										findNode = Webcrea.DisplayInputBox(findNode);
										if(findNode)
										{
											findNode.focus();
											findNode.select();
										}
										if((bIE && Webcrea.IsForm(currObj)) || !bIE) setTimeout(function(){var focusCell = Webcrea.DisplayInputBox(findNode);if(focusCell)focusCell.select();});
										if(findNode) Webcrea.OnGOTFOCUS(findNode);
									}
									else if((Webcrea.IsForm(currObj) || Webcrea.IsGrid(currObj)) && currObj.IsMySelectBox(findNode))
									{
										findNode.focus();
										setTimeout(function(){Webcrea.DisplaySelectBox(findNode, currObj);findNode.focus();});
										if(findNode) Webcrea.OnGOTFOCUS(findNode);
									}
									else currObj.SetFocus(sCellId);
								}
							}
							else currObj.SetFocus(sCellId);
						}
					}
				}
				else
				{
					if(window.getSelection())
					{
						var sel = window.getSelection();
						sel.removeAllRanges();
					}
					if(bTabMove && currTabIndex>0 && currObj && currObj.pageObj)
					{
						var currObjTabIndex = currObj.objDivPos.tabIndex;
						if(currObjTabIndex>=0) currTabIndex = currObjTabIndex;
						var nextObj = null;
						if(bPrev) nextObj = _my_File.GetPrevTabObject(currTabIndex, currObj);
						else nextObj = _my_File.GetNextTabObject(currTabIndex, currObj);
						if(nextObj)
						{
							nextObj.objDivPos.focus();
							var evtObj = {};
							if(bPrev) 
							{
								evtObj.shiftKey = true;
								evtObj.keyCode = 9;
							}
							else evtObj.keyCode = 9;
							evtObj.target = nextObj.objDivPos;
							evtObj.currentTarget = nextObj.objDivPos;
							Webcrea.OnKEYDOWN(evtObj);
							return;
						}
					}
					else if((bNotMoveChangeEvent || bEnterEvent) && enterEventNextNode)
					{
						enterEventNextNode.focus();
						currObj.SetFocus(sCurrCellId);
					}
				}
			}
			if(evt.keyCode == 9 && sCurrCellId && window[currObj.divPage][currObj.divPosOrg][sCurrCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnTAB != 'undefined')
			{
				var bReadOnlyNode = false;
				var bEnableNode = true;
				if(bTabMove)
				{
					bReadOnlyNode = Webcrea.IsReadOnly(obj);
					bEnableNode = Webcrea.IsEnable(obj);
				}
				if(!bReadOnlyNode && bEnableNode) window[currObj.divPage][currObj.divPosOrg][sCurrCellId].OnTAB();
			}
			currObj.arrStackEvent.removeByValue('movecell');
			if(bPrevent)
			{
				if(Webcrea.IE() || Webcrea.IsFirefox())
				{
					event.preventDefault?event.preventDefault():event.returnValue=false;
				}
				else
				{
					event.returnValue=false;
					return;
				}
			}
		}
		else if(evt.keyCode !=9 && (evt.keyCode<112 || evt.keyCode>123) && (obj.nodeName.toLowerCase() == 'input' || obj.nodeName.toLowerCase() == 'textarea') && !bEditable)
		{
			if(Webcrea.IE() || Webcrea.IsFirefox())
			{
				event.preventDefault?event.preventDefault():event.returnValue=false;
			}
			else
			{
				event.returnValue=false;
				return;
			}
		}
		else if(!evt.shiftKey && evt.keyCode ==9)
		{
			if(currObj && currObj.bMyGrid)
			{
				var bLastRow = currObj.IsLastRow(currObj.GetCurrRowIndex());
				if(bLastRow)
				{
					var cellId = currObj.GetCellId(obj);
					var bLastCol = currObj.IsLastCol(cellId);
					if(bLastCol)
					{
						if(Webcrea.IE())
						{
							event.preventDefault?event.preventDefault():event.returnValue=false;
						}
						else
						{
							event.returnValue=false;
							return;
						}
					}
				}
			}
		}
		if(evt.keyCode == 9 || evt.keyCode == 27)
		{
			if(Webcrea.IsDisplaySelectBox()) Webcrea.HideSelectBox(obj, currObj, true);
			if(evt.keyCode == 27 && currObj && Webcrea.IsGrid(currObj) && currObj == Webcrea.focusObj) currObj.ClearEdit(obj, true);
		}
		else if(evt.keyCode != 9 && evt.keyCode != 13 && evt.keyCode != 38 && evt.keyCode != 40 
			&& (evt.keyCode<112 || evt.keyCode>123) && (obj.nodeName == 'INPUT' && currObj.IsMySelectBox(obj)) && bEditable)
		{
			var cellId = currObj.GetCellId(obj);
			if(!currObj.IsMulti(cellId) && currObj.IsMySelectBox(obj))
			{
				var bMySelectBox = currObj.IsMySelectBox(obj);
				var bMySelectBoxPublic = currObj.IsMySelectBoxPublic(obj);
				var bListSearch = false;
				var bMySelectBoxEdit = false;
				if(bMySelectBox && !bMySelectBoxPublic)
				{
					bMySelectBoxEdit = true;
					bListSearch = currObj.IsListSearch(cellId);
				}
				var cellInfo = currObj.GetCellInfo(cellId);
				if(cellInfo && !Webcrea.IsEmpty(cellInfo.validChar) && !Webcrea.IsEmpty(obj.value) && cellInfo.validChar != '*')
				{
					var checkValue = Extract(obj.value, cellInfo.validChar);
					if(Webcrea.IsEmpty(checkValue))
					{
						obj.value = '';
						event.preventDefault?event.preventDefault():event.returnValue=false;
						if(!Webcrea.IE()) return;
					}
				}
				if(evt.keyCode == 32)
				{
					if(!currObj.IsSpaceText(cellId))
					{
						var bSearch = currObj.IsListSearch(cellId);
						setTimeout(function(){
							Webcrea.DisplaySelectBox(obj, currObj, bSearch);
						});
						if(Webcrea.IE())
						{
							event.preventDefault?event.preventDefault():event.returnValue=false;
						}
						else
						{
							event.returnValue=false;
							return;
						}
					}
				}
				else
				{
					if(bMySelectBoxEdit && !bListSearch) return;
					var bDisplay = true;
					if((evt.keyCode == 8 || evt.keyCode == 46) && !Webcrea.IsDisplaySelectBox()) bDisplay = false;
					else if(Webcrea.IsReadOnly(obj) || !Webcrea.IsEnable(obj)) bDisplay = false;
					if(bDisplay)
					{
						setTimeout(function(){
							if(evt.key != 'Enter' && evt.key != 'Tab' && evt.code != 'Enter' && evt.code != 'Tab' && evt.code != 'ArrowDown' && evt.code != 'ArrowUp')
							{
								Webcrea.DisplaySelectBox(obj, currObj, true);
							}
						});
					}
				}
			}
		}
	},
	this.OnLOSTFOCUS = function(obj)
	{
		var currObj = Webcrea.GetObject(obj);
		if(!currObj) return;
		if(currObj.arrStackEvent.isearch('movecell_enterevent')>=0) return;
		var sCellId = currObj.GetCellId(obj);
		if(window[currObj.divPage][currObj.divPosOrg][sCellId])
		{
			var bLostFocus = true;
			var nMinRange = obj.getAttribute('minrange');
			var nMaxRange = obj.getAttribute('maxrange');
			if(!Webcrea.IsEmpty(nMinRange) || !Webcrea.IsEmpty(nMaxRange))
			{
				var nCurrDataRow = currObj.GetCurrRowDataNo(obj);
				var value = currObj.GetValue(sCellId, nCurrDataRow);
				if(Webcrea.IsNumber(value, true))
				{
					value = Webcrea.NumberReDef(value);
					if(!Webcrea.IsEmpty(nMinRange)) nMinRange = Webcrea.NumberReDef(nMinRange);
					if(!Webcrea.IsEmpty(nMaxRange)) nMaxRange = Webcrea.NumberReDef(nMaxRange);
					if(!Webcrea.IsEmpty(nMinRange) && value<nMinRange) bLostFocus = false;
					else if(!Webcrea.IsEmpty(nMaxRange) && value>nMaxRange) bLostFocus = false;
				}
			}
			if(!bLostFocus)
			{
				var sMsg = '';
				if(!Webcrea.IsEmpty(nMinRange) && !Webcrea.IsEmpty(nMaxRange)) sMsg = Webcrea.LoadString('msgWarnInvalidRange', nMinRange, nMaxRange);
				else if(!Webcrea.IsEmpty(nMinRange)) sMsg = Webcrea.LoadString('msgWarnInvalidMin', nMinRange);
				else if(!Webcrea.IsEmpty(nMaxRange)) sMsg = Webcrea.LoadString('msgWarnInvalidMax', nMaxRange);
				if(!Webcrea.IsEmpty(sMsg)) Webcrea.MsgBox(sMsg);
				this.bPreventClick = true;
				if(Webcrea.IsEditTd(obj))
				{
					setTimeout(function()
					{
						var inputBox = Webcrea.DisplayInputBox(obj);
						if(inputBox)
						{
							inputBox.focus();
							inputBox.select();
						}
					}, 100);
				}
				else
				{
					setTimeout(function()
					{
						obj.focus();
					}, 100);
				}
				return;
			}
			else this.bPreventClick = false;
		}
		if(Webcrea.bChangeEvent || Webcrea.bChangeForceEvent)
		{
			if(typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE != 'undefined') window[currObj.divPage][currObj.divPosOrg][sCellId].OnCHANGE(obj, this);
			Webcrea.bChangeEvent = false;
			Webcrea.bChangeForceEvent = false;
		}
		if(Webcrea.bModifyForceEvent)
		{
			if(typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnMODIFY != 'undefined') window[currObj.divPage][currObj.divPosOrg][sCellId].OnMODIFY(obj);
			Webcrea.bModifyForceEvent = false;
		}
		if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnCANLEAVE != 'undefined')
		{
			if(Webcrea.IE() && this.bPreventClick && obj && Webcrea.canleaveObj && Webcrea.canleaveObj != obj) return;
			window[currObj.divPage][currObj.divPosOrg][sCellId].OnCANLEAVE();
			if(_my_lastStatus.toLowerCase() == 'no')
			{
				if(Webcrea.IE() && obj) Webcrea.canleaveObj = obj;
				_my_lastStatus = 'OK';
				this.bPreventClick = true;
				if(Webcrea.IsEditTd(obj))
				{
					setTimeout(function()
					{
						var inputBox = Webcrea.DisplayInputBox(obj);
						if(inputBox)
						{
							inputBox.focus();
							inputBox.select();
						}
					}, 100);
				}
				else
				{
					setTimeout(function()
					{
						obj.focus();
					}, 100);
				}
				return;
			}
			else
			{
				this.bPreventClick = false;
				Webcrea.canleaveObj  = null;
			}
		}
		if(window[currObj.divPage][currObj.divPosOrg][sCellId] && typeof window[currObj.divPage][currObj.divPosOrg][sCellId].OnLOSTFOCUS != 'undefined')
		{
			window[currObj.divPage][currObj.divPosOrg][sCellId].OnLOSTFOCUS(obj);
			if(typeof currObj.ClearEdit != 'undefined') currObj.ClearEdit(obj);
		}
		if(currObj && Webcrea.focusObj == currObj && currObj.focusCellObj == obj)
		{
			Webcrea.focusObj == null;
			currObj.focusCellObj = null;
		}
	},
	this.OnMouseOver = function(obj)
	{
		if(typeof _CURSORID_ == 'undefined') _CURSORID_ = '';
		var currObj;
		if(!Webcrea.IsMDI())
		{
			if(Webcrea.IsString(obj)) currObj = Webcrea.GetObjectById(obj);
			else currObj = Webcrea.GetObject(obj);
		}
		if(currObj && currObj.IsMenu())
		{
			_CURSORROW_ = -1;
			_MENU_X_ = -1;
			_MENU_Y_ = -1;
			_MENU_W_ = 0;
			_MENU_H_ = 0;
			var currNode = Webcrea.GetEventNode(window.event);
			if(currNode)
			{
				var bAutoClick =false;
				var bSkip = true;
				if(currObj.bAccordion && (currNode.tagName == 'DIV' || currNode.tagName == 'A') && !currNode.getAttribute('select')) bSkip = false;
				else if(!currObj.bAccordion && (currNode.tagName == 'LI' || currNode.tagName == 'A')) bSkip = false;
				if(bSkip) return;
				var aNode;
				if(currNode.tagName == 'LI' || currNode.tagName == 'DIV')
				{
					aNode = Webcrea.FindNode(currNode, 'name', 'A');
					if(!Webcrea.IsEmpty(currNode.style.backgroundImage) && aNode.textContent == '')
					{
						if(currObj.autoClickSec>0 && !currObj.bAutoClicking) bAutoClick = true;
					}
				}
				else
				{
					if(currObj.autoClickSec>0 && !currObj.bAutoClicking) bAutoClick = true;
					aNode = currNode;
					if(!currObj.bAccordion) currNode = Webcrea.FindParentNode(aNode, 'name', 'LI');
					else currNode = Webcrea.FindParentNode(aNode, 'name', 'DIV');
				}
				currObj.overMenu = aNode;
				var img = currNode.getAttribute('imageover');
				if(img)
				{
					var bHttpPath = false;
					if(!Webcrea.IsEmpty(img) && (img.indexOf('http://') == 0 || img.indexOf('https://') == 0)) bHttpPath = true;
					if(bHttpPath) currNode.style.backgroundImage = "url('" + img + "')";
					else currNode.style.backgroundImage = "url('" + currObj.imgFolder + img + "')";
				}
				_MENU_W_ = Number(Webcrea.GetWidth(currNode));
				_MENU_H_ = Number(Webcrea.GetHeight(currNode));
				var divTop = Webcrea.GetTop(currObj.objGDivPos);
				var divLeft = Webcrea.GetLeft(currObj.objGDivPos);
				_MENU_Y_ = divTop + Webcrea.GetHeight(currObj.objGDivPos);
				if(aNode) _MENU_X_ = divLeft + Webcrea.GetLeft(aNode);
				_CURSORROW_ = currNode.getAttribute('seq');
				_CURSORROW_ = Number(_CURSORROW_);
				_MENU_X_ = Number(_MENU_X_);
				_MENU_Y_ = Number(_MENU_Y_);
				if(typeof window[currObj.divPage][currObj.divPosOrg].OnHOVER != 'undefined') window[currObj.divPage][currObj.divPosOrg].OnHOVER();
				if(bAutoClick && currObj.overMenu != currObj.currMenu)
				{
					currObj.bAutoClicking = true;
					var xPos = _MENU_X_;
					var yPos = _MENU_Y_;
					var func = currObj.objName + '.AutoClick(' + xPos + ',' + yPos + ')';
					setTimeout(func, currObj.autoClickSec);
				}
			}
		}
		else if(currObj && Webcrea.IsDisplaySelectBox())
		{
			var currNode = Webcrea.GetEventNode(window.event);
			if(currNode && currNode.tagName == 'LI')
			{
				var selectBoxObj = Webcrea.arrSelectBox[0];
				var selectNode = selectBoxObj.selectNode;
				if(selectNode) selectNode.removeAttribute('select');
				currNode.setAttribute('select', 'select');
				selectBoxObj.selectNode = currNode;
			}
		}
		else
		{
			if(currObj && (currObj.IsGrid() || currObj.IsForm()))
			{
				_CURSORROW_ = -1;
				var bCursorRow = false;
				if(currObj.IsGrid()) bCursorRow = true;
				if(bCursorRow)
				{
					var currNode = Webcrea.GetEventNode(window.event);
					if(currNode)
					{
						var nRow = currObj.GetRowNo(currNode);
						if(nRow>=0)
						{
							var nDataRow = currObj.GetRowDataNo(nRow, true);
							_CURSORROW_ = Number(nDataRow);
						}
					}
				}
			}
			if(!obj) return;
			if(obj && Webcrea.IsString(obj)) return;
			var img = obj.getAttribute('imageover');
			if(img)
			{
				var bHttpPath = false;
				if(!Webcrea.IsEmpty(img) && (img.indexOf('http://') == 0 || img.indexOf('https://') == 0)) bHttpPath = true;
				var src = obj.getAttribute('src');
				if(src)
				{
					if(bHttpPath) obj.src = img;
					else obj.src = Webcrea.GetImageLinkPath() + '/' + img;
					obj.value = img;
				}
				else if(obj.style.backgroundImage)
				{
					if(bHttpPath) obj.style.backgroundImage = "url('" + img + "')";
					else obj.style.backgroundImage = "url('" + Webcrea.GetImageLinkPath() + "/" + img + "')";
				}
			}
			else
			{
				var nFileVersion = Webcrea.GetCurrFileVersion();
				if(nFileVersion<7020200218001)
				{
					var code = obj.getAttribute('codeobj');
					if(code =='spinbtn')
					{
						var bBackColor = true;
						if(!Webcrea.IsEmpty(WebcreaInfo.sSpinDownImage) && !Webcrea.IsEmpty(WebcreaInfo.sSpinUpImage)) bBackColor = false;
						if(bBackColor) obj.style.backgroundColor = '#bbb';
					}
				}
			}
			var txtColor = obj.getAttribute('textover');
			if(txtColor) obj.style.color = txtColor;
		}
		if(!Webcrea.IsMDI())
		{
			if(currObj && !currObj.IsMenu())
			{
				if(currObj && window[currObj.divPage][currObj.divPosOrg]['Data'] && typeof window[currObj.divPage][currObj.divPosOrg]['Data'].OnCURSOR != 'undefined')
				{
					currObj.arrStackEvent[currObj.arrStackEvent.length] = 'oncursor';
					window[currObj.divPage][currObj.divPosOrg]['Data'].OnCURSOR(obj);
					currObj.arrStackEvent.removeByValue('oncursor');
				}
				var id = currObj.GetCellId(obj);
				if(Webcrea.IsForm(currObj) && currObj.IsCalendar())
				{
					if(id.length>2)
					{
						id = id.substr(0, id.length-2);
						id += '00';
					}
				}
				if(currObj && window[currObj.divPage][currObj.divPosOrg][id] && typeof window[currObj.divPage][currObj.divPosOrg][id].OnCURSOR != 'undefined')
				{
					_CURSORID_ = currObj.divPos + Webcrea.divId + id;
					currObj.arrStackEvent[currObj.arrStackEvent.length] = 'oncursor';
					window[currObj.divPage][currObj.divPosOrg][id].OnCURSOR(obj);
					currObj.arrStackEvent.removeByValue('oncursor');
				}
			}
		}
	},
	this.OnMouseOut = function(obj)
	{
		var currObj;
		if(!Webcrea.IsMDI())
		{
			if(Webcrea.IsString(obj)) currObj = Webcrea.GetObjectById(obj);
			else currObj = Webcrea.GetObject(obj);
			if(currObj && !currObj.IsMenu())
			{
				var id = currObj.GetCellId(obj);
				if(currObj && window[currObj.divPage][currObj.divPosOrg][id] && typeof window[currObj.divPage][currObj.divPosOrg][id].OnCURSOR != 'undefined')
				{
					if(!Webcrea.IE() || (Webcrea.IE() && obj.tagName != 'SELECT')) window[currObj.divPage][currObj.divPosOrg][id].OnCURSOR(obj, true);
				}
			}
		}
		if(currObj && currObj.IsMenu())
		{
			currObj.overMenu = null;
			_CURSORROW_ = -1;
			var currSeq = currObj.GetCurrRowIndex();
			var currNode = Webcrea.GetEventNode(window.event);
			if(currNode.tagName == 'A')
			{
				if(currObj.bAccordion) currNode = Webcrea.FindParentNode(currNode, 'name', 'DIV');
				else currNode = Webcrea.FindParentNode(currNode, 'name', 'LI');
			}
			if(currNode)
			{
				if(currObj.bAccordion && currNode.getAttribute('select')) return;
				var seq = currNode.getAttribute('seq');
				var imgOut = currNode.getAttribute('imageout');
				var imgDown = currNode.getAttribute('imagedown');
				if(!imgDown) imgDown = imgOut;
				var bOutHttpPath = false;
				if(!Webcrea.IsEmpty(imgOut) && (imgOut.indexOf('http://') == 0 || imgOut.indexOf('https://') == 0)) bOutHttpPath = true;
				var bDownHttpPath = false;
				if(!Webcrea.IsEmpty(imgDown) && (imgDown.indexOf('http://') == 0 || imgDown.indexOf('https://') == 0)) bDownHttpPath = true;
				if(imgOut && currSeq!=seq)
				{
					if(bOutHttpPath) currNode.style.backgroundImage = "url('" + imgOut + "')";
					else currNode.style.backgroundImage = "url('" + currObj.imgFolder + imgOut + "')";
				}
				else if(imgDown && currSeq==seq)
				{
					if(bDownHttpPath) currNode.style.backgroundImage = "url('" + imgDown + "')";
					else currNode.style.backgroundImage = "url('" + currObj.imgFolder + imgDown + "')";
				}
			}
			if(typeof window[currObj.divPage][currObj.divPosOrg].OnHOVER != 'undefined') window[currObj.divPage][currObj.divPosOrg].OnHOVER();
		}
		else if(currObj && Webcrea.IsDisplaySelectBox())
		{
		}
		else
		{
			if(!obj) return;
			if(obj && Webcrea.IsString(obj)) return;
			var img = obj.getAttribute('imageout');
			var img = obj.getAttribute('imageout');
			if(img)
			{
				var bHttpPath = false;
				if(!Webcrea.IsEmpty(img) && (img.indexOf('http://') == 0 || img.indexOf('https://') == 0)) bHttpPath = true;
				var src = obj.getAttribute('src');
				if(src)
				{
					if(bHttpPath) obj.src = img;
					else obj.src = Webcrea.GetImageLinkPath() + '/' + img;
					obj.value = img;
				}
				else if(obj.style.backgroundImage)
				{
					if(bHttpPath) obj.style.backgroundImage = "url('" + img + "')";
					else obj.style.backgroundImage = "url('" + Webcrea.GetImageLinkPath() + "/" + img + "')";
				}
			}
			else
			{
				var code = obj.getAttribute('codeobj');
				if(code =='spinbtn')
				{
					Webcrea.SpinClickEnd(obj);
					var nFileVersion = Webcrea.GetCurrFileVersion();
					if(nFileVersion<7020200218001)
					{
						var bBackColor = true;
						if(!Webcrea.IsEmpty(WebcreaInfo.sSpinDownImage) && !Webcrea.IsEmpty(WebcreaInfo.sSpinUpImage)) bBackColor = false;
						if(bBackColor) obj.style.backgroundColor = '#eee';
					}
				}
			}
			var txtColor = obj.getAttribute('textout');
			if(txtColor) obj.style.color = txtColor;
		}
	},
	this.GridSCROLL = function(dir, bAuto)
	{
		var relObj = Webcrea.scrollObj;
		if(!relObj) return;

		var nPageTop = Webcrea.GetTop(relObj.objDivPage);
		if(dir==5 || dir==6 || dir==7)
		{
			var nPageLeft = Webcrea.GetLeft(relObj.objDivPage);
			var nLFRGLeft = 0;
			if(bAuto)
			{
				if(dir == 5) nLFRGLeft = Webcrea.GetLeft(relObj.objHSLFDivPos, true);
				else nLFRGLeft = Webcrea.GetLeft(relObj.objHSRGDivPos, true);
			}
			else nLFRGLeft = Webcrea.GetMousePos(0);

			let nRelObjLeft = Webcrea.GetLeftByObj(relObj, true);
			var nPointX = nLFRGLeft - nRelObjLeft - nPageLeft;
			var nScrlLeft = Webcrea.GetLeft(relObj.objHSTHDivPos, true);
			var nScrlWidth = Webcrea.GetWidth(relObj.objHSTHDivPos);

			var mode = 5;
			if(dir == 5 || dir == 6) mode = dir;
			else
			{
				if(nScrlLeft+nScrlWidth < nPointX) mode = 7;
				else if(nScrlLeft > nPointX) mode = 8;
				else return;
			}
			relObj.MoveHScroll(mode);
		}
		else
		{
			var nUPDWTop = 0;
			if(bAuto)
			{
				if(dir == 2) nUPDWTop = Webcrea.GetTop(relObj.objVSUPDivPos, true);
				else nUPDWTop = Webcrea.GetTop(relObj.objVSDWDivPos, true);
			}
			else nUPDWTop = Webcrea.GetMousePos(1);

			let nRelObjTop = Webcrea.GetTopByObj(relObj);
			var nPointY = nUPDWTop - nRelObjTop - nPageTop;
			var nScrlTop = Webcrea.GetTop(relObj.objVSTHDivPos, true);
			var nScrlHeight = Webcrea.GetHeight(relObj.objVSTHDivPos);
			var mode = 1;
			if(dir == 1 || dir == 2) mode = dir;
			else
			{
				if(nScrlTop < nPointY-nScrlHeight) mode = 3;
				else mode = 4;
			}
			if(!bAuto && (mode==3 || mode==4)) relObj.MoveScrollPage(mode);
			else relObj.MoveScroll(mode);
			if(!bAuto) relObj.pointY_B = Webcrea.GetMousePos(1);
		}
	},
	this.OnSCROLL = function(evt, dir)
	{
		if(!evt) evt = window.event;
		if(evt.type != 'mousedown' && evt.type != 'touchstart' && evt.type != 'scroll')
		{
			if(Webcrea.scrollIntervalId) clearInterval(Webcrea.scrollIntervalId);
			Webcrea.scrollIntervalId = null;
			Webcrea.scrollObj = null;
			if(evt.type == 'mouseup' || evt.type == 'touchend') return;
		}
		var obj = evt;
		if(evt.srcElement || evt.target || evt.currentTarget) obj=Webcrea.GetEventNode(evt);
		var pageDiv = this.FindParentDiv(obj, 1);
		var objPage = null;
		if(pageDiv) objPage = _my_File.GetPageObjById(pageDiv.id);
		if(!objPage) return;

		var id = obj.getAttribute('relId');
		if(!id) id = obj.getAttribute('pid');
		if(!id) id = obj.id;
		var relObj = objPage.GetObject(id);
		if(relObj && relObj.IsGrid())
		{
			if(Webcrea.IsFirefox())
			{
				var funcScroll = relObj.objName + '.OnAdjustHScroll()';
				relObj.hscrollIntervalId = setInterval(funcScroll, 100);
			}
			else relObj.OnAdjustHScroll();
			if(evt.type == 'scroll') return;
			if(!relObj.bMyGrid) return;
			var role = obj.getAttribute('role');
			var bMoveScrollV = false, bMoveScrollH = false;
			if(role == 'scrollV') bMoveScrollV = true;
			else if(role == 'scrollH') bMoveScrollH = true;
			if(bMoveScrollH)
			{
				if(!relObj.IsHScroll()) return;
			}
			else if(!relObj.IsScroll()) return;
			if (Webcrea.IsIE69()) obj.attachEvent('onmouseup', function(){Webcrea.OnSCROLL(window.event, dir);});
			else obj.addEventListener('mouseup', function(){Webcrea.OnSCROLL(window.event, dir);}, false);
			if(!Webcrea.scrollObj && !relObj.scrollIntervalId && (dir==1 || dir==2 || dir==5 || dir==6))
			{
				if(Webcrea.IsMobile() && relObj.bMyGrid)
				{
					Webcrea.scrollObj = relObj;
					Webcrea.GridSCROLL(dir, true);
				}
				else Webcrea.scrollIntervalId = setInterval(function(){ Webcrea.GridSCROLL(dir, true);}, 70);
			}
			Webcrea.scrollObj = relObj;
			if((dir!=1 && dir!=2 && dir!=5 && dir!=6)) Webcrea.GridSCROLL(dir);
		}
	},
	this.OnWHEEL = function(evt)
	{
		var obj = evt;
		if(evt.srcElement || evt.target || evt.currentTarget) obj=Webcrea.GetEventNode(evt);
		var pageDiv = Webcrea.FindParentDiv(obj, 1);
		var objPage = null;
		if(pageDiv) objPage = _my_File.GetPageObjById(pageDiv.id);
		if(!objPage) return;
		if(Webcrea.IsIE() && obj && obj.tagName=='SELECT' && obj==Webcrea.GetActiveNode()) return;

		var id = evt.currentTarget.id;
		var currObj = objPage.GetObject(id);
		if(!currObj || (currObj && !currObj.IsScroll())) return;
		if(Webcrea.IE() && currObj.objDivPos) currObj.objDivPos.focus();
		if(Webcrea.IsGrid(currObj)) Webcrea.HideSelectBox();
		var delta = 0;
		if (!evt) evt = window.event;
		if (evt.wheelDelta) {
			delta = evt.wheelDelta/120;
			if (window.opera) delta = -delta;
		} else if (evt.detail) delta = -evt.detail/3;
		if (delta)
		{
			var mode = 1;
			if(delta>0) mode = 2;
			for(var i=0; i<2; i++) currObj.MoveScroll(mode);
		}
		if(Webcrea.IE())
		{
			var divTemp = document.createElement('div');
			document.body.appendChild(divTemp);
			document.body.removeChild(divTemp);
		}
		Webcrea.PreventDefault(evt);
	},
	this.OnPanelLOADED = function(obj)
	{
		var currObj = _my_File.GetObject(obj);
		currObj.currNode = obj;
		checkLoaded = function()
		{
			for(var i=0; i<arrPanelLoaded.length; i++)
			{
				var currObj = arrPanelLoaded[i];
				var ifrm = currObj.currNode.contentWindow;
				if(ifrm.document.readyState == 'complete')
				{
					if(ifrm._my_File)
					{
						arrPanelLoaded.splice(i, 1);
						clearInterval(currObj.loadedIntervalId);
						currObj.SetPanelInit();
						ifrm._my_File.ifrmObj = currObj;
					}
					else currObj.panelInit = true;
				}
			}
		};
		currObj.loadedIntervalId = setInterval('checkLoaded()', 300);
		arrPanelLoaded[arrPanelLoaded.length] = currObj;
		if(!Webcrea.arrPanelLoaded) Webcrea.arrPanelLoaded = [];
		if(Webcrea.arrPanelLoaded.search(currObj)<0) Webcrea.arrPanelLoaded[Webcrea.arrPanelLoaded.length] = currObj;
	},
	this.OnPASTE = function()
	{
		var currObj = Webcrea.GetEventObject();
		if(!currObj) return;
		if(!currObj.IsGrid()) return;
		if(!currObj.IsEnable() || currObj.IsReadOnly()) return;
		if(!currObj.nPasteBlock) return;
		var currNode = Webcrea.GetEventNode();
		if(!currNode) return;
		var clipboardData = window.event.clipboardData || window.clipboardData;
		if(!clipboardData) return;
		var pastedData = clipboardData.getData('Text');
		if(Webcrea.IsEmpty(pastedData)) return;
		event.preventDefault?event.preventDefault():event.returnValue=false;
		event.stopPropagation?event.stopPropagation():event.returnValue=false;
		var rowNo = currObj.GetCurrRowIndex();
		var rowDataNo = Number(currObj.GetRowDataNo(rowNo));
		var currTdNode = currNode;
		if (currNode.nodeName != 'TD') currTdNode = Webcrea.FindParentNode(currNode, 'name', 'TD');
		else currTdNode = currNode;
		currNode.blur();
		var msvSpRowType = '\r\n';
		var msvSpColType = '\t';
		var arrRows = pastedData.split(msvSpRowType);
		var nSeq = 0;
		for(var i=0; i<arrRows.length; i++)
		{
			var sRow = arrRows[i];
			sRow = sRow.trim();
			if(Webcrea.IsEmpty(sRow)) continue;
			if(nSeq>0) currObj._Set_RowNo(rowDataNo+nSeq);
			if(currObj.nPasteBlock == 2)
			{
				if(currObj.IsSumRow(rowDataNo+nSeq)) continue;
			}
			var copyTdNode = currTdNode;
			var arrCols = sRow.split(msvSpColType);
			for(var j=0; j<arrCols.length; j++)
			{
				var chkNode = copyTdNode;
				if(chkNode.tagName == 'TD' && !Webcrea.IsEditTd(chkNode))
				{
					chkNode = Webcrea.FindNode(chkNode, 'id');
					if(!chkNode) continue;
				}
				if(currObj.nPasteBlock == 2)
				{
					if(!Webcrea.IsEnable(chkNode) || Webcrea.IsReadOnly(chkNode))
					{
						copyTdNode = copyTdNode.nextElementSibling;
						if(!copyTdNode) break;
						continue;
					}
				}
				var pasteData = arrCols[j];
				var currCellId = currObj.GetCellIdByNode(chkNode, true);
				currObj.SetValue(currCellId, pasteData, rowNo+nSeq);
				if(arrCols.length == j+1) break;
				copyTdNode = copyTdNode.nextElementSibling;
				if(!copyTdNode) break;
			}
			if(arrRows.length == i+1) break;
			var sRowNext = arrRows[i+1];
			sRowNext = sRowNext.trim();
			if(Webcrea.IsEmpty(sRowNext)) continue;
			if(currObj.arrRows.length<=rowDataNo+nSeq+1)
			{
				currObj.ModifyRecordSet('Append count = 1, status');
				currObj._Set_RowNo(currObj._Get_RecordCount() - 1);
			}
			nSeq++;
		}
		if(nSeq>1) currObj._Set_RowNo(rowDataNo);
	},
	this.MainEVENT = function(event, bEnable)
	{
		if(event == 'click')
		{
			if(bEnable == undefined || bEnable)
			{
				setTimeout(function(){
					document.body.onclick=Webcrea.MainCLICK;
				});
			}
			else document.body.onclick=null;
		}
	},
	this.PageScrollClick = function(obj)
	{
		var currObj = Webcrea.GetObject(obj);
		currObj.PageScrollClick(obj);
	},
	this.RunEvent = function(sEvent)
	{
		var param = arguments[0];
		var arr = param.split('.');
		var obj = Webcrea.GetObjectById(arr[0]);
		if(!obj) return;
		var sEvent = obj.divPage + '.' +param;
		try {
			if(obj && obj.IsMenu())
			{
				var selId = obj._Get_RowNo();
				obj.OnCLICK(selId);
			}
			else eval(sEvent);
		}catch (e) {}
	},
	this.Clear = function(param)
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var arrSub = sParam.split('.');
			var cellId = '';
			if(arrSub.length == 2) cellId = arrSub[1];
			var sObj = arrSub[0];
			var obj = Webcrea.GetObjectById(sObj);
			if(obj && (typeof obj.Clear != 'undefined')) obj.Clear(cellId);
		}
	},
	this.OrgText = function()
	{
		var param = arguments[0];
		return Webcrea.OrgValue(param);
	},
	this.OrgValue = function()
	{
		var param = arguments[0];
		var arrObjId = param.split('.');
		var objForm = Webcrea.GetObjectById(arrObjId[0]);
		if(!objForm) return;
		var objCell;
		if(arrObjId.length<2) return;
		if(typeof objForm._Get_OrgValue == 'undefined') return;
		return objForm._Get_OrgValue(arrObjId[1]);
	},
	this.Refresh = function(param)
	{
		var arrNotObj = [];
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var arrSub = sParam.split('.');
			var cellId = '';
			if(arrSub.length == 2) cellId = arrSub[1];
			var sObj = arrSub[0];
			var obj;
			if(sObj[0] == '&')
			{
				var objT;
				var sObjT = sObj.substr(1);
				if(Webcrea.IsFuncInnerVal(sObjT)) objT = Webcrea.GetFuncInnerVal(sObjT);
				else try{objT=window[sObjT];}catch(e){}
				if(objT)
				{
					var ampObj = Webcrea.GetAmpObject(objT);
					if(ampObj) obj = ampObj.obj;
				}
			}
			else obj = Webcrea.GetObjectById(sObj);
			if(obj)
			{
				if(typeof obj.Refresh != 'undefined') obj.Refresh(cellId);
			}
			else
			{
				var notObj = {};
				notObj.sObj = sObj;
				notObj.cellId = cellId;
				arrNotObj[arrNotObj.length] = notObj;
			}
		}
		for(var i=0; i<arrNotObj.length; i++)
		{
			var notObj = arrNotObj[i];
			if(Webcrea.arrPanelLoaded)
			{
				for(var j=0; j<Webcrea.arrPanelLoaded.length; j++)
				{
					var panelObj = Webcrea.arrPanelLoaded[j];
					if(!panelObj || (panelObj && !panelObj.objDivPos)) continue;
					var ifrm = Webcrea.FindNode(panelObj.objDivPos, 'name', 'IFRAME');
					if(ifrm)
					{
						obj = ifrm.contentWindow.Webcrea.GetObjectById(notObj.sObj);
						if(obj)
						{
							if(typeof obj.Refresh != 'undefined') obj.Refresh(notObj.cellId);
						}
					}
				}
			}
		}
	},
	this.RemoveEventListener = function()
	{
		var arrAttachEvent = arguments[0];
		var bAll = false;
		if(!arrAttachEvent)
		{
			arrAttachEvent = Webcrea.arrAttachEvent;
			bAll = true;
		}
		if(!arrAttachEvent) return;
		for(var i=0; i<arrAttachEvent.length; i++)
		{
			var attachEvent = arrAttachEvent[i];
			if (Webcrea.IsIE69()) attachEvent.target.detachEvent(attachEvent.event, attachEvent.func);
			else attachEvent.target.removeEventListener(attachEvent.event, attachEvent.func, false);
		}
		if(bAll) Webcrea.arrAttachEvent = [];
	},
	this.QueryInfo = function()
	{
		if(arguments.length<1) return;
		var ___param = {};
		___param.sql = arguments[0];
		var tableInfo = {
			sDBID : sDBID = '',
			sSql : sSql = '',
			sTable : sTable = '',
			aField : aField = [],
			aFieldR : aFieldR = [],
			aFieldAs : aFieldAs = [],
			aFieldType : aFieldType = [],
			aWhere : aWhere = [],
			aGroup : aGroup = [],
			aOrder : aOrder = []
		};
		GetFieldType = function(sField) {
			var n = -1;
			n = sField.indexOf('sum(');
			if(n>-1) return 10;
			n = sField.indexOf('count(');
			if(n>-1) return 20;
			n = sField.indexOf('avg(');
			if(n>-1) return 30;
			n = sField.indexOf('min(');
			if(n>-1) return 40;
			n = sField.indexOf('max(');
			if(n>-1) return 50;
			return n;
		};
		var nDBID = Webcrea.IndexOf(___param.sql, 'DBID', '=');
		if(nDBID>0)
		{
			tableInfo.sDBID = ___param.sql.substr(nDBID);
			___param.sql = ___param.sql.substr(0, nDBID);
		}
		tableInfo.sSql = ___param.sql;

		var bSelect = false;
		var bFrom = false;
		var bWhere = false;
		var bDistinct = false;
		var arr = Webcrea.MakeToken(___param.sql);

		if (arr.length < 4) return;
		if (arr[0] != "select") return;

		var i=0;
		for (i=1; i<arr.length; i++)
		{
			var sField = arr[i];
			if (sField == "from") break;
			if (sField == "distinct")
			{
				bDistinct = true;
				continue;
			}
			if (sField == ",") continue;
			if (sField == "as") continue;
			if (arr[i+1] == '||' || arr[i+1] == '+')
			{
				i++;
				var sFieldAs = '';
				for(; i<arr.length; i++)
				{
					var s = arr[i];
					if (s.iEquals(',') || s.iEquals('from'))
					{
						sFieldAs = arr[i-1];
						i--;
						break;
					}
					else if(s.iEquals('as'))
					{
						sFieldAs = arr[i+1];
						i++;
						break;
					}
					sField += ' ';
					sField += s;
				}
				aField[aField.length] = sField;
				aFieldR[aFieldR.length] = sField;
				aFieldAs[aFieldAs.length] = sFieldAs;
				continue;
			}
			if (arr[i+1] == '(' && GetFieldType(sField + arr[i+1])>=0)/*10(sum), 20(count), 30(avg), 40(min), 50(max)*/
			{
				sField = arr[i] + arr[i+1] + arr[i+2] + arr[i+3];
				aField[aField.length] = sField;
				aFieldType[aFieldType.length] = 1;
				i=i+3;
				var n = sField.indexOf('(');
				if(n>=0) sField = sField.substr(n+1, sField.length-n-2);
				aFieldR[aFieldR.length] = sField;
				if(arr[i+1] == "," || arr[i+1] == "from") aFieldAs[aFieldAs.length] = sField;
				continue;
			}
			if (sField == "(" || sField == ")")continue;
			if(i>1 && ((arr[i-1] != 'distinct' && arr[i-1] != ",") || arr[i-1] == "as")) aFieldAs[aFieldAs.length] = arr[i];
			else
			{
				if(arr[i+1] == "," || arr[i+1] == "from") aFieldAs[aFieldAs.length] = sField;
				aField[aField.length] = sField;
				aFieldR[aFieldR.length] = sField;
				aFieldType[aFieldType.length] = 0;
			}
		}
		if (i+1 >= arr.length || arr[i] != "from") return;

		sTable = arr[++i];
		i++;

		if (i < arr.length)
		{
			var s = arr[i];
			if (s != "where" && s != "group" && s != "order") return;
		}

		if (i < arr.length && arr[i] == "where")
		{
			for (++i; i<arr.length; i++)
			{
				if (arr[i] == "group" || arr[i] == "order") break;
				aWhere[aWhere.length] = arr[i];
			}
		}

		if (i < arr.length && arr[i] == "group")
		{
			for (i+=2; i<arr.length; i++)
			{
				if(arr[i] == ',') continue;
				if(aFieldR.search(arr[i])<0) continue;
				if (arr[i] == "order") break;
				aGroup[aGroup.length] = arr[i];
			}
		}

		if (i < arr.length && arr[i] == "order")
		{
			for (i+=2; i<arr.length; i++)
			{
				if(arr[i] == ',') continue;
				if(aFieldR.search(arr[i])<0) continue;
				aOrder[aOrder.length] = arr[i];
			}
		}

		for (var i=2; i<aWhere.length; i++)
		{
			var bLike = false;
			var str = aWhere[i];
			if ((str != "'%%'" && str != "'%25%25'") || aWhere[i-1] != 'like') continue;
			for(var j=i; j>=0; j--)
			{
				var str1 = aWhere[j];
				if(str1 == 'and' || str1 == 'or') 
				{
					aWhere.splice(j, 1);
					break;
				}
				if(str1 == '(' && aWhere[j+1] == ')')
				{
					aWhere.splice(j, 1);
					aWhere.splice(j+1, 1);
					break;
				}
				aWhere.splice(j, 1);
			}
			if(aWhere[0] == 'and' || aWhere[0] == 'or') aWhere.splice(0, 1);
		}

		for (var i=0; i<aWhere.length; i++)
		{
			var str = aWhere[i];
			if (str == "null")
			{
				aWhere[i] = "''";
			}
			else if (str == "is")
			{
				var bNot = false;
				if (i > 0 && aWhere[i-1] == "not")
				{
					bNot = true;
					aWhere.splice(--i, 1);
				}
				if (i < aWhere.length-1 && aWhere[i+1] == "not")
				{
					bNot = true;
					aWhere.splice(i+1, 1);
				}
				aWhere[i] = bNot ? "!=" : "=";
			}
		}
		tableInfo.sTable = sTable;
		return tableInfo;
	},
	this.CreateColumn = function()
	{
		var obj = arguments[0];
		if(!obj) return;
		var CreaetColumn = function(subNodes, bEditTd)
		{
			for(var j=0; j < subNodes.length; j++)
			{
				var subNode = subNodes[j];
				if(bEditTd || subNode.nodeName.toLowerCase() == 'input' || subNode.nodeName.toLowerCase() == 'select' || subNode.nodeName.toLowerCase() == 'textarea' || subNode.nodeName.toLowerCase() == 'img')
				{
					if(obj.IsMultiSelectCell(subNode)) continue;
					var id = obj.GetCellId(subNode.getAttribute('id'));
					var type = subNode.getAttribute('type');
					var realType = subNode.getAttribute('realType');
					var nFileVersion = Webcrea.GetCurrFileVersion();
					if(realType && nFileVersion>=7020180221001) type = realType;
					if(type && type.toLowerCase() == 'number' ) type = 1;
					else type = 0;
					if(obj.IsStatusCell(subNode)) continue;
					if(obj.arrField.isearch(id)>=0) continue;
					var cellInfo = obj.GetCellInfo(id);
					if(cellInfo)
					{
						cellInfo.field = id;
						cellInfo.fieldType = type;
					}
					obj.arrField[obj.arrField.length] = id;
					obj.arrFieldType[obj.arrFieldType.length] = type;
					if(!obj.arrData[id]) obj.arrData[id] = [];
					if(!obj.arrStatus[id]) obj.arrStatus[id] = [];
					obj.arrField_Org[obj.arrField_Org.length] = id;
					obj.arrFieldType_Org[obj.arrFieldType_Org.length] = type;
					if(!obj.arrData_Org[id]) obj.arrData_Org[id] = [];
				}
				else if(subNode.nodeName.toLowerCase() == 'div')
				{
					subNodes = subNode.childNodes;
					CreaetColumn(subNodes);
				}
			}
		};
		if(obj.arrObjAddInfo.length<1 && obj.objTable && obj.IsForm())
		{
			var CreateFormColumn = function(tdNode)
			{
				var subNodes = tdNode.childNodes;
				var bEditTd = false;
				if(Webcrea.IsEditTd(tdNode))
				{
					subNodes = [];
					subNodes[0] = tdNode;
					bEditTd = true;
				}
				CreaetColumn(subNodes, bEditTd);
			};
			for(var i=0; i<obj.objTable.rows.length; i++)
			{
				var tr = obj.objTable.rows[i];
				var trChildNodes = tr.childNodes;
				for(var j=0; j<trChildNodes.length; j++)
				{
					var td = trChildNodes[j];
					if (td.nodeName == 'TD') CreateFormColumn(td);
				}
			}
			return;
		}
		for(var j=0; j<obj.arrObjAddInfo.length; j++)
		{
			var objAddInfo = obj.arrObjAddInfo[j];
			var orgTableRow = objAddInfo.orgTableRow;
			if(orgTableRow)
			{
				var childNodes = orgTableRow.childNodes;
				for(var i=0; i < childNodes.length; i++)
				{
					var childNode = childNodes[i];
					if(childNode.nodeName.toLowerCase() == 'td')
					{
						var subNodes = childNode.childNodes;
						var bEditTd = false;
						if(Webcrea.IsEditTd(childNode))
						{
							subNodes = [];
							subNodes[0] = childNode;
							bEditTd = true;
						}
						CreaetColumn(subNodes, bEditTd);
					}
				}
			}
		}
	},
	this.CreateRecordSetObj = function()
	{
		if(arguments.length<1) return;
		var sql = arguments[0];
		var sTable = arguments[1];
		if(Webcrea.IsEmpty(sTable))
		{
			var info = Webcrea.QueryInfo(sql);
			sTable = info.sTable;
		}
		var objProc = Webcrea.GetObjectById(sTable);
		var bEnable = true;
		if(objProc && !objProc.IsSearch() && bEnable) objProc.Refresh();
		return objProc;
	},
	this.CreateRecordSetBySql = function()
	{
		if(arguments.length<1) return;
		var obj = arguments[0];
		var sql = arguments[1];
		if(Webcrea.IsEmpty(sql)) sql = obj.sSql;
		var info = Webcrea.QueryInfo(sql);
		obj.arrRows = [];
		obj.arrField = [];
		obj.arrFieldType = [];
		obj.arrData = [];
		obj.arrStatus = [];
		if(obj.bMulti) obj.arrMulti = [];
		obj.SetInitRecord();
		if(info && info.sTable != '')
		{
			if(info.aField[0] == '*' || info.aField[0] == '?')
			{
				if(obj.IsGrid() || obj.IsForm()) Webcrea.CreateColumn(obj);
				else
				{
					var sField = info.aField[0];
					obj.arrField[obj.arrField.length] = sField;
					obj.arrFieldType[obj.arrFieldType.length] = 0;
					if(!obj.arrData[sField]) obj.arrData[sField] = [];
					if(!obj.arrStatus[sField]) obj.arrStatus[sField] = [];
					obj.arrField_Org[obj.arrField_Org.length] = sField;
					obj.arrFieldType_Org[obj.arrFieldType_Org.length] = 0;
					if(!obj.arrData_Org[sField]) obj.arrData_Org[sField] = [];
				}
			}
			else
			{
				obj.arrField = info.aField;
				obj.arrFieldType = info.aFieldType;
				obj.arrField_Org = info.aField.slice();
				obj.arrFieldType_Org = info.aFieldType.slice();
				for(var i=0; i<obj.arrField.length; i++)
				{
					var s = obj.arrField[i];
					if(!obj.arrData[s]) obj.arrData[s] = [];
					if(!obj.arrStatus[s]) obj.arrStatus[s] = [];
					if(!obj.arrData_Org[s]) obj.arrData_Org[s] = [];
				}
			}
		}
		else if(obj.IsGrid() || obj.IsForm()) Webcrea.CreateColumn(obj);
	},
	this.CreateRecordSet = function()
	{
		if(arguments.length<1) return;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var ___param = {};
		___param.obj = arguments[0];
		___param.sql = arguments[1];
		var obj = ___param.obj;
		if(___param.sql == undefined) ___param.sql = obj.sSql;
		var info = Webcrea.QueryInfo(___param.sql);
		if(info && info.sTable != '')
		{
			if(info.sTable.toLowerCase() == '_dummy_')
			{
				obj.bDummy = true;
				obj.arrRows = [];
				obj.arrField = [];
				obj.arrFieldType = [];
				obj.arrData = [];
				obj.arrStatus = [];
				if(obj.bMulti) obj.arrMulti = [];
				obj.SetInitRecord();
				if(info.aField[0] == '*' || info.aField[0] == '?')
				{
					if(obj.IsGrid() || obj.IsForm()) Webcrea.CreateColumn(obj);
					else
					{
						var sField = info.aField[0];
						obj.arrField[obj.arrField.length] = sField;
						obj.arrFieldType[obj.arrFieldType.length] = 0;
						if(!obj.arrData[sField]) obj.arrData[sField] = [];
						if(!obj.arrStatus[sField]) obj.arrStatus[sField] = [];
						obj.arrField_Org[obj.arrField_Org.length] = sField;
						obj.arrFieldType_Org[obj.arrFieldType_Org.length] = 0;
						if(!obj.arrData_Org[sField]) obj.arrData_Org[sField] = [];
					}
				}
				else
				{
					obj.arrField = info.aField;
					obj.arrFieldType = info.aFieldType;
					obj.arrField_Org = info.aField.slice();
					obj.arrFieldType_Org = info.aFieldType.slice();
					for(var i=0; i<obj.arrField.length; i++)
					{
						var s = obj.arrField[i];
						if(!obj.arrData[s]) obj.arrData[s] = [];
						if(!obj.arrStatus[s]) obj.arrStatus[s] = [];
						if(!obj.arrData_Org[s]) obj.arrData_Org[s] = [];
					}
				}
				if(Webcrea.IsForm(obj) && obj.arrRows && obj.arrRows.length==0)
				{
					obj.bBaseFormRecordApply = true;
				}
				if(obj.arrField.length>0 && obj.dataSeqField)
				{
					obj.arrField[obj.arrField.length] = obj.dataSeqField;
					obj.arrFieldType[obj.arrFieldType.length] = 1;
					obj.arrData[obj.dataSeqField] = new Array();
					obj.arrData_Org[obj.dataSeqField] = new Array();
					obj.arrStatus[obj.dataSeqField] = new Array();
				}
			}
			else
			{
				var objProc = Webcrea.GetObjectById(info.sTable);
				try{
					if(!objProc && window.parent && window.parent.Webcrea.IsMDI())
					{
						if(___param.obj && ___param.obj.sDBID && ToUpper(___param.obj.sDBID).indexOf('MEMORY')>0) 
						{
							objProc = window.parent._my_FileMDI.GetObjectById(info.sTable);
						}
					}
				}catch(e) {}
				if(objProc == obj) return;
				var bEnable = true;
				if(objProc && nFileVersion>=7020190208002) bEnable = objProc.bEnable;
				if(objProc && !objProc.IsSearch() && bEnable) objProc.Refresh();
				if(objProc && (Webcrea.IsForm(objProc) || Webcrea.IsGrid(objProc) || Webcrea.IsProc(objProc))) obj.dataObj = objProc;
			}
		}
	},
	this.InsertRecord = function(obj, nRow, arrData, sMode){
		if(!obj.arrRows) return false;
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(!sMode) sMode='';
		var sRow = '';
		for(var ___i=0; ___i<obj.arrField.length; ___i++)
		{
			var str = '';
			if(arrData && arrData.length > ___i)
			{
				str = arrData[___i];
				if(Webcrea.IsNull(str)) return;
			}
			if(str == '' && obj.arrFieldType[___i] == 1 && sMode != 'total' && sMode != 'sum')
			{
				if(nFileVersion<7020201203001) str = 0;
				else
				{
					let bCommandInsert = obj.arrStackEvent.isearch('commandinsert')>=0;
					if(bCommandInsert) str = 0;
				}
			}
			if(___i == 0) sRow = str.toString();
			else sRow = sRow + Webcrea.msvSpColType + str.toString();
			if((sMode == 'total' || sMode == 'sum') && obj.autoWidthOpt && !obj.autoWidthOpt.bExcludeSum)
			{
				if(obj.arrMaxLen[___i] < lenb(str)) obj.arrMaxLen[___i] = lenb(str);
			}
		}
		obj.arrRows.splice(nRow, 0, sRow);
		if(sMode != 'tree') obj.arrRows_Org.splice(nRow, 0, sRow);
		if(sMode == undefined) sMode='';
		if(!obj.arrRowInfo) obj.arrRowInfo = new Array(obj.arrRows.length);
		var rowInfo = {};
		rowInfo.mode = sMode;
		obj.arrRowInfo.splice(nRow, 0, rowInfo);
		if(obj.bAddStatus) obj.arrStatus.splice(nRow, 0, '+');
		else obj.arrStatus.splice(nRow, 0, '');
		if(obj.bMulti) obj.arrMulti.splice(nRow, 0, '');

		var arrColData = sRow.split(Webcrea.msvSpColType);
		for(var ___j=0; ___j<arrColData.length; ___j++)
		{
			if(!obj.arrData[obj.arrField[___j]])
			{
				obj.arrData[obj.arrField[___j]] = [];
				obj.arrStatus[obj.arrField[___j]] = [];
				if(sMode != 'tree') obj.arrData_Org[obj.arrField[___j]] = [];
			}
			obj.arrData[obj.arrField[___j]].splice(nRow, 0, arrColData[___j]);
			if(obj.bAddStatus) obj.arrStatus[obj.arrField[___j]].splice(nRow, 0, '+');
			else obj.arrStatus[obj.arrField[___j]].splice(nRow, 0, '');
			if(sMode != 'tree') obj.arrData_Org[obj.arrField[___j]].splice(nRow, 0, arrColData[___j]);
		}
		return true;
	},
	this.UpdateRecord = function(obj, nRow, arrData){
		if(!obj.arrRows) return false;
		var sRow = '';
		for(var i=0; i<obj.arrField.length; i++)
		{
			var str = '';
			if(arrData && arrData.length > i) str = arrData[i];
			if(str == '' && obj.arrFieldType[i] == 1) str = 0;
			if(i == 0) sRow = str;
			else sRow = sRow + Webcrea.msvSpColType + str;
		}
		obj.arrRows[nRow] = sRow;
		obj.arrStatus[nRow] = '*';

		var arrColData = sRow.split(Webcrea.msvSpColType);
		for(var j=0; j<arrColData.length; j++)
		{
			if(obj.arrData[obj.arrField[j]][nRow] == arrColData[j]) continue;
			obj.arrData[obj.arrField[j]][nRow] = arrColData[j];
			obj.arrStatus[obj.arrField[j]][nRow] = '*';
		}
		return true;
	},
	this.DeleteRecord = function(obj, nRow){
		if(!obj.arrRows) return false;
		if(obj.arrRows.length<1) return true;
		obj.arrRows.splice(nRow, 1);
		obj.arrStatus.splice(nRow, 1);
		obj.arrRowInfo.splice(nRow, 1);
		if(obj.arrStatus_b) obj.arrStatus_b.splice(nRow, 1);
		if(obj.bMulti)
		{
			obj.arrMulti.splice(nRow, 1);
			if(obj.arrMulti_B) obj.arrMulti_B.splice(nRow, 1);
		}
		for(var j=0; j<obj.arrField.length; j++)
		{
			var sData = obj.arrData[obj.arrField[j]][nRow];
			obj.RemoveFile(obj.arrField[j], sData);
			obj.arrData[obj.arrField[j]].splice(nRow, 1);
			obj.arrStatus[obj.arrField[j]].splice(nRow, 1);
		}
		return true;
	},
	this.ModifyRecordSet = function()
	{
		var ___param = {};
		___param.obj = arguments[0];
		if(Webcrea.IsAmpObject(___param.obj)) ___param.obj = ___param.obj.obj;
		___param.param = arguments[1];
		___param.opt = arguments[2];
		var ___arr = Webcrea.MakeToken(___param.param);
		if(___arr.length < 1) return;
		if(___arr[0].toLowerCase() == 'delete')
		{
			if(!___param.obj.arrRows || ___param.obj.arrRows.length < 1) return;
			var ___sql = ___param.param.substr(7, ___param.param.length);
			for(var ___i=0; ___i<___param.obj.arrRows.length; ___i++)
			{
				var ___bOK = ___param.obj.IsWhere(___sql, ___i);
				if(___bOK) Webcrea.DeleteRecord(___param.obj, ___i--);
			}
			return;
		}
		else if(___arr[0].toLowerCase() == 'rowno')
		{
			var ___s = '';
			for(var ___i=1; ___i<___arr.length; ___i++)
			{
				if(Webcrea.IsWhereOper(___arr[___i])>=0) ___s += ' ';
				else if(___i>0 && Webcrea.IsWhereOper(___arr[___i-1])>=0) ___s += ' ';
				else if(___arr[___i].iEquals('where')) ___s += ' ';
				else if(___i>0 && ___arr[___i-1].iEquals('where')) ___s += ' ';
				___s += ___arr[___i];
			}
			Webcrea.MakeRecordSet(___param.obj, ___arr[0], ___s);
			return;
		}
		else if(___arr[0].toLowerCase() == 'group')
		{
			___arr = Webcrea.MakeToken(___param.param, '', true);
			var ___s = '';
			for(var ___i=1; ___i<___arr.length; ___i++)
			{
				___s += ___arr[___i];
			}
			Webcrea.MakeRecordSet(___param.obj, ___arr[0], ___s);
			return;
		}
		else if(___arr[0].toLowerCase() == 'set')
		{
			var ___s = '';
			for(var ___i=1; ___i<___arr.length; ___i++)
			{
				if(Webcrea.IsWhereOper(___arr[___i])>=0) ___s += ' ';
				else if(___i>0 && Webcrea.IsWhereOper(___arr[___i-1])>=0) ___s += ' ';
				else if(___arr[___i].iEquals('where')) ___s += ' ';
				else if(___i>0 && ___arr[___i-1].iEquals('where')) ___s += ' ';
				___s += ___arr[___i];
			}
			___param.obj.arrRecordSet = [];
			___param.obj.AddRecordSet(___s);
			Webcrea.MakeRecordSet(___param.obj);
			___param.obj.arrRecordSet = [];
			return;
		}
		else if(___arr[0].toLowerCase() == 'sum' || ___arr[0].toLowerCase() == 'tot' || ___arr[0].toLowerCase() == 'setgroup')
		{
			var ___mode = ___arr[0].toLowerCase();
			___arr.splice(0, 1);
			Webcrea.MakeRecordSet(___param.obj, ___mode, ___arr, ___param.opt);
			return;
		}
		else if(___arr[0].toLowerCase() == 'setrowstatus' || ___arr[0].toLowerCase() == 'serialize')
		{
			___arr = Webcrea.MakeToken(___param.param, '', true);
			var ___s = '';
			for(var ___i=1; ___i<___arr.length; ___i++)
			{
				if(___arr[___i] == ',') continue;
				___s += ___arr[___i];
			}
			if(___arr[0].toLowerCase() == 'setrowstatus') ___param.obj.SetRowStatus(___s);
			else if(___arr[0].toLowerCase() == 'serialize') ___param.obj.Serialize(___s);
			return;
		}
		else if(___arr[0].toLowerCase() == 'setselect')
		{
			___arr = Webcrea.MakeToken(___param.param, '', true);
			var ___s = '';
			for(var ___i=1; ___i<___arr.length; ___i++)
			{
				___s += ___arr[___i];
			}
			___param.obj.SetSelect(___s);
			return;
		}
		else if(___arr[0].toLowerCase() == 'settree')
		{
			var ___s = '';
			for(var ___i=1; ___i<___arr.length; ___i++)
			{
				___s += ___arr[___i];
			}
			___param.obj.SetTree(___s);
			return;
		}
		else if(___arr[0].toLowerCase() == 'sort')
		{
			var aSortField = [];
			var aSortOpt = [];
			for(var i=1; i<___arr.length; i++)
			{
				var sortOpt = false;
				if(___arr[i].toLowerCase() == 'asc' || ___arr[i] == ',') continue;
				else if(___arr[i].toLowerCase() == 'desc')
				{
					sortOpt = true;
					aSortOpt[aSortOpt.length-1] = sortOpt;
					continue;
				}
				aSortField[aSortField.length] = ___arr[i];
				aSortOpt[aSortOpt.length] = sortOpt;
			}
			if(aSortField.length<1) return;
			Webcrea.DataSort(aSortField, ___param.obj, aSortOpt);
			return;
		}
		var bCommandInsert = false;
		if(___param.obj.arrStackEvent && ___param.obj.arrStackEvent.isearch('commandinsert')>=0) bCommandInsert=true;
		var bEtcOpt = false;
		var n = ___param.param.indexOf('select');
		if(n>0)
		{
			bEtcOpt = true;
			___param.sQuery = ___param.param.substr(n);
			___param.param = ___param.param.substr(0, n);
		}
		n = ___param.param.indexOf('query');
		if(n>0)
		{
			bEtcOpt = true;
			var sUrl='';
			var bUrl=false;
			var bAgent=false;
			var sOptTemp = ___param.param.substr(n);
			var arrOptTemp = Webcrea.MakeToken(sOptTemp);
			for(var i=0; i<arrOptTemp.length; i++)
			{
				var sOrg = arrOptTemp[i];
				var s = sOrg.toLowerCase();
				if(s == 'url') bUrl=true;
				else if(s == 'agent') bAgent=true;
				if(s==',') break;
				if(bUrl || bAgent) sUrl += sOrg;
			}
			___param.sUrl = sUrl;
			___param.param = ___param.param.substr(0, n);
		}
		n = ___param.param.indexOf('where');
		if(n>0)
		{
			var retObj = Webcrea.SplitWhere(___param.param);
			___param.sWhere = retObj.where;
			___param.param = retObj.param;
			if(!Webcrea.IsEmpty(___param.sWhere)) bEtcOpt = true;
		}
		if(bEtcOpt) ___arr = Webcrea.MakeToken(___param.param);
		var createDataObj = null;
		if(!Webcrea.IsEmpty(___param.sQuery)) createDataObj = Webcrea.CreateDataObject(___param.sQuery, ___param.sUrl);
		var ___bMerge = false;
		var ___nMergeOpt = -1;
		var ___bInsertByPer = false;
		var ___bAppendByPer = false;
		var ___bInsert = false;
		var ___bAppend = false;
		var ___nInsert = 1;
		var ___arrField = new Array();
		var ___arrValue = new Array();
		var ___arrData = new Array();
		var ___arrKey = new Array();
		var ___arrValueSql = new Array();
		var bFindSqlData = false;
		for(var ___i=0; ___i<___arr.length; ___i++)
		{
			var ___s = ___arr[___i];
			if(___s.toLowerCase() == 'append' && !___bMerge)
			{
				___bAppend = true;
				___param.obj.InsertPos('bottom');
				if(Webcrea.IsEmpty(___arr[___i+1])) ___nInsert = 1;
				else if(___arr[___i+1].toLowerCase() == 'count')
				{
					___nInsert = ___arr[___i+3];
					if(!Webcrea.IsNumber(___nInsert))
					{
						try{___nInsert = eval(___nInsert);}catch(e){}
					}
					___i += 3;
				}
				continue;
			}
			if(___s.toLowerCase() == 'insert' && !___bMerge)
			{
				___bInsert = true;
				var ___insertMode = ___arr[___i+1].toLowerCase();
				if(___insertMode == 'first') ___param.obj.InsertPos('top');
				else if(___insertMode == 'last') ___param.obj.InsertPos('bottom');
				else if(___insertMode == 'before') ___bInsertByPer = true;
				else if(___insertMode == 'recursive') ___bAppendByPer = true;
				else if(!bCommandInsert && !Webcrea.IsEmpty(___param.sWhere)) ___bAppendByPer = true;
				if(___arr[___i+1].toLowerCase() == 'count')
				{
					___nInsert = ___arr[___i+3];
					___i += 3;
				}
				if(___insertMode == 'first' || ___insertMode == 'last')
				{
					var nRow = ___insertMode == 'first'?0:___param.obj.arrRows.length-1;
					___param.obj.SetCurrRecord(nRow, true, true);
				}
				continue;
			}
			if(___s.toLowerCase() == 'merge')
			{
				___bMerge = true;
				if(___i+1<___arr.length && ___arr[___i+1].toLowerCase() == 'key')
				{
					for(var j=___i+3; j<___arr.length; j++)
					{
						var s = ___arr[j];
						if(s == ',') break;
						___arrKey[___arrKey.length] = s;
						___i = j;
					}
				}
				continue;
			}
			else if(___bMerge && ___nMergeOpt<0)
			{
				var arrMergeOpt = ['match', 'matchOnly', 'and', 'or', 'multi', 'column', 'insert', 'insertCopy', 'xor', 'delete'];
				___nMergeOpt = arrMergeOpt.isearch(___s);
			}
			if(___s.toLowerCase() == 'status')
			{
				___param.obj.bAddStatus = true;
				continue;
			}
			if(___s.toLowerCase() == '=')
			{
				var sField = ___arr[___i-1];
				var iField = ___param.obj.GetColumn(sField);
				if(iField<0) this.MakeRecordSet(___param.obj, 'column', sField + '=');
				else sField = ___param.obj.arrField[iField];
				___arrField[___arrField.length] = sField;
				___i++;
				var nSub = 0;
				var ___subSql = '';
				while(___i<___arr.length)
				{
					if(!nSub && (___arr[___i] == ',' || ___arr[___i] == ';')) break;
					var __subSqlTemp = ___arr[___i];
					if(__subSqlTemp == '(') nSub++;
					else if(__subSqlTemp == ')') nSub--;
					else if(__subSqlTemp == '&_ME_') __subSqlTemp = Webcrea.GetMEData();
					else if(!Webcrea.IsEmpty(__subSqlTemp) && (__subSqlTemp.indexOf('row.') == 0 || __subSqlTemp.indexOf('App.') == 0)) __subSqlTemp = Webcrea.MakeGetObject(__subSqlTemp);
					else if(!Webcrea.IsEmpty(__subSqlTemp) && (__subSqlTemp.indexOf('.') > 0))
					{
						var objTemp = Webcrea.MakeGetObject(__subSqlTemp);
						if(objTemp) __subSqlTemp = objTemp;
					}
					___subSql += __subSqlTemp;
					___i++;
				}
				___arrValueSql[___arrValueSql.length] = ___subSql;
				var ___sData = '';
				if(___subSql.indexOf('.GetValue')>0) ___sData = ___param.obj.MakeData(___subSql);
				else if(Webcrea.IsQuote(___subSql[0]) || IsDigit(___subSql)) ___sData = ___subSql;
				else
				{
					___subSql = Webcrea.GetConvSyntax(___subSql);
					if(Webcrea.IsFuncInnerVal(___subSql)) ___sData = Webcrea.GetFuncInnerVal(___subSql);
					else
					{
						if(___bInsertByPer || ___bAppendByPer) bFindSqlData = true;
						___sData = eval(___subSql);
					}
				}
				___arrValue[___arrValue.length] = ___sData;
			}
		}
		if(___arrField.length > 0)
		{
			for(var ___i=0; ___i<___param.obj.arrField.length; ___i++)
			{
				var ___bFind = false;
				var ___sField = ___param.obj.arrField[___i];
				var ___sValue = "";
				for(var ___j=0; ___j<___arrField.length; ___j++)
				{
					if(___sField == ___arrField[___j]) ___sValue = Webcrea.RemoveQuote(___arrValue[___j]);
				}
				___arrData[___arrData.length] = ___sValue;
			}
		}
		var ___row = 0;
		if(___bAppend || ___bInsert)
		{
			if(Webcrea.IsTreeGrid(___param.obj))
			{
				Webcrea.SetRecoveryRecord(___param.obj);
			}
			if(___param.obj.nInsertPos == 1)
			{
				___row = 0;
				while(true)
				{
					var nRow = ___row;
					if(typeof ___param.obj.IsSumRow != 'undefined' && ___param.obj.IsSumRow(nRow)) ___row++;
					else break;
					if(___row >= ___param.obj.arrRows.length-1) break;
				}
			}
			else if(___param.obj.nInsertPos == 2)
			{
				___row = (___param.obj.arrRows)?___param.obj.arrRows.length:0;
				if(___param.obj.arrStackEvent.isearch('commandinsert')>=0)
				{
					while(true & ___row>0)
					{
						var nRow = ___row-1;
						if(typeof ___param.obj.IsSumRow != 'undefined' && ___param.obj.IsSumRow(nRow)) ___row--;
						else break;
						if(___row <= 0) break;
					}
				}
			}
			else if(___param.obj.IsGrid())
			{
				___row = Number(___param.obj.GetRowDataNo(___param.obj.GetCurrRowIndex())) + 1;
				if(Webcrea.IsNaN(___row)) ___row = 0;
			}
			if(createDataObj)
			{
				for(var ___i=0; ___i<createDataObj.arrField.length; ___i++)
				{
					var nFieldType = createDataObj.arrFieldType[___i];
					var sField = createDataObj.arrField[___i];
					var nField = ___param.obj.arrField.isearch(sField);
					if(nField<0)
					{
						___param.obj.arrFieldType[___param.obj.arrFieldType.length] = nFieldType;
						___param.obj.arrField[___param.obj.arrField.length] = sField;
						___param.obj.arrData[sField] = [];
						___param.obj.arrStatus[sField] = [];
						___param.obj.arrFieldType_Org[___param.obj.arrFieldType_Org.length] = nFieldType;
						___param.obj.arrField_Org[___param.obj.arrField_Org.length] = sField;
						___param.obj.arrData_Org[sField] = [];
						if(___param.obj.arrRows)
						{
							for(var j=0; j<___param.obj.arrRows.length; j++)
							{
								___param.obj.arrData[sField][j] = nFieldType?0:'';
								___param.obj.arrStatus[sField][j] = '';
								___param.obj.arrData_Org[sField][j] = nFieldType?0:'';
							}
						}
						else
						{
							___param.obj.arrRows = [];
							___param.obj.arrRows_Org = [];
							___param.obj.arrData[sField][0] = nFieldType?0:'';
							___param.obj.arrStatus[sField][0] = '';
							___param.obj.arrData_Org[sField][0] = nFieldType?0:'';
						}
					}
				}
				if(___bInsertByPer || ___bAppendByPer)
				{
					var sWhere = ___param.sWhere;
					var nAppend = 0;
					if(___bAppendByPer) nAppend=1;
					var nAdd = createDataObj.arrRows.length;
					for(var k=0; k<___param.obj.arrRows.length; k=k+nAdd+1)
					{
						if(!Webcrea.IsEmpty(sWhere))
						{
							if(!___param.obj.IsWhere(sWhere, k))
							{
								if(k>0) k-=nAdd;
								continue;
							}
						}
						for(var ___i=0; ___i<createDataObj.arrRows.length; ___i++)
						{
							var arr = [];
							for(var j=0; j<___param.obj.arrField.length; j++)
							{
								var sField = ___param.obj.arrField[j];
								var nFieldType = ___param.obj.arrFieldType[j];
								var sData = nFieldType?0:'';
								var nField = ___arrField.isearch(sField);
								if(nField>=0) arr[j] = ___arrValue[nField];
								else
								{
									nField = createDataObj.arrField.isearch(sField);
									if(nField>=0)
									{
										var sField1 = createDataObj.arrField[nField];
										sData = createDataObj.arrData[sField1][___i];
									}
									arr[j] = sData;
								}
								if(___param.obj.dataSeqField && sField == ___param.obj.dataSeqField && !sData)
								{
									arr[j] = k+___i+nAppend;
								}
							}
							Webcrea.InsertRecord(___param.obj, k+___i+nAppend, arr);
						}
					}
				}
				else
				{
					for(var ___i=0; ___i<createDataObj.arrRows.length; ___i++)
					{
						var arr = [];
						for(var j=0; j<___param.obj.arrField.length; j++)
						{
							var sField = ___param.obj.arrField[j];
							var nFieldType = ___param.obj.arrFieldType[j];
							var sData = nFieldType?0:'';
							var nField = ___arrField.isearch(sField);
							if(nField>=0) arr[j] = ___arrValue[nField];
							else
							{
								nField = createDataObj.arrField.isearch(sField);
								if(nField>=0)
								{
									var sField1 = createDataObj.arrField[nField];
									sData = createDataObj.arrData[sField1][___i];
								}
								arr[j] = sData;
							}
							if(___param.obj.dataSeqField && sField == ___param.obj.dataSeqField && !sData)
							{
								arr[j] = ___row+___i;
							}
						}
						Webcrea.InsertRecord(___param.obj, ___row+___i, arr);
					}
				}
			}
			else if(___bInsertByPer || ___bAppendByPer)
			{
				var sWhere = ___param.sWhere;
				var nAppend = 0;
				if(___bAppendByPer) nAppend=1;
				if(___param.obj.arrRows)
				{
					for(var ___i=0; ___i<___param.obj.arrRows.length; ___i=___i+2)
					{
						if(!Webcrea.IsEmpty(sWhere))
						{
							if(!___param.obj.IsWhere(sWhere, ___i))
							{
								___i--;
								continue;
							}
						}
						if(bFindSqlData && ___arrField.length > 0)
						{
							___param.obj.SetCurrRecord(___i, true);
							___arrData = [];
							for(var ___i1=0; ___i1<___param.obj.arrField.length; ___i1++)
							{
								var ___bFind = false;
								var ___sField = ___param.obj.arrField[___i1];
								var ___sValue = '';
								for(var ___j1=0; ___j1<___arrField.length; ___j1++)
								{
									if(___sField == ___arrField[___j1])
									{
										var ___subSql = ___arrValueSql[___j1];
										var ___sData = '';
										if(___subSql.indexOf('.GetValue')>0) ___sData = ___param.obj.MakeData(___subSql);
										else if(Webcrea.IsQuote(___subSql[0]) || IsDigit(___subSql)) ___sData = ___subSql;
										else
										{
											___subSql = Webcrea.GetConvSyntax(___subSql);
											if(Webcrea.IsFuncInnerVal(___subSql)) ___sData = Webcrea.GetFuncInnerVal(___subSql);
											else ___sData = eval(___subSql);
										}
										___sValue = Webcrea.RemoveQuote(___sData);
									}
								}
								___arrData[___arrData.length] = ___sValue;
							}
						}
						Webcrea.InsertRecord(___param.obj, ___i+nAppend, ___arrData);
					}
				}
			}
			else
			{
				for(var ___i=0; ___i<___nInsert; ___i++) Webcrea.InsertRecord(___param.obj, ___row+___i, ___arrData);
			}
		}
		else if(___bMerge)
		{
			if(createDataObj)
			{
				var addField = [];
				var addWhere = [];
				var arrAddSeq = [];
				for(var ___i=0; ___i<___param.obj.arrRows.length; ___i++)
				{
					var bAdd=true;
					var sWhere = '';
					for(var j=0; j<___arrKey.length; j++)
					{
						var sWherePer='';
						var field = ___arrKey[j];
						if(!___param.obj.IsColumn(field))
						{
							bAdd = false;
							break;
						}
						sWherePer += field;
						sWherePer += '=';
						if(___param.obj.GetFieldType(field)) sWherePer += ___param.obj.arrData[field][___i];
						else sWherePer = sWherePer + "'" + ___param.obj.arrData[field][___i] + "'";
						if(!Webcrea.IsEmpty(sWhere)) sWhere = sWhere + ' and ' + sWherePer;
						else sWhere = sWherePer;
					}
					if(!bAdd) continue;
					if((___nMergeOpt == 1 || ___nMergeOpt == 2) && addWhere.search(sWhere)>=0)
					{
						if(___nMergeOpt == 2)
						{
							Webcrea.DeleteRecord(___param.obj, ___i);
							___i--;
						}
						continue;
					}
					else if(___nMergeOpt == 5) sWhere = '';
					var bInsert=false;
					for(var i=0; i<createDataObj.arrRows.length; i++)
					{
						if(i==0)
						{
							for(var j=0; j<createDataObj.arrField.length; j++)
							{
								var field = createDataObj.arrField[j];
								if(!___param.obj.IsColumn(field))
								{
									this.MakeRecordSet(___param.obj, 'column', field + '=');
									addField[addField.length] = field;
								}
							}
						}
						if(!Webcrea.IsEmpty(sWhere)) bAdd = createDataObj.IsWhere(sWhere, i);
						else if(___nMergeOpt<0) bAdd = false;
						if(!bAdd) continue;
						if((___nMergeOpt == 1 || ___nMergeOpt == 2) && addWhere.search(sWhere)>=0) continue;
						else if((___nMergeOpt == 3 || ___nMergeOpt == 5) && arrAddSeq.search(i)>=0) continue;
						else if(___nMergeOpt == 6 || ___nMergeOpt == 7) bInsert = true;
						if(___nMergeOpt == 9)
						{
							Webcrea.DeleteRecord(___param.obj, ___i);
							___i--;
							break;
						}
						else if(!bInsert && ___nMergeOpt != 8)
						{
							for(var j=0; j<createDataObj.arrField.length; j++)
							{
								var field = createDataObj.arrField[j];
								var nField = ___param.obj.GetColumn(field);
								if(nField<0) Webcrea.TraceWarning('Not field exist.(' + field + ')');
								else ___param.obj.arrData[___param.obj.arrField[nField]][___i] = createDataObj.arrData[field][i];
							}
							bInsert = true;
						}
						else if(___nMergeOpt == 0 || ___nMergeOpt == 6 || ___nMergeOpt == 7)
						{
							var arr = [];
							for(var j=0; j<___param.obj.arrField.length; j++)
							{
								var field = ___param.obj.arrField[j];
								var fieldType = ___param.obj.arrFieldType[j];
								var nFieldCom = createDataObj.arrField.isearch(field);
								var fieldCom = createDataObj.arrField[nFieldCom];
								if(___nMergeOpt == 6)
								{
									if(nFieldCom<0) arr[arr.length] = fieldType?0:'';
									else arr[arr.length] = createDataObj.arrData[fieldCom][i];
								}
								else
								{
									if(addField.length>0 && addField.search(field)<0) arr[arr.length] = ___param.obj.arrData[field][___i];
									else arr[arr.length] = createDataObj.arrData[fieldCom][i];
								}
							}
							Webcrea.InsertRecord(___param.obj, ___i+1, arr);
							___i++;
						}
						if(!Webcrea.IsEmpty(sWhere) && addWhere.search(sWhere)<0) addWhere[addWhere.length] = sWhere;
						if(arrAddSeq.search(i)<0)
						{
							arrAddSeq[arrAddSeq.length] = i;
							if(___nMergeOpt == 3 || ___nMergeOpt == 5) break;
						}
					}
					if(___nMergeOpt == 2 && !bInsert)
					{
						Webcrea.DeleteRecord(___param.obj, ___i);
						___i--;
					}
				}
				if((___nMergeOpt<0 || ___nMergeOpt == 3 || ___nMergeOpt == 8) && arrAddSeq.length<createDataObj.arrRows.length)
				{
					var seq=___param.obj.arrRows.length;
					for(var i=0; i<createDataObj.arrRows.length; i++)
					{
						if(arrAddSeq.search(i)>=0) continue;
						var arr = [];
						for(var j=0; j<___param.obj.arrField.length; j++)
						{
							var field = ___param.obj.arrField[j];
							var fieldType = ___param.obj.arrFieldType[j];
							var nFieldCom = createDataObj.arrField.isearch(field);
							var fieldCom = createDataObj.arrField[nFieldCom];
							if(nFieldCom<0) arr[arr.length] = fieldType?0:'';
							else arr[arr.length] = createDataObj.arrData[fieldCom][i];
						}
						Webcrea.InsertRecord(___param.obj, seq, arr);
						seq++;
					}
				}
			}
		}
		___param.obj.bAddStatus = false;
		return ___row;
	},
	this.MakeRecordSet = function(obj, key, param, opt)
	{
		var bInitSet = false;
		if(obj && (obj.arrStackEvent.isearch('onrecordset')>=0  || obj.arrStackEvent.isearch('onquery')>=0 )) bInitSet = true;
		var count = 1, row = 1;
		var aField = null;
		if(key == undefined && (!obj.arrRecordSet || obj.arrRecordSet.length < 1)) return;
		if(!obj.arrRows) return;
		var bTotal = false;
		var bSumMode = false;
		var bSumKey = false;
		var bTotMode = false;
		var aSumKey=[], aSumGroup=[], aSumCat=[], aSumPerData=[], aSumItem=[], aSumData=[], aSumData_B=[], aSumTitle=[];
		var bSetGroup = false;
		var bDisplayBottom = false;
		var groupNo = 0, aSumItemName=[];
		var objRowNo={};
		var objGroupOpt={};
		var bGroupMode=false;
		var sWhere = '';
		var nDisplayMode = 0;
		if(key && (key.toLowerCase() == 'sum' || key.toLowerCase() == 'tot' || key.toLowerCase() == 'setgroup'))
		{
			if(key.toLowerCase() == 'sum') bSumMode = true;
			else if(key.toLowerCase() == 'tot') bTotMode = true;
			else if(key.toLowerCase() == 'setgroup') bSetGroup = true;
			var bKey = false;
			var bGroup = false;
			var bItem = false;
			if(param.isearch('key')<0) bTotal = true;
			for(var j=0; j<param.length; j++)
			{
				var str = param[j];
				if(str.toLowerCase() == 'key')
				{
					bKey = true;
					bGroup = false;
					bSumKey = true;
					j++;
					continue;
				}
				else if(str.toLowerCase() == 'group')
				{
					bKey = false;
					bGroup = true;
					j++;
					continue;
				}
				else if(str.toLowerCase() == 'where')
				{
					for(j=j+1;j<param.length;j++) sWhere += param[j];
					continue;
				}
				else if((bKey || bGroup) && str == ',')
				{
					bKey = false;
					bGroup = false;
					bItem=true;
					continue;
				}
				else if(str == ',')
				{
					bItem=true;
					continue;
				}
				else if (str == '=')
				{
					if(bSetGroup)
					{
						if(param[j-1] == 'mode')
						{
							var bCat = Webcrea.IsCatOper(param[j+1]);
							if(bCat) aSumCat[aSumCat.length] = param[j+1];
							j=j+1;
							if(j+1<param.length && param[j+1] == 'top') j=j+1;
							else if(j+1<param.length && param[j+1] == 'bottom')
							{
								bDisplayBottom = true;
								j=j+1;
							}
						}
						else if(bItem && aSumCat.length>0)
						{
							bSumMode = true;
							aSumItem[aSumItem.length] = param[j+1];
							aSumItemName[aSumItemName.length] = param[j-1];
							j=j+1;
						}
						continue;
					}
					else if(param[j-1] == 'mode')
					{
						if(param[j+1].iEquals('moreThanOne')) nDisplayMode = 1;
						else if(param[j+1].iEquals('top')) nDisplayMode = 2;
						else if(param[j+1].iEquals('removeDetail')) nDisplayMode = 3;
						j=j+1;
						continue;
					}
					var bCat = Webcrea.IsCatOper(param[j-1]);
					if(bCat)
					{
						aSumCat[aSumCat.length] = param[j-1];
						aSumItem[aSumItem.length] = param[++j];
						bItem = false;
						continue;
					}
					if(obj.GetColumn(param[j-1])<0) this.MakeRecordSet(obj, 'column', param[j-1] + '=');
					aSumTitle[aSumTitle.length] = param[j-1];
					j++;
					var sTitleValue = param[j];
					for(j=j+1;j<param.length;j++)
					{
						if(param[j] == ',' || param[j] == 'where')
						{
							j--;
							break;
						}
						sTitleValue += param[j];
					}
					aSumTitle[aSumTitle.length] = sTitleValue;
					continue;
				}
				if(bKey)
				{
					aSumKey[aSumKey.length] = str;
					var objCell = obj.GetCellInfo(str);
					if(objCell)
					{
						if(!objCell.bSumKeyDisplay)
						{
							for(var k=0; k<obj.arrCellId.length; k++)
							{
								var id = obj.arrCellId[k];
								if(!Webcrea.IsEmpty(id)) id = id.toLowerCase();
								var cell = obj.arrCellInfo[id];
								if(!cell) continue;
								cell.bSumKeyDisplay = true;
							}
						}
						objCell.bSumKey = true;
					}
					continue;
				}
				if(bGroup)
				{
					aSumGroup[aSumGroup.length] = str;
					continue;
				}
				if(!bItem && j+1<param.length && param[j+1] == ',') bItem = true;
				if(bItem && aSumItem.isearch(str)<0)
				{
					if(param[j+1] && param[j+1] == '=') continue;
					aSumCat[aSumCat.length] = 'sum';
					aSumItem[aSumItem.length] = str;
					var objCell = obj.GetCellInfo(str);
					if(objCell) objCell.bSumCell = true;
					bItem = false;
				}
			}
		}
		else if(key && key.toLowerCase() == 'group')
		{
			bGroupMode = true;
			nDisplayMode = 3;
			var bExistKey = false;
			var ___n = param.indexOf('where');
			if(___n>0)
			{
				objGroupOpt.where = param.substr(___n+5).trim();
				param = param.substr(0, ___n);
			}
			___n = param.indexOf('pad');
			if(___n>0)
			{
				var ___s = param.substr(___n);
				param = param.substr(0, ___n);
				var arr = ___s.split('=');
				if(arr.length<1) return;
				var ___sPad = arr[1].trim();
				if(Webcrea.IsQuote(___sPad)) ___sPad = Webcrea.RemoveQuote(___sPad);
				objGroupOpt.pad = ___sPad;
			}
			var arrParam = param.split(',');
			for(var ___i=0; ___i<arrParam.length; ___i++)
			{
				var sParam = arrParam[___i];
				sParam = sParam.trim();
				var arr = sParam.split('=');
				if(arr.length<1) continue;
				for(var ___j=0; ___j<arr.length; ___j++)
				{
					var ___sTemp = arr[___j];
					if(Webcrea.IsString(___sTemp)) ___sTemp = ___sTemp.trim();
					arr[___j] = ___sTemp;
				}
				if(arr[0].iEquals('key'))
				{
					var ___sKeyAll = arr[1];
					var arrKey = ___sKeyAll.split(' ');
					for(var ___j=0; ___j<arrKey.length; ___j++)
					{
						var ___sKey = arrKey[___j].trim();
						if(!objGroupOpt.arrKey)
						{
							objGroupOpt.arrKey = [];
							objGroupOpt.arrRelItem = [];
						}
						if(objGroupOpt.arrKey.isearch(___sKey)<0)
						{
							objGroupOpt.arrKey[objGroupOpt.arrKey.length] = ___sKey;
							objGroupOpt.arrRelItem[objGroupOpt.arrRelItem.length] = ___sKey;
						}
						bExistKey = true;
						aSumKey[aSumKey.length] = ___sKey;
					}
				}
				else if(arr[0]=='cat')
				{
					if(!bExistKey) return;
					var ___sCatAll = arr[1];
					var arrCat = ___sCatAll.split(' ');
					for(var ___j=0; ___j<arrCat.length; ___j++)
					{
						var ___sCat = arrCat[___j].trim();
						if(!objGroupOpt.arrCat) objGroupOpt.arrCat = [];
						objGroupOpt.arrCat[objGroupOpt.arrCat.length] = ___sCat;
						objGroupOpt.arrRelItem[objGroupOpt.arrRelItem.length] = ___sCat;
						aSumCat[aSumCat.length] = arr[0];
						aSumItem[aSumItem.length] = ___sCat;
					}
				}
				else if(arr[0]=='sum' || arr[0]=='count' || arr[0]=='count0' || arr[0]=='avg' || arr[0]=='avg0' 
					|| arr[0]=='min' || arr[0]=='min0' || arr[0]=='max' || arr[0]=='stddev' || arr[0]=='stddev0')
				{
					if(!bExistKey) return;
					var bFindObj = false;
					var objCatEtc;
					if(!objGroupOpt.arrCatEtc) objGroupOpt.arrCatEtc = [];
					for(var ___k=0; ___k<objGroupOpt.arrCatEtc.length; ___k++)
					{
						if(objGroupOpt.arrCatEtc[___k].mode == arr[0])
						{
							objCatEtc = objGroupOpt.arrCatEtc[___k];
							bFindObj = true;
							break;
						}
					}
					if(!bFindObj)
					{
						objCatEtc = {};
						objCatEtc.mode = arr[0];
						objGroupOpt.arrCatEtc[objGroupOpt.arrCatEtc.length] = objCatEtc;
					}
					var sCatItem = arr[1];
					var arrItem = sCatItem.split(' ');
					for(var ___j=0; ___j<arrItem.length; ___j++)
					{
						var ___sItem = arrItem[___j].trim();
						if(!objCatEtc.arrItem) objCatEtc.arrItem = [];
						if(objCatEtc.arrItem.isearch(___sItem)<0)
						{
							objCatEtc.arrItem[objCatEtc.arrItem.length] = ___sItem;
							objGroupOpt.arrRelItem[objGroupOpt.arrRelItem.length] = ___sItem;
						}
						aSumCat[aSumCat.length] = arr[0];
						aSumItem[aSumItem.length] = ___sItem;
					}
				}
			}
		}
		else if(key && key.toLowerCase() == 'rowno')
		{
			var sWhere = '';
			var arrWhere = param.split('where');
			if(arrWhere.length > 1)
			{
				sWhere = arrWhere[1].trim();
				param = arrWhere[0].trim();
			}
			var arr = param.split(',');
			var sParam = arr[0].trim();
			var arrInfo = sParam.split('=');
			var sField = arrInfo[0].trim();
			var sValue = '';
			if(arrInfo.length>1) sValue = arrInfo[1].trim();
			objRowNo.start = 1;
			objRowNo.step = 1;
			objRowNo.sField = sField;
			objRowNo.sValue = sValue;
			objRowNo.sWhere = sWhere;
			for(var j=1; j<arr.length; j++)
			{
				var opt = arr[j];
				var optInfo = opt.split('=');
				if(optInfo.length==2)
				{
					var subOpt = optInfo[0];
					subOpt = subOpt.trim();
					subOpt = subOpt.toLowerCase();
					var value = optInfo[1];
					if(subOpt == 'key')
					{
						var arrKey = value.split(' ');
						objRowNo.arrKey = [];
						for(var k=0; k<arrKey.length; k++)
						{
							if(!obj.IsColumn(arrKey[k])) continue;
							objRowNo.bKey = true;
							objRowNo.arrKey[objRowNo.arrKey.length] = arrKey[k];
						}
						if(!objRowNo.bKey) return;
					}
					if(subOpt == 'group')
					{
						var arrGroup = value.split(' ');
						objRowNo.arrGroup = [];
						for(var k=0; k<arrGroup.length; k++)
						{
							if(!obj.IsColumn(arrGroup[k])) continue;
							objRowNo.bGroup = true;
							objRowNo.arrGroup[objRowNo.arrGroup.length] = arrGroup[k];
						}
						if(!objRowNo.bGroup) return;
					}
					if(subOpt == 'start' || subOpt == 'step')
					{
						if(Webcrea.IsString(value)) value = value.trim();
						if(!IsNumber(value))
						{
							if(obj.IsColumn(value)) { try {value = obj.GetValue(value, i); } catch(e) {value = window[value];} }
							else value = window[value];
						}
						else value = Webcrea.NumberReDef(value);
						if(!value) value = 1;
						if(subOpt == 'start') objRowNo.start = value;
						else objRowNo.step = value;
					}
				}
			}
		}
		if(obj.arrRows.length==0)
		{
			if(key == undefined)
			{
				for(var j=0; j<obj.arrRecordSet.length; j++)
				{
					var bOK = true;
					var ___str = obj.arrRecordSet[j];
					var retObj = Webcrea.SplitWhere(___str);
					if(retObj)
					{
						var sWhere = retObj.where;
						bOK = obj.IsWhere(sWhere, i);
						___str = retObj.param;
					}
					var n = ___str.indexOf('=');
					if(n<1) continue;
					var sField = ___str.substr(0, n).trim();

					if(!obj.IsColumn(sField))
					{
						if(!window[sField]) Webcrea.DynamicVal(sField, '');
						obj.arrField[obj.arrField.length] = sField;
						obj.arrFieldType[obj.arrFieldType.length] = 0;
						obj.arrData[sField] = new Array();
						if(obj.arrStatus) obj.arrStatus[sField] = new Array();
						obj.arrField_Org[obj.arrField_Org.length] = sField;
						obj.arrFieldType_Org[obj.arrFieldType_Org.length] = 0;
						obj.arrData_Org[sField] = new Array();
					}
				}
			}
			else if(key && (key.toLowerCase() == 'column' || key.toLowerCase() == 'rowno'))
			{
				var arr = param.split(',');
				var sParam = arr[0].trim();
				var arrInfo = sParam.split('=');
				var sField = arrInfo[0].trim();
				var sType = 0;
				if(key.toLowerCase() == 'rowno') sType = 0;
				else if(sField && sField[sField.length-1] == '#')
				{
					sField = sField.substr(0, sField.length-1);
					sType = 1;
				}
				if(!sType && arrInfo.length>1 && IsDigit(arrInfo[2])) sType = 1;
				if(!obj.IsColumn(sField))
				{
					obj.arrField[obj.arrField.length] = sField;
					obj.arrFieldType[obj.arrFieldType.length] = sType;
					obj.arrData[sField] = new Array();
					obj.arrStatus[sField] = new Array();
					obj.arrField_Org[obj.arrField_Org.length] = sField;
					obj.arrFieldType_Org[obj.arrFieldType_Org.length] = sType;
					obj.arrData_Org[sField] = new Array();
				}
			}
			return;
		}
		let arrCreateField = [];
		var nInsertRow = 0;
		for(var i=0; i<obj.arrRows.length; i++)
		{
			if(key == undefined)
			{
				for(var j=0; j<obj.arrRecordSet.length; j++)
				{
					var bOK = true;
					var ___str = obj.arrRecordSet[j];
					var retObj = Webcrea.SplitWhere(___str);
					if(retObj)
					{
						var sWhere = retObj.where;
						bOK = obj.IsWhere(sWhere, i);
						___str = retObj.param;
					}
					var n = ___str.indexOf('=');
					if(n<1) continue;
					var sField = ___str.substr(0, n).trim();
					var sSql = ___str.substr(n+1, ___str.length-n).trim();

					var sValue = '';
					if(bOK) sValue = obj.MakeData(sSql, i);
					else if(obj.IsColumn(sField))
					{
						if(arrCreateField.search(sField)>=0)
						{
							if(Webcrea.IsNull(obj.arrData[sField][i]))
							{
								obj.arrData[sField][i] = '';
								if(obj.arrStatus) obj.arrStatus[sField][i] = '';
							}
							if(Webcrea.IsNull(obj.arrData_Org[sField][i])) obj.arrData_Org[sField][i] = '';
						}
						continue;
					}

					var nField = obj.GetColumn(sField);
					if(nField>=0) sField = obj.arrField[nField];
					if(!obj.arrData[sField])
					{
						if(!window[sField]) Webcrea.DynamicVal(sField, '');
						obj.arrField[obj.arrField.length] = sField;
						obj.arrFieldType[obj.arrFieldType.length] = 0;
						obj.arrData[sField] = new Array(obj.arrRows.length);
						if(obj.arrStatus) obj.arrStatus[sField] = new Array(obj.arrRows.length);
						obj.arrField_Org[obj.arrField_Org.length] = sField;
						obj.arrFieldType_Org[obj.arrFieldType_Org.length] = 0;
						obj.arrData_Org[sField] = new Array(obj.arrRows_Org.length);
						arrCreateField[arrCreateField.length] = sField;
					}
					obj.arrData[sField][i] = sValue;
					if(obj.arrStatus) obj.arrStatus[sField][i] = '';
					if(Webcrea.IsTreeGrid(obj) && obj.IsColumn(obj.dataSeqField))
					{
						var nSeqOrg = obj.arrData[obj.dataSeqField][i];
						obj.arrData_Org[sField][nSeqOrg] = sValue;
					}
					else if(bInitSet) obj.arrData_Org[sField][i] = sValue;
				}
			}
			else if(key.toLowerCase() == 'column')
			{
				var arr = param.split(',');
				var sParam = arr[0].trim();
				var arrInfo = sParam.split('=');
				var sField = arrInfo[0].trim();
				var sValue = '';
				if(arrInfo.length>1) sValue = arrInfo[1].trim();
				var sType = 0;
				if(arrInfo.length>1 && IsDigit(sValue)) sType = 1;
				if(!obj.arrData[sField])
				{
					obj.arrField[obj.arrField.length] = sField;
					obj.arrFieldType[obj.arrFieldType.length] = sType;
					obj.arrData[sField] = new Array();
					if(obj.arrStatus) obj.arrStatus[sField] = new Array();
					obj.arrField_Org[obj.arrField_Org.length] = sField;
					obj.arrFieldType_Org[obj.arrFieldType_Org.length] = sType;
					obj.arrData_Org[sField] = new Array();
				}
				obj.arrData[sField][i] = sValue;
				if(obj.arrStatus) obj.arrStatus[sField][i] = '';
				if(Webcrea.IsTreeGrid(obj) && obj.IsColumn(obj.dataSeqField))
				{
					var nSeqOrg = obj.arrData[obj.dataSeqField][i];
					obj.arrData_Org[sField][nSeqOrg] = sValue;
				}
				else if(bInitSet) obj.arrData_Org[sField][i] = sValue;
			}
			else if(key.toLowerCase() == 'rowno')
			{
				var sWhere = objRowNo.sWhere;
				if(!Webcrea.IsEmpty(sWhere))
				{
					if(!obj.IsWhere(sWhere, i)) continue;
				}
				var no_b = objRowNo.no_b;
				if(Webcrea.IsNull(no_b)) no_b = 0;
				var sField = objRowNo.sField;
				var start = objRowNo.start, step = objRowNo.step;
				var nRowNo = start+i*step;
				if(objRowNo.bKey && i>0)
				{
					var bKey = false;
					for(var k=0; k<objRowNo.arrKey.length; k++)
					{
						var sFieldKey = objRowNo.arrKey[k];
						if(obj.arrData[sFieldKey][no_b] == obj.arrData[sFieldKey][i]) bKey = true;
						else bKey = false;
					}
					var nRowNoB = Webcrea.NumberReDef(obj.arrData[sField][no_b]);
					if(bKey) nRowNo = nRowNoB;
					else nRowNo = nRowNoB+step;
				}
				else if(objRowNo.bGroup && i>0)
				{
					var bGroup = false;
					for(var k=0; k<objRowNo.arrGroup.length; k++)
					{
						var sFieldGroup = objRowNo.arrGroup[k];
						if(obj.arrData[sFieldGroup][no_b] == obj.arrData[sFieldGroup][i]) bGroup = true;
						else bGroup = false;
					}
					var nRowNoB = Webcrea.NumberReDef(obj.arrData[sField][no_b]);
					if(bGroup) nRowNo = nRowNoB+step;
					else nRowNo = start;
				}
				else if(i>0 && !Webcrea.IsEmpty(sWhere))
				{
					var nRowNoB = Webcrea.NumberReDef(obj.arrData[sField][no_b]);
					nRowNo = nRowNoB+step;
				}
				objRowNo.no_b = i;
				sValue = nRowNo;
				var nField = obj.GetColumn(sField);
				if(nField<0)
				{
					obj.arrField[obj.arrField.length] = sField;
					obj.arrFieldType[obj.arrFieldType.length] = 0;
					obj.arrData[sField] = new Array();
					if(obj.arrStatus) obj.arrStatus[sField] = new Array();
					obj.arrField_Org[obj.arrField_Org.length] = sField;
					obj.arrFieldType_Org[obj.arrFieldType_Org.length] = 0;
					obj.arrData_Org[sField] = new Array();
				}
				else sField = obj.arrField[nField];
				obj.arrData[sField][i] = sValue;
				if(obj.arrStatus) obj.arrStatus[sField][i] = '';
				if(Webcrea.IsTreeGrid(obj) && obj.IsColumn(obj.dataSeqField))
				{
					var nSeqOrg = obj.arrData[obj.dataSeqField][i];
					obj.arrData_Org[sField][nSeqOrg] = sValue;
				}
				else if(bInitSet) obj.arrData_Org[sField][i] = sValue;
			}
			else if(key.toLowerCase() == 'rowtocol')
			{
				if(!aField)
				{
					aField = [];
					var arr = param.split(',');
					for(var j=0; j<arr.length; j++)
					{
						var s = arr[j].trim();
						var arrSub = s.split('=');
						if(arrSub[0].trim() == 'count')
						{
							count = Webcrea.NumberReDef(arrSub[1]);
							continue;
						}
						if(arrSub[0].trim() == 'row')
						{
							row = Webcrea.NumberReDef(arrSub[1]);
							continue;
						}
						aField[aField.length] = s;
					}
				}
				var nRec = row - (i%row);
				var nCnt = i + nRec;
				for(var j=0; j<count; j++)
				{
					var bDel = false;
					for(var k=0; k<aField.length; k++)
					{
						var sField = aField[k];
						var sField_N = sField + (j+1);
						if(!obj.arrData[sField_N])
						{
							obj.arrField[obj.arrField.length] = sField_N;
							obj.arrFieldType[obj.arrFieldType.length] = 0;
							obj.arrData[sField_N] = new Array();
							if(obj.arrStatus) obj.arrStatus[sField_N] = new Array();
							obj.arrField_Org[obj.arrField_Org.length] = sField_N;
							obj.arrFieldType_Org[obj.arrFieldType_Org.length] = 0;
							obj.arrData_Org[sField_N] = new Array();
						}
						obj.arrData[sField_N][i] = obj.arrData[sField][nCnt];
						if(obj.arrStatus) obj.arrStatus[sField_N][i] = '';
						if(bInitSet) obj.arrData_Org[sField_N][i] = obj.arrData_Org[sField][nCnt];
					}
					Webcrea.DeleteRecord(obj, nCnt);
					nCnt += nRec;
					nCnt--;
				}
			}
			else if(bSumMode || bTotMode || bGroupMode)
			{
				if(!Webcrea.IsEmpty(sWhere))
				{
					if(!obj.IsWhere(sWhere, i))
					{
						if(bSumKey) nInsertRow++;
						continue;
					}
				}
				if(!bSetGroup && bSumMode && nDisplayMode == 2 && obj.IsSumRow(i))
				{
					if(bSumKey) nInsertRow++;
					continue;
				}
				var bLoop=true;
				var nLoop=0;
				while(bLoop)
				{
					if(!bSetGroup && bSumMode && nDisplayMode == 2 && obj.IsSumRow(i))
					{
						i++;
						while(obj.IsSumRow(i)) i++;
					}
					var bDiff = false;
					for(var j=0; j<aSumKey.length; j++)
					{
						var key = aSumKey[j];
						var nField = obj.GetColumn(key);
						key = obj.arrField[nField];
						if(nLoop==0 || obj.arrData[key][i] == obj.arrData[key][i-1]) bDiff = false;
						else
						{
							bDiff = true;
							break;
						}
					}
					if(!bDiff)
					{
						for(var j=0; j<aSumItem.length; j++)
						{
							if(bSetGroup)
							{
								var sumName = aSumItemName[j];
								var cellInfo = obj.GetCellInfo(sumName);
								if(cellInfo)
								{
									if(cellInfo.nGroup==0) cellInfo.nGroup=3;
									if(bDisplayBottom) cellInfo.nDisplayPos=1;
								}
							}
							var sumItem = aSumItem[j];
							if(!obj.IsColumn(sumItem))
							{
								aSumData[j]='';
								continue;
							}
							else
							{
								var nField = obj.GetColumn(sumItem);
								sumItem = obj.arrField[nField];
							}
							var value = obj.arrData[sumItem][i];
							if(Webcrea.IsEmpty(value)) value = 0;
							else if(Webcrea.IsNumber(value)) value = Webcrea.NumberReDef(value);
							if(Webcrea.IsEmpty(aSumData[j]))
							{
								if(aSumCat[j] == 'min') aSumData[j] = value;
								else if(aSumCat[j] == 'cat') aSumData[j] = '';
								else aSumData[j] = 0;
							}
							if(!aSumPerData[j]) aSumPerData[j] = [];
							if(aSumCat[j] == 'sum' || aSumCat[j] == 'avg' || aSumCat[j] == 'avg0' || aSumCat[j] == 'stddev' || aSumCat[j] == 'stddev0')
							{
								if((aSumCat[j] == 'avg0' || aSumCat[j] == 'stddev0') && value==0)
								{
									aSumPerData[j][aSumPerData[j].length] = value;
									continue;
								}
								if(Webcrea.IsNumber(value))
								{
									if(WebcreaInfo.bBigNumber && (aSumData[j].length>15 || value.length>15)) aSumData[j] = Webcrea.BigNumberPlus(aSumData[j], value);
									else
									{
										aSumData[j] = Webcrea.SumAdjust(aSumData[j], value);
									}
								}
								else aSumData[j] = obj.arrData[sumItem][i];
							}
							else if(aSumCat[j] == 'count') aSumData[j] = aSumData[j]+1;
							else if(aSumCat[j] == 'count0' && value!=0) aSumData[j] = aSumData[j]+1;
							else if(aSumCat[j] == 'min' && aSumData[j] > value) aSumData[j] = value;
							else if(aSumCat[j] == 'min0' && value!=0 && (aSumData[j]==0 || aSumData[j] > value)) aSumData[j] = value;
							else if(aSumCat[j] == 'max' && aSumData[j] < value) aSumData[j] = value;
							else if(aSumCat[j] == 'cat')
							{
								var sPad = objGroupOpt.pad;
								if(Webcrea.IsEmpty(sPad)) sPad = ', ';
								if(!Webcrea.IsEmpty(aSumData[j])) aSumData[j] += sPad;
								aSumData[j] += value;
							}
							aSumPerData[j][aSumPerData[j].length] = value;
						}
					}
					if(nLoop>0 && bDiff) bLoop=false;
					else i++;
					if(bSetGroup || !bSumMode || (bSumMode && nDisplayMode != 2))
					{
						while(true)
						{
							if(obj.IsSumRow(i)) i++;
							else break;
						}
					}
					if(i>=obj.arrRows.length) bLoop = false;
					nLoop++;
				}

				var data = [];
				for(var j=0; j<obj.arrField.length; j++)
				{
					var insertData='';
					var bKey = false;
					for(var k=0; k<aSumKey.length; k++)
					{
						var key = aSumKey[k];
						if(obj.arrField[j].iEquals(key))
						{
							insertData = obj.arrData[obj.arrField[j]][nInsertRow];
							bKey = true;
							break;
						}
					}
					if(!bKey)
					{
						for(var k=0; k<aSumItem.length; k++)
						{
							if(obj.arrField[j].iEquals(aSumItem[k]))
							{
								insertData=aSumData[k];
								if(aSumCat[k]=='avg' || aSumCat[k]=='avg0')
								{
									if(bTotMode)
									{
										var sum = 0;
										var nCnt = 0;
										for(var l=0; l<aSumPerData[k].length; l++)
										{
											if(aSumCat[k]=='avg0' && aSumPerData[k][l]==0) continue;
											nCnt++;
											sum += aSumPerData[k][l];
										}
										insertData = count==0?0:sum/nCnt;
									}
									else
									{
										var nCnt = 0;
										for(var l=0; l<aSumPerData[k].length; l++)
										{
											if(aSumCat[k]=='avg0' && aSumPerData[k][l]==0) continue;
											nCnt++;
										}
										insertData = nCnt==0?0:insertData/nCnt;
									}
								}
								if(aSumCat[k]=='stddev' || aSumCat[k]=='stddev0')
								{
									var nCnt = 0;
									var avg = 0;
									var total=0;
									if(bTotMode)
									{
										var sum=0;
										for(var l=0; l<aSumPerData[k].length; l++)
										{
											if(aSumCat[k]=='stddev0' && aSumPerData[k][l]==0) continue;
											nCnt++;
											sum += aSumPerData[k][l];
										}
										avg = sum/nCnt;
									}
									else avg = insertData/aSumPerData[k].length;
									for(var l=0; l<aSumPerData[k].length; l++)
									{
										if(bTotMode && aSumCat[k]=='stddev0' && aSumPerData[k][l]==0) continue;
										var deviation = aSumPerData[k][l] - avg;
										total += deviation * deviation;
										if(!bTotMode) nCnt++;
									}
									insertData = nCnt==0?0:Math.sqrt(total/nCnt);
								}
								else if((aSumCat[k]=='sum' || aSumCat[k]=='count' || aSumCat[k]=='count0') && aSumData_B[k]) insertData += aSumData_B[k];
								else if(aSumCat[k]=='min' && aSumData_B[k] && aSumData_B[k]<insertData) insertData = aSumData_B[k];
								else if(aSumCat[k]=='min0' && aSumData_B[k] && aSumData_B[k]!=0 && aSumData_B[k]<insertData) insertData = aSumData_B[k];
								else if(aSumCat[k]=='max' && aSumData_B[k] && aSumData_B[k]>insertData) insertData = aSumData_B[k];
								if(bTotMode)
								{
									if(aSumCat[k]=='min0' && insertData==0) break;
									aSumData_B[k] = insertData;
								}
								if(bSetGroup) aSumData[0] = insertData;
								break;
							}
						}
					}
					for(var k=0; k<aSumTitle.length; k++)
					{
						if(aSumTitle[k].iEquals(obj.arrField[j]))
						{
							var sTitle = aSumTitle[++k]; 
							var nDisplayRow = i-1;
							if(nDisplayMode == 2) nDisplayRow = nInsertRow;
							if(obj.IsColumn(sTitle))
							{
								var nField = obj.GetColumn(sTitle);
								sTitle = obj.arrData[obj.arrField[nField]][nDisplayRow];
							}
							else sTitle = obj.MakeData(sTitle, nDisplayRow);
							insertData=sTitle;
							break;
						}
						else k++;
					}
					if(bGroupMode && Webcrea.IsEmpty(insertData))
					{
						var currField = obj.arrField[j];
						if(aSumItem.isearch(currField)<0)
						{
							insertData = obj.arrData[currField][nInsertRow];
							if(Webcrea.IsNull(insertData)) insertData = '';
						}
					}
					data[j] = insertData;
				}
				if(bSetGroup && aSumItemName.length>0)
				{
					if(!obj.IsColumn(aSumItemName[0]))
					{
						var s = aSumItemName[0] + '=' + aSumData[0];
						Webcrea.MakeRecordSet(obj, 'column', s);
					}
					else
					{
						for(var j=groupNo; j<i; j++) obj.arrData[aSumItemName[0]][j] = aSumData[0].toString();
					}
					groupNo = i;
					i--;
				}
				else
				{
					var bInsert = true;
					if(opt && opt.bMoreThanOne && aSumPerData[0].length<2)
					{
						nInsertRow = i;
						i--;
						bInsert = false;
					}
					if(bInsert)
					{
						var nInsertInfoNo = 0;
						var sRecordOpt = bTotal?'total':'sum';
						if(bGroupMode) sRecordOpt = 'group';
						if(nDisplayMode == 1)
						{
							if(i-nInsertRow>2) Webcrea.InsertRecord(obj, i, data, sRecordOpt);
							nInsertRow = i;
							nInsertInfoNo = nInsertRow;
						}
						else if(nDisplayMode == 2)
						{
							Webcrea.InsertRecord(obj, nInsertRow, data, sRecordOpt);
							nInsertInfoNo = nInsertRow;
							nInsertRow = i+1;
						}
						else if(nDisplayMode == 3)
						{
							Webcrea.InsertRecord(obj, i, data, sRecordOpt);
							nInsertInfoNo = i;
							var nDelRow = i-nInsertRow;
							for(var nDel=nDelRow; nDel>0; nDel--)
							{
								i--;
								Webcrea.DeleteRecord(obj, i);
							}
							nInsertRow = i+1;
						}
						else
						{
							Webcrea.InsertRecord(obj, i, data, sRecordOpt);
							nInsertInfoNo = i;
							nInsertRow = i+1;
						}
						if(Webcrea.IsGrid(obj))
						{
							var nBreakNo=obj.arrSumInfo.length;
							for(var z1=obj.arrSumInfo.length-1; z1>=0; z1--)
							{
								var objInfo = obj.arrSumInfo[z1];
								if(objInfo.id>nInsertInfoNo) objInfo.id++;
							}
							var objSumInfo = {};
							objSumInfo.id = nInsertInfoNo;
							objSumInfo.arrSumKey = aSumKey.slice();
							obj.arrSumInfo[obj.arrSumInfo.length] = objSumInfo;
						}
					}
				}
				aSumData=[];
				if(!bTotMode) aSumPerData=[];
			}
		}
	},
	this.Range = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var param = arguments[1];
		var n = param.lastIndexOf('where');
		var sWhere = '';
		if(n > 0)
		{
			sWhere = param.substr(n+5);
			sWhere = sWhere.trim();
			param = param.substr(0, n);
		}
		var arrParam = param.split(',');
		if(arrParam.length<2) return;
		if(currObj.arrRows.length<1) return;
		var rangeItem = arrParam[0].trim();
		arrParam.splice(0,1);
		var sKey = '';
		var arrSetValue = [];
		var arrRange = [];
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i].trim();
			var n = sParam.indexOf('key');
			if(n>=0)
			{
				sKey = sParam.substr(n+3);
				n = sKey.indexOf('=');
				if(n>=0)
				{
					sKey = sKey.substr(n+1);
					sParam = sParam.substr(0, n);
				}
				else sKey = '';
				continue;
			}
			n = sParam.indexOf('=');
			if(n>0)
			{
				var arrSubParam = Webcrea.MakeToken(sParam);
				for(var j=0; j<arrSubParam.length; j++)
				{
					if(arrSubParam[j] == '=')
					{
						var sValue = arrSubParam[j-1];
						if(Webcrea.IsQuote(sValue)) sValue = Webcrea.RemoveQuote(sValue);
						arrSetValue[arrSetValue.length] = sValue;
						arrRange[arrRange.length] = arrSubParam[j+1];
						break;
					}
				}
			}
			else
			{
				var sValue = sParam;
				if(Webcrea.IsQuote(sValue)) sValue = Webcrea.RemoveQuote(sValue);
				arrSetValue[arrSetValue.length] = sValue;
				arrRange[arrRange.length] = '';
			}
		}
		if(!currObj.IsColumn(rangeItem)) this.MakeRecordSet(currObj, 'column', rangeItem + '=');
		if(Webcrea.IsEmpty(sKey)) sKey = rangeItem;
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			var bOK = true;
			if(!Webcrea.IsEmpty(sWhere)) bOK = currObj.IsWhere(sWhere, i);
			if(!bOK) continue;
			var data = currObj.arrData[sKey][i];
			var value = '';
			for(var j=0; j<arrRange.length; j++)
			{
				if(Webcrea.NumberReDef(data)<=Webcrea.NumberReDef(arrRange[j]))
				{
					value = arrSetValue[j];
					break;
				}
			}
			if(Webcrea.IsEmpty(value))
			{
				if(Webcrea.IsEmpty(arrRange[arrRange.length-1])) value = arrSetValue[arrSetValue.length-1];
			}
			currObj.arrData[rangeItem][i] = value;
		}
	},
	this.Rank = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var param = arguments[1];
		var arrParam = param.split(',');
		if(arrParam.length<2) return;
		if(currObj.arrRows.length<1) return;
		var rankItem = arrParam[0].trim();
		var setItem = arrParam[1].trim();
		arrParam.splice(0,2);
		var bDesc = false;
		var arrGroupItem = [];
		var bGroupItem = false;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			var arrSubParam = Webcrea.MakeToken(sParam);
			if(arrSubParam[0] == 'desc') bDesc = true;
			else
			{
				for(var j=0; j<arrSubParam.length; j++)
				{
					if(arrSubParam[j] == 'group') bGroupItem = true;
					else if(arrSubParam[j] == '=') continue;
					else if(bGroupItem)
					{
						arrGroupItem[arrGroupItem.length] = arrSubParam[j];
					}
				}
			}
		}
		if(!currObj.IsColumn(setItem)) this.MakeRecordSet(currObj, 'column', setItem + '=');
		var sGroup='', sGroupB='';
		var arrRank = [];
		var arrRowIndex = [];
		var arrObj = [];
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			if(arrGroupItem.length>0) sGroup = currObj.GetWhere(arrGroupItem, i);
			if(!Webcrea.IsEmpty(sGroup) && !Webcrea.IsEmpty(sGroupB) && sGroup != sGroupB)
			{
				arrObj[0] = arrRowIndex;
				Webcrea.MultiSort(arrRank, arrObj, bDesc);
				for(var j=0; j<arrRank.length; j++)
				{
					var seq = arrRowIndex[j];
					currObj.arrData[setItem][seq] = j+1;
				}
				arrRowIndex = [];
				arrRank = [];
				sGroupB = '';
			}
			arrRowIndex[arrRowIndex.length] = i;
			arrRank[arrRank.length] = currObj.arrData[rankItem][i];
			sGroupB = sGroup;
		}
		arrObj[0] = arrRowIndex;
		Webcrea.MultiSort(arrRank, arrObj, bDesc);
		var createNoB = 1;
		for(var j=0; j<arrRank.length; j++)
		{
			var seq = arrRowIndex[j];
			if(j>0 && arrRank[j-1] != arrRank[j])
			{
				currObj.arrData[setItem][seq] = j+1;
				createNoB = j+1;
			}
			else currObj.arrData[setItem][seq] = createNoB;
		}
	},
	this.Ratio = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var param = arguments[1];
		var bPercent = arguments[2];
		if(currObj.arrRows.length<1) return;
		var bCrossTabOpt = false;
		var nRatioMode = 0;
		var ratioItem = '';
		var setItem = '';
		var arrGroupItem = [];
		var bGroupItem = false;
		var nMultiplyValue = 0;
		if(currObj.IsCrossTab())
		{
			nRatioMode = 2;
			var paramTemp = param.toLowerCase();
			var n = paramTemp.indexOf('crosstab');
			if(n>=0)
			{
				bCrossTabOpt = true;
				param = param.substr(n+8);
				param = param.trim();
			}
			var arrParam = param.split(',');
			ratioItem = arrParam[0].trim();
			setItem = ratioItem;
			arrParam.splice(0,1);
			if(arrParam.length>0)
			{
				if(arrParam[0].trim() == 'row') nRatioMode = 0;
				else if(arrParam[0].trim() == 'column') nRatioMode = 1;
			}
			if(!bCrossTabOpt) return;
		}
		else
		{
			var arrParam = param.split(',');
			if(arrParam.length<2) return;
			ratioItem = arrParam[0].trim();
			setItem = arrParam[1].trim();
			arrParam.splice(0,2);
			for(var i=0; i<arrParam.length; i++)
			{
				var sParam = arrParam[i];
				var arrSubParam = Webcrea.MakeToken(sParam);
				for(var j=0; j<arrSubParam.length; j++)
				{
					if(arrSubParam[j] == 'group') bGroupItem = true;
					else if(arrSubParam[j] == '=') continue;
					else if(bGroupItem)
					{
						arrGroupItem[arrGroupItem.length] = arrSubParam[j];
					}
					else nMultiplyValue = Webcrea.NumberReDef(arrSubParam[j]);
				}
			}
		}
		if(bPercent) nMultiplyValue = 100;
		if(!currObj.IsColumn(setItem)) this.MakeRecordSet(currObj, 'column', setItem + '=');
		var arrRatioObj = [];
		var arrRatioItem = [];
		var arrSetItem = [];
		if(bCrossTabOpt)
		{
			for(var i=0; i<currObj.arrField.length; i++)
			{
				var field = currObj.arrField[i];
				if(field.indexOf(ratioItem) == 0 || field.indexOf('sum_field_' + ratioItem) == 0)
				{
					arrRatioItem[arrRatioItem.length] = field;
					arrSetItem[arrSetItem.length] = field;
				}
			}
		}
		else
		{
			arrRatioItem[arrRatioItem.length] = ratioItem;
			arrSetItem[arrSetItem.length] = setItem;
		}
		for(var i=0; i<arrRatioItem.length; i++)
		{
			var objRatio = {};
			objRatio.ratioItem = arrRatioItem[i];
			objRatio.setItem = arrSetItem[i];
			objRatio.sumRowValue = 0;
			objRatio.arrRatio = [];
			objRatio.arrRowIndex = [];
			arrRatioObj[arrRatioObj.length] = objRatio;
		}
		var sGroup='', sGroupB='';
		var sumTotal=0;
		var arrSumColValue = [];
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			arrSumColValue[i] = 0;
			var bSumRow = currObj.IsSumRow(i);
			if(arrGroupItem.length>0) sGroup = currObj.GetWhere(arrGroupItem, i);
			if(!Webcrea.IsEmpty(sGroup) && !Webcrea.IsEmpty(sGroupB) && sGroup != sGroupB && nRatioMode != 1)
			{
				for(var k=0; k<arrRatioObj.length; k++)
				{
					var objRatio = arrRatioObj[k];
					for(var j=0; j<objRatio.arrRatio.length; j++)
					{
						var sumValue = 0;
						if(nRatioMode == 2) sumValue = sumTotal;
						else if(nRatioMode == 1) sumValue = objRatio.sumColValue;
						else sumValue = objRatio.sumRowValue;
						var seq = objRatio.arrRowIndex[j];
						var value = objRatio.arrRatio[j]/sumValue;
						if(nMultiplyValue>0) value *= nMultiplyValue;
						currObj.arrData[objRatio.setItem][seq] = value;
					}
					objRatio.arrRowIndex = [];
					objRatio.arrRatio = [];
					objRatio.sumRowValue = 0;
					sGroupB = '';
				}
			}
			for(var k=0; k<arrRatioObj.length; k++)
			{
				var objRatio = arrRatioObj[k];
				objRatio.arrRowIndex[objRatio.arrRowIndex.length] = i;
				objRatio.arrRatio[objRatio.arrRatio.length] = Webcrea.NumberReDef(currObj.arrData[objRatio.ratioItem][i]);
				if(!bSumRow) objRatio.sumRowValue += Webcrea.NumberReDef(currObj.arrData[objRatio.ratioItem][i]);
				if(!bSumRow && !objRatio.ratioItem.indexOf('sum_field_' + ratioItem) == 0) sumTotal += Webcrea.NumberReDef(currObj.arrData[objRatio.ratioItem][i]);
				if(nRatioMode == 1 && !objRatio.ratioItem.indexOf('sum_field_' + ratioItem) == 0) arrSumColValue[i] += Webcrea.NumberReDef(currObj.arrData[objRatio.ratioItem][i]);
				sGroupB = sGroup;
			}
			if(nRatioMode == 1)
			{
				for(var k=0; k<arrRatioObj.length; k++)
				{
					var objRatio = arrRatioObj[k];
					var value = objRatio.arrRatio[i]/arrSumColValue[i];
					if(nMultiplyValue>0) value *= nMultiplyValue;
					currObj.arrData[objRatio.setItem][i] = value;
				}
			}
		}
		if(nRatioMode == 1) return;
		for(var k=0; k<arrRatioObj.length; k++)
		{
			var objRatio = arrRatioObj[k];
			for(var j=0; j<objRatio.arrRatio.length; j++)
			{
				var sumValue = 0;
				if(nRatioMode == 2) sumValue = sumTotal;
				else if(nRatioMode == 1) sumValue = objRatio.sumColValue;
				else sumValue = objRatio.sumRowValue;
				var seq = objRatio.arrRowIndex[j];
				var value = objRatio.arrRatio[j]/sumValue;
				if(nMultiplyValue>0) value *= nMultiplyValue;
				currObj.arrData[objRatio.setItem][seq] = value;
			}
		}
	},
	this.RemoveField = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var arrRemoveField = arguments[1];
		for(var i=0; i<arrRemoveField.length; i++)
		{
			var nField = currObj.GetColumn(arrRemoveField[i]);
			if(nField<0) continue;
			var field = currObj.arrField[nField];
			currObj.arrField.splice(nField, 1);
			currObj.arrData.splice(field, 1);
			delete currObj.arrData[field];
		}
	},
	this.RemoveSelect = function()
	{
		var param = arguments[0];
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sObj = arr[i];
			sObj = sObj.trim();
			var obj = Webcrea.GetObjectById(sObj);
			if(obj && (typeof obj.RemoveSelect != 'undefined')) obj.RemoveSelect();
		}
	},
	this.RemoveRow = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var param = arguments[1];
		var arrParam = param.split(' ');
		if(currObj.arrRows.length<1) return;
		var bLast = false;
		var nCount = 1;
		var nRow = 0;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			if(sParam == 'last') bLast = true;
			else if(sParam == 'first') bLast = false;
			else if(IsDigit(sParam)) nCount = Number(sParam);
		}
		if(bLast) nRow = currObj.arrRows.length-1;
		for(var i=0; i<nCount; i++)
		{
			Webcrea.DeleteRecord(currObj, nRow);
			if(bLast) nRow--;
		}
	},
	this.RemoveSum = function()
	{
		var currObj = arguments[0];
		var mode = arguments[1];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		for(var i=currObj.arrRows.length-1; i>=0; i--)
		{
			var nSumMode = currObj.IsSumRow(i);
			if(!nSumMode) continue;
			var bRemove = false;
			if(!mode) bRemove = true;
			else if(mode == nSumMode) bRemove = true;
			if(!bRemove) continue;
			Webcrea.DeleteRecord(currObj, i);
		}
	},
	this.ReNumber = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var param = arguments[1];
		var arrParam = param.split(',');
		if(arrParam.length<1) return;
		if(currObj.arrRows.length<1) return;
		var reNumberItem = arrParam[0].trim();
		arrParam.splice(0,1);
		if(!currObj.IsColumn(reNumberItem)) return;
		var nMin = 1, nStep = 1;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			var arrSubParam = Webcrea.MakeToken(sParam);
			for(var j=0; j<arrSubParam.length; j++)
			{
				if(arrSubParam[j] == 'min')
				{
					nMin = Number(arrSubParam[j+2]);
					j=j+2;
				}
				else if(arrSubParam[j] == 'step')
				{
					nStep = Number(arrSubParam[j+2]);
					j=j+2;
				}
			}
		}
		var nReNumberLen = 0;
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			var value = currObj.arrData[reNumberItem][i];
			if(i==0) nReNumberLen = value.length;
			value = nMin+(i*nStep);
			value = value.toString();
			var nDiff = nReNumberLen - value.length;
			for(var j=0; j<nDiff; j++) value = '0' + value;
			currObj.arrData[reNumberItem][i] = value;
		}
	},
	this.Serialize = function()
	{
		var currObj = arguments[0];
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		var param = arguments[1];
		var arrParam = Webcrea.MakeToken(param);
		if(Webcrea.IsString(currObj)) currObj = Webcrea.GetObjectById(currObj);
		if(!currObj) return;
		var arrEtcOpt = ['YMD', 'YM', 'YQ', 'YH', 'YQ2', 'YH2', 'HM', 'YMDHM'];
		var sItemField = '';
		var arrGroupItem = [];
		var nStep = 1;
		var beg = -1;
		var end = -1;
		for(var i=0; i<arrParam.length; i++)
		{
			var sParam = arrParam[i];
			if(i==0)
			{
				sItemField = sParam;
				continue;
			}
			var nEtcOpt = arrEtcOpt.isearch(sParam);
			if(nEtcOpt>=0) continue;
			if(sParam == ',') continue;
			if(sParam == 'group' && arrParam[i+1] == '=')
			{
				i=i+2;
				while(i<arrParam.length)
				{
					sParam = arrParam[i];
					if(sParam == ',') break;
					arrGroupItem[arrGroupItem.length] = sParam;
					i++;
				}
			}
			else if(sParam == 'step' && arrParam[i+1] == '=')
			{
				i=i+2;
				nStep = Number(arrParam[i]);
			}
			else
			{
				if(beg == -1) beg = Number(eval(sParam));
				else end = Number(eval(sParam));
			}
		}
		if(beg != -1 && end == -1) return;
		var EtcAdd = function(rowIndex, targetDataB)
		{
			var createSeq = end - targetDataB;
			for(var i=0; i<createSeq; i++)
			{
				targetDataB+=nStep;
				if(end < targetDataB) break;
				var arrData = [];
				for(var k=0; k<currObj.arrField.length; k++)
				{
					var field = currObj.arrField[k];
					if(field == sItemField)
					{
						arrData[arrData.length] = targetDataB;
						continue;
					}
					var sData = '';
					if(arrGroupItem.isearch(field)>=0) sData = currObj.arrData[field][rowIndex-1];
					arrData[arrData.length] = sData;
				}
				Webcrea.InsertRecord(currObj, rowIndex, arrData);
				rowIndex++;
			}
			return rowIndex;
		};
		var targetData = '';
		var targetDataB = '';
		var sGroup = '';
		var sGroupB = '';
		if(currObj.arrRows.length == 0) targetDataB = beg-1;
		for(var i=0; i<currObj.arrRows.length; i++)
		{
			if(arrGroupItem.length>0) sGroup = currObj.GetWhere(arrGroupItem, i);
			if(!Webcrea.IsEmpty(sGroup) && !Webcrea.IsEmpty(sGroupB) && sGroup != sGroupB)
			{
				i = EtcAdd(i, targetDataB);
				targetDataB = '';
			}
			var createSeq = 0;
			var targetData = Webcrea.NumberReDef(currObj.arrData[sItemField][i]);
			var addSeq = 0;
			if(Webcrea.IsEmpty(targetDataB))
			{
				targetDataB = beg;
				addSeq = targetDataB;
			}
			else addSeq = targetDataB + nStep;
			if(targetDataB>=0) createSeq = targetData - addSeq;
			if(createSeq < 1 || addSeq>=targetData)
			{
				targetDataB = targetData;
				sGroupB = sGroup;
				continue;
			}
			for(var j=0; j<createSeq; j++)
			{
				var arrData = [];
				if(targetData <= addSeq) break;
				for(var k=0; k<currObj.arrField.length; k++)
				{
					var field = currObj.arrField[k];
					if(field == sItemField)
					{
						arrData[arrData.length] = addSeq;
						continue;
					}
					var sData = '';
					if(arrGroupItem.isearch(field)>=0) sData = currObj.arrData[field][i];
					arrData[arrData.length] = sData;
				}
				Webcrea.InsertRecord(currObj, i, arrData);
				addSeq+=nStep;
				i++;
			}
			targetDataB = targetData;
			sGroupB = sGroup;
		}
		EtcAdd(currObj.arrRows.length, targetDataB);
	},
	this.SplitWhere = function()
	{
		var param = arguments[0];
		var where = '';
		var retObj = {};
		var arrToken = Webcrea.MakeToken(param, '', true);
		param = '';
		for(var i=arrToken.length-1; i>=0; i--)
		{
			var sToken = arrToken[i];
			if(sToken.iEquals('where'))
			{
				where = sToken + param;
				param = '';
			}
			else param = sToken + param;
		}
		retObj.param = param.trim();
		retObj.where = where.trim();
		return retObj;
	},
	this.Sort = function()
	{
		var obj = arguments[0];
		var ___sOpt = arguments[1];
		if(Webcrea.IsEmpty(___sOpt)) return;
		var aField = [];
		var aSortOpt = [];
		var ___arrOpt = ___sOpt.split(',');
		for(var i=0; i<___arrOpt.length; i++)
		{
			var s = ___arrOpt[i].trim();
			var arr = s.split(' ');
			aField[aField.length] = arr[0].trim();
			var sortOpt = false;
			if(arr.length>1)
			{
				sortOpt = arr[1].trim();
				if(sortOpt.toLowerCase() == 'desc') sortOpt = true;
				else if(sortOpt.toLowerCase() == 'asc') sortOpt = false;
			}
			aSortOpt[aSortOpt.length] = sortOpt;
		}
		if(aField.length>0) obj.sortField = aField[0];
		if(aSortOpt.length>0) obj.bSort = aSortOpt[0];

		if(obj.IsColumn(obj.dataSeqField) && aField.search(obj.dataSeqField)<0)
		{
			aField[aField.length] = obj.dataSeqField;
			aSortOpt[aSortOpt.length] = false;
		}
		Webcrea.DataSort(aField, obj, aSortOpt);
	},
	this.CrossTab = function(obj, param)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		var arr = Webcrea.MakeToken(param);
		if(arr.length < 1) return;
		var bCrossTab = false;
		var arrDataFieldEtc = [];
		var arrDataField = [];
		var arrRowField = [];
		var arrRowOpt = [];
		var arrColField = [];
		var arrColOpt = [];
		var arrSortItem = [];
		var arrSortItemDesc = [];
		var bSort = true;
		var bStatCrossTab = obj.IsStatCrossTab();
		for(var i=0; i<arr.length; i++)
		{
			var s = arr[i];
			if(s.toLowerCase() == 'crosstab')
			{
				bCrossTab = true;
				while(true)
				{
					i++;
					if(i>=arr.length) break;
					if(arr[i] == ',')
					{
						if(arr[i+1] == 'row' || arr[i+1] == 'column' || arr[i+1] == 'mode') break;
					}
					else arrDataField[arrDataField.length] = arr[i];
				}
				continue;
			}
			if(!bCrossTab) return;
			if(s.toLowerCase() == '=')
			{
				var getOpt = function(i)
				{
					var opt = {};
					while(true)
					{
						i++;
						if(i >= arr.length) break;
						if(arr[i] == ',') break;
						if(arr[i][0] == "'") opt.title = Webcrea.RemoveQuote(arr[i]);
						else if(arr[i] == 'moreThanOne') opt.bMoreThanOne = true;
						else if(arr[i] == 'top') opt.bTop = true;
						else if(opt.bSort && arr[i] == 'desc') opt.bDesc = true;
						else if(arr[i] == 'sort')
						{
							opt.bSort = true;
							opt.sortField = arr[i+2];
							i=i+2;
						}
					}
					return opt;
				};
				if(arr[i-1] == 'row')
				{
					i++;
					var nObj = arrRowField.length;
					arrRowField[nObj] = arr[i];
					var opt = getOpt(i);
					arrRowOpt[nObj] = opt;
					if(opt.bSort)
					{
						arrSortItem[arrSortItem.length] = opt.sortField;
						arrSortItemDesc[arrSortItemDesc.length] = opt.bDesc;
					}
					continue;
				}
				else if(arr[i-1] == 'column')
				{
					i++;
					var nObj = arrColField.length;
					arrColField[nObj] = arr[i];
					var opt = getOpt(i);
					arrColOpt[nObj] = opt;
					if(opt.bSort)
					{
						if(nFileVersion>=7020191121001) bSort = false;
						arrSortItem[arrSortItem.length] = opt.sortField;
						arrSortItemDesc[arrSortItemDesc.length] = opt.bDesc;
					}
					continue;
				}
				else if(arr[i-1] == 'mode')
				{
					i++;
					var sMode = arr[i];
					if(sMode.iEquals('nosort')) bSort = false;
				}
			}
		}
		var arrImgSizeFieldByCol = [];
		var arrImgSizeDataByCol = [];
		for(var i=0; i<obj.arrField.length; i++)
		{
			var field = obj.arrField[i];
			if(field.indexOf('width_') == 0) arrImgSizeFieldByCol[arrImgSizeFieldByCol.length] = field;
			else if(field.indexOf('height_') == 0) arrImgSizeFieldByCol[arrImgSizeFieldByCol.length] = field;
			if(arrDataField.search(field)>=0) continue;
			if(arrRowField.search(field)>=0) continue;
			if(arrColField.search(field)>=0) continue;
			arrDataFieldEtc[arrDataFieldEtc.length] = field;
		}
		if(bSort || bStatCrossTab)
		{
			var aSortField = arrRowField.concat(arrColField);
			if(bStatCrossTab) Webcrea.DataSort(aSortField, obj, obj.statOptInfo.arrSortOpt);
			else Webcrea.DataSort(aSortField, obj, false);
		}
		if(obj.arrRows.length<=0) return;
		if(nFileVersion>=7020191121001 && arrSortItem.length>0) Webcrea.DataSort(arrSortItem, obj, arrSortItemDesc);
		var arrFieldByRow = arrRowField;
		var arrDataByRowAll = [];
		var bCharColSort = false;
		var arrFieldByCol = arrColField;
		var arrDataByColAll = [];
		for(var i=0; i<obj.arrRows.length; i++)
		{
			var sRowData = '';
			for(var j=0; j<arrFieldByRow.length; j++)
			{
				var rowField = arrFieldByRow[j];
				if(j>0 || !Webcrea.IsEmpty(sRowData)) sRowData += Webcrea.msvSpColType;
				sRowData += obj.arrData[rowField][i];
			}
			if(arrDataByRowAll.search(sRowData)<0) arrDataByRowAll[arrDataByRowAll.length] = sRowData;

			var sColData = '';
			for(var j=0; j<arrFieldByCol.length; j++)
			{
				var colField = arrFieldByCol[j];
				if(j>0 || !Webcrea.IsEmpty(sColData)) sColData += Webcrea.msvSpColType;
				var nField = obj.GetColumn(colField);
				if(nField>=0) sColData += obj.arrData[obj.arrField[nField]][i];
			}
			if(arrDataByColAll.search(sColData)<0)
			{
				if(!bCharColSort && !IsDigit(sColData)) bCharColSort = true;
				arrDataByColAll[arrDataByColAll.length] = sColData;
			}
		}
		if(bSort)
		{
			if(bCharColSort) arrDataByColAll.sort();
			else arrDataByColAll.sort(function(a, b){return a-b});
		}
		var arrCrossFieldByRow = arrFieldByRow;
		var arrCrossDataByRow = [];
		for(var i=0; i<arrDataByRowAll.length; i++)
		{
			var sRows = arrDataByRowAll[i];
			var arr = sRows.split(Webcrea.msvSpColType);
			for(var j=0; j<arr.length; j++)
			{
				var field = arrFieldByRow[j];
				if(!arrCrossDataByRow[field]) arrCrossDataByRow[field] = [];
				arrCrossDataByRow[field][i] = arr[j];
			}
		}
		var arrCrossFieldByCol = [];
		var arrCrossDataByCol = [];
		var arrCrossFieldByColInfo = [];
		for(var i=0; i<arrDataByColAll.length; i++)
		{
			var sCols = arrDataByColAll[i];
			var arr = sCols.split(Webcrea.msvSpColType);
			for(var j=0; j<arr.length; j++)
			{
				var field = arrFieldByCol[j];
				if(!arrCrossDataByCol[field]) arrCrossDataByCol[field] = [];
				arrCrossDataByCol[field][i] = arr[j];
			}
			for(var j=0; j<arrDataField.length; j++)
			{
				var field = arrDataField[j];
				if(i>0) field += i.toString();
				arrCrossFieldByCol[arrCrossFieldByCol.length] = field;
				var info = {};
				info.field = field;
				info.realField = arrDataField[j];
				var nCalOpt = 0;
				if(bStatCrossTab) nCalOpt = obj.statOptInfo.arrCalOpt[j];
				info.calOpt = nCalOpt;
				arrCrossFieldByColInfo[arrCrossFieldByColInfo.length] = info;
			}
		}
		var bColSum = false;
		var arrColSumPart = [];
		var sumKey = '';
		for(var i=0; i<arrColOpt.length; i++)
		{
			var colField = arrColField[i];
			var opt = arrColOpt[i];
			var title = opt.title;
			var bMoreThanOne = opt.bMoreThanOne;
			if(Webcrea.IsEmpty(title))
			{
				arrCrossDataByCol[colField][arrCrossDataByCol[colField].length] = '';
				if(!Webcrea.IsEmpty(sumKey)) sumKey += Webcrea.msvSpColType;
				sumKey += colField;
				continue;
			}
			if(bMoreThanOne && arrCrossFieldByCol.length<2) continue;
			for(var j=0; j<arrDataField.length; j++)
			{
				var field = arrDataField[j];
				var info = {};
				info.colField = colField;
				info.realField = field;
				info.title = title;
				var nCalOpt = 0;
				if(bStatCrossTab) nCalOpt = obj.statOptInfo.arrCalOpt[j];
				info.calOpt = nCalOpt;
				var fieldName = 'sum_field_' + field;
				if(i==0)
				{
					info.field = fieldName + '_1';
					info.bSum = true;
					arrCrossFieldByCol[arrCrossFieldByCol.length] = info.field;
					arrCrossFieldByColInfo[arrCrossFieldByColInfo.length] = info;
					bColSum = true;
				}
				else
				{
					info.field = fieldName;
					info.sumKey = sumKey;
					info.bMoreThanOne = bMoreThanOne;
					info.title = title;
					arrColSumPart[arrColSumPart.length] = info;
				}
			}
			if(i>0) title = '';
			arrCrossDataByCol[colField][arrCrossDataByCol[colField].length] = title;
			if(!Webcrea.IsEmpty(sumKey)) sumKey += Webcrea.msvSpColType;
			sumKey += colField;
		}
		var nRow = 0;
		if(arrCrossDataByRow[arrCrossFieldByRow[0]]) nRow = arrCrossDataByRow[arrCrossFieldByRow[0]].length;
		var nCol = arrCrossFieldByCol.length;
		var nColByField = nCol/arrDataField.length;
		var arrCrossRows = [];
		var arrCrossData = [];
		var arrCrossStatus = [];
		for(var i=0; i<arrCrossFieldByRow.length; i++)
		{
			var rowField = arrCrossFieldByRow[i];
			if(!arrCrossData[rowField]) arrCrossData[rowField] = arrCrossDataByRow[rowField];
			if(!arrCrossStatus[rowField]) arrCrossStatus[rowField] = new Array(arrCrossFieldByRow.length);
		}
		for(var i=0; i<nCol; i++)
		{
			var colField = arrCrossFieldByCol[i];
			if(!arrCrossData[colField]) arrCrossData[colField] = new Array(nRow);
			if(!arrCrossStatus[colField]) arrCrossStatus[colField] = new Array(nRow);
		}
		for(var i=0; i<arrDataFieldEtc.length; i++)
		{
			var field = arrDataFieldEtc[i];
			if(!arrCrossData[field]) arrCrossData[field] = new Array(nRow);
			if(!arrCrossStatus[field]) arrCrossStatus[field] = new Array(nRow);
		}
		var arrRows = obj.arrRows.slice(0);
		var arrRowsEtc = obj.arrRows.slice(0);
		var arrField = obj.arrField.slice(0);
		var arrData = [], arrDataEtc = [];
		for(var i=0; i<obj.arrField.length; i++)
		{
			var field = obj.arrField[i];
			arrData[field] = obj.arrData[field].slice(0);
			arrDataEtc[field] = obj.arrData[field].slice(0);
		}
		var findData = function(arrRowInfo, arrColInfo, dataField, mode, bDelete, findRowInfo, nCalOpt)
		{
			var findData = '';
			var nFindCount = 0;
			var arrFindData = [];
			var nRow = mode?arrRowsEtc.length:arrRows.length;
			for(var i=0; i<nRow; i++)
			{
				var bFind = false;
				for(var j=0; j<arrRowInfo.length; j++)
				{
					var rowInfo = arrRowInfo[j];
					var colField = rowInfo.field;
					var nField = obj.GetColumn(colField);
					if(nField>=0) colField = obj.arrField[nField];
					var data = mode?arrDataEtc[colField][i]:arrData[colField][i];
					if(rowInfo.data != data)
					{
						bFind = false;
						break;
					}
					else bFind = true;
				}
				if(arrRowInfo.length>0 && !bFind) continue;
				if(arrColInfo && arrColInfo.length>0)
				{
					bFind = false;
					for(var j=0; j<arrColInfo.length; j++)
					{
						var colInfo = arrColInfo[j];
						var colField = colInfo.field;
						var nField = obj.GetColumn(colField);
						if(nField>=0) colField = obj.arrField[nField];
						var data = mode?arrDataEtc[colField][i]:arrData[colField][i];
						if(colInfo.data != data)
						{
							bFind = false;
							break;
						}
						else bFind = true;
					}
				}
				if(bFind)
				{
					nFindCount++;
					var nField = obj.GetColumn(dataField);
					if(nField>=0) dataField = obj.arrField[nField];
					var data = mode?arrDataEtc[dataField][i]:arrData[dataField][i];
					arrFindData[arrFindData.length] = data;
					if(nCalOpt==3 || nCalOpt==4)
					{
						if(nFindCount==1) findData = data;
						else
						{
							if(nCalOpt==3 && Webcrea.NumberReDef(findData)>Webcrea.NumberReDef(data)) findData = data;
							else if(nCalOpt==4 && Webcrea.NumberReDef(findData)<Webcrea.NumberReDef(data)) findData = data;
						}
					}
					else
					{
						if(Webcrea.IsNumber(data)) findData = Webcrea.NumberReDef(findData) + Webcrea.NumberReDef(data);
						else findData = data;
					}
					if(findRowInfo)
					{
						findRowInfo.nRow = i;
						findRowInfo.sData = data;
					}
					if(bDelete)
					{
						for(var j=0; j<arrField.length; j++)
						{
							var field = arrField[j];
							mode?arrDataEtc[field].splice(i, 1):arrData[field].splice(i, 1);
						}
						mode?arrRowsEtc.splice(i, 1):arrRows.splice(i, 1);
						i--;
					}
					if(mode) break;
				}
			}
			if(nCalOpt==1 && nFindCount>1) findData = findData/nFindCount;
			else if(nCalOpt==2) findData = nFindCount;
			else if(nCalOpt==5)
			{
				var nCnt = arrFindData.length;
				var avg = findData/nCnt;
				var total=0;
				for(var i=0; i<nCnt; i++)
				{
					var deviation = arrFindData[i] - avg;
					total += deviation * deviation;
				}
				findData = nCnt==0?0:Math.sqrt(total/nCnt);
			}
			return findData;
		};
		for(var i=0; i<nRow; i++)
		{
			var sRow = '';
			var arrRowInfo = [];
			for(var j=0; j<arrCrossFieldByRow.length; j++)
			{
				var field = arrCrossFieldByRow[j];
				var data = arrCrossDataByRow[field][i];
				var findInfo = {};
				findInfo.field = field;
				findInfo.data = data;
				arrRowInfo[arrRowInfo.length] = findInfo;
				if(!Webcrea.IsEmpty(sRow)) sRow += Webcrea.msvSpColType;
				sRow += data;
			}
			var arrColSum = [];
			for(var j=0; j<arrCrossFieldByColInfo.length; j++)
			{
				var info = arrCrossFieldByColInfo[j];
				var dataField = info.realField;
				var field = info.field;
				var bSum = info.bSum;
				var nCalOpt = info.calOpt;
				if(!arrColSum[dataField])
				{
					arrColSum[dataField] = [];
					arrColSum[dataField][0] = 0;
				}
				if(bSum)
				{
					arrCrossData[field][i] = arrColSum[dataField][0];
					if(!Webcrea.IsEmpty(sRow)) sRow += Webcrea.msvSpColType;
					sRow += arrColSum[dataField][0];
					continue;
				}
				var arrColInfo = [];
				for(var k=0; k<arrColField.length; k++)
				{
					var colField = arrColField[k];
					var seq = Math.floor(j/arrDataField.length);
					var data = arrCrossDataByCol[colField][seq];
					var findInfo = {};
					findInfo.field = colField;
					findInfo.data = data;
					arrColInfo[arrColInfo.length] = findInfo;
				}
				var bDelete = false;
				if(arrDataField[arrDataField.length-1] == dataField) bDelete = true;
				var findRowInfo = {};
				var data = findData(arrRowInfo, arrColInfo, dataField, 0, bDelete, findRowInfo, nCalOpt);
				for(var k=0; k<arrImgSizeFieldByCol.length; k++)
				{
					var imgSizeField = arrImgSizeFieldByCol[k];
					if(!arrImgSizeDataByCol[imgSizeField]) arrImgSizeDataByCol[imgSizeField] = [];
					if(findRowInfo.nRow>=0)
					{
						var imgSize = arrData[imgSizeField][findRowInfo.nRow];
						if(!Webcrea.IsNull(imgSize)) arrImgSizeDataByCol[imgSizeField][j] = imgSize;
					}
				}
				arrCrossData[field][i] = data;
				if(!Webcrea.IsEmpty(sRow)) sRow += Webcrea.msvSpColType;
				sRow += data;
				arrColSum[dataField][0] += Webcrea.NumberReDef(data);
			}
			for(var j=0; j<arrDataFieldEtc.length; j++)
			{
				var bDelete = false;
				if(j == arrDataFieldEtc.length-1) bDelete = true;
				var field = arrDataFieldEtc[j];
				if(arrCrossFieldByCol.search(field)>=0) continue;
				var data = findData(arrRowInfo, null, field, 1, bDelete);
				arrCrossData[field][i] = data;
				if(!Webcrea.IsEmpty(sRow)) sRow += Webcrea.msvSpColType;
				sRow += data;
			}
			arrCrossRows[arrCrossRows.length] = sRow;
		}
		{
			var arrPartInfo = [];
			{
				for(var j=0; j<arrColSumPart.length; j+=arrDataField.length)
				{
					var colInfo = arrColSumPart[j];
					var bMoreThanOne = colInfo.bMoreThanOne;
					var colField = colInfo.colField;
					var sumKey = colInfo.sumKey;
					var arrSumKey = sumKey.split(Webcrea.msvSpColType);
					if(!arrPartInfo[colField]) arrPartInfo[colField] = [];
					{
						for(var k=1; k<=nColByField; k++)
						{
							for(var l=0; l<arrSumKey.length; l++)
							{
								var key = arrSumKey[l];
								var data = arrCrossDataByCol[key][k];
								if(Webcrea.IsNull(data)) continue;
								if(data != arrCrossDataByCol[key][k-1])
								{
									var info = {};
									info.bSkip = false;
									info.seq = k;
									if(bMoreThanOne)
									{
										var infoB = arrPartInfo[colField][arrPartInfo[colField].length-1];
										if(infoB && k-infoB.seq<2) info.bSkip = true;
										else if(!infoB && k==1) info.bSkip = true;
									}
									arrPartInfo[colField][arrPartInfo[colField].length] = info;
									break;
								}
							}
						}
					}
				}
			}
			var SetSkip = function(nSeq)
			{
				for(var i=nSeq; i>=0; i--)
				{
					if(!Webcrea.IsNull(arrCrossFieldByColInfo[i].bSkip)) break;
					arrCrossFieldByColInfo[i].bSkip = true;
				}
			};
			var nColSeq = 1;
			if(bColSum) nColSeq++;
			var arrAddSeq = [];
			for(var i=0; i<arrColSumPart.length; i+=arrDataField.length)
			{
				var colInfo = arrColSumPart[i];
				var colField = colInfo.colField;
				var realField = colInfo.realField;
				var nAdd=0;
				var nSkip=0;
				arrAddSeq[i] = new Array();
				for(var j=0; j<arrPartInfo[colField].length; j++)
				{
					var partInfo = arrPartInfo[colField][j];
					var bSkip = partInfo.bSkip;
					var nAddCol = partInfo.seq*arrDataField.length;
					if(bSkip)
					{
						var nSkipSeq = nAddCol + nAdd - 1;
						SetSkip(nSkipSeq);
						continue;
					}
					for(var k=0; k<arrDataField.length; k++)
					{
						var field = arrDataField[k];
						if(i>0 && k==0)
						{
							nAddCol = nAddCol + nAdd;
							var nAddGroup = 0;
							for(var l=0; l<arrAddSeq[i-arrDataField.length].length; l++)
							{
								if(arrAddSeq[i-arrDataField.length][l]<=nAddCol) nAddGroup++;
							}
							nAddCol += nAddGroup;
							if(nAddGroup>0) nAdd = 0;
						}
						else if(k==0) nAddCol = nAddCol + (nAdd*arrDataField.length);
						arrAddSeq[i][arrAddSeq[i].length] = nAddCol;
						var sAddField = '';
						if(!bSkip) sAddField = 'sum_field_' + field + '_' + nColSeq;
						else nSkip++;
						var info = {};
						info.realField = field;
						info.field = sAddField;
						info.bSumPart = true;
						info.bSkip = bSkip;
						info.colField = colField;
						var nCalOpt = 0;
						if(bStatCrossTab) nCalOpt = obj.statOptInfo.arrCalOpt[k];
						info.calOpt = nCalOpt;
						arrCrossFieldByCol.splice(nAddCol, 0, sAddField);
						arrCrossFieldByColInfo.splice(nAddCol, 0, info);
						nCol++;

						if(!bSkip)
						{
							arrCrossData[sAddField] = new Array(nRow);
							arrCrossStatus[sAddField] = new Array(nRow);
						}
						nAddCol++;
					}
					if(!bSkip)
					{
						var nTitle = (nAddCol/arrDataField.length) - 1;
						arrCrossDataByCol[colField].splice(nTitle, 0, colInfo.title);
						var bSubStart = false;
						for(var l=0; l<arrColField.length; l++)
						{
							var col = arrColField[l];
							if(col == colField)
							{
								bSubStart = true;
								continue;
							}
							var title = arrCrossDataByCol[col][nTitle-1];
							if(bSubStart) title = '';
							arrCrossDataByCol[col].splice(nTitle, 0, title);
						}
						if(k == arrDataField.length)
						{
							nColSeq++;
							nAdd++;
						}
					}
				}
			}
			nColByField = arrCrossFieldByCol.length/arrDataField.length;
			for(var i=0; i<nRow; i++)
			{
				var arrSum = [];
				for(var j=0; j<arrCrossFieldByColInfo.length; j++)
				{
					var info = arrCrossFieldByColInfo[j];
					var field = info.field;
					var realField = info.realField;
					if(info.bSumPart)
					{
						arrCrossData[field][i] = arrSum[realField];
						arrSum[realField] = 0;
						continue;
					}
					if(!arrSum[realField]) arrSum[realField] = 0;
					arrSum[realField] += Webcrea.NumberReDef(arrCrossData[field][i]);
				}
			}
		}
		if(arrColSumPart.length>0)
		{
			for(var i=0; i<arrCrossFieldByColInfo.length; i++)
			{
				var info = arrCrossFieldByColInfo[i];
				if(info.bSumPart && info.bSkip)
				{
					arrCrossFieldByColInfo.splice(i, 1);
					arrCrossFieldByCol.splice(i, 1);
				}
			}
		}
		var arrCrossFieldType = [];
		for(var i=0; i<arrCrossFieldByRow.length; i++)
		{
			var field = arrCrossFieldByRow[i];
			var n = obj.GetColumn(field);
			arrCrossFieldType[arrCrossFieldType.length] = obj.arrFieldType[n];
		}
		for(var i=0; i<arrCrossFieldByColInfo.length; i++)
		{
			var info = arrCrossFieldByColInfo[i];
			var field = info.realField;
			var n = obj.GetColumn(field);
			arrCrossFieldType[arrCrossFieldType.length] = obj.arrFieldType[n];
		}
		for(var i=0; i<arrDataFieldEtc.length; i++)
		{
			var field = arrDataFieldEtc[i];
			var n = obj.GetColumn(field);
			arrCrossFieldType[arrCrossFieldType.length] = obj.arrFieldType[n];
		}
		var arrCrossField = arrCrossFieldByRow.concat(arrCrossFieldByCol);
		arrCrossField = arrCrossField.concat(arrDataFieldEtc);
		arrCrossField = arrCrossField.removeDup();
		obj.arrRows = arrCrossRows;
		obj.arrField = arrCrossField;
		obj.arrFieldType = arrCrossFieldType;
		obj.arrData = arrCrossData;
		obj.arrStatus = arrCrossStatus;

		if(!bStatCrossTab) obj.InitLayout(true);
		var allColWidth = 0;
		var arrCopyData = [];
		var arrCopyColNo = [];
		var maxCopyColNo = 0;
		var arrDisplayColCellId = [];
		if(obj.arrCellId)
		{
			for(var i=0; i<obj.arrCellId.length; i++)
			{
				var sDisplayColCellId = obj.GetCellId(obj.arrCellId[i], true);
				if(arrDisplayColCellId.search(sDisplayColCellId)>=0) continue;
				arrDisplayColCellId[arrDisplayColCellId.length] = sDisplayColCellId;
			}
		}
		for(var z=0; z<2; z++)
		{
			var targetDiv = obj.objDivPos;
			if(z==1) targetDiv = obj.objHDivPos;

			if(z==0)
			{
				var arrTableRow = [];
				var nObjAddInfo = 0;
				if(bStatCrossTab) nObjAddInfo = obj.arrObjAddInfo.length;
				else
				{
					if(obj.bCopyObject) Webcrea.FindNodeAll(obj.objDivPosOrg, 'id', obj.divPos + '.Data', arrTableRow);
					else Webcrea.FindNodeAll(obj.orgPage, 'id', obj.divPos + '.Data', arrTableRow);
					nObjAddInfo = arrTableRow.length;
				}
				for(var i=0; i<nObjAddInfo; i++)
				{
					var dataNode = null;
					if(bStatCrossTab)
					{
						dataNode = obj.arrObjAddInfo[i].orgTableRow;
						arrTableRow[i] = dataNode;
					}
					else dataNode = arrTableRow[i];
					for(var j=0; j<arrDataField.length; j++)
					{
						var info = {};
						var field = arrDataField[j];
						var node = Webcrea.FindNode(dataNode, 'orgid', field);
						if(!node)
						{
							node = Webcrea.FindNode(dataNode, 'orgId', field);
							if(!node) continue;
						}
						var colno = node.getAttribute('colno');
						var copyNode;
						if(node.tagName && node.tagName.toUpperCase() == 'TD') copyNode = node;
						else copyNode = Webcrea.FindParentNode(node, 'name', 'TD');
						info.field = field;
						info.node = copyNode;
						info.colno = colno;
						if(Number(maxCopyColNo) < Number(colno)) maxCopyColNo = colno;
						arrCopyData[arrCopyData.length] = info;
						if(arrCopyColNo.search(colno)<0) arrCopyColNo[arrCopyColNo.length] = colno;
						while(true)
						{
							var nextNode = copyNode.nextElementSibling;
							if(!nextNode) break;
							if(nextNode.nodeName == '#text')
							{
								copyNode = nextNode;
								continue;
							}
							var bExist = false;
							for(var k=0; k<arrDataField.length; k++)
							{
								var dataField = arrDataField[k];
								if(field == dataField) continue;
								var node = Webcrea.FindNode(nextNode, 'orgId', dataField);
								if(node)
								{
									bExist = true;
									break;
								}
								else if(Webcrea.IsEditTd(nextNode) && nextNode.getAttribute('orgId') == dataField)
								{
									bExist = true;
									break;
								}
							}
							if(!bExist)
							{
								info.nextNode = nextNode;
								break;
							}
							else copyNode = nextNode;
						}
					}
				}
				var nStart = arrCopyData.length;
				var nHideCol = arrDataField.length - arrCopyData.length;
				if(nHideCol>0) nStart = arrDataField.length;
				for(var i=nStart; i<nCol;)
				{
					if(arrCopyData.length==0) break;
					var nFind = i;
					for(var j=0; j<arrCopyData.length; j++)
					{
						var copyInfo = arrCopyData[j];
						var field = copyInfo.field;
						var chgFieldInfo;
						for(var k=nFind; k<arrCrossFieldByColInfo.length; k++)
						{
							chgFieldInfo = arrCrossFieldByColInfo[k];
							if(chgFieldInfo.realField == field)
							{
								nFind = k;
								break;
							}
						}
						var bSum = false;
						if(chgFieldInfo)
						{
							if(chgFieldInfo.bSum) bSum = true;
							if(chgFieldInfo.bSumPart) bSum = true;
						}
						var chgField = arrCrossFieldByCol[nFind];
						i++;
						if(j==0) i+=nHideCol;
						if(arrDisplayColCellId.search(chgField)<0)
						{
							var nFieldSeq = arrDisplayColCellId.search(field);
							if(nFieldSeq<0) arrDisplayColCellId[arrDisplayColCellId.length] = chgField;
							else arrDisplayColCellId.splice(nFieldSeq+nFind-j, 0, chgField);
						}
						var node = copyInfo.node;
						chgFieldInfo.colno = copyInfo.colno;
						var parent = node.parentNode;
						var copyNode = node.cloneNode(true);
						var SetAttribute = function(root, bSum)
						{
							var childNodes = root.childNodes;
							var bEditTd = Webcrea.IsEditTd(root);
							if(bEditTd)
							{
								childNodes = [];
								childNodes[0] = root;
							}
							for(var k=0; k<childNodes.length; k++)
							{
								var childNode = childNodes[k];
								if(childNode.nodeName == '#text') continue;
								var id = childNode.getAttribute('id');
								if(id)
								{
									var nFind = id.lastIndexOf(field);
									if(nFind<0)
									{
										var idT = id.toLowerCase();
										var fieldT = field.toLowerCase();
										var nFind = idT.lastIndexOf(fieldT);
										if(nFind>=0)
										{
											var id1 = id.substr(0, nFind);
											var id3 = id.substr(nFind+fieldT.length);
											id = id1 + field + id3;
											nFind = id.lastIndexOf(field);
										}
									}
									if(nFind>=0)
									{
										var id1 = id.substr(0, nFind);
										var id2 = id.substr(nFind);
										id2 = id2.replace(field, chgField);
										id = id1 + id2;
										childNode.setAttribute('id', id);
									}
								}
								var relId = childNode.getAttribute('relId');
								if(relId)
								{
									var nFind = relId.lastIndexOf(field);
									if(nFind>=0)
									{
										var relId1 = relId.substr(0, nFind);
										var relId2 = relId.substr(nFind);
										relId2 = relId2.replace(field, chgField);
										relId = relId1 + relId2;
										childNode.setAttribute('relId', relId);
									}
								}
								var forId = childNode.getAttribute('for');
								if(forId)
								{
									var nFind = forId.lastIndexOf(field);
									if(nFind>=0)
									{
										var forId1 = forId.substr(0, nFind);
										var forId2 = forId.substr(nFind);
										forId2 = forId2.replace(field, chgField);
										forId = forId1 + forId2;
										childNode.setAttribute('for', forId);
									}
								}
								var colno = childNode.getAttribute('colno');
								if(colno) childNode.setAttribute('colno', colno);
								if(bSum)
								{
									var attr = document.createAttribute('sumcell');
									attr.value = true;
									childNode.setAttributeNode(attr);
								}
								if(!bEditTd) SetAttribute(childNode, bSum);
							}
						};
						SetAttribute(copyNode, bSum);
						if(copyInfo.nextNode) parent.insertBefore(copyNode, copyInfo.nextNode);
						else parent.appendChild(copyNode);
					}
				}
				obj.SetAddRowInfo(arrTableRow);
			}
			var colGroup = Webcrea.FindNode(targetDiv, 'name', 'COLGROUP');
			var arrColGroup = [];
			Webcrea.FindNodeAll(colGroup, 'name', 'COL', arrColGroup);
			var arrCopyColGroup = [];
			var nextNodeColGroup=null;
			for(var i=0; i<arrColGroup.length; i++)
			{
				var colNode = arrColGroup[i];
				var orgWidth = colNode.getAttribute('designwidth');
				if(Webcrea.IsEmpty(width)) orgWidth = colNode.getAttribute('orgWidth');
				colNode.style.width = orgWidth + 'px';
				if(z==0) allColWidth += Number(orgWidth);
				var colno = colNode.getAttribute('colno');
				for(j=0; j<arrCopyData.length; j++)
				{
					var copyData = arrCopyData[j];
					if(copyData.colno == colno && arrCopyColGroup.search(colNode)<0) arrCopyColGroup[arrCopyColGroup.length] = colNode;
				}
				if(Number(maxCopyColNo)<Number(colno) && !nextNodeColGroup) nextNodeColGroup = colNode;
			}
			for(var i=1; i<nColByField; i++)
			{
				for(var j=0; j<arrCopyColGroup.length; j++)
				{
					var node = arrCopyColGroup[j];
					var colno = Number(node.getAttribute('colno'));
					colno = colno + i;
					var copyNode = node.cloneNode(true);
					copyNode.setAttribute('colno', colno.toString());
					if(nextNodeColGroup) colGroup.insertBefore(copyNode, nextNodeColGroup);
					else colGroup.appendChild(copyNode);
					if(z==0) allColWidth += Number(copyNode.getAttribute('orgWidth'));
				}
			}
			var getNextNode = function(currNode)
			{
				var findNode=null;
				var copyNode = currNode;
				while(true)
				{
					var nextNode = copyNode.nextElementSibling;
					if(!nextNode) break;
					if(nextNode.nodeName == '#text')
					{
						copyNode = nextNode;
						continue;
					}
					var colno = nextNode.getAttribute('colno');
					var bExist = false;
					for(var k=0; k<arrCopyColNo.length; k++)
					{
						var copyColNo = arrCopyColNo[k];
						if(colno == undefined)
						{
							var node = Webcrea.FindNode(nextNode, 'colno', copyColNo);
							if(node)
							{
								bExist = true;
								break;
							}
						}
						else if(colno == copyColNo)
						{
							bExist = true;
							break;
						}
					}
					if(!bExist)
					{
						findNode = nextNode;
						break;
					}
					else copyNode = nextNode;
				}
				return findNode;
			};
			var arrCopyColumn = [];
			var arrTableHeader = [];
			Webcrea.FindNodeAll(targetDiv, 'id', obj.divPos + '.Header', arrTableHeader);
			for(var j=0; j<arrTableHeader.length; j++)
			{
				var headerNode = arrTableHeader[j];
				var bFind = false;
				var findColNo;
				for(var i=0; i<arrColField.length; i++)
				{
					var field = arrColField[i];
					var node = Webcrea.FindNode(headerNode, 'orgId', field);
					if(node)
					{
						if(Webcrea.IsEditTd(node)) node.setAttribute('readOnly', 'readOnly');
						var colno = node.getAttribute('colno');
						var copyNode;
						if(node.tagName == 'TD') copyNode = node;
						else copyNode = Webcrea.FindParentNode(node, 'name', 'TD');
						findColNo = colno;
						var info = {};
						info.field = field;
						info.node = node;
						info.tdNode = copyNode;
						info.colno = colno;
						arrCopyColumn[arrCopyColumn.length] = info;
						info.nextNode = getNextNode(copyNode);
						bFind = true;
						break;
					}
				}
				{
					var childNodes = headerNode.childNodes;
					for(var k=0; k<childNodes.length; k++)
					{
						var childNode = childNodes[k];
						if(childNode.nodeName == '#text') continue;
						var colno = childNode.getAttribute('colno');
						if(arrCopyColNo.search(colno)>=0)
						{
							if(bFind && findColNo == colno) continue;
							var info = {};
							var copyNode;
							if(childNode.nodeName == 'TD') copyNode = childNode;
							else copyNode = Webcrea.FindParentNode(childNode, 'name', 'TD');
							info.field = '';
							info.node = childNode;
							info.tdNode = copyNode;
							info.colno = colno;
							if(bFind)
							{
								if(colno > findColNo) arrCopyColumn[arrCopyColumn.length] = info;
								else arrCopyColumn.splice(arrCopyColumn.length-1, 0, info);
							}
							else arrCopyColumn[arrCopyColumn.length] = info;
							info.nextNode = getNextNode(copyNode);
						}
					}
				}
			}
			var insertNode = null;
			var objRowSpan = {};
			var arrOrgColspan = [];
			var arrColspan = [];
			for(var i=0; i<nColByField; i++)
			{
				var seq = i;
				seq = seq.toString();
				objRowSpan.bSpan = false;
				objRowSpan.nRowSpan = 0;
				objRowSpan.nSeq = 0;
				var nColInfo = i*arrDataField.length;
				var colInfo = arrCrossFieldByColInfo[nColInfo];
				if(colInfo.bSumPart || colInfo.bSum)
				{
					if(colInfo.colField != arrFieldByCol[arrFieldByCol.length-1])
					{
						objRowSpan.bSpan = true;
						var nField = arrFieldByCol.search(colInfo.colField);
						objRowSpan.nSeq = nField;
						objRowSpan.nRowSpan = arrFieldByCol.length - nField;
					}
				}
				for(var j=0; j<arrCopyColumn.length; j++)
				{
					var copyInfo = arrCopyColumn[j];
					var field = copyInfo.field;
					var tdNode = copyInfo.tdNode;
					var node = copyInfo.node;
					if(i==0)
					{
						var colspan = tdNode.getAttribute('colspan');
						if(!colspan)
						{
							tdNode.setAttribute('colspan', 1);
							colspan = 1;
						}
						arrOrgColspan[j] = colspan;
						if(!Webcrea.IsEmpty(field))
						{
							if(node.tagName == 'IMG')
							{
								var nDataWidth = 0;
								var nDataHeight = 0;
								var imgWidthField = 'width_' + field;
								var imgHeightField = 'height_' + field;
								var nImgField = arrImgSizeFieldByCol.isearch(imgWidthField);
								if(nImgField>=0) nDataWidth = arrImgSizeDataByCol[imgWidthField][0];
								nImgField = arrImgSizeFieldByCol.isearch(imgHeightField);
								if(nImgField>=0) nDataHeight = arrImgSizeDataByCol[imgHeightField][0];
								if(nDataWidth>0) node.style.width = nDataWidth + 'px';
								if(nDataHeight>0) node.style.height = nDataHeight + 'px';

								if(Webcrea.IsNull(arrCrossDataByCol[field][0])) node.src = '';
								else  node.src = Webcrea.GetImageLinkPath() + '/' + arrCrossDataByCol[field][0];
							}
							else if(node.tagName == 'TD')
							{
								if(Webcrea.IsNull(arrCrossDataByCol[field][0])) node.innerText = '';
								else node.innerText = arrCrossDataByCol[field][0];
							}
							else
							{
								if(Webcrea.IsNull(arrCrossDataByCol[field][0])) node.value = '';
								else node.value = arrCrossDataByCol[field][0];
							}
						}
						node.disabled = true;
						if(j==arrCopyColumn.length-1) break;
						else continue;
					}
					var parent = tdNode.parentNode;
					if(j<arrColField.length-1 && arrCopyColumn.length>1 && !Webcrea.IsEmpty(field) && copyInfo.node.tagName != 'IMG')
					{
						if(seq>0 && (j==0 || (j>0 && arrCopyColumn[j-1].colno == arrCopyColumn[j].colno)))
						{
							var beforeNode;
							if(copyInfo.nextNode)
							{
								if(insertNode) beforeNode = insertNode;
								else if(copyInfo.nextNode.tagName == 'TD') beforeNode = copyInfo.tdNode;
								else beforeNode = copyInfo.nextNode.beforeSibling;
							}
							else beforeNode = parent.lastElementChild;
							if(!arrColspan[j]) arrColspan[j] = 1;
							if(arrCrossDataByCol[field] && arrCrossDataByCol[field][seq-1] == arrCrossDataByCol[field][seq])
							{
								arrColspan[j]++;
								if(i == nColByField-1)
								{
									var colspan_b = arrColspan[j] * arrOrgColspan[j];
									beforeNode.setAttribute('colspan', colspan_b);
									arrColspan[j] = 1;
								}
								continue;
							}
							else
							{
								var colspan_b = arrColspan[j] * arrOrgColspan[j];
								beforeNode.setAttribute('colspan', colspan_b);
								arrColspan[j] = 1;
							}
						}
					}
					else if(obj.joinTitle == 11 && Webcrea.IsEmpty(field))
					{
						var colspan = tdNode.getAttribute('colspan');
						colspan++;
						tdNode.setAttribute('colspan', colspan);
					}
					var childClass;
					var SetHeaderId = function(node)
					{
						var childNodes = node.children;
						if(Webcrea.IsEditTd(node))
						{
							var id = node.getAttribute('id');
							var colno = node.getAttribute('colno');
							colno = Number(colno) + Number(seq);
							node.setAttribute('colno', colno.toString());
							id = id.replace(field, field + seq);
							node.setAttribute('id', id);
							var relId = node.getAttribute('relId');
							if(relId)
							{
								relId = relId + seq;
								node.setAttribute('relId', relId);
							}
							if(!Webcrea.IsEmpty(field))
							{
								if(Webcrea.IsNull(arrCrossDataByCol[field][seq])) node.innerText = '';
								else node.innerText = arrCrossDataByCol[field][seq];
							}
							node.disabled = true;
						}
						for(var k=0; k<childNodes.length; k++)
						{
							var childNode = childNodes[k];
							var id = childNode.getAttribute('id');
							if(id)
							{
								var colno = childNode.getAttribute('colno');
								colno = Number(colno) + Number(seq);
								childNode.setAttribute('colno', colno.toString());
								id = id.replace(field, field + seq);
								childNode.setAttribute('id', id);
								var relId = childNode.getAttribute('relId');
								if(relId)
								{
									relId = relId + seq;
									childNode.setAttribute('relId', relId);
								}
								if(!Webcrea.IsEmpty(field))
								{
									if(childNode.tagName == 'IMG')
									{
										var nDataWidth = 0;
										var nDataHeight = 0;
										var imgWidthField = 'width_' + field;
										var imgHeightField = 'height_' + field;
										var nImgField = arrImgSizeFieldByCol.isearch(imgWidthField);
										if(nImgField>=0) nDataWidth = arrImgSizeDataByCol[imgWidthField][seq];
										nImgField = arrImgSizeFieldByCol.isearch(imgHeightField);
										if(nImgField>=0) nDataHeight = arrImgSizeDataByCol[imgHeightField][seq];
										if(nDataWidth>0) childNode.style.width = nDataWidth + 'px';
										if(nDataHeight>0) childNode.style.height = nDataHeight + 'px';

										if(Webcrea.IsNull(arrCrossDataByCol[field][seq])) childNode.src = '';
										else  childNode.src = Webcrea.GetImageLinkPath() + '/' + arrCrossDataByCol[field][seq];
									}
									else
									{
										if(Webcrea.IsNull(arrCrossDataByCol[field][seq])) childNode.value = '';
										else childNode.value = arrCrossDataByCol[field][seq];
									}
								}
								if(childNode.type != 'button') childNode.disabled = true;
							}
							else if(childNode.nodeName == 'DIV')
							{
								SetHeaderId(childNode);
								continue;
							}
							var forId = childNode.getAttribute('for');
							if(forId)
							{
								forId = forId.replace(field, field + seq);
								childNode.setAttribute('for', forId);
							}
							var colno = childNode.getAttribute('colno');
							if(colno) childNode.setAttribute('colno', colno);
							if(objRowSpan.bSpan)
							{
								var sClass = childNode.getAttribute('class');
								if(sClass) childClass = sClass;
							}
						}
					};
					var copyNode = tdNode.cloneNode(true);
					SetHeaderId(copyNode);
					if(objRowSpan.bSpan && !Webcrea.IsEmpty(field))
					{
						if(j == objRowSpan.nSeq)
						{
							copyNode.setAttribute('rowspan', objRowSpan.nRowSpan);
							copyNode.setAttribute('colspan', arrOrgColspan[j]);
							if(!Webcrea.IsEmpty(childClass))
							{
								childClass = childClass.replace('_my_border0', '');
								childClass = childClass.trim();
								copyNode.setAttribute('class', childClass);
							}
							if(copyInfo.nextNode) parent.insertBefore(copyNode, copyInfo.nextNode);
							else parent.appendChild(copyNode);
						}
					}
					else
					{
						if(copyInfo.nextNode)
						{
							parent.insertBefore(copyNode, copyInfo.nextNode);
							insertNode = copyNode;
						}
						else parent.appendChild(copyNode);
					}
				}
			}
		}
		obj.arrCrossHeader = arrCrossDataByCol;
		obj.arrCrossRowField = arrRowField;
		obj.arrCrossColField = arrColField;
		obj.arrDataField = arrDataField;
		obj.arrCrossDisplayColInfo = arrCopyData;
		obj.arrCrossDisplayColCellId = [];
		for(var i=0; i<obj.arrField.length; i++)
		{
			var nDisplayColCellId = arrDisplayColCellId.isearch(obj.arrField[i]);
			if(nDisplayColCellId>=0) obj.arrCrossDisplayColCellId[nDisplayColCellId] = arrDisplayColCellId[nDisplayColCellId];
		}
		var seqT = 0;
		for(var i=0; i<obj.arrCrossDisplayColCellId.length; i++)
		{
			if(Webcrea.IsNull(obj.arrCrossDisplayColCellId[i]))
			{
				var sDisplayCell = arrDisplayColCellId[seqT];
				var sDisplayCell_b = '';
				if(seqT>0) sDisplayCell_b = arrDisplayColCellId[seqT-1];
				var bDel = true;
				var bDummy = false;
				if(!Webcrea.IsEmpty(sDisplayCell_b) && sDisplayCell.iEquals(sDisplayCell_b + '.label')) bDummy = true;
				if(!bDummy && !sDisplayCell.iEquals('header') && !sDisplayCell.iEquals('data'))
				{
					if(arrColField.length>0 && arrColField.isearch(sDisplayCell)<0) bDel = false;
				}
				if(bDel)
				{
					obj.arrCrossDisplayColCellId.splice(i, 1);
					i--;
				}
				else obj.arrCrossDisplayColCellId[i] = sDisplayCell;
			}
			seqT++;
		}
		var rowSumField='';
		for(var i=0; i<arrCrossFieldByCol.length; i++)
		{
			if(!Webcrea.IsEmpty(rowSumField)) rowSumField += ',';
			var colInfo = arrCrossFieldByColInfo[i];
			var calOpt = colInfo.calOpt;
			if(calOpt==1) rowSumField += 'avg0=';
			else if(calOpt==3) rowSumField += 'min0=';
			else if(calOpt==4) rowSumField += 'max=';
			else if(calOpt==5) rowSumField += 'stddev0=';
			rowSumField += arrCrossFieldByCol[i];
		}
		var sSumKey = '';
		var arrSumOpt = [];
		var nSumCnt = 0;
		for(var i=0; i<arrRowOpt.length; i++)
		{
			var bSum = false;
			var opt = arrRowOpt[i];
			var title = opt.title;
			if(!Webcrea.IsEmpty(title))
			{
				bSum = true;
			}
			if(bSum)
			{
				nSumCnt++;
				var sumOpt = {};
				var param='';
				if(i==0)
				{
					param = "sum " + arrRowField[i] + "='" + title + "',_ROWID_=" + nSumCnt + "," + rowSumField;
				}
				else
				{
					param = "sum key=" + sSumKey + "," + arrRowField[i] + "='" + title + "',_ROWID_=" + nSumCnt + "," + rowSumField;
				}
				sumOpt.param = param;
				sumOpt.bMoreThanOne = opt.bMoreThanOne;
				sumOpt.bSort = opt.bSort;
				sumOpt.bTop = opt.bTop;
				sumOpt.bCrossTop = true;
				arrSumOpt[arrSumOpt.length] = sumOpt;
			}
			if(!Webcrea.IsEmpty(sSumKey)) sSumKey += ' ';
			sSumKey += arrRowField[i];
		}
		obj.SetInitRecord();
		for(var i=arrSumOpt.length-1; i>=0; i--)
		{
			var opt = arrSumOpt[i];
			Webcrea.ModifyRecordSet(obj, opt.param, opt);
		}
		obj.initAllColWidth = allColWidth;
		Webcrea.CrossTabColSize(obj);
		if(obj.layoutOpt && obj.layoutOpt.bHorz && obj.nResizeWidth>0) obj.OnResizeHorz(obj.nResizeWidth, true);
		if(obj.layoutOpt && obj.layoutOpt.bVert && obj.nResizeHeight>0) obj.OnResizeVert(obj.nResizeHeight, true);
	},
	this.CrossTabColSize = function(obj)
	{
		if(obj.layoutOpt && obj.layoutOpt.bHorz)
		{
			obj.divScrollWidth = Webcrea.GetScrollWidth(obj.objDivPos);
			if(obj.objGDivPos) obj.initGDivWidth = Webcrea.GetWidth(obj.objGDivPos, true);
			if(obj.objHDivPos) obj.initHDivWidth = Webcrea.GetWidth(obj.objHDivPos, true) + Webcrea.GetScrollWidth(obj.objHDivPos);
			obj.initDivWidth = Webcrea.GetWidth(obj.objDivPos, true) + obj.divScrollWidth;
			if(obj.objHTable) obj.initHWidth = Webcrea.GetWidth(obj.objHTable);
			if(obj.objTable) obj.initWidth = Webcrea.GetWidth(obj.objTable);
		}
		else obj.DisplayColSize();
		if(obj.bMyGrid && obj.bVScroll)
		{
			var clientHeight = Webcrea.GetHeight(obj.objDivPos, true);
			if(obj.objVSGDivPos)
			{
				obj.objVSGDivPos.style.height = clientHeight + 'px';
				obj.objVSDWDivPos.style.top = (clientHeight-(obj.nScrlWidth-1)) + 'px';
			}
		}
	},
	this.Date = function(date, fmt)
	{
		if(Webcrea.IsNumber(date)) date = date.toString();
		var str='';
		var slash = Webcrea.GetDateMask();
		if (Webcrea.IsEmpty(fmt))
		{
			if (date.length <= 4) str = Webcrea.AddZero(floor(date/100, 0),2) + slash + Webcrea.AddZero(date%100,2);
			else if (date.length <= 6) str = Webcrea.AddZero(floor(date/100, 0),4) + slash + Webcrea.AddZero(date%100,2);
			else str = Webcrea.AddZero(floor(date/10000, 0),4) + slash + Webcrea.AddZero(floor(date/100, 0)%100,2) + slash + Webcrea.AddZero(date%100,2);
			return str;
		}

		if (date > 9999 && date <= 999999) date *= 100;

		var yy = floor(date/10000, 0);
		var mm = floor(date/100, 0) % 100;
		var dd = date % 100;
		for (var i=0; i<fmt.length; i++)
		{
			var c = ToUpper(fmt[i]);
			if (c=='Y'||c=='M'||c=='D'||c=='W')
			{
				var n = 1;
				for (++i; i<fmt.length; i++)
				{
					if (ToUpper(fmt[i]) != c) break;
					n++;
				}

				var s='';
				if (c == 'Y' || c == 'D')
				{
					if (n > 0)
					{
						if(n==4) s = Webcrea.AddZero(c=='Y' ? yy : dd,4).toString();
						else s = Webcrea.AddZero(c=='Y' ? yy : dd,2).toString();
						if (s.length > n) s = s.substr(s.length-n);
					}
					else s = c=='Y' ? yy : dd;
					str += s;
				}
				else if (c == 'M')
				{
					if (n == 2)
					{
						s = Webcrea.AddZero(mm,2).toString();
						str += s.substr(s.length-n);
					}
					else
					{
						var s = Webcrea.GetMonthName(mm);
						if (n == 3 && s.length > 3) s=s.substr(0, 3);
						str += s;
					}
				}
				else if (c == 'W')
				{
					var day = Webcrea.GetDayOfWeek(date);
					s = Webcrea.GetDayName(day, n!=2);
					if (n == 3 && s.length > 3) s=s.substr(0, 3);
					str += s;
				}
				i--;
				continue;
			}
			str += fmt[i];
		}
		return str;
	},
	this.DateTime = function(ymdhms, opt1, opt2)
	{
		if(!ymdhms) return;
		var ymd = 0, hms = 0;
		var b12 = false, bHM = false;
		var sYmdHms='';
		if(Webcrea.IsNumber(ymdhms)) ymdhms = ymdhms.toString();
		if(Webcrea.IsNumber(opt1)) opt1 = opt1.toString();

		if (ymdhms.length<=8)
		{
			ymd = Extract(ymdhms, '[0-9]');
			hms = Extract(opt1, '[0-9]');
			b12 = opt2==12;
		}
		else if (ymdhms.length>8)
		{
			b12 = opt1==12;
			if (ymdhms.length >= 12)
			{
				sYmdHms = Extract(ymdhms, '[0-9]');
			}
			else 
			{
				ymd = Extract(ymdhms, '[0-9]');
				hms = Extract(opt1, '[0-9]');
			}
		}
		else
		{
			sYmdHms = Extract(ymdhms, '[0-9]');
		}

		if (!Webcrea.IsEmpty(sYmdHms))
		{
			if (sYmdHms.length >= 8)
			{
				ymd = sYmdHms.substr(0, 8);
				if (sYmdHms.length > 8)
				{
					var sTime = sYmdHms.substr(8);
					hms = Number(sTime);
					if (sTime.length < 5)
					{
						bHM = true;
						hms *= 100;
					}
				}
			}
			else ymd = Number(sYmdHms);
		}

		var slash = Webcrea.GetDateMask();
		var str = Webcrea.AddZero(floor(ymd/10000, 0),4) + slash + Webcrea.AddZero(floor(ymd/100, 0)%100,2) + slash + Webcrea.AddZero(ymd%100,2);

		var hh = floor(hms/10000, 0);
		var mm = floor(hms/100, 0) % 100;
		var ss = hms % 100;

		var sAmPm = ' ';
		if (b12)
		{
			var arr=[];
			arr = Webcrea.LoadString('idsAmPm').split(';');
			if(arr.length==1) arr[1]='';
			sAmPm = ' ' + arr[0] + ' ';
			if (hh > 11) sAmPm = ' ' + arr[1] + ' ';
			if (hh > 12) hh -= 12;
		}
		var sTime='';
		if (bHM) sTime = Webcrea.AddZero(hh,2) + ':' + Webcrea.AddZero(mm,2);
		else sTime = Webcrea.AddZero(hh,2) + ':' + Webcrea.AddZero(mm,2) + ':' + Webcrea.AddZero(ss,2);
		str += sAmPm;
		str += sTime;
		return str;
	},
	this.Day = function()
	{
		return Day(arguments[0]);
	},
	this.Month = function()
	{
		return Month(arguments[0]);
	},
	this.Time = function(time, fmt)
	{
		var s = '';
		if(!Webcrea.IsNumber(time))
		{
			s = Extract(time, '[0-9]');
			time = Number(s);
		}
		else s = time.toString();
		var cb = s.length;
		var str='';
		if (Webcrea.IsEmpty(fmt))
		{
			if (cb <= 4) str = Webcrea.AddZero(floor(time/100, 0),2) + ':' + Webcrea.AddZero(time%100,2);
			else str = Webcrea.AddZero(floor(time/10000, 0),2) + ':' + Webcrea.AddZero(floor(time/100, 0)%100,2) + ':' + Webcrea.AddZero(time%100,2);
		}
		else
		{
			var hh = floor(time/10000, 0);
			var mm = floor(time/100, 0) % 100;
			var ss = time % 100;
			for (var i=0; i<fmt.length; i++)
			{
				var c = ToUpper(fmt[i]);
				if (c=='H'||c=='M'||c=='S')
				{
					var n = 1;
					for (++i; i<fmt.length; i++)
					{
						if (ToUpper(fmt[i]) != c) break;
						n++;
					}
					s = Webcrea.AddZero(c=='H' ? hh : c=='M' ? mm : ss,2);
					str += s;
					i--;
					continue;
				}
				str += fmt[i];
			}
		}
		return str;
	},
	this.ToHangul = function(sNum, sUnt, number, type)
	{
		var bMinus = false;
		if (number < 0.0)
		{
			bMinus = true;
			number *= -1.0;
		}
		var cb = 1;
		var cu = 4;

		var sValue='', str='';
		sValue = number;
		var j = 0, u = 0;
		for (var i=sValue.length-1; i>=0; i--, j+=cb)
		{
			var n = sValue[i] - '0';
			if (n > 0)
			{
				if (u > 0 && j % cu) str = sUnt.substr(u, cb) + str;
				if (j > 0) str = sUnt.substr(j, cb) + str;
				u = 0;
				if (type && n == 1 && j > 0)
				{
					if (i < 1 || j % cu) continue;
					if (!((i > 0 && sValue[i-1] > '0')
					    ||(i > 1 && sValue[i-2] > '0')
					    ||(i > 2 && sValue[i-3] > '0'))) continue;
				}
				str = sNum.substr(n*cb, cb) + str;
			}
			else if (j % cu == 0)
			{
				u = j;
			}
		}
		if (bMinus) str = '-' + str;
		return str;
	},
	this.DataSort = function(aField, dataObj, bDesc) {
		if(aField.length < 1) return;
		if(!dataObj) return;
		if(!dataObj.arrRows || dataObj.arrRows.length < 1) return;
		if(typeof dataObj.RemoveSum != 'undefined') dataObj.RemoveSum(1);
		if(dataObj.arrRows.length < 1) return;
		var aSortOpt = [];
		if(bDesc == undefined) bDesc = false;
		else if(Webcrea.IsArray(bDesc)) aSortOpt = bDesc;
		var arrField = dataObj.arrField;
		var arrRows = dataObj.arrRows;
		var arrRowInfo = dataObj.arrRowInfo;
		var arrData = dataObj.arrData;
		var arrStatus = dataObj.arrStatus;
		var arrStatus_b = dataObj.arrStatus_b;
		var arrMulti = dataObj.arrMulti;
		var arrRows_Org = null;
		var arrData_Org = null;
		if(dataObj.arrRows_Org)
		{
			arrRows_Org = dataObj.arrRows_Org;
			arrData_Org = dataObj.arrData_Org;
		}
		swap = function(i, j) {
			var tmp = arrRowsL[i];
			arrRowsL[i] = arrRowsL[j];
			arrRowsL[j] = tmp;
			if(arrRowInfoL)
			{
				var tmp1 = arrRowInfoL[i];
				arrRowInfoL[i] = arrRowInfoL[j];
				arrRowInfoL[j] = tmp1;
			}
			if(arrStatusL)
			{
				var tmp1 = arrStatusL[i];
				arrStatusL[i] = arrStatusL[j];
				arrStatusL[j] = tmp1;
			}
			if(arrStatusL_b)
			{
				var tmp2 = arrStatusL_b[i];
				arrStatusL_b[i] = arrStatusL_b[j];
				arrStatusL_b[j] = tmp2;
			}
			if(arrMultiL)
			{
				var tmp4 = arrMultiL[i];
				arrMultiL[i] = arrMultiL[j];
				arrMultiL[j] = tmp4;
			}
			if(arrRows_OrgL)
			{
				var tmp3 = arrRows_OrgL[i];
				arrRows_OrgL[i] = arrRows_OrgL[j];
				arrRows_OrgL[j] = tmp3;
			}
			for(var nCol=0; nCol<arrFieldL.length; nCol++)
			{
				var str = arrFieldL[nCol];
				tmp = arrDataL[str][i];
				arrDataL[str][i] = arrDataL[str][j];
				arrDataL[str][j] = tmp;

				if(arrStatusL)
				{
					tmp = arrStatusL[str][i];
					arrStatusL[str][i] = arrStatusL[str][j];
					arrStatusL[str][j] = tmp;
				}
				if(arrData_OrgL)
				{
					tmp = arrData_OrgL[str][i];
					arrData_OrgL[str][i] = arrData_OrgL[str][j];
					arrData_OrgL[str][j] = tmp;
				}
			}
		};
		partition = function(beg, end, pivot) {
			var piv=array[pivot];
			swap(pivot, end-1);
			var store=beg;
			for(var i=beg; i<end-1; ++i) {
				var data1 = array[i];
				var data2 = piv;
				if(fieldType)
				{
					data1 = Number(array[i]);
					data2 = Number(piv);
				}
				if(!bDesc)
				{
					if(data1<=data2) {
						swap(store, i);
						++store;
					}
				}
				else
				{
					if(data1>=data2) {
						swap(store, i);
						++store;
					}
				}
			}
			swap(end-1, store);
			return store;
		};
		qsort = function(beg, end) {
			if(end-1>beg) {
				var pivot=Math.floor((end+beg)/2);
				pivot=partition(beg, end, pivot);
				qsort(beg, pivot);
				qsort(pivot+1, end);
			}
		};

		var arrFieldL = arrField;
		for(var i=0; i<aField.length; i++)
		{
			if(aSortOpt.length>0) bDesc = aSortOpt[i];
			var arrRowsL = arrRows;
			var arrRowInfoL = arrRowInfo;
			var arrDataL = arrData;
			var arrStatusL = arrStatus;
			var arrStatusL_b = arrStatus_b;
			var arrMultiL = arrMulti;
			var arrRows_OrgL = arrRows_Org;
			var arrData_OrgL = arrData_Org;
			var sField = aField[i].trim();
			var nField = dataObj.GetColumn(sField);
			if(nField<0) continue;
			sField = dataObj.arrField[nField];
			var array = arrData[sField];
			if(!array)
			{
				aField.splice(i, 1);
				i--;
				continue;
			}
			var fieldType = dataObj.GetFieldType(sField);
			if(i>0)
			{
				var beg = 0;
				var sField_B = aField[i-1].trim();
				var array_B = arrData[sField_B];
				if(!array_B)
				{
					var nField_B = dataObj.GetColumn(sField_B);
					sField_B = dataObj.arrField[nField_B];
					array_B = arrData[sField_B];
				}
				if(!array_B) continue;
				for(var j=0; j<array_B.length; j++)
				{
					if(j>0 && array_B[j-1] != array_B[j])
					{
						if(j-1-beg<1)
						{
							beg++;
							continue;
						}
						qsort(beg, j);
						beg = j;
					}
					else if(j>0 && array_B[j-1] == array_B[j])
					{
						for(var k=i-1; k>=0; k--)
						{
							var sFieldP = aField[k].trim();
							var nFieldP = dataObj.GetColumn(sFieldP);
							sFieldP = dataObj.arrField[nFieldP];
							if(arrData[sFieldP][j-1] != arrData[sFieldP][j])
							{
								if(j-1-beg<1)
								{
									beg++;
									continue;
								}
								qsort(beg, j);
								beg = j;
								break;
							}
						}
					}
				}
				if(j-1-beg>0) qsort(beg, j);
			}
			else
			{
				var nEnd = array.length;
				if(typeof dataObj.IsSumRow != 'undefined' && dataObj.IsSumRow(nEnd-1)) nEnd--;
				qsort(0, nEnd);
			}
			arrRows = arrRowsL;
			arrRowInfo = arrRowInfoL;
			arrData = arrDataL;
			arrStatus = arrStatusL;
			arrStatus_b = arrStatusL_b;
			arrMulti = arrMultiL;
			arrRows_Org = arrRows_OrgL;
			arrData_Org = arrData_OrgL;
		}
	},
	this.MultiSort = function()
	{
		var arrTarget = arguments[0];
		var arrRel = arguments[1];
		var bDesc = arguments[2];
		var bString = arguments[3];
		if(arrTarget.length < 1) return;
		if(bDesc == undefined) bDesc = false;
		swap = function(i, j) {
			var tmp = arrTarget[i];
			arrTarget[i] = arrTarget[j];
			arrTarget[j] = tmp;
			for(var k=0; k<arrRel.length; k++)
			{
				var arr = arrRel[k];
				var tmp = arr[i];
				arr[i] = arr[j];
				arr[j] = tmp;
			}
		};
		partition = function(beg, end, pivot) {
			var piv=array[pivot];
			swap(pivot, end-1);
			var store=beg;
			for(var i=beg; i<end-1; ++i) {
				var data1 = array[i];
				var data2 = piv;
				if(!bString)
				{
					data1 = Number(array[i]);
					data2 = Number(piv);
				}
				if(!bDesc)
				{
					if(data1<=data2) {
						swap(store, i);
						++store;
					}
				}
				else
				{
					if(data1>=data2) {
						swap(store, i);
						++store;
					}
				}
			}
			swap(end-1, store);
			return store;
		};
		qsort = function(beg, end) {
			if(end-1>beg) {
				var pivot=Math.floor((end+beg)/2);
				pivot=partition(beg, end, pivot);
				qsort(beg, pivot);
				qsort(pivot+1, end);
			}
		};
		var array = arrTarget;
		qsort(0, array.length);
	},
/*mode : name(nodename, tagName), attribute(id, for)*/
	this.FindParentNode = function(node, mode, findName, bFirst)
	{
		var findNode;
		var nodeParent = node.parentNode;
		while(nodeParent)
		{
			var orgName = nodeParent.nodeName;
			if(orgName == '#document') break;
			var orgAttr = nodeParent.getAttribute(mode);
			if(orgName) orgName = orgName.toLowerCase();
			if(orgAttr) orgAttr = orgAttr.toLowerCase();
			if(findName) findName = findName.toLowerCase();

			if(mode == 'name' && orgName == findName)
			{
				findNode = nodeParent;
				if(!bFirst) break;
			}
			else if(nodeParent.attributes && orgAttr == findName)
			{
				findNode = nodeParent;
				if(!bFirst) break;
			}
			node = nodeParent;
			nodeParent = node.parentNode;
			if(nodeParent && nodeParent.tagName == 'HTML') break;
		}
		return findNode;
	},
	this.FindParentDiv = function(node, nMode)
	{
		var findNode;
		var nodeParent = node.parentNode;
		while(nodeParent)
		{
			var id = null;
			if(nodeParent.getAttribute) id = nodeParent.getAttribute('id');
			if(id && nodeParent.tagName == 'DIV')
			{
				if(nMode == 1)
				{
					if(id == 'MainDiv')
					{
						findNode = node;
						break;
					}
				}
				else
				{
					findNode = nodeParent;
					break;
				}
			}
			else if(nodeParent.tagName == 'DIV' && nMode == 2)
			{
				findNode = nodeParent;
				break;
			}
			node = nodeParent;
			nodeParent = node.parentNode;
			if(nodeParent && nodeParent.tagName == 'HTML') break;
		}
		return findNode;
	},
	this.UrlOpen = function()
	{
		var sUrl = '';
		for(var i=0; i<arguments.length; i++)
		{
			var param = arguments[i];
			var n = param.indexOf('.');
			if(Webcrea.IsString(param) && n>0)
			{
				var arr = param.split('.');
				if(arr.length == 2)
				{
					var obj = Webcrea.GetObjectById(arr[0]);
					if(obj) param = obj.GetValueByDisplay(arr[1]);
				}
			}
			if(!Webcrea.IsEmpty(sUrl)) sUrl += ',';
			sUrl = sUrl + "'" + param + "'";
		}
		sUrl = 'window.open(' + sUrl + ')';
		eval(sUrl);
	},
	this.GetDateMask = function()
	{
		if(!this.dateMask) this.dateMask = '/';
		return this.dateMask;
	},
	this.SetDaysOfMonth = function(year)
	{
		this.dom[2] = 28;
		if (year%400==0 || (year%4==0 && year%100!=0)) this.dom[2] = 29;
	},
	this.GetDaysOfMonth = function(date)
	{
		DateType = function(ymd)
		{
			if (ymd > 999999) return 'dtYMD';
			if (ymd >   9999) return 'dtYM';
			if (ymd >     99) return 'dtMD';
			return 'dtNone';
		};

		var dt = DateType(date);
		var ym = dt=='dtYMD' ? floor(date/100, 0) : dt=='dtYM' ? date : 0;
		var yy = floor(ym/100, 0);
		var mm = ym % 100;
		if (0 < mm && mm < 13)
		{
			Webcrea.SetDaysOfMonth(yy);
			return Webcrea.dom[mm];
		}
		return 0;
	},
	this.GetDayOfWeek = function(date, nDef)
	{
		return DayOfWeek(date);
	},
	this.GetDayName = function(day, bEnglish)
	{
		if (day < 0 || day > 6) return '';
		if (bEnglish) return Webcrea.dowe[day];
		var sName = Webcrea.LoadString('idsDayName');
		var i = (day - 1);
		if (i < 0) i = 6;
		return sName[i];
	},
	this.GetMonthName = function(mm)
	{
		if (0 < mm && mm < 13) return Webcrea.mon[mm];
		return '';
	},
	this.GetHundred = function(val)
	{
		var str='';
		if (val < 1 || val > 999) return str;
		if (val > 99)
		{
			str = Webcrea.szDigit1[floor(val/100,0)];
			str += ' Hundred';
			val %= 100;
			if (!val) return str;
			str += ' ';
		}
		if (val < 10) str += Webcrea.szDigit1[val];
		else if (val < 20) str += Webcrea.szDigit2[val-10];
		else
		{
			str += Webcrea.szDigit3[floor(val/10,0)];
			if (val % 10)
			{
				str += '-';
				str += Webcrea.szDigit1[val%10];
			}
		}
		return str;
	},
	this.GetMDIPane = function(str)
	{
		var arr = ['mainpane','toppane','leftpane','rightpane','bottompane','tabcontrol','nextmdi','prevmdi'];
		return arr.isearch(str);
	},
	this.SpanWorkDay = function()
	{
		var startdate = arguments[0];
		var enddate = arguments[1];
		var bSaturday = arguments[2];
		return SpanDay(startdate, enddate, bSaturday?2:1);
	},
	this.SessionStorageClear = function()
	{
		var sKey = arguments[0];
		var arrSessionStorage = Webcrea.SessionStorageCopy();
		for( var i=0; i<arrSessionStorage.length; i++)
		{
			var objSessionStorage = arrSessionStorage[i];
			var key = objSessionStorage.key;
			var value = objSessionStorage.value;
			if(!Webcrea.IsEmpty(value) && !Webcrea.IsNumber(value)) value = Base64.decode(value);
			var n = key.indexOf(Webcrea.webcreaVal + sKey + '.');
			if(n!=0) continue;
			var sVal = key.substr(n+Webcrea.webcreaVal.length+sKey.length+1);
			if(sKey == 'App') App.SetValue(sVal, value);
			window.sessionStorage.removeItem(key);
		}
		arrSessionStorage = null;
	},
	this.SessionStorageCopy = function()
	{
		var arrSessionStorage = [];
		for(var i=0; i<window.sessionStorage.length; i++)
		{
			var key = window.sessionStorage.key(i);
			var value = window.sessionStorage.getItem(key);
			var objSessionStorage = {};
			objSessionStorage.key = key;
			objSessionStorage.value = value;
			arrSessionStorage[arrSessionStorage.length] = objSessionStorage;
		}
		return arrSessionStorage;
	},
	this.SetAppShare = function()
	{
		if(!this.bClosed) Webcrea.SessionStorageClear('App');
		try{
			if(window.opener)
			{
				var objApp=null;
				if(window.opener.parent && window.opener.parent._my_FileMDI)
				{
					if(window.opener.parent.App.arrApp.length>0) objApp = window.opener.parent.App;
				}
				if(!objApp && window.opener.App) objApp = window.opener.App;
				if(objApp)
				{
					for(var i=0; i<objApp.arrApp.length; i++)
					{
						var id = objApp.arrApp[i];
						var value = objApp.GetValue(id);
						App.SetValue(id, value);
					}
				}
			}
			else if(window.parent)
			{
				var objApp=null;
				if(window.parent.parent && window.parent.parent._my_FileMDI)
				{
					if(window.parent.parent.App.arrApp.length>0) objApp = window.parent.parent.App;
				}
				if(!objApp && window.parent.App) objApp = window.parent.App;
				if(objApp)
				{
					for(var i=0; i<objApp.arrApp.length; i++)
					{
						var id = objApp.arrApp[i];
						var value = objApp.GetValue(id);
						App.SetValue(id, value);
					}
				}
			}
		}catch(e) {}
	},
	this.SetCrossDomain = function()
	{
		if(!WebcreaInfo.bCrossDomain) return;
		var sDomain = this.Host();
		var n = sDomain.indexOf('http://');
		if(n>=0) sDomain = sDomain.substr(n+7);
		n = sDomain.indexOf('https://');
		if(n>=0) sDomain = sDomain.substr(n+8);
		n = sDomain.indexOf('/');
		if(n>0) sDomain = sDomain.substr(0, n);
		n = sDomain.indexOf(':');
		if(n>0) sDomain = sDomain.substr(0, n);
		n = sDomain.indexOf('.');
		if(n>0) sDomain = sDomain.substr(n+1);
		if(!Webcrea.IsEmpty(WebcreaInfo.crossDomain)) sDomain = WebcreaInfo.crossDomain;
		if(sDomain.iEquals('localhost') || sDomain.iEquals('127.0.0.1')) return;
		try{
			document.domain = sDomain;
			Webcrea.layoutXml.domain = sDomain;
		}catch(e){Webcrea.Trace(e.stack);}
	},
	this.SetEx = function(param)
	{
		var arr = Webcrea.Split(param, '=');
		if(arr.length < 1) return;
		var sValue = '';
		if(arr.length>1) sValue = arr[1].trim();
		var bVal = false;
		if(Webcrea.IsQuote(sValue)) sValue = Webcrea.RemoveQuote(sValue);
		else if(Webcrea.IsNumber(sValue)) sValue = Webcrea.NumberReDef(sValue);
		else bVal = true;
		var sVal = arr[0].trim();
		var arrVal = sVal.split('.');
		if(!Webcrea.IsEmpty(sValue) && !Webcrea.IsNumber(sValue))
		{
			var arrValue = sValue.split('.');
			if(arrValue.length>1)
			{
				var sMothod='';
				for(var i=0; i<arrValue.length; i++) sMothod += '["' + arrValue[i] + '"]';
				sMothod = eval('window' + sMothod);
				if((typeof sMothod).toLowerCase() == 'undefined') sValue = '';
				else sValue = sMothod;
			}
			else
			{
				var n = sValue.indexOf('(');
				var n1 = sValue.indexOf(')');
				if(n>0 && n1>n)
				{
					var sFunc = sValue.substr(0, n);
					if(Webcrea.IsFunction(window[sFunc])) sValue = eval(sValue);
				}
				else if(bVal && window[sValue]) sValue = eval(sValue);
			}
		}
		if(arrVal.length>1 && arrVal[0].toLowerCase()=='app')
		{
			if(Webcrea.IsEmpty(App.GetValue(arrVal[1]))) App.SetValue(arrVal[1], sValue);
		}
		else if(Webcrea.IsEmpty(window[sVal])) Webcrea.DynamicVal(sVal, sValue);
	},
	this.SetFrameCSS = function()
	{
	},
	this.SetPopupFocus = function()
	{
		if(typeof _my_Popup != 'undefined' && _my_Popup) _my_Popup.focus();
	},
	this.SetProfile = function()
	{
		if(arguments.length<2) return;
		var ___param = {};
		___param.entry = arguments[0];
		___param.data = arguments[1];
		var str = ___param.entry.toLowerCase();
		var n = str.indexOf('server.');
		if(n>=0) ___param.entry = ___param.entry.substr(7, entry.length-1);
		localStorage[___param.entry] = ___param.data;
	},
	this.Profile = function()
	{
		if(arguments.length<1) return;
		var ___param = {};
		___param.entry = arguments[0];
		var str = ___param.entry.toLowerCase();
		var n = str.indexOf('server.');
		if(n>=0) ___param.entry = ___param.entry.substr(7, entry.length-1);
		var sRet = localStorage[___param.entry];
		if(Webcrea.IsEmpty(sRet)) sRet = Webcrea.LoadString(___param.entry);
		return sRet;
	},
	this.SetTitle = function(param)
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sObj = arr[i];
			sObj = sObj.trim();
			var obj = Webcrea.GetObjectById(sObj);
			if(obj && (typeof obj.Refresh != 'undefined')) obj.SetTitle();
		}
	},
	this.SetTitleCommon = function(node, currObj)
	{
		var childNodes = node.childNodes;
		for(var i=0; i < childNodes.length; i++) {
			childNode = childNodes[i];
			if(!childNode) break;
			if (childNode.nodeName == 'xml') continue;
			if (childNode.nodeName == '#text') continue;
			if (childNode.nodeName == '#comment') continue;
			else if(childNode.nodeName.toLowerCase() == 'span') {
				var title = childNode.getAttribute('subject');
				if(Webcrea.IsEmpty(title)) continue;
				title = title.rtrim();
				if(title && title.length > 1)
				{
					if(title[0]==':' || title[0]=='@')
					{
						var bSvrLang = (title[0]=='@');
						title = title.substr(1, title.length);
						var s = '';
						if(bSvrLang)
						{
							var titleOrg = title;
							title = 'Title.' + title;
							s = Webcrea.LoadString(title);
							if(Webcrea.IsEmpty(s)) s = titleOrg;
						}
						else s = window[title];
						if(!Webcrea.IsNull(s) && !Webcrea.IsNumberType(s))
						{
                            if(s.indexOf("\\r\\n")>=0) s = Webcrea.ReplaceAll(s, "\\r\\n", "\r\n");
                            else if(s.indexOf("\\n")>=0) s = Webcrea.ReplaceAll(s, "\\n", "\n");
                            else if(s.indexOf("\\r")>=0) s = Webcrea.ReplaceAll(s, "\\r", "\r");
                            childNode.innerText = s;
						}
						else childNode.innerHTML='&nbsp;';
					}
				}
			}
			else if((childNode.nodeName.toLowerCase() == 'input' || childNode.nodeName.toLowerCase() == 'button') && (currObj.IsSortBtnCell(childNode) || (currObj.IsForm() && childNode.type == 'button')))
			{
				var title = childNode.getAttribute('subject');
				if(Webcrea.IsEmpty(title)) continue;
				title = title.trim();
				if(title && title.length > 1)
				{
					if(title[0]==':' || title[0]=='@')
					{
						var bSvrLang = (title[0]=='@');
						title = title.substr(1, title.length);
						var s = '';
						if(bSvrLang)
						{
							var titleOrg = title;
							title = 'Title.' + title;
							s = Webcrea.LoadString(title);
							if(Webcrea.IsEmpty(s)) s = titleOrg;
						}
						else s = window[title];
						if(!Webcrea.IsNull(s)) childNode.value = s;
						else childNode.value = '';
						if(childNode.nodeName.toLowerCase() == 'button')
						{
							if(!Webcrea.IsNull(s)) childNode.innerText = s;
							else childNode.innerText = '';
						}
					}
				}
			}
			this.SetTitleCommon(childNode, currObj);
		}
	},
	this.Show = function(param)
	{
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sParam = arr[i];
			sParam = sParam.trim();
			var nPane = Webcrea.GetMDIPane(sParam);
			if(nPane>=0)
			{
				try {
					if(parent && parent.Webcrea.IsMDI())
					{
						if(nPane == 6) parent._my_FileMDI.TabNext();
						else if(nPane == 7) parent._my_FileMDI.TabPrev();
						else parent._my_FileMDI.PaneShow(nPane);
					}
				} catch(e) {}
			}
			else
			{
				var arrSub = sParam.split('.');
				var cellId = '';
				if(arrSub.length == 2) cellId = arrSub[1];
				var sObj = arrSub[0];
				var obj = Webcrea.GetObjectById(sObj);
				if(obj)
				{
					obj.Show(cellId);
					if(Webcrea.IE() && typeof obj.IsHtml != 'undefined' && obj.IsHtml())
					{
						var ifrm = Webcrea.FindNode(obj.objDivPos, 'name', 'IFRAME');
						Webcrea.DisplayIFrameByIE(ifrm);
					}
				}
			}
		}
	},
	this.PostData = function()
	{
		var ___param = {};
		___param.url = arguments[0];
		___param.arrParam = arguments[1];
		___param.arrValue = arguments[2];
		___param.id = arguments[3];
		___param.charSet = arguments[4];
        var width = arguments[5];
        var height = arguments[6];
        var xPos = arguments[7];
        var yPos = arguments[8];
        var popup = false;
		if(Webcrea.IsEmpty(___param.url)) return;
		if(Webcrea.IsEmpty(___param.arrParam)) return;
		if(___param.arrParam.length<1) return;
		if(Webcrea.IsEmpty(___param.arrValue)) return;
		if(___param.arrValue.length<1) return;
		var target = ___param.id;
		if(width>0 && height>0)
		{
			target = '_my_' + target;
			var pos ='';
			var size = ',width=' + width + 'px,height=' + height + 'px';
			if(xPos>0 && yPos>0) pos = ',left=' + xPos + 'px,top=' + yPos + 'px';
			window.open('', target, 'location=no' + pos + size + ',resizable=yes,scrollbars=yes');
			popup = true;
		}

		var formObj = document.createElement("form");
		formObj.setAttribute("method", "post");
		formObj.setAttribute("action", ___param.url);
		if(!Webcrea.IsEmpty(___param.id))
		{
			if(!popup) target = target + 'Frame';
			formObj.setAttribute("target", target);
		}
		if(Webcrea.IsEmpty(___param.charSet)) ___param.charSet = 'utf-8';
		formObj.acceptCharset = ___param.charSet;
		if(Webcrea.IE()) document.charset = ___param.charSet;
		for(var i=0; i<___param.arrParam.length; i++)
		{
			var sParam = ___param.arrParam[i];
			var sValue = ___param.arrValue[i];
			var paramObj = document.createElement("input");
			paramObj.setAttribute("type", "hidden");
			paramObj.setAttribute("name", sParam);
			paramObj.setAttribute("value", sValue);
			formObj.appendChild(paramObj);
			paramObj = null;
		}
		try{
			document.body.appendChild(formObj);
			formObj.submit();
			document.body.removeChild(formObj);
		}catch(e){
			document.appendChild(formObj);
			formObj.submit();
			document.removeChild(formObj);
		}
        formObj = null;
	},
	this.PreventDefault = function()
	{
		var evt = arguments[0];
		if(!evt) evt = window.event;
		evt.preventDefault?evt.preventDefault():evt.returnValue=false;
	},
	this.Print = function()
	{
		var param = arguments[0];
		if(!Webcrea.IsEmpty(param))
		{
			var printDiv = document.createElement('div');
			printDiv.setAttribute('id', 'printDiv');
			var style = 'display:block;overflow:visible;left:0px;top:0px;width:auto;height:auto;background-color:#ffffff;opacity:1;z-index:9999;';
			printDiv.setAttribute('style', style);
			document.body.appendChild(printDiv);
			var obj = Webcrea.GetObjectById(param);
			if(obj && obj.objDivPos)
			{
				if(Webcrea.IsGroupBox(obj))
				{
					var nTopInit = 0;
					var nLeftInit = 0;
					var arr = obj.GetChild();
					for(var i=0; i<arr.length; i++)
					{
						var subObj = Webcrea.GetObjectById(arr[i]);
						if(subObj)
						{
							var posDiv = subObj.objGDivPos?subObj.objGDivPos:subObj.objDivPos;
							var nCurrTop = Webcrea.GetTop(posDiv);
							var nCurrLeft = Webcrea.GetLeft(posDiv);
							if(nCurrTop<0) nCurrTop=0;
							if(nCurrLeft<0) nCurrLeft=0;
							if(nTopInit ==0 || nTopInit>nCurrTop) nTopInit = nCurrTop;
							if(nLeftInit == 0 || nLeftInit>nCurrLeft) nLeftInit = nCurrLeft;
						}
					}
					for(var i=0; i<arr.length; i++)
					{
						var subObj = Webcrea.GetObjectById(arr[i]);
						if(subObj)
						{
							var printId = subObj.divPos + 'Print';
							var currDiv = document.createElement('div');
							currDiv.setAttribute('id', printId);
							currDiv.style.position = 'absolute';
							var posDiv = subObj.objGDivPos?subObj.objGDivPos:subObj.objDivPos;
							var nCurrHeight = Webcrea.GetHeight(posDiv, true);
							var nCurrWidth = Webcrea.GetWidth(posDiv, true);
							var nCurrTop = Webcrea.GetTop(posDiv);
							var nCurrLeft = Webcrea.GetLeft(posDiv);
							if(nCurrTop<0) nCurrTop=0;
							if(nCurrLeft<0) nCurrLeft=0;
							nCurrTop -= nTopInit;
							nCurrLeft -= nLeftInit;
							if(nCurrTop<0) nCurrTop=0;
							if(nCurrLeft<0) nCurrLeft=0;
							currDiv.style.top = nCurrTop + 'px';
							currDiv.style.left = nCurrLeft + 'px';
							currDiv.style.height = nCurrHeight + 'px';
							currDiv.style.width = nCurrWidth + 'px';
							var currHtml = Webcrea.MakePrintHtml(subObj.objDivPos);
							if(Webcrea.IsEmpty(currHtml)) currHtml = subObj.objDivPos.outerHTML;
							currDiv.innerHTML = currHtml;
							printDiv.appendChild(currDiv);
							if(Webcrea.IsDivDraw(subObj) || Webcrea.IsEllipseDraw(subObj))
							{
								currDiv.style.backgroundColor = subObj.drawInfo.color;
								currDiv.style.border = subObj.drawInfo.lineWidth + 'px solid';
								currDiv.style.borderColor = subObj.drawInfo.lineColor;
								if(subObj.objType == 2) currDiv.style.borderRadius = '100%';
								else currDiv.style.borderRadius = subObj.drawInfo.rect;
							}
							else if(Webcrea.IsCanvasDraw(subObj))
							{
								var canvasObj = new DrawObject(subObj.divPage, printId , 0);
								canvasObj.drawInfo = subObj.drawInfo;
								canvasObj.OnDraw();
							}
						}
					}
				}
				else
				{
					var printId = obj.divPos + 'Print';
					var objPrint = {};
					objPrint.currObj = obj;
					objPrint.arrHtml = [];
					objPrint.nMaxHeight = 980;
					objPrint.currTableHtml = '';
					objPrint.currHeadHtml = '';
					objPrint.currHtml = '';
					objPrint.nCurrHeight = 0;
					var currHtml = Webcrea.MakePrintHtml(obj.objDivPos, objPrint);
					if(Webcrea.IsGrid(obj) && objPrint.nMaxHeight>0)
					{
						for(var i=0; i<objPrint.arrHtml.length; i++)
						{
							var currDiv = document.createElement('div');
							currDiv.setAttribute('id', printId + i);
							currDiv.setAttribute('class', '_my_page-divide');
							currDiv.innerHTML = objPrint.arrHtml[i];
							printDiv.appendChild(currDiv);
						}
					}
					else
					{
						var currDiv = document.createElement('div');
						currDiv.setAttribute('id', printId);
						if(Webcrea.IsEmpty(currHtml)) currHtml = obj.objDivPos.outerHTML;
						currDiv.innerHTML = currHtml;
						printDiv.appendChild(currDiv);
						if(Webcrea.IsDivDraw(obj) || Webcrea.IsEllipseDraw(obj))
						{
							var posDiv = obj.objGDivPos?obj.objGDivPos:obj.objDivPos;
							var nCurrHeight = Webcrea.GetHeight(posDiv, true);
							var nCurrWidth = Webcrea.GetWidth(posDiv, true);
							currDiv.style.height = nCurrHeight + 'px';
							currDiv.style.width = nCurrWidth + 'px';
							currDiv.style.backgroundColor = obj.drawInfo.color;
							currDiv.style.border = obj.drawInfo.lineWidth + 'px solid';
							currDiv.style.borderColor = obj.drawInfo.lineColor;
							if(obj.objType == 2) currDiv.style.borderRadius = '100%';
							else currDiv.style.borderRadius = obj.drawInfo.rect;
						}
						else if(Webcrea.IsCanvasDraw(obj))
						{
							var canvasObj = new DrawObject(obj.divPage, printId , 0);
							canvasObj.drawInfo = obj.drawInfo;
							canvasObj.OnDraw();
						}
					}
				}
			}
			var bResize_b = _my_File.bResize;
			_my_File.bResize = false;
			_my_File.objWindow.style.display = 'none';
			window.print();
			_my_File.objWindow.style.display = 'block';
			document.body.removeChild(printDiv);
			_my_File.bResize = bResize_b;
		}
		else window.print();
	},
	this.Cursor = function(type, currNode)
	{
		type = type.toLowerCase();
		if(type == 'hand') type = 'pointer';
		else if(type == 'arrow') type = 'default';
		if(currNode && currNode.style) currNode.style.cursor = type;
	},
	this.FontSize = function(size, currNode)
	{
		if(currNode) currNode.style.fontSize = size + 'pt';
	},
	this.FontType = function(type, currNode, bOut)
	{
		type = type.toLowerCase();
		if(Webcrea.IsEmpty(type)) type = 'normal';
		if(type == 'underline')
		{
			if(!bOut) currNode.style.textDecoration = type;
			else currNode.style.textDecoration = '';
		}
		else if(type == 'bold')
		{
			if(!bOut) currNode.style.fontWeight = type;
			else currNode.style.fontWeight = '';
		}
		else if(type == 'italic')
		{
			if(!bOut) currNode.style.fontStyle = type;
			else currNode.style.fontStyle = '';
		}
		else if(type == 'normal')
		{
			currNode.style.textDecoration = '';
			currNode.style.fontWeight = '';
			currNode.style.fontStyle = '';
		}
		else if(type == 'strikeout')
		{
			if(!bOut) currNode.style.textDecoration = 'line-through';
			else currNode.style.textDecoration = '';
		}
	},
	this.Property = function(title, currNode, bOut)
	{
		if(!bOut) currNode.setAttribute('orgTitle', currNode.title);
		else
		{
			title = currNode.getAttribute('orgTitle');
			currNode.removeAttribute('orgTitle');
		}
		currNode.title = title;
	},
	this.TextColor = function(color, currNode, bOut)
	{
		if(!bOut) currNode.setAttribute('orgColor', currNode.style.color);
		else
		{
			color = currNode.getAttribute('orgColor');
			currNode.removeAttribute('orgColor');
		}
		currNode.style.color = color;
	},
	this.ParamToMSV = function(param)
	{
		var obj;
		var sRetName = '';
		var sRetValue = '';
		var bRecordSet = false;
		var arr = param.split(',');
		for(var i=0; i<arr.length; i++)
		{
			var sValue = '';
			var sParam = arr[i];
			sParam = sParam.trim();
			if(sParam == 'RecordSet')
			{
				bRecordSet = true;
				continue;
			}

			var arrObj = sParam.split(' ');
			for(var j=0; j<arrObj.length; j++)
			{
				var sObj = arrObj[j];
				var sCellId = '';
				var sVal = '';
				var n = sObj.indexOf('.');
				if(n>0)
				{
					sCellId = sObj.substr(n+1, sObj.length-n);
					sObj = sObj.substr(0, n);
					if(sObj == 'App') obj = App;
					else obj = Webcrea.GetObjectById(sObj);
				}
				else
				{
					var currObj = Webcrea.GetObjectById(sObj);
					if(!currObj)
					{
						if(window[sObj]) sVal = sObj;
						else if(obj && obj.IsColumn(sObj)) sCellId = sObj;
						else sVal = sObj;
					}
					else obj = currObj;
				}
				if(!Webcrea.IsEmpty(sVal))
				{
					var sValue;
					if(Webcrea.IsFuncInnerVal(sVal)) sValue = Webcrea.GetFuncInnerVal(sVal);
					else sValue = window[sVal];
					if(Webcrea.IsNull(sValue)) sValue = '';
					if(Webcrea.IsEmpty(sRetName))
					{
						sRetName = sVal;
						sRetValue = sValue;
					}
					else
					{
						sRetName = sRetName + Webcrea.msvSpColType + sVal;
						sRetValue = sRetValue + Webcrea.msvSpColType + sValue;
					}
				}
				else if(obj)
				{
					if(Webcrea.IsEmpty(sCellId))
					{
						if(!bRecordSet || !obj.arrRows)
						{
							if(!obj.objTable) continue;
							var ChildValue = function(cell)
							{
								var childNodes = cell.childNodes;
								for(var k=0; k<childNodes.length; k++)
								{
									var child = childNodes[k];
									if(!child) continue;
									var bMultiLine = false;
									if(child.nodeName == 'DIV' && child.getAttribute('role') == 'multiline') bMultiLine = true;
									if(child.nodeName == 'DIV' && !bMultiLine) return ChildValue(child);
									else if(!bMultiLine && child.nodeName != 'INPUT' && child.nodeName != 'TEXTAREA' && child.nodeName != 'SELECT') continue;
									sCellId = obj.GetCellId(child);
									if(Webcrea.IsEmpty(sCellId)) continue;
									var sValue = obj.GetValueByDisplay(sCellId);
									if(Webcrea.IsEmpty(sRetName))
									{
										sRetName = sCellId;
										sRetValue = sValue;
									}
									else
									{
										sRetName = sRetName + Webcrea.msvSpColType + sCellId;
										sRetValue = sRetValue + Webcrea.msvSpColType + sValue;
									}
									if(obj.IsMulti(sCellId)) return;
								}
							};
							var EditTdValue = function(cell)
							{
								var sCellId = obj.GetCellId(cell);
								if(!Webcrea.IsEmpty(sCellId))
								{
									var sValue = obj.GetValueByDisplay(sCellId);
									if(Webcrea.IsEmpty(sRetName))
									{
										sRetName = sCellId;
										sRetValue = sValue;
									}
									else
									{
										sRetName = sRetName + Webcrea.msvSpColType + sCellId;
										sRetValue = sRetValue + Webcrea.msvSpColType + sValue;
									}
								}
							};
							if(obj.IsGrid())
							{
								var tr = obj.objTable.rows[obj.currRowIndex + obj.nHeader];
								var trChildNodes = tr.childNodes;
								for(var j=0; j<trChildNodes.length; j++)
								{
									var td = trChildNodes[j];
									if (td.nodeName == 'TD')
									{
										if(Webcrea.IsEditTd(td)) EditTdValue(td);
										else ChildValue(td);
									}
								}
							}
							else
							{
								for(var k=0; k<obj.objTable.rows.length; k++)
								{
									var tr = obj.objTable.rows[k];
									var trChildNodes = tr.childNodes;
									for(var l=0; l<trChildNodes.length; l++)
									{
										var td = trChildNodes[l];
										if (td.nodeName == 'TD')
										{
											if(Webcrea.IsEditTd(td)) EditTdValue(td);
											else ChildValue(td);
										}
									}
								}
							}
						}
						else
						{
							for(var k=0; k<obj.arrField.length; k++)
							{
								sCellId = obj.arrField[k];
								if(Webcrea.IsSeqField(obj, sCellId)) continue;
								var sValue = obj.GetValue(sCellId);
								if(Webcrea.IsEmpty(sRetName))
								{
									sRetName = sCellId;
									sRetValue = sValue;
								}
								else
								{
									sRetName = sRetName + Webcrea.msvSpColType + sCellId;
									sRetValue = sRetValue + Webcrea.msvSpColType + sValue;
								}
							}
						}
					}
					else
					{
						var sValue = obj.GetValue(sCellId);
						if(Webcrea.IsEmpty(sRetName))
						{
							sRetName = sCellId;
							sRetValue = sValue;
						}
						else
						{
							sRetName = sRetName + Webcrea.msvSpColType + sCellId;
							sRetValue = sRetValue + Webcrea.msvSpColType + sValue;
						}
					}
				}
			}
		}
		return sRetName + Webcrea.msvSpRowType + sRetValue;
	},
	this.ToJSON = function()
	{
		let sObjId = arguments[0];
		let sColumns = arguments[1];
		if(Webcrea.IsEmpty(sObjId)) return;
		let obj = Webcrea.GetObjectById(sObjId);
		if(!obj) return;
		let arrColumns = null;
		if(!Webcrea.IsEmpty(sColumns))
		{
			if(Webcrea.IsArray(sColumns)) arrColumns = sColumns;
			else arrColumns = sColumns.split(',');
		}
		let sDataAll = '';
		let nRow = obj.pos_B;
		if(nRow<0) nRow = 0;
		for(let i=nRow; i<obj.arrRows.length; i++)
		{
			let sRow='';
			for(let j=0; j<obj.arrField.length; j++)
			{
				let field = obj.arrField[j];
				if(arrColumns && arrColumns.length>0 && arrColumns.isearch(field) < 0) continue;
				if(field == obj.dataSeqField) continue;
				let data = obj.arrData[field][i];
				if(obj.arrFieldType[j] ==1 && Webcrea.IsNumber(data)) data=data;
				else data= '"'+ data + '"';
				if(Webcrea.IsEmpty(sRow)) sRow ='"'+ field + '":' + data;
				else sRow = sRow + ',"' + field + '":' + data;
			}
			if(Webcrea.IsEmpty(sDataAll)) sDataAll = '{' + sRow + '}';
			else sDataAll = sDataAll + ',{' + sRow + '}';
		}
		sDataAll = '[' + sDataAll + ']';
		let jsonData = JSON.parse(sDataAll);
		return jsonData;
	},
	this.ToSV = function(obj, param, mode)
	{
		if(!obj) return '';
		if(!obj.arrRows) return '';

		var bXml = false;
		var sRet = '';
		var sRetName = '';
		var sRetValue = '';
		var spTab = '\t';
		var spReturn = '\r\n';
		var sRootNode = 'data';
		var sRowNode = 'row';
		var spRow = Webcrea.msvSpRowType;
		var spCol = Webcrea.msvSpColType;
		if(mode == undefined) mode=0;
		if(mode) 
		{
			spRow='\r\n';
			if(mode == 1) spCol='\t';
			else if(mode == 2) spCol=',';
			else if(mode == 3) bXml=true;
		}

		var bAll = false;
		var bSelected = false;
		var bModified = false;
		var bStatus = false;
		var bExclude = false;
		var bRowNode = false;
		var arrExclude = [];
		if(Webcrea.IsEmpty(param)) bAll = true;
		else
		{
			var arr = param.split(',');
			for(var i=0; i<arr.length; i++)
			{
				var sParam = arr[i];
				sParam = sParam.trim();
				if(sParam.toLowerCase() == 'tsv' || sParam.toLowerCase() == 'csv')
				{
					bXml = false;
					if(sParam.toLowerCase() == 'tsv') spCol='\t';
					else if(sParam.toLowerCase() == 'csv') spCol=',';
				}
				else if(sParam.toLowerCase() == 'modifiedonly')
				{
					bModified = true;
					bStatus = true;
				}
				else if(sParam.toLowerCase() == 'selectonly') bSelected = true;
				else if(sParam.toLowerCase() == 'status') bStatus = true;
				else if(sParam.toLowerCase() == 'rownode') bRowNode = true;
				else if(sParam.indexOf('exclude')>=0)
				{
					n = sParam.indexOf('=');
					if(n>0) sParam = sParam.substr(n+1, sParam.length-n);
					sParam = sParam.trim();
					arrExclude = sParam.split(' ');
					bExclude = true;
				}
				else if(sParam.indexOf('root')>=0)
				{
					n = sParam.indexOf('=');
					if(n<0) continue;
					sRootNode = sParam.substr(n+1, sParam.length-n);
					sRootNode = sRootNode.trim();
					sRootNode = Webcrea.RemoveQuote(sRootNode);
				}
				else if(sParam.indexOf('row')>=0)
				{
					n = sParam.indexOf('=');
					if(n<0) continue;
					sRowNode = sParam.substr(n+1, sParam.length-n);
					sRowNode = sRowNode.trim();
					sRowNode = Webcrea.RemoveQuote(sRowNode);
				}
			}
		}
		if(!bAll && !bModified && !bSelected) bAll = true;
		var nRow = (obj.IsGrid() || obj.IsProc())?obj.arrRows.length:1;
		if(obj.IsGrid()) bRowNode = true;
		var bHeader = false;
		for(var i=0; i<nRow; i++)
		{
			var bFirstData = true;
			var sRowData = '';
			var status = obj.arrStatus[i];
			if(bSelected && (!obj.arrMulti || (obj.arrMulti && !obj.arrMulti[i]))) continue;
			for(var j=0; j<obj.arrField.length; j++)
			{
				var sField = obj.arrField[j];
				if(Webcrea.IsSeqField(obj, sField)) continue;
				var sData = obj.arrData[sField][i];

				var bSkip = false;
				for(k=0; k<arrExclude.length; k++)
				{
					var sExclude = arrExclude[k];
					if(sField.iEquals(sExclude))
					{
						bSkip = true;
						break;
					}
				}
				if(bSkip) continue;
				if(!bHeader && !bXml)
				{
					if(bStatus && Webcrea.IsEmpty(sRetName)) sRetName = '_status_';
					if(Webcrea.IsEmpty(sRetName)) sRetName = sField;
					else sRetName = sRetName + spCol + sField;
				}
				if(bAll || bSelected || (bModified && !Webcrea.IsEmpty(status)))
				{
					if(bXml)
					{
						var sp = spTab;
						if(bRowNode) sp += spTab;
						if(bStatus && Webcrea.IsEmpty(sRowData)) sRowData = sp + '<_status_>' + status + '</_status_>';
						if(Webcrea.IsEmpty(sRowData)) sRowData = sp + '<' + sField + '>' + sData + '</' + sField + '>';
						else sRowData = sRowData + spReturn + sp + '<' + sField + '>' + sData + '</' + sField + '>';
					}
					else
					{
						if(bStatus && Webcrea.IsEmpty(sRowData))
						{
							sRowData = status;
							bFirstData = false;
						}
						if(Webcrea.IsEmpty(sRowData) && bFirstData)
						{
							sRowData = sData;
							bFirstData = false;
						}
						else sRowData = sRowData + spCol + sData;
					}
				}
			}
			if(bAll || bSelected || (bModified && !Webcrea.IsEmpty(status)))
			{
				if(bXml)
				{
					if(bRowNode)
					{
						if(Webcrea.IsEmpty(sRetValue)) sRetValue = spTab + '<' + sRowNode + '>' + spReturn + sRowData + spReturn + spTab + '</' + sRowNode + '>';
						else sRetValue = sRetValue + spReturn + spTab + '<' + sRowNode + '>' + spReturn + sRowData + spReturn + spTab + '</' + sRowNode + '>';
					}
					else
					{
						if(Webcrea.IsEmpty(sRetValue)) sRetValue = sRowData;
						else sRetValue = sRetValue + spReturn + sRowData;
					}
				}
				else
				{
					if(Webcrea.IsEmpty(sRetValue)) sRetValue = sRowData;
					else sRetValue = sRetValue + spRow + sRowData;
				}
			}
			bHeader = true;
		}
		if(bXml)
		{
			if(!Webcrea.IsEmpty(sRetValue)) sRetValue += spReturn;
			sRet = '<?xml version="1.0" encoding="euc-kr" ?>' + spReturn + '<' + sRootNode + '>' + spReturn + sRetValue + '</' + sRootNode + '>';
		}
		else sRet = sRetName + spRow + sRetValue;
		return sRet;
	},
	this.ReturnParam = function(win)
	{
		var nFileVersion = Webcrea.GetCurrFileVersion();
		if(nFileVersion<7020181023004) Webcrea.OnSendParam(win);
		else Webcrea.OnReturnParam(win);
	},
	this.WorkDay = function()
	{
		var ymd = arguments[0];
		var day = arguments[1];
		if (!day) day = 1;
		var bSaturday = (day < -1 || day > 1);
		while (true)
		{
			var dow = Webcrea.GetDayOfWeek(ymd);
			if (dow == 0 || (bSaturday && dow == 6))
			{
				ymd = AddDay(ymd, day > 0 ? 1 : -1);
				continue;
			}
			if (!Webcrea.IsHoliday(ymd)) break;
			ymd = AddDay(ymd, day > 0 ? 1 : -1);
		}
		return ymd;
	}
};
