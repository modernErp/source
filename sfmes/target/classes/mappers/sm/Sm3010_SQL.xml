<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sfmes.sqlmap.sm">   
 
 
    <!-- 창고간재고이동기본조회 -->
    <select id="select_Sm3010_01" parameterType="LinkedHashMap" resultType="LinkedHashMap">
       
        SELECT  /*+ select_Sm3010_01 */
              CORP_C                                                       /* 회사코드        */
            , BZPL_C                                                       /* 사업장코드     */
            , MVE_DT                                                       /* 이동일자        */
            , MVE_SQNO                                                     /* 이동일련번호  */
            , SLP_NML_YN                                                   /* 전표정상여부  */
            , RLTR_DT                                                      /* 실거래일자     */
            , ACG_DT                                                       /* 회계일자        */
            , MVE_RSN_CNTN                                                 /* 이동사유내용  */
            , RMK_CNTN                                                     /* 비고내용        */
            , TR_BSN_DSC                                                   /* 거래업무구분코드 */
            , TR_SQNO                                                      /* 거래일련번호  */
            , FSRG_DTM                                                     /* 최초등록일시  */
            , FSRG_ID                                                      /* 최초등록자ID */
            , FSRG_ID                                 AS FSRG_NM           /* 최초등록자     */
            , LSCHG_DTM                                                    /* 최종변경일시  */
            , LSCHG_ID                                                     /* 최종변경자ID */
            , LSCHG_ID                                AS LSCHG_NM          /* 최종변경자     */
        FROM  TB_SM_M_STPL_MVE
        WHERE 1=1
        AND   CORP_C      = #{CORP_C}
        AND   BZPL_C      = #{BZPL_C}
        AND   SLP_NML_YN  = 'Y'
        
        <if test = "ST_DT != null and ST_DT != ''">
            <if test = "ED_DT != null and ED_DT != ''">
                 AND   MVE_DT      BETWEEN #{ST_DT} AND #{ED_DT}
            </if>
        </if>
        
        <if test = "MVE_DT != null and MVE_DT != ''">
            AND   MVE_DT      = #{MVE_DT}
        </if>
        
        <if test = "MVE_SQNO != null and MVE_SQNO != ''">
            AND   MVE_SQNO    = #{MVE_SQNO}
        </if>
        
        
        
        
    </select>    
    
    <!-- 창고간재고이동상세조회  -->
    <select id="select_Sm3010_02" parameterType="LinkedHashMap" resultType="LinkedHashMap">
        SELECT  /*+ select_Sm3010_02  */
                A.CORP_C                                                 /* 회사코드           */
            ,   A.BZPL_C                                                 /* 사업장코드        */
            ,   A.MVE_DT                                                 /* 이동일자           */
            ,   A.MVE_SQNO                                               /* 이동일련번호     */
            ,   A.MVE_DSQNO                                              /* 이동상세일련번호 */
            ,   A.GDS_C                                                  /* 물품코드           */
            ,   A.DLR_WHSE_C                                             /* 출고창고코드     */
            ,   (
                 SELECT C.WHSE_NM 
                 FROM   TB_CO_M_WHSE C 
                 WHERE  A.CORP_C     = C.CORP_C 
                 AND    A.BZPL_C     = C.BZPL_C 
                 AND    A.DLR_WHSE_C = C.WHSE_C
                 ) AS DLR_WHSE_NM                                        /* 출고창고명        */
            ,   A.STR_WHSE_C                                             /* 입고창고코드     */
            ,   (
                 SELECT C.WHSE_NM 
                 FROM   TB_CO_M_WHSE C 
                 WHERE  A.CORP_C     = C.CORP_C 
                 AND    A.BZPL_C     = C.BZPL_C 
                 AND    A.STR_WHSE_C = C.WHSE_C
                ) AS STR_WHSE_NM                                         /* 입고창고명        */
            ,   B.GDS_DTL_NM                                             /* 물품명상세        */
            ,   B.GDS_STD_NM                                             /* 물품규격명        */ 
            ,   B.UNT_C                            AS TR_UNT_C           /* 거래단위코드    */
            ,   B.TXT_DSC                                                /* 과세구분          */
            ,   B.GDS_NM                                                 /* 물품명              */
            ,   A.STDV_QT                                                /* 입출고수량        */
            ,   A.STDV_WT                                                /* 입출고중량        */
            ,   A.RMK_CNTN                                               /* 비고내용           */
            ,   A.FSRG_DTM                                               /* 최초등록일시     */
            ,   A.FSRG_ID                                                /* 최초등록자ID  */
            ,   A.FSRG_ID                          AS FSRG_NM            /* 최초등록자        */
            ,   A.LSCHG_DTM                                              /* 최종변경일시     */
            ,   A.LSCHG_ID                                               /* 최종변경자ID  */
            ,   A.LSCHG_ID                         AS LSCHG_NM           /* 최종변경자        */
            ,   A.DSTR_TERDT                                             /* 유통기한일자     */
        FROM    TB_SM_D_STPL_MVE            A
        LEFT OUTER JOIN TB_CO_M_GDS         B
        ON      A.CORP_C      = B.CORP_C
        AND     A.BZPL_C      = B.BZPL_C
        AND     A.GDS_C       = B.GDS_C
        WHERE   1=1
        AND     A.CORP_C      = #{CORP_C}
        AND     A.BZPL_C      = #{BZPL_C}
        AND     A.MVE_DT      = #{MVE_DT}
        AND     A.MVE_SQNO    = #{MVE_SQNO}
    </select>
    
    <!-- 창고간이동내역전표삭제 -->
    <update id="deleteSm3010" parameterType="linkedHashMap">
                
             UPDATE /*+ deleteSm3010 */      TB_SM_M_STPL_MVE
             SET    SLP_NML_YN    = 'N'
             ,      LSCHG_DTM     = GETDATE()
             ,      LSCHG_ID      = #{GUSRID}
             WHERE  CORP_C        = #{CORP_C}
             AND    BZPL_C        = #{BZPL_C}
             AND    MVE_DT        = #{MVE_DT}
             AND    MVE_SQNO      = #{MVE_SQNO}
             AND    SLP_NML_YN    = 'Y'
    </update>
     
    
    <!-- 창고간이동내역수정 기본--> 
    <update id="updateSm3010_M"  parameterType="linkedHashMap">
             UPDATE /*+ updateSm3010_M */   TB_SM_M_STPL_MVE
             SET    RLTR_DT       = #{RLTR_DT}
             ,      MVE_RSN_CNTN  = #{MVE_RSN_CNTN}
             ,      LSCHG_DTM     = GETDATE()
             ,      LSCHG_ID      = #{GUSRID}
             WHERE  CORP_C        = #{CORP_C}
             AND    BZPL_C        = #{BZPL_C}
             AND    MVE_DT        = #{MVE_DT}
             AND    MVE_SQNO      = #{MVE_SQNO}
             AND    SLP_NML_YN    = 'Y'
    </update>
    
    <!-- 창고간이동내역수정 상세--> 
    <update id="updateSm3010_D"  parameterType="linkedHashMap">
                
             UPDATE /*+ updateSm3010_D */     TB_SM_D_STPL_MVE
             SET    GDS_C       = #{GDS_C}
             ,      DLR_WHSE_C  = #{DLR_WHSE_C}
             ,      STR_WHSE_C  = #{STR_WHSE_C}
             ,      STDV_QT     = DBO.SF_GET_FLOAT(#{STDV_QT})
             ,      RMK_CNTN    = #{RMK_CNTN}
             ,      LSCHG_DTM   = GETDATE()
             ,      LSCHG_ID    = #{GUSRID}
             ,      DSTR_TERDT  = #{DSTR_TERDT}
             WHERE  CORP_C      = #{CORP_C}
             AND    BZPL_C      = #{BZPL_C}
             AND    MVE_DT      = #{MVE_DT}
             AND    MVE_SQNO    = #{MVE_SQNO}
             AND    MVE_DSQNO   = #{MVE_DSQNO}
    </update>
    
    
    <!-- 창고간이동내역등록 기본 -->
    <insert id="saveSm3010_M" parameterType="linkedHashMap">
            
         INSERT INTO /*+ saveSm3010_M */ TB_SM_M_STPL_MVE
                (
                     CORP_C
                 ,   BZPL_C
                 ,   MVE_DT
                 ,   MVE_SQNO
                 ,   SLP_NML_YN
                 ,   RLTR_DT
                 ,   ACG_DT
                 ,   MVE_RSN_CNTN
                 ,   RMK_CNTN
                 ,   TR_BSN_DSC
                 ,   TR_SQNO
                 ,   FSRG_DTM
                 ,   FSRG_ID
                 ,   LSCHG_DTM
                 ,   LSCHG_ID
                )
                VALUES
                (
                    #{CORP_C}
                ,   #{BZPL_C}
                ,   #{MVE_DT}
                ,   #{MVE_SQNO}
                ,   'Y'
                ,   #{RLTR_DT}
                ,   null
                ,   #{MVE_RSN_CNTN}
                ,   #{RMK_CNTN}
                ,   #{TR_BSN_DSC}
                ,   #{TR_SQNO}
                ,   GETDATE()
                ,   #{GUSRID}
                ,   GETDATE()
                ,   #{GUSRID}
                )   
    </insert>
    
    <!-- 창고간이동내역등록 상세 -->
    <insert id="saveSm3010_D" parameterType="linkedHashMap">
                
         INSERT INTO /*+ saveSm3010_D */ TB_SM_D_STPL_MVE
                (
                     CORP_C
                ,    BZPL_C
                ,    MVE_DT
                ,    MVE_SQNO
                ,    MVE_DSQNO
                ,    GDS_C
                ,    DLR_WHSE_C
                ,    STR_WHSE_C
                ,    STDV_QT
                ,    STDV_WT
                ,    RMK_CNTN
                ,    FSRG_DTM
                ,    FSRG_ID
                ,    LSCHG_DTM
                ,    LSCHG_ID
                ,    DSTR_TERDT
                )
                VALUES
                (
                    #{CORP_C}
                ,   #{BZPL_C}
                ,   #{MVE_DT}
                ,   #{MVE_SQNO}
                ,   #{MVE_DSQNO}
                ,   #{GDS_C}
                ,   #{DLR_WHSE_C}
                ,   #{STR_WHSE_C}
                ,   DBO.SF_GET_FLOAT(#{STDV_QT})
                ,   DBO.SF_GET_FLOAT(#{STDV_WT})
                ,   #{RMK_CNTN}
                ,   GETDATE()
                ,   #{GUSRID}
                ,   GETDATE()
                ,   #{GUSRID}
                ,   #{DSTR_TERDT}
                )   
    </insert>
    
    <!-- 창고간재고이동내역 건 삭제  -->
    <delete id="deleteSm3010_D" parameterType="linkedHashMap">
             
            DELETE /*+ deleteSm3010_D  */ 
            FROM   TB_SM_D_STPL_MVE
            WHERE  CORP_C      = #{CORP_C}
            AND    BZPL_C      = #{BZPL_C}
            AND    MVE_DT      = #{MVE_DT}
            AND    MVE_SQNO    = #{MVE_SQNO}
            AND    MVE_DSQNO   = #{MVE_DSQNO}    
    </delete>
    
    
    <!-- 창고간재고이동내역 기존데이터에서 신규추가시 MVE_DSQNO 작업 -->
    <select id="selectSm3010MveDsqnoCount" parameterType="linkedHashMap" resultType="Int">
           SELECT    /*+ selectSm3010MveDsqnoCount */
                     ISNULL(MAX(MVE_DSQNO),0) + 1 AS  MVE_DSQNO_COUNT
           FROM      TB_SM_D_STPL_MVE
           WHERE     1=1
           AND       CORP_C       = #{CORP_C}
           AND       BZPL_C       = #{BZPL_C}
           AND       MVE_DT       = #{MVE_DT}
           AND       MVE_SQNO     = #{MVE_SQNO}
    </select>
    
    <!-- 창고간이동내역 전표 삭제 -->
    <update id="updateSm3010_SLP_NML_YN" parameterType="linkedHashMap">
             UPDATE /*+ updateSm3010_SLP_NML_YN */    TB_SM_M_STPL_MVE
             SET    SLP_NML_YN = 'N'
             ,      LSCHG_DTM  = GETDATE()
             ,      LSCHG_ID   = #{GUSRID}
             WHERE  1=1
             AND    CORP_C     = #{CORP_C}
             AND    BZPL_C     = #{BZPL_C}
             AND    MVE_DT     = #{MVE_DT}
             AND    MVE_SQNO   = #{MVE_SQNO}
             AND    SLP_NML_YN = 'Y'
    </update>
</mapper>